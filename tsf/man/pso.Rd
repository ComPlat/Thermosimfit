% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pso.R
\name{pso}
\alias{pso}
\title{Particle swarm optimization}
\usage{
pso(
  env,
  lb,
  ub,
  loss,
  ngen,
  npop,
  error_threshold,
  global = FALSE,
  saveSwarm = FALSE,
  runAsShiny = FALSE
)
}
\arguments{
\item{env}{is something that is passed to the loss function in addition to the parameters which get optimized}

\item{lb}{is a numeric vector defining the lower boundaries of the parameter}

\item{ub}{is a numeric vector defining the upper boundaries of the parameter}

\item{loss}{is the loss function for which the optimal parameter set should be found}

\item{ngen}{is the number of generations the pso should run}

\item{npop}{is the number of particles which should be used during optimization}

\item{error_threshold}{is a number defining a sufficient small error at which the optimization is stopped}

\item{global}{is a logical parameter. If set to TRUE a global star topology is used.
Thus, each particle compares itself with the global best particle of the entire swarm. In contrast,
if global is set to FALSE a random arbitrary neighborhood is used instead. Thus, each particle has
a neighberhood which contains K neighbours where K is between 0 and 3. From the swarm K neighbours are
drawn randomly. From the neighberhood the best particle is used for comparison. The neighberhood is
calculated for each generation.}

\item{saveSwarm}{is a logical value defining whether the entire optimization should be saved.}

\item{runAsShiny}{is an internal parameter which is used when running the shiny app interface.}
}
\description{
Interface to the particle swarm optimization (pso) algorithm.
}
\examples{
rosenbrock <- function(parameter, env, Ignore) {
  value <- 0
  for (i in 1:(length(parameter) - 1)) {
    value <- value +
      100 * (parameter[i + 1] - parameter[i]^2)^2 +
      (1 - parameter[i])^2
  }
  return(value)
}

set.seed(1234)
res <- tsf::pso(
  new.env(), rep(-10, 3), rep(10, 3), rosenbrock, 1000, 40,
  0.00001, TRUE, FALSE
)
}
