{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"globa",
				"global_best_error"
			],
			[
				"runA",
				"runAsShiny"
			],
			[
				"n",
				"is.null"
			],
			[
				"global_be",
				"global_best_error"
			],
			[
				"global_bes",
				"global_best_error"
			],
			[
				"global_b",
				"global_best_vec"
			],
			[
				"da",
				"is.data.frame"
			],
			[
				"HG_t",
				"HG_thershold"
			],
			[
				"HG_n",
				"HG_npop"
			],
			[
				"addi",
				"additionalParameters"
			],
			[
				"Up",
				"upperBounds"
			],
			[
				"HG_kHD",
				"HG_kHD_lb"
			],
			[
				"HG_",
				"HG_H0"
			],
			[
				"Borr",
				"BorrowPtr"
			],
			[
				"static",
				"static_assert"
			],
			[
				"stati",
				"static_cast"
			],
			[
				"Ret",
				"RetType"
			],
			[
				"seed",
				"seed_array"
			],
			[
				"file",
				"filepath"
			],
			[
				"RNG_",
				"RNG_Init"
			],
			[
				"GetRN",
				"GetRNGkind"
			],
			[
				"seed_",
				"seed_out"
			],
			[
				"do_R",
				"do_RNGkind"
			],
			[
				"Sam",
				"Samp_kind"
			],
			[
				"copy_s",
				"copy_seeds_out"
			],
			[
				"GetR",
				"GetRNGstate"
			],
			[
				"fac",
				"facet_wrap"
			],
			[
				"int1",
				"int16_address"
			],
			[
				"facet",
				"facet_wrap"
			],
			[
				"piv",
				"pivot_longer"
			],
			[
				"missin",
				"missing_temp"
			],
			[
				"curr",
				"current_position"
			],
			[
				"inc",
				"include"
			],
			[
				"res_",
				"res_uint8"
			],
			[
				"push",
				"push_back"
			],
			[
				"buff",
				"buffer_char"
			],
			[
				"hex",
				"hex2string"
			],
			[
				"BigE",
				"BigEndianUInt16"
			],
			[
				"L",
				"LittleEndianUInt16"
			],
			[
				"biu",
				"bigEndianUInt16"
			],
			[
				"cha",
				"character"
			],
			[
				"plot_",
				"plot_ly"
			],
			[
				"read",
				"read_from_binary"
			],
			[
				"chgr",
				"chromatogram_data"
			],
			[
				"int",
				"int32_t"
			],
			[
				"tim",
				"time_temp"
			],
			[
				"Rcpp",
				"Rcpp::List"
			],
			[
				"siz",
				"size_t"
			],
			[
				"time",
				"time_size"
			],
			[
				"wave",
				"wavelength_description_size"
			],
			[
				"uint",
				"uint32_t"
			],
			[
				"nm_",
				"nm_stp"
			],
			[
				"nm_s",
				"nm_stp"
			],
			[
				"nm",
				"nm_end"
			],
			[
				"curre",
				"currentPos"
			],
			[
				"readI",
				"readInt32LittleEndian"
			],
			[
				"endi",
				"endianSwap32"
			],
			[
				"re",
				"readDouble"
			],
			[
				"temp",
				"temp32"
			],
			[
				"end",
				"endianSwap32"
			],
			[
				"delta_com",
				"delta_compressed_values"
			],
			[
				"read_",
				"read_int32"
			],
			[
				"read_file_",
				"read_file_raw"
			],
			[
				"wav",
				"wavelengths"
			],
			[
				"start",
				"start_pos"
			],
			[
				"get_",
				"get_extension"
			],
			[
				"plot",
				"plotly"
			],
			[
				"chf",
				"chfiles_names"
			],
			[
				"ref",
				"reference_wavelength"
			],
			[
				"refe",
				"Reference"
			],
			[
				"Re",
				"Reference"
			],
			[
				"seq",
				"sequence"
			],
			[
				"repre",
				"representation"
			],
			[
				"ui",
				"uint8_t"
			],
			[
				"pu",
				"push_back"
			],
			[
				"d",
				"dye"
			],
			[
				"df",
				"df$signal"
			],
			[
				"star",
				"startSPSA"
			],
			[
				"max",
				"maxiter"
			],
			[
				"iter",
				"iter_gen"
			],
			[
				"iter_",
				"iter_pop"
			],
			[
				"si",
				"signal_in_silico"
			],
			[
				"I",
				"I0"
			],
			[
				"d_",
				"d_root1"
			],
			[
				"sig",
				"signal_in_silico"
			],
			[
				"E",
				"Evaluate"
			],
			[
				"d_r",
				"d_root1"
			],
			[
				"roo",
				"root_hd3"
			],
			[
				"root",
				"root_hd3"
			],
			[
				"ro",
				"root_d2"
			],
			[
				"grid",
				"grid_search"
			],
			[
				"expand",
				"expand.grid"
			],
			[
				"ene",
				"enexpr"
			],
			[
				"exp",
				"expand.grid"
			],
			[
				"fct_",
				"fct_special"
			],
			[
				"in",
				"insilico"
			],
			[
				"parme",
				"parameter_cache"
			],
			[
				"ele",
				"elementString"
			],
			[
				"extract_",
				"extract_last_output"
			],
			[
				"p",
				"gda$pso"
			],
			[
				"path",
				"patchwork"
			],
			[
				"crea",
				"create_d_code"
			],
			[
				"pa",
				"parameter_cache"
			],
			[
				"parameter",
				"parameter_cache"
			],
			[
				"hd_",
				"hd_cache"
			],
			[
				"sim",
				"simplify"
			],
			[
				"st",
				"self$start_conc$ga0"
			],
			[
				"ggpl",
				"ggplot2"
			],
			[
				"alg",
				"algEq"
			],
			[
				"OPT",
				"optimized_parameter"
			],
			[
				"arm",
				"arma::vec"
			],
			[
				"inst",
				"installed.packages"
			],
			[
				"maxi",
				"maxima_code_d"
			],
			[
				"den",
				"density"
			],
			[
				"gri",
				"grid_search"
			],
			[
				"lo",
				"loss_fct"
			],
			[
				"len",
				"length"
			],
			[
				"signa",
				"signalInSilico"
			],
			[
				"elimi",
				"eliminate"
			],
			[
				"eli",
				"elim_eq"
			],
			[
				"el",
				"elim_eq"
			],
			[
				"r",
				"roots_rhs"
			],
			[
				"sthd",
				"sthdIDAcacheDresult"
			],
			[
				"solv",
				"solve_system"
			],
			[
				"signal",
				"signalInSilico"
			],
			[
				"sign",
				"signalInSilico"
			],
			[
				"Leaf",
				"LeafNew"
			],
			[
				"Le",
				"LeafTrait"
			]
		]
	},
	"buffers":
	[
		{
			"file": "tsf/R/runApp.R",
			"settings":
			{
				"buffer_size": 4520,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					28,
					1,
					"left_delete",
					null,
					"AQAAACEEAAAAAAAAIQQAAAAAAAABAAAAZQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIgQAAAAAAAAiBAAAAAAAAAAAAAAAAGxA"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAACIEAAAAAAAAIwQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIgQAAAAAAAAiBAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAIEHAAAAAAAAggcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgQcAAAAAAACBBwAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"left_delete",
					null,
					"AQAAAH8HAAAAAAAAfwcAAAAAAAABAAAAZQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgAcAAAAAAACABwAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"right_delete",
					null,
					"AQAAAOMKAAAAAAAA4woAAAAAAAABAAAAZQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4woAAAAAAADjCgAAAAAAAAAAAAAAAGxA"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAOQKAAAAAAAA5QoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5AoAAAAAAADkCgAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEAFAAAAAAAAQQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQAUAAAAAAABABQAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEEFAAAAAAAAQgUAAAAAAAAAAAAAQgUAAAAAAABMBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQQUAAAAAAABBBQAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAEwFAAAAAAAATQUAAAAAAAAAAAAATQUAAAAAAABXBQAAAAAAAAAAAABCBQAAAAAAAEIFAAAAAAAACgAAACAgICAgICAgICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATAUAAAAAAABMBQAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "box"
					},
					"AwAAAE0FAAAAAAAATgUAAAAAAAAAAAAATgUAAAAAAABPBQAAAAAAAAAAAABPBQAAAAAAAFAFAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATQUAAAAAAABNBQAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFAFAAAAAAAAUgUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUAUAAAAAAABQBQAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"CAAAAFEFAAAAAAAAUgUAAAAAAAAAAAAAUgUAAAAAAABcBQAAAAAAAAAAAABcBQAAAAAAAF0FAAAAAAAAAAAAAF0FAAAAAAAAZwUAAAAAAAAAAAAAUgUAAAAAAABSBQAAAAAAAAoAAAAgICAgICAgICAgUwUAAAAAAABTBQAAAAAAAAoAAAAgICAgICAgICAgUwUAAAAAAABfBQAAAAAAAAAAAABSBQAAAAAAAF4FAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUQUAAAAAAABRBQAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAF4FAAAAAAAAXwUAAAAAAAAAAAAAXwUAAAAAAABrBQAAAAAAAAAAAABSBQAAAAAAAFIFAAAAAAAADAAAACAgICAgICAgICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXgUAAAAAAABeBQAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"left_delete",
					null,
					"AgAAAGoFAAAAAAAAagUAAAAAAAACAAAAICBTBQAAAAAAAFMFAAAAAAAADAAAACAgICAgICAgICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbAUAAAAAAABsBQAAAAAAAAAAAAAAAFVA"
				],
				[
					80,
					1,
					"reindent",
					null,
					"AQAAAFIFAAAAAAAAXgUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUgUAAAAAAABSBQAAAAAAAAAAAAAAgFFA"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAF4FAAAAAAAAYAUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXgUAAAAAAABeBQAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"reindent",
					null,
					"AQAAAGEFAAAAAAAAbQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYQUAAAAAAABhBQAAAAAAAAAAAAAAgFhA"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AgAAAG0FAAAAAAAAbwUAAAAAAAAAAAAAUgUAAAAAAABSBQAAAAAAAA4AAAAgICAgICAgICAgICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbQUAAAAAAABtBQAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"left_delete",
					null,
					"AQAAAF8FAAAAAAAAXwUAAAAAAAACAAAAICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYQUAAAAAAABhBQAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": "width"
					},
					"BQAAAF8FAAAAAAAAYAUAAAAAAAAAAAAAYAUAAAAAAABhBQAAAAAAAAAAAABhBQAAAAAAAGIFAAAAAAAAAAAAAGIFAAAAAAAAYwUAAAAAAAAAAAAAYwUAAAAAAABkBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXwUAAAAAAABfBQAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAGQFAAAAAAAAZQUAAAAAAAAAAAAAZQUAAAAAAABmBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZAUAAAAAAABkBQAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": " 12"
					},
					"AwAAAGYFAAAAAAAAZwUAAAAAAAAAAAAAZwUAAAAAAABoBQAAAAAAAAAAAABoBQAAAAAAAGkFAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZgUAAAAAAABmBQAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"reindent",
					null,
					"AQAAAFIFAAAAAAAAXgUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUgUAAAAAAABSBQAAAAAAAAAAAAAAQGNA"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAF4FAAAAAAAAYAUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXgUAAAAAAABeBQAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"left_delete",
					null,
					"AQAAAF4FAAAAAAAAXgUAAAAAAAACAAAAICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYAUAAAAAAABgBQAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"paste",
					null,
					"AQAAAF4FAAAAAAAAcgUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXgUAAAAAAABeBQAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					4,
					"left_delete",
					null,
					"BAAAAG8FAAAAAAAAbwUAAAAAAAABAAAAMW4FAAAAAAAAbgUAAAAAAAABAAAAdG0FAAAAAAAAbQUAAAAAAAABAAAAYWwFAAAAAAAAbAUAAAAAAAABAAAAZA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcAUAAAAAAABwBQAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": "HG_dat"
					},
					"BgAAAGwFAAAAAAAAbQUAAAAAAAAAAAAAbQUAAAAAAABuBQAAAAAAAAAAAABuBQAAAAAAAG8FAAAAAAAAAAAAAG8FAAAAAAAAcAUAAAAAAAAAAAAAcAUAAAAAAABxBQAAAAAAAAAAAABxBQAAAAAAAHIFAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbAUAAAAAAABsBQAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAHQFAAAAAAAAdQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdAUAAAAAAAB0BQAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					2,
					"left_delete",
					null,
					"AgAAAKwEAAAAAAAArAQAAAAAAAABAAAAMqsEAAAAAAAAqwQAAAAAAAABAAAAMQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArQQAAAAAAACtBAAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAKsEAAAAAAAArAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqwQAAAAAAACrBAAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					2,
					"left_delete",
					null,
					"AgAAADIFAAAAAAAAMgUAAAAAAAABAAAAMjEFAAAAAAAAMQUAAAAAAAABAAAAMQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMwUAAAAAAAAzBQAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAADEFAAAAAAAAMgUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMQUAAAAAAAAxBQAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					2,
					"left_delete",
					null,
					"AgAAAIkFAAAAAAAAiQUAAAAAAAABAAAAMogFAAAAAAAAiAUAAAAAAAABAAAAMQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAigUAAAAAAACKBQAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAIgFAAAAAAAAiQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiAUAAAAAAACIBQAAAAAAAAAAAAAAAPC/"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFYEAAAAAAAAVwQAAAAAAAAAAAAAVwQAAAAAAABjBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVgQAAAAAAABWBAAAAAAAAP///////+9/"
				],
				[
					184,
					1,
					"left_delete",
					null,
					"AgAAALgEAAAAAAAAuAQAAAAAAAABAAAANlcEAAAAAAAAVwQAAAAAAAAMAAAAICAgICAgICAgICAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuQQAAAAAAAC5BAAAAAAAAP///////+9/"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": "12"
					},
					"AgAAAKwEAAAAAAAArQQAAAAAAAAAAAAArQQAAAAAAACuBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArAQAAAAAAACsBAAAAAAAAAAAAAAAAPC/"
				],
				[
					190,
					1,
					"left_delete",
					null,
					"AQAAADMFAAAAAAAAMwUAAAAAAAABAAAANg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANAUAAAAAAAA0BQAAAAAAAAAAAAAAQGNA"
				],
				[
					191,
					1,
					"insert",
					{
						"characters": "12"
					},
					"AgAAADMFAAAAAAAANAUAAAAAAAAAAAAANAUAAAAAAAA1BQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMwUAAAAAAAAzBQAAAAAAAAAAAAAAAPC/"
				],
				[
					195,
					1,
					"reindent",
					null,
					"AQAAAFcEAAAAAAAAYwQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVwQAAAAAAABXBAAAAAAAAAAAAAAAQGNA"
				],
				[
					198,
					1,
					"insert",
					{
						"characters": "lower"
					},
					"BQAAAGMEAAAAAAAAZAQAAAAAAAAAAAAAZAQAAAAAAABlBAAAAAAAAAAAAABlBAAAAAAAAGYEAAAAAAAAAAAAAGYEAAAAAAAAZwQAAAAAAAAAAAAAZwQAAAAAAABoBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYwQAAAAAAABjBAAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					5,
					"left_delete",
					null,
					"BQAAAGcEAAAAAAAAZwQAAAAAAAABAAAAcmYEAAAAAAAAZgQAAAAAAAABAAAAZWUEAAAAAAAAZQQAAAAAAAABAAAAd2QEAAAAAAAAZAQAAAAAAAABAAAAb2MEAAAAAAAAYwQAAAAAAAABAAAAbA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaAQAAAAAAABoBAAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					4,
					"left_delete",
					null,
					"BAAAAGEEAAAAAAAAYQQAAAAAAAACAAAAICBfBAAAAAAAAF8EAAAAAAAAAgAAACAgXQQAAAAAAABdBAAAAAAAAAIAAAAgIFsEAAAAAAAAWwQAAAAAAAACAAAAICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYwQAAAAAAABjBAAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BgAAAEYFAAAAAAAARwUAAAAAAAAAAAAARwUAAAAAAABRBQAAAAAAAAAAAABXBAAAAAAAAFcEAAAAAAAABAAAACAgICBNBQAAAAAAAE4FAAAAAAAAAAAAAE4FAAAAAAAAWAUAAAAAAAAAAAAAQwUAAAAAAABDBQAAAAAAAAoAAAAgICAgICAgICAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARgUAAAAAAABGBQAAAAAAAAAAAAAAAPC/"
				],
				[
					227,
					1,
					"paste",
					null,
					"AQAAAE4FAAAAAAAAvwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATgUAAAAAAABOBQAAAAAAAAAAAAAAAPC/"
				],
				[
					233,
					1,
					"cut",
					null,
					"AQAAAMsFAAAAAAAAywUAAAAAAABKAAAAYm94KAogICAgICAgICAgICBEVDo6RFRPdXRwdXQoIkhHX2RhdCIpLAogICAgICAgICAgICB3aWR0aCA9IDYKICAgICAgICAgICk",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAywUAAAAAAAAVBgAAAAAAAAAAAAAAAPC/"
				],
				[
					238,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAALsEAAAAAAAAvAQAAAAAAAAAAAAAvAQAAAAAAADGBAAAAAAAAAAAAADGBAAAAAAAAMcEAAAAAAAAAAAAAMcEAAAAAAAA0QQAAAAAAAAAAAAAvAQAAAAAAAC8BAAAAAAAAAoAAAAgICAgICAgICAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuwQAAAAAAAC7BAAAAAAAAAAAAAAAAPC/"
				],
				[
					239,
					1,
					"paste",
					null,
					"AQAAAMcEAAAAAAAAEQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxwQAAAAAAADHBAAAAAAAAAAAAAAAAPC/"
				],
				[
					248,
					1,
					"left_delete",
					null,
					"AQAAABQGAAAAAAAAFAYAAAAAAAABAAAALA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFQYAAAAAAAAVBgAAAAAAAAAAAAAAAPC/"
				],
				[
					251,
					1,
					"left_delete",
					null,
					"AQAAABQGAAAAAAAAFAYAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFQYAAAAAAAAVBgAAAAAAAAAAAAAAQFNA"
				],
				[
					259,
					1,
					"cut",
					null,
					"AQAAAGQEAAAAAAAAZAQAAAAAAAAzAAAAYWN0aW9uQnV0dG9uKCJIR19TdGFydF9PcHRpIiwiU3RhcnQgT3B0aW1pemF0aW9uIiks",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZAQAAAAAAACXBAAAAAAAAP///////+9/"
				],
				[
					265,
					1,
					"paste",
					null,
					"AgAAAAUFAAAAAAAAOAUAAAAAAAAAAAAAOAUAAAAAAAA4BQAAAAAAADwAAABhY3Rpb25CdXR0b24oIkhHX1N0YXJ0X1NlbnNpIiwiU3RhcnQgU2Vuc2l0aXZpdHkgYW5hbHlzaXMiKSw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABQUAAAAAAABBBQAAAAAAAP///////+9/"
				],
				[
					273,
					8,
					"left_delete",
					null,
					"CAAAAGIEAAAAAAAAYgQAAAAAAAACAAAAICBgBAAAAAAAAGAEAAAAAAAAAgAAACAgXgQAAAAAAABeBAAAAAAAAAIAAAAgIFwEAAAAAAAAXAQAAAAAAAACAAAAICBaBAAAAAAAAFoEAAAAAAAAAgAAACAgWAQAAAAAAABYBAAAAAAAAAIAAAAgIFcEAAAAAAAAVwQAAAAAAAABAAAAClYEAAAAAAAAVgQAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZAQAAAAAAABkBAAAAAAAAAAAAAAAkHtA"
				],
				[
					285,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFYEAAAAAAAAVwQAAAAAAAAAAAAAVwQAAAAAAABjBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVgQAAAAAAABWBAAAAAAAAAAAAAAAYIJA"
				],
				[
					312,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAJoCAAAAAAAAmwIAAAAAAAAAAAAAmwIAAAAAAAClAgAAAAAAAAAAAABiBAAAAAAAAGIEAAAAAAAADAAAACAgICAgICAgICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmgIAAAAAAACaAgAAAAAAAAAAAAAAAPC/"
				],
				[
					314,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAKUCAAAAAAAApgIAAAAAAAAAAAAApgIAAAAAAACwAgAAAAAAAAAAAACbAgAAAAAAAJsCAAAAAAAACgAAACAgICAgICAgICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApQIAAAAAAAClAgAAAAAAAAAAAAAAAPC/"
				],
				[
					317,
					1,
					"insert",
					{
						"characters": "tabP"
					},
					"BAAAAKYCAAAAAAAApwIAAAAAAAAAAAAApwIAAAAAAACoAgAAAAAAAAAAAACoAgAAAAAAAKkCAAAAAAAAAAAAAKkCAAAAAAAAqgIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApgIAAAAAAACmAgAAAAAAAAAAAAAAAPC/"
				],
				[
					318,
					1,
					"insert_completion",
					{
						"completion": "tabPanel",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "tabPanel"
					},
					"AgAAAKYCAAAAAAAApgIAAAAAAAAEAAAAdGFiUKYCAAAAAAAArgIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqgIAAAAAAACqAgAAAAAAAAAAAAAAAPC/"
				],
				[
					319,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAK4CAAAAAAAAsAIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArgIAAAAAAACuAgAAAAAAAAAAAAAAAPC/"
				],
				[
					320,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"CAAAAK8CAAAAAAAAsAIAAAAAAAAAAAAAsAIAAAAAAAC6AgAAAAAAAAAAAAC6AgAAAAAAALsCAAAAAAAAAAAAALsCAAAAAAAAxQIAAAAAAAAAAAAAsAIAAAAAAACwAgAAAAAAAAoAAAAgICAgICAgICAgsQIAAAAAAACxAgAAAAAAAAoAAAAgICAgICAgICAgsQIAAAAAAAC9AgAAAAAAAAAAAACwAgAAAAAAALwCAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArwIAAAAAAACvAgAAAAAAAAAAAAAAAPC/"
				],
				[
					324,
					1,
					"left_delete",
					null,
					"AgAAAMcCAAAAAAAAxwIAAAAAAAACAAAAICCwAgAAAAAAALACAAAAAAAADAAAACAgICAgICAgICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyQIAAAAAAADJAgAAAAAAAAAAAAAAAFVA"
				],
				[
					331,
					1,
					"cut",
					null,
					"AQAAAMcCAAAAAAAAxwIAAAAAAADWAQAAYm94KAogICAgICAgICAgICBmaWxlSW5wdXQoIkhHX3VwbG9hZCIsICJVcGxvYWQgYSBmaWxlIiksCiAgICAgICAgICAgIG51bWVyaWNJbnB1dCgiSEdfSDAiLCAiSG9zdCBjb25jLiIsIHZhbHVlID0gMCksCiAgICAgICAgICAgIG51bWVyaWNJbnB1dCgiSEdfbnBvcCIsICJOdW1iZXIgb2YgcGFydGljbGVzIiwgdmFsdWUgPSA0MCksCiAgICAgICAgICAgIG51bWVyaWNJbnB1dCgiSEdfbmdlbiIsICJOdW1iZXIgb2YgZ2VuZXJhdGlvbnMiLCB2YWx1ZSA9IDIwMCksCiAgICAgICAgICAgIHRleHRJbnB1dCgiSEdfdG9wb2xvZ3kiLCAiVG9wb2xvZ3kgb2YgcGFydGljbGUgc3dhcm0iLCB2YWx1ZSA9ICJzdGFyIiksCiAgICAgICAgICAgIG51bWVyaWNJbnB1dCgiSEdfdGhyZXNob2xkIiwgIlRoZXJzaG9sZCBvZiB0aGUgZXJyb3IiLCB2YWx1ZSA9IDAuMDAwMDEpLAoKICAgICAgICAgICAgd2lkdGggPSAxMgogICAgICAgICAgKSw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxwIAAAAAAACdBAAAAAAAAAAAAAAAAPC/"
				],
				[
					335,
					1,
					"reindent",
					null,
					"AQAAALACAAAAAAAAvAIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsAIAAAAAAACwAgAAAAAAAAAAAAAAgFFA"
				],
				[
					338,
					1,
					"paste",
					null,
					"AQAAALwCAAAAAAAAkgQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvAIAAAAAAAC8AgAAAAAAAAAAAAAAAPC/"
				],
				[
					342,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAJAEAAAAAAAAkgQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkAQAAAAAAACQBAAAAAAAAAAAAAAAAPC/"
				],
				[
					345,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAHsEAAAAAAAAfQQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAewQAAAAAAAB7BAAAAAAAAAAAAAAAAFVA"
				],
				[
					348,
					1,
					"left_delete",
					null,
					"AQAAAG0EAAAAAAAAbQQAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbgQAAAAAAABuBAAAAAAAAAAAAAAAgFhA"
				],
				[
					353,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"BgAAACUEAAAAAAAAJwQAAAAAAAAAAAAA0QMAAAAAAADTAwAAAAAAAAAAAACGAwAAAAAAAIgDAAAAAAAAAAAAAD4DAAAAAAAAQAMAAAAAAAAAAAAAAgMAAAAAAAAEAwAAAAAAAAAAAADNAgAAAAAAAM8CAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAGAAAAzQIAAAAAAADNAgAAAAAAAAAAAAAAAFVAAgMAAAAAAAACAwAAAAAAAAAAAAAAAFVAPgMAAAAAAAA+AwAAAAAAAAAAAAAAAFVAhgMAAAAAAACGAwAAAAAAAAAAAAAAAFVA0QMAAAAAAADRAwAAAAAAAAAAAAAAAFVAJQQAAAAAAAAlBAAAAAAAAAAAAAAAAFVA"
				],
				[
					358,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKEEAAAAAAAAogQAAAAAAAAAAAAAogQAAAAAAACuBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAoQQAAAAAAAChBAAAAAAAAAAAAAAAAPC/"
				],
				[
					361,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAK4EAAAAAAAArwQAAAAAAAAAAAAArwQAAAAAAAC7BAAAAAAAAAAAAACiBAAAAAAAAKIEAAAAAAAADAAAACAgICAgICAgICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArgQAAAAAAACuBAAAAAAAAAAAAAAAAPC/"
				],
				[
					374,
					1,
					"reindent",
					null,
					"AQAAAJsCAAAAAAAApQIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmwIAAAAAAACbAgAAAAAAAAAAAAAAAPC/"
				],
				[
					377,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAKUCAAAAAAAApgIAAAAAAAAAAAAApgIAAAAAAACwAgAAAAAAAAAAAAC4BAAAAAAAALgEAAAAAAAADAAAACAgICAgICAgICAgIJsCAAAAAAAAmwIAAAAAAAAKAAAAICAgICAgICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApQIAAAAAAAClAgAAAAAAAAAAAAAAAPC/"
				],
				[
					380,
					1,
					"insert",
					{
						"characters": "tapB"
					},
					"BAAAAKYCAAAAAAAApwIAAAAAAAAAAAAApwIAAAAAAACoAgAAAAAAAAAAAACoAgAAAAAAAKkCAAAAAAAAAAAAAKkCAAAAAAAAqgIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApgIAAAAAAACmAgAAAAAAAAAAAAAAAPC/"
				],
				[
					381,
					1,
					"insert",
					{
						"characters": "ox"
					},
					"AgAAAKoCAAAAAAAAqwIAAAAAAAAAAAAAqwIAAAAAAACsAgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqgIAAAAAAACqAgAAAAAAAAAAAAAAAPC/"
				],
				[
					382,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKwCAAAAAAAArgIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArAIAAAAAAACsAgAAAAAAAAAAAAAAAPC/"
				],
				[
					383,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"CAAAAK0CAAAAAAAArgIAAAAAAAAAAAAArgIAAAAAAAC4AgAAAAAAAAAAAAC4AgAAAAAAALkCAAAAAAAAAAAAALkCAAAAAAAAwwIAAAAAAAAAAAAArgIAAAAAAACuAgAAAAAAAAoAAAAgICAgICAgICAgrwIAAAAAAACvAgAAAAAAAAoAAAAgICAgICAgICAgrwIAAAAAAAC7AgAAAAAAAAAAAACuAgAAAAAAALoCAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArQIAAAAAAACtAgAAAAAAAAAAAAAAAPC/"
				],
				[
					392,
					1,
					"left_delete",
					null,
					"AgAAAMUCAAAAAAAAxQIAAAAAAAACAAAAICCuAgAAAAAAAK4CAAAAAAAADAAAACAgICAgICAgICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxwIAAAAAAADHAgAAAAAAAAAAAAAAAFVA"
				],
				[
					411,
					1,
					"left_delete",
					null,
					"AQAAAL8EAAAAAAAAvwQAAAAAAAABAAAALA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwAQAAAAAAADABAAAAAAAAAAAAAAAAPC/"
				],
				[
					414,
					1,
					"left_delete",
					null,
					"AQAAAMAEAAAAAAAAwAQAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwQQAAAAAAADBBAAAAAAAAAAAAAAAwFZA"
				],
				[
					416,
					1,
					"left_delete",
					null,
					"AQAAAL8EAAAAAAAAvwQAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwAQAAAAAAADABAAAAAAAAAAAAAAAAPC/"
				],
				[
					422,
					1,
					"cut",
					null,
					"AQAAAMUCAAAAAAAAxQIAAAAAAAAGAgAAdGFiUGFuZWwoCiAgICAgICAgICAgIGJveCgKICAgICAgICAgICAgICBmaWxlSW5wdXQoIkhHX3VwbG9hZCIsICJVcGxvYWQgYSBmaWxlIiksCiAgICAgICAgICAgICAgbnVtZXJpY0lucHV0KCJIR19IMCIsICJIb3N0IGNvbmMuIiwgdmFsdWUgPSAwKSwKICAgICAgICAgICAgICBudW1lcmljSW5wdXQoIkhHX25wb3AiLCAiTnVtYmVyIG9mIHBhcnRpY2xlcyIsIHZhbHVlID0gNDApLAogICAgICAgICAgICAgIG51bWVyaWNJbnB1dCgiSEdfbmdlbiIsICJOdW1iZXIgb2YgZ2VuZXJhdGlvbnMiLCB2YWx1ZSA9IDIwMCksCiAgICAgICAgICAgICAgdGV4dElucHV0KCJIR190b3BvbG9neSIsICJUb3BvbG9neSBvZiBwYXJ0aWNsZSBzd2FybSIsIHZhbHVlID0gInN0YXIiKSwKICAgICAgICAgICAgICBudW1lcmljSW5wdXQoIkhHX3RocmVzaG9sZCIsICJUaGVyc2hvbGQgb2YgdGhlIGVycm9yIiwgdmFsdWUgPSAwLjAwMDAxKSwKICAgICAgICAgICAgICB3aWR0aCA9IDEyCiAgICAgICAgICAgICkKICAgICAgICAgICk",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAywQAAAAAAADFAgAAAAAAAAAAAAAAgFFA"
				],
				[
					426,
					1,
					"reindent",
					null,
					"AQAAAK4CAAAAAAAAugIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArgIAAAAAAACuAgAAAAAAAAAAAAAAgFFA"
				],
				[
					428,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAALoCAAAAAAAAvAIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAugIAAAAAAAC6AgAAAAAAAAAAAAAAAPC/"
				],
				[
					431,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAALwCAAAAAAAAvgIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvAIAAAAAAAC8AgAAAAAAAAAAAAAAAPC/"
				],
				[
					433,
					1,
					"paste",
					null,
					"AQAAAL4CAAAAAAAAxAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvgIAAAAAAAC+AgAAAAAAAAAAAAAAAPC/"
				],
				[
					437,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAMMEAAAAAAAAxQQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwwQAAAAAAADDBAAAAAAAAAAAAAAAAPC/"
				],
				[
					439,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAMUEAAAAAAAAxwQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxQQAAAAAAADFBAAAAAAAAAAAAAAAAPC/"
				],
				[
					443,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAALcEAAAAAAAAuQQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtwQAAAAAAAC3BAAAAAAAAAAAAAAAAPC/"
				],
				[
					445,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAALkEAAAAAAAAuwQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuQQAAAAAAAC5BAAAAAAAAAAAAAAAAPC/"
				],
				[
					451,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"BwAAAKAEAAAAAAAAogQAAAAAAAAAAAAASQQAAAAAAABLBAAAAAAAAAAAAADzAwAAAAAAAPUDAAAAAAAAAAAAAKYDAAAAAAAAqAMAAAAAAAAAAAAAXAMAAAAAAABeAwAAAAAAAAAAAAAeAwAAAAAAACADAAAAAAAAAAAAAOcCAAAAAAAA6QIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAHAAAA5wIAAAAAAADnAgAAAAAAAAAAAAAAgFhAHgMAAAAAAAAeAwAAAAAAAAAAAAAAgFhAXAMAAAAAAABcAwAAAAAAAAAAAAAAgFhApgMAAAAAAACmAwAAAAAAAAAAAAAAgFhA8wMAAAAAAADzAwAAAAAAAAAAAAAAgFhASQQAAAAAAABJBAAAAAAAAAAAAAAAgFhAoAQAAAAAAACgBAAAAAAAAAAAAAAAAPC/"
				],
				[
					453,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"BwAAAK4EAAAAAAAAsAQAAAAAAAAAAAAAVQQAAAAAAABXBAAAAAAAAAAAAAD9AwAAAAAAAP8DAAAAAAAAAAAAAK4DAAAAAAAAsAMAAAAAAAAAAAAAYgMAAAAAAABkAwAAAAAAAAAAAAAiAwAAAAAAACQDAAAAAAAAAAAAAOkCAAAAAAAA6wIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAHAAAA6QIAAAAAAADpAgAAAAAAAAAAAAAAAPC/IgMAAAAAAAAiAwAAAAAAAAAAAAAAAPC/YgMAAAAAAABiAwAAAAAAAAAAAAAAAPC/rgMAAAAAAACuAwAAAAAAAAAAAAAAAPC//QMAAAAAAAD9AwAAAAAAAAAAAAAAAPC/VQQAAAAAAABVBAAAAAAAAAAAAAAAAPC/rgQAAAAAAACuBAAAAAAAAAAAAAAAAPC/"
				],
				[
					459,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAANQCAAAAAAAA1gIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1AIAAAAAAADUAgAAAAAAAAAAAAAAAPC/"
				],
				[
					461,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAANYCAAAAAAAA2AIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1gIAAAAAAADWAgAAAAAAAAAAAAAAAPC/"
				],
				[
					463,
					1,
					"left_delete",
					null,
					"AQAAANYCAAAAAAAA1gIAAAAAAAACAAAAICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2AIAAAAAAADYAgAAAAAAAAAAAAAAAPC/"
				],
				[
					465,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAANYCAAAAAAAA2AIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1gIAAAAAAADWAgAAAAAAAAAAAAAAAPC/"
				],
				[
					467,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAANgCAAAAAAAA2gIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2AIAAAAAAADYAgAAAAAAAAAAAAAAAPC/"
				],
				[
					472,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"BwAAAMIEAAAAAAAAxAQAAAAAAAAAAAAAZwQAAAAAAABpBAAAAAAAAAAAAAANBAAAAAAAAA8EAAAAAAAAAAAAALwDAAAAAAAAvgMAAAAAAAAAAAAAbgMAAAAAAABwAwAAAAAAAAAAAAAsAwAAAAAAAC4DAAAAAAAAAAAAAPECAAAAAAAA8wIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAHAAAA8QIAAAAAAADxAgAAAAAAAAAAAAAAgF9ALAMAAAAAAAAsAwAAAAAAAAAAAAAAgF9AbgMAAAAAAABuAwAAAAAAAAAAAAAAgF9AvAMAAAAAAAC8AwAAAAAAAAAAAAAAgF9ADQQAAAAAAAANBAAAAAAAAAAAAAAAgF9AZwQAAAAAAABnBAAAAAAAAAAAAAAAgF9AwgQAAAAAAADCBAAAAAAAAAAAAAAAgF9A"
				],
				[
					480,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAPsEAAAAAAAA/QQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+wQAAAAAAAD7BAAAAAAAAAAAAAAAAPC/"
				],
				[
					484,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAOsEAAAAAAAA7QQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6wQAAAAAAADrBAAAAAAAAAAAAAAAAFxA"
				],
				[
					502,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAAAFAAAAAAAAAQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAUAAAAAAAAABQAAAAAAAAAAAAAAgF9A"
				],
				[
					504,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAEFAAAAAAAAAgUAAAAAAAAAAAAAAgUAAAAAAAASBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAQUAAAAAAAABBQAAAAAAAAAAAAAAAPC/"
				],
				[
					506,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAABIFAAAAAAAAEwUAAAAAAAAAAAAAEwUAAAAAAAAjBQAAAAAAAAAAAAACBQAAAAAAAAIFAAAAAAAAEAAAACAgICAgICAgICAgICAgICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEgUAAAAAAAASBQAAAAAAAAAAAAAAAPC/"
				],
				[
					509,
					1,
					"insert",
					{
						"characters": "tabP"
					},
					"BAAAABMFAAAAAAAAFAUAAAAAAAAAAAAAFAUAAAAAAAAVBQAAAAAAAAAAAAAVBQAAAAAAABYFAAAAAAAAAAAAABYFAAAAAAAAFwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEwUAAAAAAAATBQAAAAAAAAAAAAAAAPC/"
				],
				[
					510,
					1,
					"insert_completion",
					{
						"completion": "tabPanel",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "tabPanel"
					},
					"AgAAABMFAAAAAAAAEwUAAAAAAAAEAAAAdGFiUBMFAAAAAAAAGwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFwUAAAAAAAAXBQAAAAAAAAAAAAAAAPC/"
				],
				[
					511,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABsFAAAAAAAAHQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGwUAAAAAAAAbBQAAAAAAAAAAAAAAAPC/"
				],
				[
					512,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"CAAAABwFAAAAAAAAHQUAAAAAAAAAAAAAHQUAAAAAAAAtBQAAAAAAAAAAAAAtBQAAAAAAAC4FAAAAAAAAAAAAAC4FAAAAAAAAPgUAAAAAAAAAAAAAHQUAAAAAAAAdBQAAAAAAABAAAAAgICAgICAgICAgICAgICAgHgUAAAAAAAAeBQAAAAAAABAAAAAgICAgICAgICAgICAgICAgHgUAAAAAAAAwBQAAAAAAAAAAAAAdBQAAAAAAAC8FAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHAUAAAAAAAAcBQAAAAAAAAAAAAAAAPC/"
				],
				[
					516,
					1,
					"left_delete",
					null,
					"AgAAAEAFAAAAAAAAQAUAAAAAAAACAAAAICAdBQAAAAAAAB0FAAAAAAAAEgAAACAgICAgICAgICAgICAgICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQgUAAAAAAABCBQAAAAAAAAAAAAAAgF9A"
				],
				[
					521,
					1,
					"cut",
					null,
					"AQAAAF0FAAAAAAAAXQUAAAAAAABEAQAAYm94KAogICAgICAgICAgICBEVDo6RFRPdXRwdXQoIkhHX2RhdCIpLAogICAgICAgICAgICB3aWR0aCA9IDYKICAgICAgICAgICkKICAgICAgICAgIAogICAgICAgICAgYm94KAogICAgICAgICAgICBhY3Rpb25CdXR0b24oIkhHX1N0YXJ0X09wdGkiLCJTdGFydCBPcHRpbWl6YXRpb24iKSwKICAgICAgICAgICAgd2lkdGggPSAxMgogICAgICAgICAgKSwKCiAgICAgICAgICBib3goCiAgICAgICAgICAgIGFjdGlvbkJ1dHRvbigiSEdfU3RhcnRfU2Vuc2kiLCJTdGFydCBTZW5zaXRpdml0eSBhbmFseXNpcyIpLAogICAgICAgICAgICB3aWR0aCA9IDEyCiAgICAgICAgICAp",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXQUAAAAAAAChBgAAAAAAAAAAAAAAAPC/"
				],
				[
					526,
					1,
					"reindent",
					null,
					"AQAAAB0FAAAAAAAALwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHQUAAAAAAAAdBQAAAAAAAAAAAAAAAPC/"
				],
				[
					527,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAC8FAAAAAAAAMQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALwUAAAAAAAAvBQAAAAAAAAAAAAAAAPC/"
				],
				[
					529,
					1,
					"paste",
					null,
					"AQAAADEFAAAAAAAAdQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMQUAAAAAAAAxBQAAAAAAAAAAAAAAAPC/"
				],
				[
					535,
					13,
					"left_delete",
					null,
					"DQAAAL4GAAAAAAAAvgYAAAAAAAACAAAAICC8BgAAAAAAALwGAAAAAAAAAgAAACAgugYAAAAAAAC6BgAAAAAAAAIAAAAgILgGAAAAAAAAuAYAAAAAAAACAAAAICC2BgAAAAAAALYGAAAAAAAAAgAAACAgtQYAAAAAAAC1BgAAAAAAAAEAAAAKswYAAAAAAACzBgAAAAAAAAIAAAAgILEGAAAAAAAAsQYAAAAAAAACAAAAICCvBgAAAAAAAK8GAAAAAAAAAgAAACAgrQYAAAAAAACtBgAAAAAAAAIAAAAgIKsGAAAAAAAAqwYAAAAAAAACAAAAICCqBgAAAAAAAKoGAAAAAAAAAQAAAAqpBgAAAAAAAKkGAAAAAAAAAQAAAAo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwAYAAAAAAADABgAAAAAAAAAAAAAAAPC/"
				],
				[
					536,
					6,
					"left_delete",
					null,
					"BgAAAKcGAAAAAAAApwYAAAAAAAACAAAAICClBgAAAAAAAKUGAAAAAAAAAgAAACAgowYAAAAAAACjBgAAAAAAAAIAAAAgIKEGAAAAAAAAoQYAAAAAAAACAAAAICCfBgAAAAAAAJ8GAAAAAAAAAgAAACAgngYAAAAAAACeBgAAAAAAAAEAAAAK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqQYAAAAAAACpBgAAAAAAAAAAAAAAAPC/"
				],
				[
					547,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"BAAAAHQGAAAAAAAAdgYAAAAAAAAAAAAAXQYAAAAAAABfBgAAAAAAAAAAAAAUBgAAAAAAABYGAAAAAAAAAAAAAAUGAAAAAAAABwYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAEAAAABQYAAAAAAAAFBgAAAAAAAAAAAAAAgFFAFAYAAAAAAAAUBgAAAAAAAAAAAAAAgFFAXQYAAAAAAABdBgAAAAAAAAAAAAAAgFFAdAYAAAAAAAB0BgAAAAAAAAAAAAAAgFFA"
				],
				[
					549,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"BAAAAHwGAAAAAAAAfgYAAAAAAAAAAAAAYwYAAAAAAABlBgAAAAAAAAAAAAAYBgAAAAAAABoGAAAAAAAAAAAAAAcGAAAAAAAACQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAEAAAABwYAAAAAAAAHBgAAAAAAAAAAAAAAAPC/GAYAAAAAAAAYBgAAAAAAAAAAAAAAAPC/YwYAAAAAAABjBgAAAAAAAAAAAAAAAPC/fAYAAAAAAAB8BgAAAAAAAAAAAAAAAPC/"
				],
				[
					551,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"BAAAAIQGAAAAAAAAhgYAAAAAAAAAAAAAaQYAAAAAAABrBgAAAAAAAAAAAAAcBgAAAAAAAB4GAAAAAAAAAAAAAAkGAAAAAAAACwYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAEAAAACQYAAAAAAAAJBgAAAAAAAAAAAAAAAPC/HAYAAAAAAAAcBgAAAAAAAAAAAAAAAPC/aQYAAAAAAABpBgAAAAAAAAAAAAAAAPC/hAYAAAAAAACEBgAAAAAAAAAAAAAAAPC/"
				],
				[
					618,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"BAAAAPcFAAAAAAAA+QUAAAAAAAAAAAAA4AUAAAAAAADiBQAAAAAAAAAAAACgBQAAAAAAAKIFAAAAAAAAAAAAAJEFAAAAAAAAkwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAEAAAAkQUAAAAAAACRBQAAAAAAAAAAAAAAAPC/oAUAAAAAAACgBQAAAAAAAAAAAAAAgFFA4AUAAAAAAADgBQAAAAAAAAAAAAAAgFFA9wUAAAAAAAD3BQAAAAAAAAAAAAAAgFFA"
				],
				[
					620,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"BAAAAP8FAAAAAAAAAQYAAAAAAAAAAAAA5gUAAAAAAADoBQAAAAAAAAAAAACkBQAAAAAAAKYFAAAAAAAAAAAAAJMFAAAAAAAAlQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAEAAAAkwUAAAAAAACTBQAAAAAAAAAAAAAAAPC/pAUAAAAAAACkBQAAAAAAAAAAAAAAAPC/5gUAAAAAAADmBQAAAAAAAAAAAAAAAPC//wUAAAAAAAD/BQAAAAAAAAAAAAAAAPC/"
				],
				[
					622,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"BAAAAAcGAAAAAAAACQYAAAAAAAAAAAAA7AUAAAAAAADuBQAAAAAAAAAAAACoBQAAAAAAAKoFAAAAAAAAAAAAAJUFAAAAAAAAlwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAEAAAAlQUAAAAAAACVBQAAAAAAAAAAAAAAAPC/qAUAAAAAAACoBQAAAAAAAAAAAAAAAPC/7AUAAAAAAADsBQAAAAAAAAAAAAAAAPC/BwYAAAAAAAAHBgAAAAAAAAAAAAAAAPC/"
				],
				[
					629,
					1,
					"insert",
					{
						"characters": "\t\t\t\t\t"
					},
					"BQAAAEIFAAAAAAAARAUAAAAAAAAAAAAARAUAAAAAAABGBQAAAAAAAAAAAABGBQAAAAAAAEgFAAAAAAAAAAAAAEgFAAAAAAAASgUAAAAAAAAAAAAASgUAAAAAAABMBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQgUAAAAAAABCBQAAAAAAAAAAAAAAAPC/"
				],
				[
					636,
					1,
					"insert",
					{
						"characters": "\t\t\t\t\t"
					},
					"BQAAAHAFAAAAAAAAcgUAAAAAAAAAAAAAcgUAAAAAAAB0BQAAAAAAAAAAAAB0BQAAAAAAAHYFAAAAAAAAAAAAAHYFAAAAAAAAeAUAAAAAAAAAAAAAeAUAAAAAAAB6BQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcAUAAAAAAABwBQAAAAAAAAAAAAAAAFVA"
				],
				[
					639,
					1,
					"insert",
					{
						"characters": "\t\t\t\t\t"
					},
					"BQAAAI4FAAAAAAAAkAUAAAAAAAAAAAAAkAUAAAAAAACSBQAAAAAAAAAAAACSBQAAAAAAAJQFAAAAAAAAAAAAAJQFAAAAAAAAlgUAAAAAAAAAAAAAlgUAAAAAAACYBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjgUAAAAAAACOBQAAAAAAAAAAAAAAgFFA"
				],
				[
					648,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"CQAAAO0EAAAAAAAA7wQAAAAAAAAAAAAAzgQAAAAAAADQBAAAAAAAAAAAAABxBAAAAAAAAHMEAAAAAAAAAAAAABUEAAAAAAAAFwQAAAAAAAAAAAAAwgMAAAAAAADEAwAAAAAAAAAAAAByAwAAAAAAAHQDAAAAAAAAAAAAAC4DAAAAAAAAMAMAAAAAAAAAAAAA8QIAAAAAAADzAgAAAAAAAAAAAADaAgAAAAAAANwCAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAJAAAA2gIAAAAAAADaAgAAAAAAAAAAAAAAgF9A8QIAAAAAAADxAgAAAAAAAAAAAAAAgF9ALgMAAAAAAAAuAwAAAAAAAAAAAAAAgF9AcgMAAAAAAAByAwAAAAAAAAAAAAAAgF9AwgMAAAAAAADCAwAAAAAAAAAAAAAAgF9AFQQAAAAAAAAVBAAAAAAAAAAAAAAAgF9AcQQAAAAAAABxBAAAAAAAAAAAAAAAgF9AzgQAAAAAAADOBAAAAAAAAAAAAAAAgF9A7QQAAAAAAADtBAAAAAAAAAAAAAAAAPC/"
				],
				[
					652,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AgAAAMYFAAAAAAAAxwUAAAAAAAAAAAAAxwUAAAAAAADHBQAAAAAAAAEAAAAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxgUAAAAAAADHBQAAAAAAAAAAAAAAAPC/"
				],
				[
					655,
					1,
					"left_delete",
					null,
					"AQAAAMYFAAAAAAAAxgUAAAAAAAABAAAAaQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxwUAAAAAAADHBQAAAAAAAAAAAAAAAPC/"
				],
				[
					657,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAMYFAAAAAAAAxwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxgUAAAAAAADGBQAAAAAAAAAAAAAAAPC/"
				],
				[
					660,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"BAAAAD8GAAAAAAAAQQYAAAAAAAAAAAAAIgYAAAAAAAAkBgAAAAAAAAAAAADcBQAAAAAAAN4FAAAAAAAAAAAAAMcFAAAAAAAAyQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAEAAAAxwUAAAAAAADHBQAAAAAAAAAAAAAAAPC/3AUAAAAAAADcBQAAAAAAAAAAAAAAAFxAIgYAAAAAAAAiBgAAAAAAAAAAAAAAAFxAPwYAAAAAAAA/BgAAAAAAAAAAAAAAAFxA"
				],
				[
					662,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"BAAAAEcGAAAAAAAASQYAAAAAAAAAAAAAKAYAAAAAAAAqBgAAAAAAAAAAAADgBQAAAAAAAOIFAAAAAAAAAAAAAMkFAAAAAAAAywUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAEAAAAyQUAAAAAAADJBQAAAAAAAAAAAAAAAPC/4AUAAAAAAADgBQAAAAAAAAAAAAAAAPC/KAYAAAAAAAAoBgAAAAAAAAAAAAAAAPC/RwYAAAAAAABHBgAAAAAAAAAAAAAAAPC/"
				],
				[
					671,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"BAAAAOQGAAAAAAAA5gYAAAAAAAAAAAAAxwYAAAAAAADJBgAAAAAAAAAAAAB4BgAAAAAAAHoGAAAAAAAAAAAAAGMGAAAAAAAAZQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAEAAAAYwYAAAAAAABjBgAAAAAAAAAAAAAAAPC/eAYAAAAAAAB4BgAAAAAAAAAAAAAAAFxAxwYAAAAAAADHBgAAAAAAAAAAAAAAAFxA5AYAAAAAAADkBgAAAAAAAAAAAAAAAFxA"
				],
				[
					738,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"BAAAAOwGAAAAAAAA7gYAAAAAAAAAAAAAzQYAAAAAAADPBgAAAAAAAAAAAAB8BgAAAAAAAH4GAAAAAAAAAAAAAGUGAAAAAAAAZwYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAEAAAAZQYAAAAAAABlBgAAAAAAAAAAAAAAAPC/fAYAAAAAAAB8BgAAAAAAAAAAAAAAAPC/zQYAAAAAAADNBgAAAAAAAAAAAAAAAPC/7AYAAAAAAADsBgAAAAAAAAAAAAAAAPC/"
				],
				[
					743,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKsFAAAAAAAArAUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqwUAAAAAAACrBQAAAAAAAAAAAAAAAPC/"
				],
				[
					818,
					1,
					"reindent",
					null,
					"AQAAAJsCAAAAAAAApQIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmwIAAAAAAACbAgAAAAAAAAAAAAAAAPC/"
				],
				[
					821,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAKUCAAAAAAAApgIAAAAAAAAAAAAApgIAAAAAAACwAgAAAAAAAAAAAACbAgAAAAAAAJsCAAAAAAAACgAAACAgICAgICAgICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApQIAAAAAAAClAgAAAAAAAAAAAAAAAPC/"
				],
				[
					824,
					1,
					"insert",
					{
						"characters": "fluid"
					},
					"BQAAAKYCAAAAAAAApwIAAAAAAAAAAAAApwIAAAAAAACoAgAAAAAAAAAAAACoAgAAAAAAAKkCAAAAAAAAAAAAAKkCAAAAAAAAqgIAAAAAAAAAAAAAqgIAAAAAAACrAgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApgIAAAAAAACmAgAAAAAAAAAAAAAAAPC/"
				],
				[
					825,
					1,
					"insert_completion",
					{
						"completion": "fluidRow",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "fluidRow"
					},
					"AgAAAKYCAAAAAAAApgIAAAAAAAAFAAAAZmx1aWSmAgAAAAAAAK4CAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqwIAAAAAAACrAgAAAAAAAAAAAAAAAPC/"
				],
				[
					826,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAK4CAAAAAAAAsAIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArgIAAAAAAACuAgAAAAAAAAAAAAAAAPC/"
				],
				[
					827,
					1,
					"right_delete",
					null,
					"AQAAAK8CAAAAAAAArwIAAAAAAAABAAAAKQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArwIAAAAAAACvAgAAAAAAAAAAAAAAAPC/"
				],
				[
					836,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAADMHAAAAAAAANAcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMwcAAAAAAAAzBwAAAAAAAAAAAAAAoGBA"
				],
				[
					860,
					1,
					"left_delete",
					null,
					"AQAAAJwCAAAAAAAAnAIAAAAAAAAlAAAAICAgICAgICAgIGZsdWlkUm93KAogICAgICAgICAgdGFwQm94KA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwQIAAAAAAACcAgAAAAAAAAAAAAAAAPC/"
				],
				[
					862,
					1,
					"left_delete",
					null,
					"AQAAAJsCAAAAAAAAmwIAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnAIAAAAAAACcAgAAAAAAAAAAAAAAAPC/"
				],
				[
					866,
					1,
					"left_delete",
					null,
					"AQAAAPcGAAAAAAAA9wYAAAAAAAAXAAAAICAgICAgICAgICkKICAgICAgICAgICk",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADgcAAAAAAAD3BgAAAAAAAAAAAAAAAPC/"
				],
				[
					868,
					1,
					"left_delete",
					null,
					"AQAAAPYGAAAAAAAA9gYAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9wYAAAAAAAD3BgAAAAAAAAAAAAAAAPC/"
				],
				[
					873,
					1,
					"left_delete",
					null,
					"AQAAAAEFAAAAAAAAAQUAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAgUAAAAAAAACBQAAAAAAAAAAAAAAAPC/"
				],
				[
					878,
					1,
					"left_delete",
					null,
					"AQAAAJoCAAAAAAAAmgIAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmwIAAAAAAACbAgAAAAAAAAAAAAAAAPC/"
				],
				[
					942,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAALQCAAAAAAAAtQIAAAAAAAAAAAAAtQIAAAAAAADFAgAAAAAAAAAAAAC1AgAAAAAAALUCAAAAAAAAEAAAACAgICAgICAgICAgICAgICC1AgAAAAAAAMcCAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtAIAAAAAAAC0AgAAAAAAAAAAAAAAAPC/"
				],
				[
					945,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAMcCAAAAAAAAyQIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxwIAAAAAAADHAgAAAAAAAAAAAAAAAPC/"
				],
				[
					947,
					1,
					"insert",
					{
						"characters": "fluid"
					},
					"BQAAAMkCAAAAAAAAygIAAAAAAAAAAAAAygIAAAAAAADLAgAAAAAAAAAAAADLAgAAAAAAAMwCAAAAAAAAAAAAAMwCAAAAAAAAzQIAAAAAAAAAAAAAzQIAAAAAAADOAgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyQIAAAAAAADJAgAAAAAAAAAAAAAAAPC/"
				],
				[
					948,
					1,
					"insert_completion",
					{
						"completion": "fluidRow",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "fluidRow"
					},
					"AgAAAMkCAAAAAAAAyQIAAAAAAAAFAAAAZmx1aWTJAgAAAAAAANECAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzgIAAAAAAADOAgAAAAAAAAAAAAAAAPC/"
				],
				[
					949,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANECAAAAAAAA0wIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0QIAAAAAAADRAgAAAAAAAAAAAAAAAPC/"
				],
				[
					950,
					1,
					"right_delete",
					null,
					"AQAAANICAAAAAAAA0gIAAAAAAAABAAAAKQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0gIAAAAAAADSAgAAAAAAAAAAAAAAAPC/"
				],
				[
					958,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAsFAAAAAAAADAUAAAAAAAAAAAAADAUAAAAAAAAgBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACwUAAAAAAAALBQAAAAAAAAAAAAAAYGlA"
				],
				[
					961,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAACAFAAAAAAAAIQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIAUAAAAAAAAgBQAAAAAAAAAAAAAAAPC/"
				],
				[
					963,
					1,
					"left_delete",
					null,
					"AQAAACAFAAAAAAAAIAUAAAAAAAABAAAAXQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIQUAAAAAAAAhBQAAAAAAAAAAAAAAAPC/"
				],
				[
					965,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAACAFAAAAAAAAIQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIAUAAAAAAAAgBQAAAAAAAAAAAAAAAPC/"
				],
				[
					971,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"CQAAAAoFAAAAAAAADAUAAAAAAAAAAAAA6QQAAAAAAADrBAAAAAAAAAAAAACKBAAAAAAAAIwEAAAAAAAAAAAAACwEAAAAAAAALgQAAAAAAAAAAAAA1wMAAAAAAADZAwAAAAAAAAAAAACFAwAAAAAAAIcDAAAAAAAAAAAAAD8DAAAAAAAAQQMAAAAAAAAAAAAAAAMAAAAAAAACAwAAAAAAAAAAAADnAgAAAAAAAOkCAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAJAAAA5wIAAAAAAADnAgAAAAAAAAAAAAAAgGFAAAMAAAAAAAAAAwAAAAAAAAAAAAAAgGFAPwMAAAAAAAA/AwAAAAAAAAAAAAAAgGFAhQMAAAAAAACFAwAAAAAAAAAAAAAAgGFA1wMAAAAAAADXAwAAAAAAAAAAAAAAgGFALAQAAAAAAAAsBAAAAAAAAAAAAAAAgGFAigQAAAAAAACKBAAAAAAAAAAAAAAAgGFA6QQAAAAAAADpBAAAAAAAAAAAAAAAgGFACgUAAAAAAAAKBQAAAAAAAAAAAAAAAPC/"
				],
				[
					973,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"CQAAABwFAAAAAAAAHgUAAAAAAAAAAAAA+QQAAAAAAAD7BAAAAAAAAAAAAACYBAAAAAAAAJoEAAAAAAAAAAAAADgEAAAAAAAAOgQAAAAAAAAAAAAA4QMAAAAAAADjAwAAAAAAAAAAAACNAwAAAAAAAI8DAAAAAAAAAAAAAEUDAAAAAAAARwMAAAAAAAAAAAAABAMAAAAAAAAGAwAAAAAAAAAAAADpAgAAAAAAAOsCAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAJAAAA6QIAAAAAAADpAgAAAAAAAAAAAAAAAPC/BAMAAAAAAAAEAwAAAAAAAAAAAAAAAPC/RQMAAAAAAABFAwAAAAAAAAAAAAAAAPC/jQMAAAAAAACNAwAAAAAAAAAAAAAAAPC/4QMAAAAAAADhAwAAAAAAAAAAAAAAAPC/OAQAAAAAAAA4BAAAAAAAAAAAAAAAAPC/mAQAAAAAAACYBAAAAAAAAAAAAAAAAPC/+QQAAAAAAAD5BAAAAAAAAAAAAAAAAPC/HAUAAAAAAAAcBQAAAAAAAAAAAAAAAPC/"
				],
				[
					982,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAHIFAAAAAAAAcwUAAAAAAAAAAAAAcwUAAAAAAACDBQAAAAAAAAAAAABzBQAAAAAAAHMFAAAAAAAAEAAAACAgICAgICAgICAgICAgICBzBQAAAAAAAIUFAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcgUAAAAAAAByBQAAAAAAAAAAAAAAAPC/"
				],
				[
					985,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAIUFAAAAAAAAhwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhQUAAAAAAACFBQAAAAAAAAAAAAAAAPC/"
				],
				[
					987,
					1,
					"insert",
					{
						"characters": "flu"
					},
					"AwAAAIcFAAAAAAAAiAUAAAAAAAAAAAAAiAUAAAAAAACJBQAAAAAAAAAAAACJBQAAAAAAAIoFAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhwUAAAAAAACHBQAAAAAAAAAAAAAAAPC/"
				],
				[
					988,
					1,
					"insert_completion",
					{
						"completion": "fluidRow",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "fluidRow"
					},
					"AgAAAIcFAAAAAAAAhwUAAAAAAAADAAAAZmx1hwUAAAAAAACPBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAigUAAAAAAACKBQAAAAAAAAAAAAAAAPC/"
				],
				[
					989,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAI8FAAAAAAAAkQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjwUAAAAAAACPBQAAAAAAAAAAAAAAAPC/"
				],
				[
					990,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"CAAAAJAFAAAAAAAAkQUAAAAAAAAAAAAAkQUAAAAAAAClBQAAAAAAAAAAAAClBQAAAAAAAKYFAAAAAAAAAAAAAKYFAAAAAAAAugUAAAAAAAAAAAAAkQUAAAAAAACRBQAAAAAAABQAAAAgICAgICAgICAgICAgICAgICAgIJIFAAAAAAAAkgUAAAAAAAAUAAAAICAgICAgICAgICAgICAgICAgICCSBQAAAAAAAKgFAAAAAAAAAAAAAJEFAAAAAAAApwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkAUAAAAAAACQBQAAAAAAAAAAAAAAAPC/"
				],
				[
					996,
					1,
					"right_delete",
					null,
					"AgAAAL4FAAAAAAAAvgUAAAAAAAABAAAAKZEFAAAAAAAAkQUAAAAAAAAWAAAAICAgICAgICAgICAgICAgICAgICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvgUAAAAAAAC+BQAAAAAAAAAAAAAAQGNA"
				],
				[
					997,
					12,
					"left_delete",
					null,
					"DAAAAKYFAAAAAAAApgUAAAAAAAACAAAAICCkBQAAAAAAAKQFAAAAAAAAAgAAACAgogUAAAAAAACiBQAAAAAAAAIAAAAgIKAFAAAAAAAAoAUAAAAAAAACAAAAICCeBQAAAAAAAJ4FAAAAAAAAAgAAACAgnAUAAAAAAACcBQAAAAAAAAIAAAAgIJoFAAAAAAAAmgUAAAAAAAACAAAAICCYBQAAAAAAAJgFAAAAAAAAAgAAACAglgUAAAAAAACWBQAAAAAAAAIAAAAgIJQFAAAAAAAAlAUAAAAAAAACAAAAICCSBQAAAAAAAJIFAAAAAAAAAgAAACAgkQUAAAAAAACRBQAAAAAAAAEAAAAK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqAUAAAAAAACoBQAAAAAAAAAAAAAAAPC/"
				],
				[
					998,
					1,
					"left_delete",
					null,
					"AQAAAJAFAAAAAAAAkAUAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkQUAAAAAAACRBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1010,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFgHAAAAAAAAWQcAAAAAAAAAAAAAWQcAAAAAAABtBwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWAcAAAAAAABYBwAAAAAAAAAAAAAAYGlA"
				],
				[
					1013,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAG0HAAAAAAAAbgcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbQcAAAAAAABtBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1023,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"BAAAAFcHAAAAAAAAWQcAAAAAAAAAAAAANgcAAAAAAAA4BwAAAAAAAAAAAADjBgAAAAAAAOUGAAAAAAAAAAAAAMoGAAAAAAAAzAYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAEAAAAygYAAAAAAADKBgAAAAAAAAAAAAAAgGFA4wYAAAAAAADjBgAAAAAAAAAAAAAAgGFANgcAAAAAAAA2BwAAAAAAAAAAAAAAgGFAVwcAAAAAAABXBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1025,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"BAAAAF8HAAAAAAAAYQcAAAAAAAAAAAAAPAcAAAAAAAA+BwAAAAAAAAAAAADnBgAAAAAAAOkGAAAAAAAAAAAAAMwGAAAAAAAAzgYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAEAAAAzAYAAAAAAADMBgAAAAAAAAAAAAAAAPC/5wYAAAAAAADnBgAAAAAAAAAAAAAAAPC/PAcAAAAAAAA8BwAAAAAAAAAAAAAAAPC/XwcAAAAAAABfBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1031,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"BAAAALIGAAAAAAAAtAYAAAAAAAAAAAAAkQYAAAAAAACTBgAAAAAAAAAAAABHBgAAAAAAAEkGAAAAAAAAAAAAAC4GAAAAAAAAMAYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAEAAAALgYAAAAAAAAuBgAAAAAAAAAAAAAAgGFARwYAAAAAAABHBgAAAAAAAAAAAAAAgGFAkQYAAAAAAACRBgAAAAAAAAAAAAAAgGFAsgYAAAAAAACyBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1033,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"BAAAALoGAAAAAAAAvAYAAAAAAAAAAAAAlwYAAAAAAACZBgAAAAAAAAAAAABLBgAAAAAAAE0GAAAAAAAAAAAAADAGAAAAAAAAMgYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAEAAAAMAYAAAAAAAAwBgAAAAAAAAAAAAAAAPC/SwYAAAAAAABLBgAAAAAAAAAAAAAAAPC/lwYAAAAAAACXBgAAAAAAAAAAAAAAAPC/ugYAAAAAAAC6BgAAAAAAAAAAAAAAAPC/"
				],
				[
					1039,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"BAAAAAwGAAAAAAAADgYAAAAAAAAAAAAA7AUAAAAAAADuBQAAAAAAAAAAAAC+BQAAAAAAAMAFAAAAAAAAAAAAAKUFAAAAAAAApwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAEAAAApQUAAAAAAAClBQAAAAAAAAAAAAAAgGFAvgUAAAAAAAC+BQAAAAAAAAAAAAAAgGFA7AUAAAAAAADsBQAAAAAAAAAAAAAAgGFADAYAAAAAAAAMBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1041,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"BAAAABQGAAAAAAAAFgYAAAAAAAAAAAAA8gUAAAAAAAD0BQAAAAAAAAAAAADCBQAAAAAAAMQFAAAAAAAAAAAAAKcFAAAAAAAAqQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAEAAAApwUAAAAAAACnBQAAAAAAAAAAAAAAAPC/wgUAAAAAAADCBQAAAAAAAAAAAAAAAPC/8gUAAAAAAADyBQAAAAAAAAAAAAAAAPC/FAYAAAAAAAAUBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1072,
					10,
					"left_delete",
					null,
					"CgAAAKsCAAAAAAAAqwIAAAAAAAAnAAAAdGFiUGFuZWwoCiAgICAgICAgICAgICAgICAgICAgZmx1aWRSb3coqQIAAAAAAACpAgAAAAAAAAIAAAAgIKcCAAAAAAAApwIAAAAAAAACAAAAICClAgAAAAAAAKUCAAAAAAAAAgAAACAgowIAAAAAAACjAgAAAAAAAAIAAAAgIKECAAAAAAAAoQIAAAAAAAACAAAAICCfAgAAAAAAAJ8CAAAAAAAAAgAAACAgnQIAAAAAAACdAgAAAAAAAAIAAAAgIJsCAAAAAAAAmwIAAAAAAAACAAAAICCaAgAAAAAAAJoCAAAAAAAAAQAAAAo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqwIAAAAAAADSAgAAAAAAAP///////+9/"
				],
				[
					1077,
					2,
					"left_delete",
					null,
					"AgAAAA4FAAAAAAAADgUAAAAAAAASAAAAICAgICAgICAgICAgICAgICksDQUAAAAAAAANBQAAAAAAAAEAAAAK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIAUAAAAAAAAOBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1079,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAA0FAAAAAAAADgUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADQUAAAAAAAANBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1083,
					1,
					"left_delete",
					null,
					"AQAAAA8FAAAAAAAADwUAAAAAAAAZAAAAICAgICAgICAgICAgICAgIHRhYlBhbmVsKA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKAUAAAAAAAAPBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1085,
					1,
					"left_delete",
					null,
					"AQAAAA4FAAAAAAAADgUAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADwUAAAAAAAAPBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1089,
					1,
					"left_delete",
					null,
					"AQAAAA8FAAAAAAAADwUAAAAAAAAdAAAAICAgICAgICAgICAgICAgICAgICBmbHVpZFJvdyg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALAUAAAAAAAAPBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1091,
					1,
					"left_delete",
					null,
					"AQAAAA4FAAAAAAAADgUAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADwUAAAAAAAAPBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1098,
					1,
					"left_delete",
					null,
					"AQAAAAcHAAAAAAAABwcAAAAAAAAnAAAAICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAp",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALgcAAAAAAAAHBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1100,
					1,
					"left_delete",
					null,
					"AQAAAAYHAAAAAAAABgcAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABwcAAAAAAAAHBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1110,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAYHAAAAAAAABwcAAAAAAAAAAAAABwcAAAAAAAAfBwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABgcAAAAAAAAGBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1113,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAB8HAAAAAAAAIAcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHwcAAAAAAAAfBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1117,
					1,
					"left_delete",
					null,
					"AQAAAB8HAAAAAAAAHwcAAAAAAAABAAAAKQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIAcAAAAAAAAgBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1119,
					11,
					"left_delete",
					null,
					"CwAAAB0HAAAAAAAAHQcAAAAAAAACAAAAICAbBwAAAAAAABsHAAAAAAAAAgAAACAgGQcAAAAAAAAZBwAAAAAAAAIAAAAgIBcHAAAAAAAAFwcAAAAAAAACAAAAICAVBwAAAAAAABUHAAAAAAAAAgAAACAgEwcAAAAAAAATBwAAAAAAAAIAAAAgIBEHAAAAAAAAEQcAAAAAAAACAAAAICAPBwAAAAAAAA8HAAAAAAAAAgAAACAgDQcAAAAAAAANBwAAAAAAAAIAAAAgIAsHAAAAAAAACwcAAAAAAAACAAAAICAJBwAAAAAAAAkHAAAAAAAAAgAAACAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHwcAAAAAAAAfBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1120,
					2,
					"left_delete",
					null,
					"AgAAAAcHAAAAAAAABwcAAAAAAAACAAAAICAGBwAAAAAAAAYHAAAAAAAAAQAAAAo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACQcAAAAAAAAJBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1125,
					12,
					"left_delete",
					null,
					"DAAAAA0FAAAAAAAADQUAAAAAAAABAAAALAwFAAAAAAAADAUAAAAAAAABAAAAKQoFAAAAAAAACgUAAAAAAAACAAAAICAIBQAAAAAAAAgFAAAAAAAAAgAAACAgBgUAAAAAAAAGBQAAAAAAAAIAAAAgIAQFAAAAAAAABAUAAAAAAAACAAAAICACBQAAAAAAAAIFAAAAAAAAAgAAACAgAAUAAAAAAAAABQAAAAAAAAIAAAAgIP4EAAAAAAAA/gQAAAAAAAACAAAAICD8BAAAAAAAAPwEAAAAAAAAAgAAACAg+gQAAAAAAAD6BAAAAAAAAAIAAAAgIPgEAAAAAAAA+AQAAAAAAAACAAAAICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADgUAAAAAAAAOBQAAAAAAAAAAAAAA4GVA"
				],
				[
					1126,
					1,
					"left_delete",
					null,
					"AQAAAPcEAAAAAAAA9wQAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+AQAAAAAAAD4BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1141,
					1,
					"vi_eval",
					{
						"action_args":
						{
						},
						"action_command": "vi_delete",
						"motion_args":
						{
							"to": "line"
						},
						"motion_clip_to_line": false,
						"motion_command": "expand_selection",
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"AQAAADwGAAAAAAAAPAYAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPAYAAAAAAAA8BgAAAAAAAAAAAAAAAPC/"
				],
				[
					1147,
					1,
					"vi_eval",
					{
						"action_args":
						{
						},
						"action_command": "vi_delete",
						"motion_args":
						{
							"to": "line"
						},
						"motion_clip_to_line": false,
						"motion_command": "expand_selection",
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"AQAAAIYFAAAAAAAAhgUAAAAAAAALAAAAICAgICAgICAgIAo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhgUAAAAAAACGBQAAAAAAAAAAAAAAAAAA"
				],
				[
					1154,
					6,
					"left_delete",
					null,
					"fgAAAOAGAAAAAAAA4AYAAAAAAAACAAAAICC7BgAAAAAAALsGAAAAAAAAAgAAACAgZAYAAAAAAABkBgAAAAAAAAIAAAAgIEcGAAAAAAAARwYAAAAAAAACAAAAICAsBgAAAAAAACwGAAAAAAAAAgAAACAgBwYAAAAAAAAHBgAAAAAAAAIAAAAgILkFAAAAAAAAuQUAAAAAAAACAAAAICCcBQAAAAAAAJwFAAAAAAAAAgAAACAggQUAAAAAAACBBQAAAAAAAAIAAAAgIF0FAAAAAAAAXQUAAAAAAAACAAAAICArBQAAAAAAACsFAAAAAAAAAgAAACAgDgUAAAAAAAAOBQAAAAAAAAIAAAAgIPQEAAAAAAAA9AQAAAAAAAACAAAAICDPBAAAAAAAAM8EAAAAAAAAAgAAACAgbAQAAAAAAABsBAAAAAAAAAIAAAAgIAoEAAAAAAAACgQAAAAAAAACAAAAICCxAwAAAAAAALEDAAAAAAAAAgAAACAgWwMAAAAAAABbAwAAAAAAAAIAAAAgIBEDAAAAAAAAEQMAAAAAAAACAAAAICDOAgAAAAAAAM4CAAAAAAAAAgAAACAgsQIAAAAAAACxAgAAAAAAAAIAAAAgILYGAAAAAAAAtgYAAAAAAAACAAAAICCTBgAAAAAAAJMGAAAAAAAAAgAAACAgPgYAAAAAAAA+BgAAAAAAAAIAAAAgICMGAAAAAAAAIwYAAAAAAAACAAAAICAKBgAAAAAAAAoGAAAAAAAAAgAAACAg5wUAAAAAAADnBQAAAAAAAAIAAAAgIJsFAAAAAAAAmwUAAAAAAAACAAAAICCABQAAAAAAAIAFAAAAAAAAAgAAACAgZwUAAAAAAABnBQAAAAAAAAIAAAAgIEUFAAAAAAAARQUAAAAAAAACAAAAICAVBQAAAAAAABUFAAAAAAAAAgAAACAg+gQAAAAAAAD6BAAAAAAAAAIAAAAgIOIEAAAAAAAA4gQAAAAAAAACAAAAICC/BAAAAAAAAL8EAAAAAAAAAgAAACAgXgQAAAAAAABeBAAAAAAAAAIAAAAgIP4DAAAAAAAA/gMAAAAAAAACAAAAICCnAwAAAAAAAKcDAAAAAAAAAgAAACAgUwMAAAAAAABTAwAAAAAAAAIAAAAgIAsDAAAAAAAACwMAAAAAAAACAAAAICDKAgAAAAAAAMoCAAAAAAAAAgAAACAgrwIAAAAAAACvAgAAAAAAAAIAAAAgIIwGAAAAAAAAjAYAAAAAAAACAAAAICBrBgAAAAAAAGsGAAAAAAAAAgAAACAgGAYAAAAAAAAYBgAAAAAAAAIAAAAgIP8FAAAAAAAA/wUAAAAAAAACAAAAICDoBQAAAAAAAOgFAAAAAAAAAgAAACAgxwUAAAAAAADHBQAAAAAAAAIAAAAgIH0FAAAAAAAAfQUAAAAAAAACAAAAICBkBQAAAAAAAGQFAAAAAAAAAgAAACAgTQUAAAAAAABNBQAAAAAAAAIAAAAgIC0FAAAAAAAALQUAAAAAAAACAAAAICD/BAAAAAAAAP8EAAAAAAAAAgAAACAg5gQAAAAAAADmBAAAAAAAAAIAAAAgINAEAAAAAAAA0AQAAAAAAAACAAAAICCvBAAAAAAAAK8EAAAAAAAAAgAAACAgUAQAAAAAAABQBAAAAAAAAAIAAAAgIPIDAAAAAAAA8gMAAAAAAAACAAAAICCdAwAAAAAAAJ0DAAAAAAAAAgAAACAgSwMAAAAAAABLAwAAAAAAAAIAAAAgIAUDAAAAAAAABQMAAAAAAAACAAAAICDGAgAAAAAAAMYCAAAAAAAAAgAAACAgrQIAAAAAAACtAgAAAAAAAAIAAAAgIGIGAAAAAAAAYgYAAAAAAAACAAAAICBDBgAAAAAAAEMGAAAAAAAAAgAAACAg8gUAAAAAAADyBQAAAAAAAAIAAAAgINsFAAAAAAAA2wUAAAAAAAACAAAAICDGBQAAAAAAAMYFAAAAAAAAAgAAACAgpwUAAAAAAACnBQAAAAAAAAIAAAAgIF8FAAAAAAAAXwUAAAAAAAACAAAAICBIBQAAAAAAAEgFAAAAAAAAAgAAACAgMwUAAAAAAAAzBQAAAAAAAAIAAAAgIBUFAAAAAAAAFQUAAAAAAAACAAAAICDpBAAAAAAAAOkEAAAAAAAAAgAAACAg0gQAAAAAAADSBAAAAAAAAAIAAAAgIL4EAAAAAAAAvgQAAAAAAAACAAAAICCfBAAAAAAAAJ8EAAAAAAAAAgAAACAgQgQAAAAAAABCBAAAAAAAAAIAAAAgIOYDAAAAAAAA5gMAAAAAAAACAAAAICCTAwAAAAAAAJMDAAAAAAAAAgAAACAgQwMAAAAAAABDAwAAAAAAAAIAAAAgIP8CAAAAAAAA/wIAAAAAAAACAAAAICDCAgAAAAAAAMICAAAAAAAAAgAAACAgqwIAAAAAAACrAgAAAAAAAAIAAAAgIDgGAAAAAAAAOAYAAAAAAAACAAAAICAbBgAAAAAAABsGAAAAAAAAAgAAACAgzAUAAAAAAADMBQAAAAAAAAIAAAAgILcFAAAAAAAAtwUAAAAAAAACAAAAICCkBQAAAAAAAKQFAAAAAAAAAgAAACAghwUAAAAAAACHBQAAAAAAAAIAAAAgIEEFAAAAAAAAQQUAAAAAAAACAAAAICAsBQAAAAAAACwFAAAAAAAAAgAAACAgGQUAAAAAAAAZBQAAAAAAAAIAAAAgIP0EAAAAAAAA/QQAAAAAAAACAAAAICDTBAAAAAAAANMEAAAAAAAAAgAAACAgvgQAAAAAAAC+BAAAAAAAAAIAAAAgIKwEAAAAAAAArAQAAAAAAAACAAAAICCPBAAAAAAAAI8EAAAAAAAAAgAAACAgNAQAAAAAAAA0BAAAAAAAAAIAAAAgINoDAAAAAAAA2gMAAAAAAAACAAAAICCJAwAAAAAAAIkDAAAAAAAAAgAAACAgOwMAAAAAAAA7AwAAAAAAAAIAAAAgIPkCAAAAAAAA+QIAAAAAAAACAAAAICC+AgAAAAAAAL4CAAAAAAAAAgAAACAgqQIAAAAAAACpAgAAAAAAAAIAAAAgIA4GAAAAAAAADgYAAAAAAAACAAAAICDzBQAAAAAAAPMFAAAAAAAAAgAAACAgpgUAAAAAAACmBQAAAAAAAAIAAAAgIJMFAAAAAAAAkwUAAAAAAAACAAAAICCCBQAAAAAAAIIFAAAAAAAAAgAAACAgZwUAAAAAAABnBQAAAAAAAAIAAAAgICMFAAAAAAAAIwUAAAAAAAACAAAAICAQBQAAAAAAABAFAAAAAAAAAgAAACAg/wQAAAAAAAD/BAAAAAAAAAIAAAAgIOUEAAAAAAAA5QQAAAAAAAACAAAAICC9BAAAAAAAAL0EAAAAAAAAAgAAACAgqgQAAAAAAACqBAAAAAAAAAIAAAAgIJoEAAAAAAAAmgQAAAAAAAACAAAAICB/BAAAAAAAAH8EAAAAAAAAAgAAACAgJgQAAAAAAAAmBAAAAAAAAAIAAAAgIM4DAAAAAAAAzgMAAAAAAAACAAAAICB/AwAAAAAAAH8DAAAAAAAAAgAAACAgMwMAAAAAAAAzAwAAAAAAAAIAAAAgIPMCAAAAAAAA8wIAAAAAAAACAAAAICC6AgAAAAAAALoCAAAAAAAAAgAAACAgpwIAAAAAAACnAgAAAAAAAAIAAAAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAVAAAAswIAAAAAAACzAgAAAAAAAAAAAAAAAGVA0AIAAAAAAADQAgAAAAAAAAAAAAAAAGVAEwMAAAAAAAATAwAAAAAAAAAAAAAAAGVAXQMAAAAAAABdAwAAAAAAAAAAAAAAAGVAswMAAAAAAACzAwAAAAAAAAAAAAAAAGVADAQAAAAAAAAMBAAAAAAAAAAAAAAAAGVAbgQAAAAAAABuBAAAAAAAAAAAAAAAAGVA0QQAAAAAAADRBAAAAAAAAAAAAAAAAGVA9gQAAAAAAAD2BAAAAAAAAAAAAAAAAGVAEAUAAAAAAAAQBQAAAAAAAAAAAAAAAGVALQUAAAAAAAAtBQAAAAAAAAAAAAAAAGVAXwUAAAAAAABfBQAAAAAAAAAAAAAAAGVAgwUAAAAAAACDBQAAAAAAAAAAAAAAAGVAngUAAAAAAACeBQAAAAAAAAAAAAAAAGVAuwUAAAAAAAC7BQAAAAAAAAAAAAAAAGVACQYAAAAAAAAJBgAAAAAAAAAAAAAAAGVALgYAAAAAAAAuBgAAAAAAAAAAAAAAAGVASQYAAAAAAABJBgAAAAAAAAAAAAAAAGVAZgYAAAAAAABmBgAAAAAAAAAAAAAAAGVAvQYAAAAAAAC9BgAAAAAAAAAAAAAAAGVA4gYAAAAAAADiBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1156,
					1,
					"left_delete",
					null,
					"FQAAAOQFAAAAAAAA5AUAAAAAAAACAAAAICDLBQAAAAAAAMsFAAAAAAAAAgAAACAggAUAAAAAAACABQAAAAAAAAIAAAAgIG8FAAAAAAAAbwUAAAAAAAACAAAAICBgBQAAAAAAAGAFAAAAAAAAAgAAACAgRwUAAAAAAABHBQAAAAAAAAIAAAAgIAUFAAAAAAAABQUAAAAAAAACAAAAICD0BAAAAAAAAPQEAAAAAAAAAgAAACAg5QQAAAAAAADlBAAAAAAAAAIAAAAgIM0EAAAAAAAAzQQAAAAAAAACAAAAICCnBAAAAAAAAKcEAAAAAAAAAgAAACAglgQAAAAAAACWBAAAAAAAAAIAAAAgIIgEAAAAAAAAiAQAAAAAAAACAAAAICBvBAAAAAAAAG8EAAAAAAAAAgAAACAgGAQAAAAAAAAYBAAAAAAAAAIAAAAgIMIDAAAAAAAAwgMAAAAAAAACAAAAICB1AwAAAAAAAHUDAAAAAAAAAgAAACAgKwMAAAAAAAArAwAAAAAAAAIAAAAgIO0CAAAAAAAA7QIAAAAAAAACAAAAICC2AgAAAAAAALYCAAAAAAAAAgAAACAgpQIAAAAAAAClAgAAAAAAAAIAAAAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAVAAAApwIAAAAAAACnAgAAAAAAAAAAAAAAAPC/uAIAAAAAAAC4AgAAAAAAAAAAAAAAAPC/7wIAAAAAAADvAgAAAAAAAAAAAAAAAPC/LQMAAAAAAAAtAwAAAAAAAAAAAAAAAPC/dwMAAAAAAAB3AwAAAAAAAAAAAAAAAPC/xAMAAAAAAADEAwAAAAAAAAAAAAAAAPC/GgQAAAAAAAAaBAAAAAAAAAAAAAAAAPC/cQQAAAAAAABxBAAAAAAAAAAAAAAAAPC/igQAAAAAAACKBAAAAAAAAAAAAAAAAPC/mAQAAAAAAACYBAAAAAAAAAAAAAAAAPC/qQQAAAAAAACpBAAAAAAAAAAAAAAAAPC/zwQAAAAAAADPBAAAAAAAAAAAAAAAAPC/5wQAAAAAAADnBAAAAAAAAAAAAAAAAPC/9gQAAAAAAAD2BAAAAAAAAAAAAAAAAPC/BwUAAAAAAAAHBQAAAAAAAAAAAAAAAPC/SQUAAAAAAABJBQAAAAAAAAAAAAAAAPC/YgUAAAAAAABiBQAAAAAAAAAAAAAAAPC/cQUAAAAAAABxBQAAAAAAAAAAAAAAAPC/ggUAAAAAAACCBQAAAAAAAAAAAAAAAPC/zQUAAAAAAADNBQAAAAAAAAAAAAAAAPC/5gUAAAAAAADmBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1158,
					1,
					"insert",
					{
						"characters": " "
					},
					"FQAAALwFAAAAAAAAvQUAAAAAAAAAAAAApQUAAAAAAACmBQAAAAAAAAAAAABcBQAAAAAAAF0FAAAAAAAAAAAAAE0FAAAAAAAATgUAAAAAAAAAAAAAQAUAAAAAAABBBQAAAAAAAAAAAAApBQAAAAAAACoFAAAAAAAAAAAAAOkEAAAAAAAA6gQAAAAAAAAAAAAA2gQAAAAAAADbBAAAAAAAAAAAAADNBAAAAAAAAM4EAAAAAAAAAAAAALcEAAAAAAAAuAQAAAAAAAAAAAAAkwQAAAAAAACUBAAAAAAAAAAAAACEBAAAAAAAAIUEAAAAAAAAAAAAAHgEAAAAAAAAeQQAAAAAAAAAAAAAYQQAAAAAAABiBAAAAAAAAAAAAAAMBAAAAAAAAA0EAAAAAAAAAAAAALgDAAAAAAAAuQMAAAAAAAAAAAAAbQMAAAAAAABuAwAAAAAAAAAAAAAlAwAAAAAAACYDAAAAAAAAAAAAAOkCAAAAAAAA6gIAAAAAAAAAAAAAtAIAAAAAAAC1AgAAAAAAAAAAAAClAgAAAAAAAKYCAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAVAAAApQIAAAAAAAClAgAAAAAAAAAAAAAAAPC/tAIAAAAAAAC0AgAAAAAAAAAAAAAAAPC/6QIAAAAAAADpAgAAAAAAAAAAAAAAAPC/JQMAAAAAAAAlAwAAAAAAAAAAAAAAAPC/bQMAAAAAAABtAwAAAAAAAAAAAAAAAPC/uAMAAAAAAAC4AwAAAAAAAAAAAAAAAPC/DAQAAAAAAAAMBAAAAAAAAAAAAAAAAPC/YQQAAAAAAABhBAAAAAAAAAAAAAAAAPC/eAQAAAAAAAB4BAAAAAAAAAAAAAAAAPC/hAQAAAAAAACEBAAAAAAAAAAAAAAAAPC/kwQAAAAAAACTBAAAAAAAAAAAAAAAAPC/twQAAAAAAAC3BAAAAAAAAAAAAAAAAPC/zQQAAAAAAADNBAAAAAAAAAAAAAAAAPC/2gQAAAAAAADaBAAAAAAAAAAAAAAAAPC/6QQAAAAAAADpBAAAAAAAAAAAAAAAAPC/KQUAAAAAAAApBQAAAAAAAAAAAAAAAPC/QAUAAAAAAABABQAAAAAAAAAAAAAAAPC/TQUAAAAAAABNBQAAAAAAAAAAAAAAAPC/XAUAAAAAAABcBQAAAAAAAAAAAAAAAPC/pQUAAAAAAAClBQAAAAAAAAAAAAAAAPC/vAUAAAAAAAC8BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1169,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIsCAAAAAAAAjAIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiwIAAAAAAACLAgAAAAAAAAAAAAAAAPC/"
				],
				[
					1180,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAIMEAAAAAAAAhAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgwQAAAAAAACDBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1197,
					1,
					"cut",
					null,
					"AQAAAKIEAAAAAAAAogQAAAAAAAAXAAAARFQ6OkRUT3V0cHV0KCJIR19kYXQiKSw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAogQAAAAAAAC5BAAAAAAAAP///////+9/"
				],
				[
					1206,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAF4EAAAAAAAAXwQAAAAAAAAAAAAAXwQAAAAAAABsBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXgQAAAAAAABeBAAAAAAAAP///////+9/"
				],
				[
					1207,
					1,
					"paste",
					null,
					"AQAAAGwEAAAAAAAAgwQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbAQAAAAAAABsBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1215,
					8,
					"left_delete",
					null,
					"CAAAALUEAAAAAAAAtQQAAAAAAAA3AAAAYm94KAogICAgICAgICAgICAgCiAgICAgICAgICAgICB3aWR0aCA9IDYKICAgICAgICAgICApLLQEAAAAAAAAtAQAAAAAAAABAAAAILIEAAAAAAAAsgQAAAAAAAACAAAAICCwBAAAAAAAALAEAAAAAAAAAgAAACAgrgQAAAAAAACuBAAAAAAAAAIAAAAgIKwEAAAAAAAArAQAAAAAAAACAAAAICCqBAAAAAAAAKoEAAAAAAAAAgAAACAgqQQAAAAAAACpBAAAAAAAAAEAAAAK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7AQAAAAAAAC1BAAAAAAAAAAAAAAAQFNA"
				],
				[
					1240,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAALkEAAAAAAAAugQAAAAAAAAAAAAAugQAAAAAAADFBAAAAAAAAAAAAAC6BAAAAAAAALoEAAAAAAAACwAAACAgICAgICAgICAgugQAAAAAAADGBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuQQAAAAAAAC5BAAAAAAAAAAAAAAAgG9A"
				],
				[
					1243,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMYEAAAAAAAAxwQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxgQAAAAAAADGBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1245,
					1,
					"insert",
					{
						"characters": "numeri"
					},
					"BgAAAMcEAAAAAAAAyAQAAAAAAAAAAAAAyAQAAAAAAADJBAAAAAAAAAAAAADJBAAAAAAAAMoEAAAAAAAAAAAAAMoEAAAAAAAAywQAAAAAAAAAAAAAywQAAAAAAADMBAAAAAAAAAAAAADMBAAAAAAAAM0EAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxwQAAAAAAADHBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1246,
					1,
					"insert_completion",
					{
						"completion": "numericInput",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "numericInput"
					},
					"AgAAAMcEAAAAAAAAxwQAAAAAAAAGAAAAbnVtZXJpxwQAAAAAAADTBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzQQAAAAAAADNBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1247,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANMEAAAAAAAA1QQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0wQAAAAAAADTBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1256,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAALkEAAAAAAAAugQAAAAAAAAAAAAAugQAAAAAAADFBAAAAAAAAAAAAAC6BAAAAAAAALoEAAAAAAAACwAAACAgICAgICAgICAgugQAAAAAAADGBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuQQAAAAAAAC5BAAAAAAAAAAAAAAAwGZA"
				],
				[
					1257,
					1,
					"paste",
					null,
					"AQAAAMYEAAAAAAAA4QQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxgQAAAAAAADGBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1262,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAPwEAAAAAAAA/gQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/AQAAAAAAAD8BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1264,
					1,
					"insert",
					{
						"characters": "HG_kH"
					},
					"BQAAAP0EAAAAAAAA/gQAAAAAAAAAAAAA/gQAAAAAAAD/BAAAAAAAAAAAAAD/BAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAQUAAAAAAAAAAAAAAQUAAAAAAAACBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/QQAAAAAAAD9BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1265,
					1,
					"insert",
					{
						"characters": "D"
					},
					"AQAAAAIFAAAAAAAAAwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAgUAAAAAAAACBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1268,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAAQFAAAAAAAABQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABAUAAAAAAAAEBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1270,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAUFAAAAAAAABgUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABQUAAAAAAAAFBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1272,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAAYFAAAAAAAACAUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABgUAAAAAAAAGBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1274,
					1,
					"insert",
					{
						"characters": "k"
					},
					"AQAAAAcFAAAAAAAACAUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABwUAAAAAAAAHBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1276,
					1,
					"insert",
					{
						"characters": "HD"
					},
					"AgAAAAgFAAAAAAAACQUAAAAAAAAAAAAACQUAAAAAAAAKBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACAUAAAAAAAAIBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1277,
					1,
					"insert",
					{
						"characters": " value"
					},
					"BgAAAAoFAAAAAAAACwUAAAAAAAAAAAAACwUAAAAAAAAMBQAAAAAAAAAAAAAMBQAAAAAAAA0FAAAAAAAAAAAAAA0FAAAAAAAADgUAAAAAAAAAAAAADgUAAAAAAAAPBQAAAAAAAAAAAAAPBQAAAAAAABAFAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACgUAAAAAAAAKBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1279,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAABEFAAAAAAAAEgUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEQUAAAAAAAARBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1280,
					1,
					"insert",
					{
						"characters": " value"
					},
					"BgAAABIFAAAAAAAAEwUAAAAAAAAAAAAAEwUAAAAAAAAUBQAAAAAAAAAAAAAUBQAAAAAAABUFAAAAAAAAAAAAABUFAAAAAAAAFgUAAAAAAAAAAAAAFgUAAAAAAAAXBQAAAAAAAAAAAAAXBQAAAAAAABgFAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEgUAAAAAAAASBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1281,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAABgFAAAAAAAAGQUAAAAAAAAAAAAAGQUAAAAAAAAaBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGAUAAAAAAAAYBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1282,
					1,
					"insert",
					{
						"characters": " NULL"
					},
					"BQAAABoFAAAAAAAAGwUAAAAAAAAAAAAAGwUAAAAAAAAcBQAAAAAAAAAAAAAcBQAAAAAAAB0FAAAAAAAAAAAAAB0FAAAAAAAAHgUAAAAAAAAAAAAAHgUAAAAAAAAfBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGgUAAAAAAAAaBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1284,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAACAFAAAAAAAAIQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIAUAAAAAAAAgBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1289,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACEFAAAAAAAAIgUAAAAAAAAAAAAAIgUAAAAAAAAvBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIQUAAAAAAAAhBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1291,
					1,
					"paste",
					null,
					"AQAAAC8FAAAAAAAAYQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALwUAAAAAAAAvBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1293,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAGEFAAAAAAAAYgUAAAAAAAAAAAAAYgUAAAAAAABvBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYQUAAAAAAABhBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1295,
					1,
					"paste",
					null,
					"AQAAAG8FAAAAAAAAoQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbwUAAAAAAABvBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1297,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKEFAAAAAAAAogUAAAAAAAAAAAAAogUAAAAAAACvBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAoQUAAAAAAAChBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1299,
					1,
					"paste",
					null,
					"AQAAAK8FAAAAAAAA4QUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArwUAAAAAAACvBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1307,
					3,
					"left_delete",
					null,
					"AwAAAEIFAAAAAAAAQgUAAAAAAAABAAAAREEFAAAAAAAAQQUAAAAAAAABAAAASEAFAAAAAAAAQAUAAAAAAAABAAAAaw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQwUAAAAAAABDBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1308,
					1,
					"insert",
					{
						"characters": "I0"
					},
					"AgAAAEAFAAAAAAAAQQUAAAAAAAAAAAAAQQUAAAAAAABCBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQAUAAAAAAABABQAAAAAAAAAAAAAAAPC/"
				],
				[
					1313,
					1,
					"left_delete",
					null,
					"AQAAAH8FAAAAAAAAfwUAAAAAAAABAAAAaw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgAUAAAAAAACABQAAAAAAAAAAAAAAAPC/"
				],
				[
					1315,
					1,
					"insert",
					{
						"characters": "I"
					},
					"AQAAAH8FAAAAAAAAgAUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfwUAAAAAAAB/BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1320,
					1,
					"left_delete",
					null,
					"AQAAAMAFAAAAAAAAwAUAAAAAAAABAAAASA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwQUAAAAAAADBBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1322,
					1,
					"left_delete",
					null,
					"AQAAAL8FAAAAAAAAvwUAAAAAAAABAAAAaw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwAUAAAAAAADABQAAAAAAAAAAAAAAAPC/"
				],
				[
					1324,
					1,
					"insert",
					{
						"characters": "I"
					},
					"AQAAAL8FAAAAAAAAwAUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvwUAAAAAAAC/BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1327,
					1,
					"right_delete",
					null,
					"AQAAAMUFAAAAAAAAxQUAAAAAAAABAAAAaw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxQUAAAAAAADFBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1329,
					1,
					"right_delete",
					null,
					"AQAAAMUFAAAAAAAAxQUAAAAAAAABAAAASA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxQUAAAAAAADFBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1331,
					1,
					"insert",
					{
						"characters": "I"
					},
					"AQAAAMUFAAAAAAAAxgUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxQUAAAAAAADFBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1335,
					1,
					"right_delete",
					null,
					"AQAAAIYFAAAAAAAAhgUAAAAAAAABAAAAaw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhgUAAAAAAACGBQAAAAAAAAAAAAAAMHBA"
				],
				[
					1337,
					1,
					"insert",
					{
						"characters": "I"
					},
					"AQAAAIYFAAAAAAAAhwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhgUAAAAAAACGBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1343,
					3,
					"right_delete",
					null,
					"AwAAAEYFAAAAAAAARgUAAAAAAAABAAAAa0YFAAAAAAAARgUAAAAAAAABAAAASEYFAAAAAAAARgUAAAAAAAABAAAARA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARgUAAAAAAABGBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1344,
					1,
					"insert",
					{
						"characters": "I0"
					},
					"AgAAAEYFAAAAAAAARwUAAAAAAAAAAAAARwUAAAAAAABIBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARgUAAAAAAABGBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1352,
					8,
					"left_delete",
					null,
					"CAAAAMYEAAAAAAAAxgQAAAAAAAAbAAAAKmtoZCosICpJMCosICpJSEQqIGFuZCAqSUQqxAQAAAAAAADEBAAAAAAAAAIAAAAgIMIEAAAAAAAAwgQAAAAAAAACAAAAICDABAAAAAAAAMAEAAAAAAAAAgAAACAgvgQAAAAAAAC+BAAAAAAAAAIAAAAgILwEAAAAAAAAvAQAAAAAAAACAAAAICC6BAAAAAAAALoEAAAAAAAAAgAAACAguQQAAAAAAAC5BAAAAAAAAAEAAAAK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4QQAAAAAAADGBAAAAAAAAAAAAAAAAFVA"
				],
				[
					1406,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMcEAAAAAAAAyAQAAAAAAAAAAAAAyAQAAAAAAADVBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxwQAAAAAAADHBAAAAAAAAAAAAAAAwFZA"
				],
				[
					1409,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAAMcEAAAAAAAAyAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxwQAAAAAAADHBAAAAAAAAAAAAAAAwFZA"
				],
				[
					1411,
					1,
					"insert",
					{
						"characters": "ox"
					},
					"AgAAAMgEAAAAAAAAyQQAAAAAAAAAAAAAyQQAAAAAAADKBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyAQAAAAAAADIBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1412,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMoEAAAAAAAAzAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAygQAAAAAAADKBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1413,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"CAAAAMsEAAAAAAAAzAQAAAAAAAAAAAAAzAQAAAAAAADZBAAAAAAAAAAAAADZBAAAAAAAANoEAAAAAAAAAAAAANoEAAAAAAAA5wQAAAAAAAAAAAAAzAQAAAAAAADMBAAAAAAAAA0AAAAgICAgICAgICAgICAgzQQAAAAAAADNBAAAAAAAAA0AAAAgICAgICAgICAgICAgzQQAAAAAAADbBAAAAAAAAAAAAADMBAAAAAAAANoEAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAywQAAAAAAADLBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1423,
					1,
					"left_delete",
					null,
					"AgAAAOcEAAAAAAAA5wQAAAAAAAACAAAAICDMBAAAAAAAAMwEAAAAAAAADgAAACAgICAgICAgICAgICAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6QQAAAAAAADpBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1427,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANkEAAAAAAAA2gQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2QQAAAAAAADZBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1430,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANsEAAAAAAAA3AQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2wQAAAAAAADbBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1436,
					1,
					"cut",
					null,
					"AQAAAOoEAAAAAAAA6gQAAAAAAAAyAAAAbnVtZXJpY0lucHV0KCJIR19rSEQiLCAia0hEIHZhbHVlIiwgdmFsdWUgPSBOVUxMKSw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6gQAAAAAAAAcBQAAAAAAAP///////+9/"
				],
				[
					1439,
					1,
					"reindent",
					null,
					"AQAAAMwEAAAAAAAA2gQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzAQAAAAAAADMBAAAAAAAAAAAAAAAwFZA"
				],
				[
					1441,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAANoEAAAAAAAA3AQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2gQAAAAAAADaBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1444,
					1,
					"paste",
					null,
					"AQAAANwEAAAAAAAADgUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3AQAAAAAAADcBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1446,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAA4FAAAAAAAADwUAAAAAAAAAAAAADwUAAAAAAAAfBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADgUAAAAAAAAOBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1448,
					1,
					"paste",
					null,
					"AQAAAB8FAAAAAAAAUQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHwUAAAAAAAAfBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1450,
					1,
					"left_delete",
					null,
					"AQAAAFAFAAAAAAAAUAUAAAAAAAABAAAALA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUQUAAAAAAABRBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1454,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEAFAAAAAAAAQQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQAUAAAAAAABABQAAAAAAAAAAAAAAAPC/"
				],
				[
					1456,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAAEEFAAAAAAAAQgUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQQUAAAAAAABBBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1458,
					1,
					"insert",
					{
						"characters": "pper"
					},
					"BAAAAEIFAAAAAAAAQwUAAAAAAAAAAAAAQwUAAAAAAABEBQAAAAAAAAAAAABEBQAAAAAAAEUFAAAAAAAAAAAAAEUFAAAAAAAARgUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQgUAAAAAAABCBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1459,
					1,
					"insert",
					{
						"characters": " bounda"
					},
					"BwAAAEYFAAAAAAAARwUAAAAAAAAAAAAARwUAAAAAAABIBQAAAAAAAAAAAABIBQAAAAAAAEkFAAAAAAAAAAAAAEkFAAAAAAAASgUAAAAAAAAAAAAASgUAAAAAAABLBQAAAAAAAAAAAABLBQAAAAAAAEwFAAAAAAAAAAAAAEwFAAAAAAAATQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARgUAAAAAAABGBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1460,
					1,
					"insert",
					{
						"characters": "ry"
					},
					"AgAAAE0FAAAAAAAATgUAAAAAAAAAAAAATgUAAAAAAABPBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATQUAAAAAAABNBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1466,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAP0EAAAAAAAA/gQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/QQAAAAAAAD9BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1468,
					1,
					"insert",
					{
						"characters": "lower"
					},
					"BQAAAP4EAAAAAAAA/wQAAAAAAAAAAAAA/wQAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAEFAAAAAAAAAAAAAAEFAAAAAAAAAgUAAAAAAAAAAAAAAgUAAAAAAAADBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/gQAAAAAAAD+BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1469,
					1,
					"insert",
					{
						"characters": " boundary"
					},
					"CQAAAAMFAAAAAAAABAUAAAAAAAAAAAAABAUAAAAAAAAFBQAAAAAAAAAAAAAFBQAAAAAAAAYFAAAAAAAAAAAAAAYFAAAAAAAABwUAAAAAAAAAAAAABwUAAAAAAAAIBQAAAAAAAAAAAAAIBQAAAAAAAAkFAAAAAAAAAAAAAAkFAAAAAAAACgUAAAAAAAAAAAAACgUAAAAAAAALBQAAAAAAAAAAAAALBQAAAAAAAAwFAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAwUAAAAAAAADBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1482,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAPAEAAAAAAAA8QQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8AQAAAAAAADwBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1484,
					1,
					"insert",
					{
						"characters": "lb"
					},
					"AgAAAPEEAAAAAAAA8gQAAAAAAAAAAAAA8gQAAAAAAADzBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8QQAAAAAAADxBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1491,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAEUFAAAAAAAARgUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARQUAAAAAAABFBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1493,
					1,
					"insert",
					{
						"characters": "ub"
					},
					"AgAAAEYFAAAAAAAARwUAAAAAAAAAAAAARwUAAAAAAABIBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARgUAAAAAAABGBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1510,
					1,
					"paste",
					null,
					"AQAAAJIFAAAAAAAATwYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkgUAAAAAAACSBQAAAAAAAAAAAAAAQFpA"
				],
				[
					1518,
					3,
					"right_delete",
					null,
					"BgAAAA0GAAAAAAAADQYAAAAAAAABAAAAa7gFAAAAAAAAuAUAAAAAAAABAAAAawwGAAAAAAAADAYAAAAAAAABAAAASLgFAAAAAAAAuAUAAAAAAAABAAAASAsGAAAAAAAACwYAAAAAAAABAAAARLgFAAAAAAAAuAUAAAAAAAABAAAARA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAuAUAAAAAAAC4BQAAAAAAAAAAAAAA4GxADQYAAAAAAAANBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1519,
					1,
					"insert",
					{
						"characters": "I0"
					},
					"BAAAAAoGAAAAAAAACwYAAAAAAAAAAAAAuAUAAAAAAAC5BQAAAAAAAAAAAAAMBgAAAAAAAA0GAAAAAAAAAAAAALkFAAAAAAAAugUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAuAUAAAAAAAC4BQAAAAAAAAAAAAAAAPC/CgYAAAAAAAAKBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1522,
					3,
					"right_delete",
					null,
					"BgAAABUGAAAAAAAAFQYAAAAAAAABAAAAa8EFAAAAAAAAwQUAAAAAAAABAAAAaxQGAAAAAAAAFAYAAAAAAAABAAAASMEFAAAAAAAAwQUAAAAAAAABAAAASBMGAAAAAAAAEwYAAAAAAAABAAAARMEFAAAAAAAAwQUAAAAAAAABAAAARA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAwQUAAAAAAADBBQAAAAAAAAAAAAAAAPC/FQYAAAAAAAAVBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1523,
					1,
					"insert",
					{
						"characters": "I0"
					},
					"BAAAABIGAAAAAAAAEwYAAAAAAAAAAAAAwQUAAAAAAADCBQAAAAAAAAAAAAAUBgAAAAAAABUGAAAAAAAAAAAAAMIFAAAAAAAAwwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAwQUAAAAAAADBBQAAAAAAAAAAAAAAAPC/EgYAAAAAAAASBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1532,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEsGAAAAAAAATAYAAAAAAAAAAAAATAYAAAAAAABZBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASwYAAAAAAABLBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1533,
					1,
					"paste",
					null,
					"AQAAAFkGAAAAAAAAFgcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWQYAAAAAAABZBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1541,
					1,
					"right_delete",
					null,
					"AgAAANQGAAAAAAAA1AYAAAAAAAABAAAAa38GAAAAAAAAfwYAAAAAAAABAAAAaw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAfwYAAAAAAAB/BgAAAAAAAAAAAAAAAPC/1AYAAAAAAADUBgAAAAAAAAAAAAAA4GxA"
				],
				[
					1543,
					1,
					"insert",
					{
						"characters": "I"
					},
					"AgAAANMGAAAAAAAA1AYAAAAAAAAAAAAAfwYAAAAAAACABgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAfwYAAAAAAAB/BgAAAAAAAAAAAAAAAPC/0wYAAAAAAADTBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1546,
					1,
					"right_delete",
					null,
					"AgAAAN4GAAAAAAAA3gYAAAAAAAABAAAAa4kGAAAAAAAAiQYAAAAAAAABAAAAaw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAiQYAAAAAAACJBgAAAAAAAAAAAAAAAPC/3gYAAAAAAADeBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1548,
					1,
					"insert",
					{
						"characters": "I"
					},
					"AgAAAN0GAAAAAAAA3gYAAAAAAAAAAAAAiQYAAAAAAACKBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAiQYAAAAAAACJBgAAAAAAAAAAAAAAAPC/3QYAAAAAAADdBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1557,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABYHAAAAAAAAFwcAAAAAAAAAAAAAFwcAAAAAAAAkBwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFgcAAAAAAAAWBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1558,
					1,
					"paste",
					null,
					"AQAAACQHAAAAAAAA4QcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJAcAAAAAAAAkBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1565,
					1,
					"left_delete",
					null,
					"AgAAAKAHAAAAAAAAoAcAAAAAAAABAAAASEsHAAAAAAAASwcAAAAAAAABAAAASA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAATAcAAAAAAABMBwAAAAAAAAAAAAAAAPC/oQcAAAAAAAChBwAAAAAAAAAAAAAAoG5A"
				],
				[
					1567,
					1,
					"left_delete",
					null,
					"AgAAAJ4HAAAAAAAAngcAAAAAAAABAAAAa0oHAAAAAAAASgcAAAAAAAABAAAAaw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAASwcAAAAAAABLBwAAAAAAAAAAAAAAAPC/nwcAAAAAAACfBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1569,
					1,
					"insert",
					{
						"characters": "I"
					},
					"AgAAAJ0HAAAAAAAAngcAAAAAAAAAAAAASgcAAAAAAABLBwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAASgcAAAAAAABKBwAAAAAAAAAAAAAAAPC/nQcAAAAAAACdBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1573,
					1,
					"right_delete",
					null,
					"AgAAAKcHAAAAAAAApwcAAAAAAAABAAAAa1MHAAAAAAAAUwcAAAAAAAABAAAAaw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAUwcAAAAAAABTBwAAAAAAAAAAAAAAAPC/pwcAAAAAAACnBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1575,
					1,
					"right_delete",
					null,
					"AgAAAKYHAAAAAAAApgcAAAAAAAABAAAASFMHAAAAAAAAUwcAAAAAAAABAAAASA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAUwcAAAAAAABTBwAAAAAAAAAAAAAAAPC/pgcAAAAAAACmBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1577,
					1,
					"insert",
					{
						"characters": "I"
					},
					"AgAAAKUHAAAAAAAApgcAAAAAAAAAAAAAUwcAAAAAAABUBwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAUwcAAAAAAABTBwAAAAAAAAAAAAAAAPC/pQcAAAAAAAClBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1590,
					9,
					"left_delete",
					null,
					"CQAAAOsHAAAAAAAA6wcAAAAAAACuAAAAbnVtZXJpY0lucHV0KCJIR19JMCIsICJJMCB2YWx1ZSIsIHZhbHVlID0gTlVMTCksCiAgICAgICAgICAgICBudW1lcmljSW5wdXQoIkhHX0lIRCIsICJJSEQgdmFsdWUiLCB2YWx1ZSA9IE5VTEwpLAogICAgICAgICAgICAgbnVtZXJpY0lucHV0KCJIR19JRCIsICJJRCB2YWx1ZSIsIHZhbHVlID0gTlVMTCks6gcAAAAAAADqBwAAAAAAAAEAAAAg6AcAAAAAAADoBwAAAAAAAAIAAAAgIOYHAAAAAAAA5gcAAAAAAAACAAAAICDkBwAAAAAAAOQHAAAAAAAAAgAAACAg4gcAAAAAAADiBwAAAAAAAAIAAAAgIOAHAAAAAAAA4AcAAAAAAAACAAAAICDeBwAAAAAAAN4HAAAAAAAAAgAAACAg3QcAAAAAAADdBwAAAAAAAAEAAAAK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6wcAAAAAAACZCAAAAAAAAP///////+9/"
				],
				[
					1632,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAB4IAAAAAAAAHwgAAAAAAAAAAAAAHwgAAAAAAAAsCAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHggAAAAAAAAeCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1635,
					1,
					"insert",
					{
						"characters": "verbatim"
					},
					"CAAAACwIAAAAAAAALQgAAAAAAAAAAAAALQgAAAAAAAAuCAAAAAAAAAAAAAAuCAAAAAAAAC8IAAAAAAAAAAAAAC8IAAAAAAAAMAgAAAAAAAAAAAAAMAgAAAAAAAAxCAAAAAAAAAAAAAAxCAAAAAAAADIIAAAAAAAAAAAAADIIAAAAAAAAMwgAAAAAAAAAAAAAMwgAAAAAAAA0CAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALAgAAAAAAAAsCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1649,
					1,
					"insert",
					{
						"characters": "TextOutput"
					},
					"CgAAADQIAAAAAAAANQgAAAAAAAAAAAAANQgAAAAAAAA2CAAAAAAAAAAAAAA2CAAAAAAAADcIAAAAAAAAAAAAADcIAAAAAAAAOAgAAAAAAAAAAAAAOAgAAAAAAAA5CAAAAAAAAAAAAAA5CAAAAAAAADoIAAAAAAAAAAAAADoIAAAAAAAAOwgAAAAAAAAAAAAAOwgAAAAAAAA8CAAAAAAAAAAAAAA8CAAAAAAAAD0IAAAAAAAAAAAAAD0IAAAAAAAAPggAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANAgAAAAAAAA0CAAAAAAAAAAAAAAAAPC/"
				],
				[
					1650,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAD4IAAAAAAAAQAgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPggAAAAAAAA+CAAAAAAAAAAAAAAAAPC/"
				],
				[
					1658,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAD8IAAAAAAAAQQgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPwgAAAAAAAA/CAAAAAAAAAAAAAAAAPC/"
				],
				[
					1679,
					1,
					"insert",
					{
						"characters": "I"
					},
					"AQAAAEAIAAAAAAAAQQgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQAgAAAAAAABACAAAAAAAAAAAAAAAAPC/"
				],
				[
					1681,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAEEIAAAAAAAAQggAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQQgAAAAAAABBCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1683,
					1,
					"insert",
					{
						"characters": "er"
					},
					"AgAAAEIIAAAAAAAAQwgAAAAAAAAAAAAAQwgAAAAAAABECAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQggAAAAAAABCCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1689,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEYIAAAAAAAARwgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARggAAAAAAABGCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1720,
					4,
					"left_delete",
					null,
					"BAAAAB0FAAAAAAAAHQUAAAAAAAABAAAATBwFAAAAAAAAHAUAAAAAAAABAAAATBsFAAAAAAAAGwUAAAAAAAABAAAAVRoFAAAAAAAAGgUAAAAAAAABAAAATg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHgUAAAAAAAAeBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1721,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAABoFAAAAAAAAGwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGgUAAAAAAAAaBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1727,
					1,
					"left_delete",
					null,
					"AQAAAGwFAAAAAAAAbAUAAAAAAAAEAAAATlVMTA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbAUAAAAAAABwBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1729,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAGwFAAAAAAAAbQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbAUAAAAAAABsBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1731,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAG0FAAAAAAAAbgUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbQUAAAAAAABtBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1733,
					1,
					"insert",
					{
						"characters": "09"
					},
					"AgAAAG4FAAAAAAAAbwUAAAAAAAAAAAAAbwUAAAAAAABwBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbgUAAAAAAABuBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1739,
					4,
					"left_delete",
					null,
					"BAAAAOMFAAAAAAAA4wUAAAAAAAABAAAATOIFAAAAAAAA4gUAAAAAAAABAAAATOEFAAAAAAAA4QUAAAAAAAABAAAAVeAFAAAAAAAA4AUAAAAAAAABAAAATg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5AUAAAAAAADkBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1740,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAOAFAAAAAAAA4QUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4AUAAAAAAADgBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1743,
					4,
					"right_delete",
					null,
					"BAAAADAGAAAAAAAAMAYAAAAAAAABAAAATjAGAAAAAAAAMAYAAAAAAAABAAAAVTAGAAAAAAAAMAYAAAAAAAABAAAATDAGAAAAAAAAMAYAAAAAAAABAAAATA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMAYAAAAAAAAwBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1744,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAADAGAAAAAAAAMQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMAYAAAAAAAAwBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1750,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AgAAAKMGAAAAAAAApAYAAAAAAAAAAAAApAYAAAAAAACkBgAAAAAAAAQAAABOVUxM",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAowYAAAAAAACnBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1755,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAAPUGAAAAAAAA9gYAAAAAAAAAAAAA9gYAAAAAAAD2BgAAAAAAAAQAAABOVUxM",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9QYAAAAAAAD5BgAAAAAAAAAAAAAAAPC/"
				],
				[
					1758,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAPYGAAAAAAAA9wYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9gYAAAAAAAD2BgAAAAAAAAAAAAAAAPC/"
				],
				[
					1760,
					1,
					"insert",
					{
						"characters": "06"
					},
					"AgAAAPcGAAAAAAAA+AYAAAAAAAAAAAAA+AYAAAAAAAD5BgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9wYAAAAAAAD3BgAAAAAAAAAAAAAAAPC/"
				],
				[
					1769,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AgAAAGkHAAAAAAAAagcAAAAAAAAAAAAAagcAAAAAAABqBwAAAAAAAAQAAABOVUxM",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbQcAAAAAAABpBwAAAAAAAAAAAAAAAPC/"
				],
				[
					1775,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAALkHAAAAAAAAugcAAAAAAAAAAAAAugcAAAAAAAC6BwAAAAAAAAQAAABOVUxM",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuQcAAAAAAAC9BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1777,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAALoHAAAAAAAAuwcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAugcAAAAAAAC6BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1779,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAALsHAAAAAAAAvAcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuwcAAAAAAAC7BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1781,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAALwHAAAAAAAAvQcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvAcAAAAAAAC8BwAAAAAAAAAAAAAAAPC/"
				],
				[
					1806,
					1,
					"left_delete",
					null,
					"AQAAADYEAAAAAAAANgQAAAAAAAABAAAAZQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANwQAAAAAAAA3BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1809,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAADcEAAAAAAAAOAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANwQAAAAAAAA3BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1862,
					1,
					"",
					null,
					"AgAAAB0IAAAAAAAAMAgAAAAAAAAAAAAAMAgAAAAAAAAwCAAAAAAAABsAAAB2ZXJiYXRpbVRleHRPdXRwdXQoIkl0ZXIiKSw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHQgAAAAAAAA4CAAAAAAAAP///////+9/"
				],
				[
					1865,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADAIAAAAAAAAMQgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMAgAAAAAAAAwCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1914,
					1,
					"left_delete",
					null,
					"AQAAAB0IAAAAAAAAHQgAAAAAAAAUAAAAcHJlKGlkID0gImNvbnNvbGUiKSw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMQgAAAAAAAAdCAAAAAAAAAAAAAAAwFZA"
				],
				[
					1917,
					1,
					"",
					null,
					"AQAAAB0IAAAAAAAAQQgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHQgAAAAAAAAdCAAAAAAAAAAAAAAAAPC/"
				],
				[
					1941,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEYBAAAAAAAARwEAAAAAAAAAAAAARwEAAAAAAABNAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARgEAAAAAAABGAQAAAAAAAAAAAAAAYGJA"
				],
				[
					1945,
					1,
					"",
					null,
					"AQAAAE0BAAAAAAAAnAIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATQEAAAAAAABNAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1950,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"BQAAAJsCAAAAAAAAnQIAAAAAAAAAAAAAkgIAAAAAAACUAgAAAAAAAAAAAAB2AgAAAAAAAHgCAAAAAAAAAAAAADECAAAAAAAAMwIAAAAAAAAAAAAAIgIAAAAAAAAkAgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAFAAAAIgIAAAAAAAAiAgAAAAAAAAAAAAAAACxAMQIAAAAAAAAxAgAAAAAAAAAAAAAAACxAdgIAAAAAAAB2AgAAAAAAAAAAAAAAACxAkgIAAAAAAACSAgAAAAAAAAAAAAAAACxAmwIAAAAAAACbAgAAAAAAAAAAAAAAAPC/"
				],
				[
					1952,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"BQAAAKUCAAAAAAAApwIAAAAAAAAAAAAAmgIAAAAAAACcAgAAAAAAAAAAAAB8AgAAAAAAAH4CAAAAAAAAAAAAADUCAAAAAAAANwIAAAAAAAAAAAAAJAIAAAAAAAAmAgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAFAAAAJAIAAAAAAAAkAgAAAAAAAAAAAAAAAPC/NQIAAAAAAAA1AgAAAAAAAAAAAAAAAPC/fAIAAAAAAAB8AgAAAAAAAAAAAAAAAPC/mgIAAAAAAACaAgAAAAAAAAAAAAAAAPC/pQIAAAAAAAClAgAAAAAAAAAAAAAAAPC/"
				],
				[
					1959,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"BgAAAB0CAAAAAAAAHwIAAAAAAAAAAAAAFAIAAAAAAAAWAgAAAAAAAAAAAADpAQAAAAAAAOsBAAAAAAAAAAAAAMYBAAAAAAAAyAEAAAAAAAAAAAAAogEAAAAAAACkAQAAAAAAAAAAAABcAQAAAAAAAF4BAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAGAAAAXAEAAAAAAABcAQAAAAAAAAAAAAAAACxAogEAAAAAAACiAQAAAAAAAAAAAAAAACxAxgEAAAAAAADGAQAAAAAAAAAAAAAAACxA6QEAAAAAAADpAQAAAAAAAAAAAAAAACxAFAIAAAAAAAAUAgAAAAAAAAAAAAAAACxAHQIAAAAAAAAdAgAAAAAAAAAAAAAAAPC/"
				],
				[
					1961,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"BgAAACkCAAAAAAAAKwIAAAAAAAAAAAAAHgIAAAAAAAAgAgAAAAAAAAAAAADxAQAAAAAAAPMBAAAAAAAAAAAAAMwBAAAAAAAAzgEAAAAAAAAAAAAApgEAAAAAAACoAQAAAAAAAAAAAABeAQAAAAAAAGABAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAGAAAAXgEAAAAAAABeAQAAAAAAAAAAAAAAAPC/pgEAAAAAAACmAQAAAAAAAAAAAAAAAPC/zAEAAAAAAADMAQAAAAAAAAAAAAAAAPC/8QEAAAAAAADxAQAAAAAAAAAAAAAAAPC/HgIAAAAAAAAeAgAAAAAAAAAAAAAAAPC/KQIAAAAAAAApAgAAAAAAAAAAAAAAAPC/"
				],
				[
					1969,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMgCAAAAAAAAyQIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyAIAAAAAAADIAgAAAAAAAAAAAAAAAExA"
				],
				[
					2007,
					8,
					"left_delete",
					null,
					"CAAAALsJAAAAAAAAuwkAAAAAAAABAAAAT7oJAAAAAAAAugkAAAAAAAABAAAAZbkJAAAAAAAAuQkAAAAAAAABAAAAbLgJAAAAAAAAuAkAAAAAAAABAAAAb7cJAAAAAAAAtwkAAAAAAAABAAAAc7YJAAAAAAAAtgkAAAAAAAABAAAAbrUJAAAAAAAAtQkAAAAAAAABAAAAb7QJAAAAAAAAtAkAAAAAAAABAAAAYw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvAkAAAAAAAC8CQAAAAAAAAAAAAAAAPC/"
				],
				[
					2008,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAALQJAAAAAAAAtQkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtAkAAAAAAAC0CQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "tsf/R/optimize.R",
			"settings":
			{
				"buffer_size": 7177,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					10,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEoKAAAAAAAASwoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASgoAAAAAAABKCgAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEsKAAAAAAAATAoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASwoAAAAAAABLCgAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "R"
					},
					"AQAAAEwKAAAAAAAATQoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATAoAAAAAAABMCgAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "N"
					},
					"AQAAAE0KAAAAAAAATgoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATQoAAAAAAABNCgAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					2,
					"left_delete",
					null,
					"AgAAAE0KAAAAAAAATQoAAAAAAAABAAAATkwKAAAAAAAATAoAAAAAAAABAAAAUg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATgoAAAAAAABOCgAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "runAsS"
					},
					"BgAAAEwKAAAAAAAATQoAAAAAAAAAAAAATQoAAAAAAABOCgAAAAAAAAAAAABOCgAAAAAAAE8KAAAAAAAAAAAAAE8KAAAAAAAAUAoAAAAAAAAAAAAAUAoAAAAAAABRCgAAAAAAAAAAAABRCgAAAAAAAFIKAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATAoAAAAAAABMCgAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "hiny"
					},
					"BAAAAFIKAAAAAAAAUwoAAAAAAAAAAAAAUwoAAAAAAABUCgAAAAAAAAAAAABUCgAAAAAAAFUKAAAAAAAAAAAAAFUKAAAAAAAAVgoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUgoAAAAAAABSCgAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFYKAAAAAAAAVwoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVgoAAAAAAABWCgAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAFcKAAAAAAAAWAoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVwoAAAAAAABXCgAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " FALSE"
					},
					"BgAAAFgKAAAAAAAAWQoAAAAAAAAAAAAAWQoAAAAAAABaCgAAAAAAAAAAAABaCgAAAAAAAFsKAAAAAAAAAAAAAFsKAAAAAAAAXAoAAAAAAAAAAAAAXAoAAAAAAABdCgAAAAAAAAAAAABdCgAAAAAAAF4KAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWAoAAAAAAABYCgAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "\n#' "
					},
					"AgAAAGgIAAAAAAAAaQgAAAAAAAAAAAAAaQgAAAAAAABsCAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaAgAAAAAAABoCAAAAAAAAP///////+9/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "@"
					},
					"AQAAAGwIAAAAAAAAbQgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbAgAAAAAAABsCAAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "param"
					},
					"BQAAAG0IAAAAAAAAbggAAAAAAAAAAAAAbggAAAAAAABvCAAAAAAAAAAAAABvCAAAAAAAAHAIAAAAAAAAAAAAAHAIAAAAAAAAcQgAAAAAAAAAAAAAcQgAAAAAAAByCAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbQgAAAAAAABtCAAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHIIAAAAAAAAcwgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcggAAAAAAAByCAAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAHMIAAAAAAAAdAgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcwgAAAAAAABzCAAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "unAsShiny"
					},
					"CQAAAHQIAAAAAAAAdQgAAAAAAAAAAAAAdQgAAAAAAAB2CAAAAAAAAAAAAAB2CAAAAAAAAHcIAAAAAAAAAAAAAHcIAAAAAAAAeAgAAAAAAAAAAAAAeAgAAAAAAAB5CAAAAAAAAAAAAAB5CAAAAAAAAHoIAAAAAAAAAAAAAHoIAAAAAAAAewgAAAAAAAAAAAAAewgAAAAAAAB8CAAAAAAAAAAAAAB8CAAAAAAAAH0IAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdAgAAAAAAAB0CAAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAAH0IAAAAAAAAfggAAAAAAAAAAAAAfggAAAAAAAB/CAAAAAAAAAAAAAB/CAAAAAAAAIAIAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfQgAAAAAAAB9CAAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": " internally"
					},
					"CwAAAIAIAAAAAAAAgQgAAAAAAAAAAAAAgQgAAAAAAACCCAAAAAAAAAAAAACCCAAAAAAAAIMIAAAAAAAAAAAAAIMIAAAAAAAAhAgAAAAAAAAAAAAAhAgAAAAAAACFCAAAAAAAAAAAAACFCAAAAAAAAIYIAAAAAAAAAAAAAIYIAAAAAAAAhwgAAAAAAAAAAAAAhwgAAAAAAACICAAAAAAAAAAAAACICAAAAAAAAIkIAAAAAAAAAAAAAIkIAAAAAAAAiggAAAAAAAAAAAAAiggAAAAAAACLCAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgAgAAAAAAACACAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": " used"
					},
					"BQAAAIsIAAAAAAAAjAgAAAAAAAAAAAAAjAgAAAAAAACNCAAAAAAAAAAAAACNCAAAAAAAAI4IAAAAAAAAAAAAAI4IAAAAAAAAjwgAAAAAAAAAAAAAjwgAAAAAAACQCAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiwgAAAAAAACLCAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": " when"
					},
					"BQAAAJAIAAAAAAAAkQgAAAAAAAAAAAAAkQgAAAAAAACSCAAAAAAAAAAAAACSCAAAAAAAAJMIAAAAAAAAAAAAAJMIAAAAAAAAlAgAAAAAAAAAAAAAlAgAAAAAAACVCAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkAgAAAAAAACQCAAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " running"
					},
					"CAAAAJUIAAAAAAAAlggAAAAAAAAAAAAAlggAAAAAAACXCAAAAAAAAAAAAACXCAAAAAAAAJgIAAAAAAAAAAAAAJgIAAAAAAAAmQgAAAAAAAAAAAAAmQgAAAAAAACaCAAAAAAAAAAAAACaCAAAAAAAAJsIAAAAAAAAAAAAAJsIAAAAAAAAnAgAAAAAAAAAAAAAnAgAAAAAAACdCAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlQgAAAAAAACVCAAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAJ0IAAAAAAAAnggAAAAAAAAAAAAAnggAAAAAAACfCAAAAAAAAAAAAACfCAAAAAAAAKAIAAAAAAAAAAAAAKAIAAAAAAAAoQgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnQgAAAAAAACdCAAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": " algor"
					},
					"BgAAAKEIAAAAAAAAoggAAAAAAAAAAAAAoggAAAAAAACjCAAAAAAAAAAAAACjCAAAAAAAAKQIAAAAAAAAAAAAAKQIAAAAAAAApQgAAAAAAAAAAAAApQgAAAAAAACmCAAAAAAAAAAAAACmCAAAAAAAAKcIAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAoQgAAAAAAAChCAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					2,
					"left_delete",
					null,
					"AgAAAKYIAAAAAAAApggAAAAAAAABAAAAcqUIAAAAAAAApQgAAAAAAAABAAAAbw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApwgAAAAAAACnCAAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "orithm"
					},
					"BgAAAKUIAAAAAAAApggAAAAAAAAAAAAApggAAAAAAACnCAAAAAAAAAAAAACnCAAAAAAAAKgIAAAAAAAAAAAAAKgIAAAAAAAAqQgAAAAAAAAAAAAAqQgAAAAAAACqCAAAAAAAAAAAAACqCAAAAAAAAKsIAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApQgAAAAAAAClCAAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": " from"
					},
					"BQAAAKsIAAAAAAAArAgAAAAAAAAAAAAArAgAAAAAAACtCAAAAAAAAAAAAACtCAAAAAAAAK4IAAAAAAAAAAAAAK4IAAAAAAAArwgAAAAAAAAAAAAArwgAAAAAAACwCAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqwgAAAAAAACrCAAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": " shiny."
					},
					"BwAAALAIAAAAAAAAsQgAAAAAAAAAAAAAsQgAAAAAAACyCAAAAAAAAAAAAACyCAAAAAAAALMIAAAAAAAAAAAAALMIAAAAAAAAtAgAAAAAAAAAAAAAtAgAAAAAAAC1CAAAAAAAAAAAAAC1CAAAAAAAALYIAAAAAAAAAAAAALYIAAAAAAAAtwgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsAgAAAAAAACwCAAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALcIAAAAAAAAuAgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtwgAAAAAAAC3CAAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABwXAAAAAAAAHRcAAAAAAAAAAAAAHRcAAAAAAAAfFwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHBcAAAAAAAAcFwAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": ","
					},
					"AgAAAIMXAAAAAAAAhBcAAAAAAAAAAAAAHRcAAAAAAAAdFwAAAAAAAAIAAAAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgxcAAAAAAACDFwAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIIXAAAAAAAAgxcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAghcAAAAAAACCFwAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "runas"
					},
					"BQAAAIMXAAAAAAAAhBcAAAAAAAAAAAAAhBcAAAAAAACFFwAAAAAAAAAAAACFFwAAAAAAAIYXAAAAAAAAAAAAAIYXAAAAAAAAhxcAAAAAAAAAAAAAhxcAAAAAAACIFwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgxcAAAAAAACDFwAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"insert_completion",
					{
						"completion": "runAsShiny",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "runAsShiny"
					},
					"AgAAAIMXAAAAAAAAgxcAAAAAAAAFAAAAcnVuYXODFwAAAAAAAI0XAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiBcAAAAAAACIFwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "tsf/R/pso.R",
			"settings":
			{
				"buffer_size": 4296,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					10,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJAAAAAAAAAAkQAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkAAAAAAAAACQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": " runA"
					},
					"BQAAAJEAAAAAAAAAkgAAAAAAAAAAAAAAkgAAAAAAAACTAAAAAAAAAAAAAACTAAAAAAAAAJQAAAAAAAAAAAAAAJQAAAAAAAAAlQAAAAAAAAAAAAAAlQAAAAAAAACWAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkQAAAAAAAACRAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert_completion",
					{
						"completion": "runAsShiny",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "runAsShiny"
					},
					"AgAAAJIAAAAAAAAAkgAAAAAAAAAEAAAAcnVuQZIAAAAAAAAAnAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlgAAAAAAAACWAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAJwAAAAAAAAAnQAAAAAAAAAAAAAAnQAAAAAAAACeAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": " FALSE"
					},
					"BgAAAJ4AAAAAAAAAnwAAAAAAAAAAAAAAnwAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAAKEAAAAAAAAAAAAAAKEAAAAAAAAAogAAAAAAAAAAAAAAogAAAAAAAACjAAAAAAAAAAAAAACjAAAAAAAAAKQAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngAAAAAAAACeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJsNAAAAAAAAnA0AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmw0AAAAAAACbDQAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "&&"
					},
					"AgAAAJwNAAAAAAAAnQ0AAAAAAAAAAAAAnQ0AAAAAAACeDQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnA0AAAAAAACcDQAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJ4NAAAAAAAAnw0AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAng0AAAAAAACeDQAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					2,
					"left_delete",
					null,
					"AgAAAJ4NAAAAAAAAng0AAAAAAAABAAAAIJ0NAAAAAAAAnQ0AAAAAAAABAAAAJg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnw0AAAAAAACfDQAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": " !runA"
					},
					"BgAAAJ0NAAAAAAAAng0AAAAAAAAAAAAAng0AAAAAAACfDQAAAAAAAAAAAACfDQAAAAAAAKANAAAAAAAAAAAAAKANAAAAAAAAoQ0AAAAAAAAAAAAAoQ0AAAAAAACiDQAAAAAAAAAAAACiDQAAAAAAAKMNAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnQ0AAAAAAACdDQAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert_completion",
					{
						"completion": "runAsShiny",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "runAsShiny"
					},
					"AgAAAJ8NAAAAAAAAnw0AAAAAAAAEAAAAcnVuQZ8NAAAAAAAAqQ0AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAow0AAAAAAACjDQAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAAEOAAAAAAAAAg4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAQ4AAAAAAAABDgAAAAAAAAAAAAAAgG9A"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "lse"
					},
					"AwAAAAIOAAAAAAAAAw4AAAAAAAAAAAAAAw4AAAAAAAAEDgAAAAAAAAAAAAAEDgAAAAAAAAUOAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAg4AAAAAAAACDgAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAUOAAAAAAAABg4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABQ4AAAAAAAAFDgAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAAYOAAAAAAAACA4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABg4AAAAAAAAGDgAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAAcOAAAAAAAACA4AAAAAAAAAAAAACA4AAAAAAAAMDgAAAAAAAAAAAAAMDgAAAAAAAA0OAAAAAAAAAAAAAA0OAAAAAAAAEQ4AAAAAAAAAAAAACA4AAAAAAAAIDgAAAAAAAAQAAAAgICAgCA4AAAAAAAAODgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABw4AAAAAAAAHDgAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"",
					null,
					"AQAAAA4OAAAAAAAAVQ4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADg4AAAAAAAAODgAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					6,
					"left_delete",
					null,
					"BgAAAFIOAAAAAAAAUg4AAAAAAAABAAAAIlEOAAAAAAAAUQ4AAAAAAAABAAAAdFAOAAAAAAAAUA4AAAAAAAABAAAAc08OAAAAAAAATw4AAAAAAAABAAAAZU4OAAAAAAAATg4AAAAAAAABAAAAdE0OAAAAAAAATQ4AAAAAAAABAAAAIg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUw4AAAAAAABTDgAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAD4OAAAAAAAAPw4AAAAAAAAAAAAAPw4AAAAAAABFDgAAAAAAAAAAAAA/DgAAAAAAAD8OAAAAAAAABgAAACAgICAgID8OAAAAAAAARw4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPg4AAAAAAAA+DgAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "paste0"
					},
					"BgAAAFYOAAAAAAAAVw4AAAAAAAAAAAAAVw4AAAAAAABYDgAAAAAAAAAAAABYDgAAAAAAAFkOAAAAAAAAAAAAAFkOAAAAAAAAWg4AAAAAAAAAAAAAWg4AAAAAAABbDgAAAAAAAAAAAABbDgAAAAAAAFwOAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVg4AAAAAAABWDgAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFwOAAAAAAAAXg4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXA4AAAAAAABcDgAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAF0OAAAAAAAAXw4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXQ4AAAAAAABdDgAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "Iter"
					},
					"BAAAAF4OAAAAAAAAXw4AAAAAAAAAAAAAXw4AAAAAAABgDgAAAAAAAAAAAABgDgAAAAAAAGEOAAAAAAAAAAAAAGEOAAAAAAAAYg4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXg4AAAAAAABeDgAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAGIOAAAAAAAAYw4AAAAAAAAAAAAAYw4AAAAAAABkDgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYg4AAAAAAABiDgAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGQOAAAAAAAAZQ4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZA4AAAAAAABkDgAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGYOAAAAAAAAZw4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZg4AAAAAAABmDgAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": " iter"
					},
					"BQAAAGcOAAAAAAAAaA4AAAAAAAAAAAAAaA4AAAAAAABpDgAAAAAAAAAAAABpDgAAAAAAAGoOAAAAAAAAAAAAAGoOAAAAAAAAaw4AAAAAAAAAAAAAaw4AAAAAAABsDgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZw4AAAAAAABnDgAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG0OAAAAAAAAbg4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbQ4AAAAAAABtDgAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAHAOAAAAAAAAcQ4AAAAAAAAAAAAAcQ4AAAAAAAB5DgAAAAAAAAAAAABxDgAAAAAAAHEOAAAAAAAACAAAACAgICAgICAgcQ4AAAAAAAB3DgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcA4AAAAAAABwDgAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"paste",
					null,
					"AQAAAHcOAAAAAAAA2Q4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdw4AAAAAAAB3DgAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAANkOAAAAAAAA2g4AAAAAAAAAAAAA2g4AAAAAAADiDgAAAAAAAAAAAADaDgAAAAAAANoOAAAAAAAACAAAACAgICAgICAg2g4AAAAAAADgDgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2Q4AAAAAAADZDgAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"paste",
					null,
					"AQAAAOAOAAAAAAAAQg8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4A4AAAAAAADgDgAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "globa"
					},
					"BgAAAMcOAAAAAAAAyA4AAAAAAAAAAAAAyA4AAAAAAADIDgAAAAAAAAQAAABJdGVyyA4AAAAAAADJDgAAAAAAAAAAAADJDgAAAAAAAMoOAAAAAAAAAAAAAMoOAAAAAAAAyw4AAAAAAAAAAAAAyw4AAAAAAADMDgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyw4AAAAAAADHDgAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"insert_completion",
					{
						"completion": "global_best_vec",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "global_best_vec"
					},
					"AgAAAMcOAAAAAAAAxw4AAAAAAAAFAAAAZ2xvYmHHDgAAAAAAANYOAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzA4AAAAAAADMDgAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": "globa"
					},
					"BgAAANwOAAAAAAAA3Q4AAAAAAAAAAAAA3Q4AAAAAAADdDgAAAAAAAAQAAABpdGVy3Q4AAAAAAADeDgAAAAAAAAAAAADeDgAAAAAAAN8OAAAAAAAAAAAAAN8OAAAAAAAA4A4AAAAAAAAAAAAA4A4AAAAAAADhDgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3A4AAAAAAADgDgAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert_completion",
					{
						"completion": "global_best_vec",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "global_best_vec"
					},
					"AgAAANwOAAAAAAAA3A4AAAAAAAAFAAAAZ2xvYmHcDgAAAAAAAOsOAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4Q4AAAAAAADhDgAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": "globa"
					},
					"BgAAAFAPAAAAAAAAUQ8AAAAAAAAAAAAAUQ8AAAAAAABRDwAAAAAAAAQAAABpdGVyUQ8AAAAAAABSDwAAAAAAAAAAAABSDwAAAAAAAFMPAAAAAAAAAAAAAFMPAAAAAAAAVA8AAAAAAAAAAAAAVA8AAAAAAABVDwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVA8AAAAAAABQDwAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert_completion",
					{
						"completion": "global_best_error",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "global_best_error"
					},
					"AgAAAFAPAAAAAAAAUA8AAAAAAAAFAAAAZ2xvYmFQDwAAAAAAAGEPAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVQ8AAAAAAABVDwAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AgAAAEYPAAAAAAAARw8AAAAAAAAAAAAARw8AAAAAAABHDwAAAAAAAAQAAABJdGVy",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASg8AAAAAAABGDwAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": "rror"
					},
					"BAAAAEcPAAAAAAAASA8AAAAAAAAAAAAASA8AAAAAAABJDwAAAAAAAAAAAABJDwAAAAAAAEoPAAAAAAAAAAAAAEoPAAAAAAAASw8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARw8AAAAAAABHDwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "tsf/R/server.R",
			"settings":
			{
				"buffer_size": 2311,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					839,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAD8DAAAAAAAAQAMAAAAAAAAAAAAAQAMAAAAAAABEAwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPwMAAAAAAAA/AwAAAAAAAAAAAAAAAPC/"
				],
				[
					841,
					1,
					"paste",
					null,
					"AQAAAEQDAAAAAAAAZQMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARAMAAAAAAABEAwAAAAAAAAAAAAAAAPC/"
				],
				[
					843,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAGUDAAAAAAAAZgMAAAAAAAAAAAAAZgMAAAAAAABqAwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZQMAAAAAAABlAwAAAAAAAAAAAAAAAPC/"
				],
				[
					845,
					1,
					"paste",
					null,
					"AQAAAGoDAAAAAAAAiwMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAagMAAAAAAABqAwAAAAAAAAAAAAAAAPC/"
				],
				[
					854,
					1,
					"left_delete",
					null,
					"AgAAADgDAAAAAAAAOAMAAAAAAAABAAAAayUDAAAAAAAAJQMAAAAAAAABAAAAaw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAJgMAAAAAAAAmAwAAAAAAAAAAAAAAAPC/OQMAAAAAAAA5AwAAAAAAAAAAAAAAAFVA"
				],
				[
					856,
					1,
					"insert",
					{
						"characters": "I"
					},
					"AgAAADcDAAAAAAAAOAMAAAAAAAAAAAAAJQMAAAAAAAAmAwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAJQMAAAAAAAAlAwAAAAAAAAAAAAAAAPC/NwMAAAAAAAA3AwAAAAAAAAAAAAAAAPC/"
				],
				[
					859,
					1,
					"left_delete",
					null,
					"AgAAAF4DAAAAAAAAXgMAAAAAAAABAAAAa0sDAAAAAAAASwMAAAAAAAABAAAAaw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAATAMAAAAAAABMAwAAAAAAAAAAAAAAAFVAXwMAAAAAAABfAwAAAAAAAAAAAAAAAFVA"
				],
				[
					861,
					1,
					"right_delete",
					null,
					"AgAAAF0DAAAAAAAAXQMAAAAAAAABAAAASEsDAAAAAAAASwMAAAAAAAABAAAASA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAASwMAAAAAAABLAwAAAAAAAAAAAAAAAPC/XQMAAAAAAABdAwAAAAAAAAAAAAAAAPC/"
				],
				[
					863,
					1,
					"insert",
					{
						"characters": "I"
					},
					"AgAAAFwDAAAAAAAAXQMAAAAAAAAAAAAASwMAAAAAAABMAwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAASwMAAAAAAABLAwAAAAAAAAAAAAAAAPC/XAMAAAAAAABcAwAAAAAAAAAAAAAAAPC/"
				],
				[
					867,
					1,
					"right_delete",
					null,
					"AgAAAIIDAAAAAAAAggMAAAAAAAABAAAAa28DAAAAAAAAbwMAAAAAAAABAAAAaw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAbwMAAAAAAABvAwAAAAAAAAAAAAAAAPC/ggMAAAAAAACCAwAAAAAAAAAAAAAAAPC/"
				],
				[
					869,
					1,
					"right_delete",
					null,
					"AgAAAIEDAAAAAAAAgQMAAAAAAAABAAAASG8DAAAAAAAAbwMAAAAAAAABAAAASA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAbwMAAAAAAABvAwAAAAAAAAAAAAAAAPC/gQMAAAAAAACBAwAAAAAAAAAAAAAAAPC/"
				],
				[
					871,
					1,
					"right_delete",
					null,
					"AgAAAIADAAAAAAAAgAMAAAAAAAABAAAARG8DAAAAAAAAbwMAAAAAAAABAAAARA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAbwMAAAAAAABvAwAAAAAAAAAAAAAAAPC/gAMAAAAAAACAAwAAAAAAAAAAAAAAAPC/"
				],
				[
					873,
					1,
					"insert",
					{
						"characters": "I"
					},
					"AgAAAH8DAAAAAAAAgAMAAAAAAAAAAAAAbwMAAAAAAABwAwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAbwMAAAAAAABvAwAAAAAAAAAAAAAAAPC/fwMAAAAAAAB/AwAAAAAAAAAAAAAAAPC/"
				],
				[
					875,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AgAAAIEDAAAAAAAAggMAAAAAAAAAAAAAcAMAAAAAAABxAwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAcAMAAAAAAABwAwAAAAAAAAAAAAAAAPC/gQMAAAAAAACBAwAAAAAAAAAAAAAAAPC/"
				],
				[
					888,
					1,
					"right_delete",
					null,
					"AQAAAIwDAAAAAAAAjAMAAAAAAAABAAAAIw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjAMAAAAAAACMAwAAAAAAAAAAAAAAADxA"
				],
				[
					892,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAIcDAAAAAAAAiAMAAAAAAAAAAAAAiAMAAAAAAACMAwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhwMAAAAAAACHAwAAAAAAAP///////+9/"
				],
				[
					894,
					1,
					"insert",
					{
						"characters": "lb"
					},
					"AgAAAIwDAAAAAAAAjQMAAAAAAAAAAAAAjQMAAAAAAACOAwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjAMAAAAAAACMAwAAAAAAAAAAAAAAAPC/"
				],
				[
					895,
					1,
					"insert",
					{
						"characters": " <-"
					},
					"AwAAAI4DAAAAAAAAjwMAAAAAAAAAAAAAjwMAAAAAAACQAwAAAAAAAAAAAACQAwAAAAAAAJEDAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjgMAAAAAAACOAwAAAAAAAAAAAAAAAPC/"
				],
				[
					896,
					1,
					"insert",
					{
						"characters": " c"
					},
					"AgAAAJEDAAAAAAAAkgMAAAAAAAAAAAAAkgMAAAAAAACTAwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkQMAAAAAAACRAwAAAAAAAAAAAAAAAPC/"
				],
				[
					897,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJMDAAAAAAAAlQMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkwMAAAAAAACTAwAAAAAAAAAAAAAAAPC/"
				],
				[
					913,
					1,
					"insert",
					{
						"characters": "input$"
					},
					"TgAAAH4DAAAAAAAAfwMAAAAAAAAAAAAAbAMAAAAAAABtAwAAAAAAAAAAAABaAwAAAAAAAFsDAAAAAAAAAAAAAEgDAAAAAAAASQMAAAAAAAAAAAAANQMAAAAAAAA2AwAAAAAAAAAAAAAiAwAAAAAAACMDAAAAAAAAAAAAAA8DAAAAAAAAEAMAAAAAAAAAAAAA/AIAAAAAAAD9AgAAAAAAAAAAAADmAgAAAAAAAOcCAAAAAAAAAAAAANECAAAAAAAA0gIAAAAAAAAAAAAAwAIAAAAAAADBAgAAAAAAAAAAAACvAgAAAAAAALACAAAAAAAAAAAAAKACAAAAAAAAoQIAAAAAAAAAAAAAiwMAAAAAAACMAwAAAAAAAAAAAAB4AwAAAAAAAHkDAAAAAAAAAAAAAGUDAAAAAAAAZgMAAAAAAAAAAAAAUgMAAAAAAABTAwAAAAAAAAAAAAA+AwAAAAAAAD8DAAAAAAAAAAAAACoDAAAAAAAAKwMAAAAAAAAAAAAAFgMAAAAAAAAXAwAAAAAAAAAAAAACAwAAAAAAAAMDAAAAAAAAAAAAAOsCAAAAAAAA7AIAAAAAAAAAAAAA1QIAAAAAAADWAgAAAAAAAAAAAADDAgAAAAAAAMQCAAAAAAAAAAAAALECAAAAAAAAsgIAAAAAAAAAAAAAoQIAAAAAAACiAgAAAAAAAAAAAACYAwAAAAAAAJkDAAAAAAAAAAAAAIQDAAAAAAAAhQMAAAAAAAAAAAAAcAMAAAAAAABxAwAAAAAAAAAAAABcAwAAAAAAAF0DAAAAAAAAAAAAAEcDAAAAAAAASAMAAAAAAAAAAAAAMgMAAAAAAAAzAwAAAAAAAAAAAAAdAwAAAAAAAB4DAAAAAAAAAAAAAAgDAAAAAAAACQMAAAAAAAAAAAAA8AIAAAAAAADxAgAAAAAAAAAAAADZAgAAAAAAANoCAAAAAAAAAAAAAMYCAAAAAAAAxwIAAAAAAAAAAAAAswIAAAAAAAC0AgAAAAAAAAAAAACiAgAAAAAAAKMCAAAAAAAAAAAAAKUDAAAAAAAApgMAAAAAAAAAAAAAkAMAAAAAAACRAwAAAAAAAAAAAAB7AwAAAAAAAHwDAAAAAAAAAAAAAGYDAAAAAAAAZwMAAAAAAAAAAAAAUAMAAAAAAABRAwAAAAAAAAAAAAA6AwAAAAAAADsDAAAAAAAAAAAAACQDAAAAAAAAJQMAAAAAAAAAAAAADgMAAAAAAAAPAwAAAAAAAAAAAAD1AgAAAAAAAPYCAAAAAAAAAAAAAN0CAAAAAAAA3gIAAAAAAAAAAAAAyQIAAAAAAADKAgAAAAAAAAAAAAC1AgAAAAAAALYCAAAAAAAAAAAAAKMCAAAAAAAApAIAAAAAAAAAAAAAsgMAAAAAAACzAwAAAAAAAAAAAACcAwAAAAAAAJ0DAAAAAAAAAAAAAIYDAAAAAAAAhwMAAAAAAAAAAAAAcAMAAAAAAABxAwAAAAAAAAAAAABZAwAAAAAAAFoDAAAAAAAAAAAAAEIDAAAAAAAAQwMAAAAAAAAAAAAAKwMAAAAAAAAsAwAAAAAAAAAAAAAUAwAAAAAAABUDAAAAAAAAAAAAAPoCAAAAAAAA+wIAAAAAAAAAAAAA4QIAAAAAAADiAgAAAAAAAAAAAADMAgAAAAAAAM0CAAAAAAAAAAAAALcCAAAAAAAAuAIAAAAAAAAAAAAApAIAAAAAAAClAgAAAAAAAAAAAAC/AwAAAAAAAMADAAAAAAAAAAAAAKgDAAAAAAAAqQMAAAAAAAAAAAAAkQMAAAAAAACSAwAAAAAAAAAAAAB6AwAAAAAAAHsDAAAAAAAAAAAAAGIDAAAAAAAAYwMAAAAAAAAAAAAASgMAAAAAAABLAwAAAAAAAAAAAAAyAwAAAAAAADMDAAAAAAAAAAAAABoDAAAAAAAAGwMAAAAAAAAAAAAA/wIAAAAAAAAAAwAAAAAAAAAAAADlAgAAAAAAAOYCAAAAAAAAAAAAAM8CAAAAAAAA0AIAAAAAAAAAAAAAuQIAAAAAAAC6AgAAAAAAAAAAAAClAgAAAAAAAKYCAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAANAAAAoAIAAAAAAACgAgAAAAAAAAAAAAAAAPC/rwIAAAAAAACvAgAAAAAAAAAAAAAAAExAwAIAAAAAAADAAgAAAAAAAAAAAAAAAExA0QIAAAAAAADRAgAAAAAAAAAAAAAAAExA5gIAAAAAAADmAgAAAAAAAAAAAAAAAExA/AIAAAAAAAD8AgAAAAAAAAAAAAAAAExADwMAAAAAAAAPAwAAAAAAAAAAAAAAAExAIgMAAAAAAAAiAwAAAAAAAAAAAAAAAExANQMAAAAAAAA1AwAAAAAAAAAAAAAAAExASAMAAAAAAABIAwAAAAAAAAAAAAAAAExAWgMAAAAAAABaAwAAAAAAAAAAAAAAAExAbAMAAAAAAABsAwAAAAAAAAAAAAAAAExAfgMAAAAAAAB+AwAAAAAAAAAAAAAAAExA"
				],
				[
					927,
					1,
					"insert",
					{
						"characters": "input$"
					},
					"BgAAAOIDAAAAAAAA4wMAAAAAAAAAAAAA4wMAAAAAAADkAwAAAAAAAAAAAADkAwAAAAAAAOUDAAAAAAAAAAAAAOUDAAAAAAAA5gMAAAAAAAAAAAAA5gMAAAAAAADnAwAAAAAAAAAAAADnAwAAAAAAAOgDAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4gMAAAAAAADiAwAAAAAAAAAAAAAAAPC/"
				],
				[
					929,
					1,
					"insert",
					{
						"characters": "HG"
					},
					"AgAAAOgDAAAAAAAA6QMAAAAAAAAAAAAA6QMAAAAAAADqAwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6AMAAAAAAADoAwAAAAAAAAAAAAAAAPC/"
				],
				[
					931,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAOoDAAAAAAAA6wMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6gMAAAAAAADqAwAAAAAAAAAAAAAAAPC/"
				],
				[
					933,
					1,
					"insert",
					{
						"characters": "k"
					},
					"AQAAAOsDAAAAAAAA7AMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6wMAAAAAAADrAwAAAAAAAAAAAAAAAPC/"
				],
				[
					935,
					1,
					"insert_completion",
					{
						"completion": "HG_kHD_lb",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "HG_kHD_lb"
					},
					"AgAAAOgDAAAAAAAA6AMAAAAAAAAEAAAASEdfa+gDAAAAAAAA8QMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7AMAAAAAAADsAwAAAAAAAAAAAAAAAPC/"
				],
				[
					937,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAPEDAAAAAAAA8gMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8QMAAAAAAADxAwAAAAAAAAAAAAAAAPC/"
				],
				[
					939,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPIDAAAAAAAA8wMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8gMAAAAAAADyAwAAAAAAAAAAAAAAAPC/"
				],
				[
					946,
					1,
					"paste",
					null,
					"AQAAAPMDAAAAAAAAAgQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8wMAAAAAAADzAwAAAAAAAAAAAAAAAPC/"
				],
				[
					949,
					3,
					"left_delete",
					null,
					"AwAAAP4DAAAAAAAA/gMAAAAAAAABAAAARP0DAAAAAAAA/QMAAAAAAAABAAAASPwDAAAAAAAA/AMAAAAAAAABAAAAaw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/wMAAAAAAAD/AwAAAAAAAAAAAAAAAPC/"
				],
				[
					950,
					1,
					"insert",
					{
						"characters": "I0"
					},
					"AgAAAPwDAAAAAAAA/QMAAAAAAAAAAAAA/QMAAAAAAAD+AwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/AMAAAAAAAD8AwAAAAAAAAAAAAAAAPC/"
				],
				[
					953,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAAEEAAAAAAAAAgQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAQQAAAAAAAABBAAAAAAAAAAAAAAAAPC/"
				],
				[
					955,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAIEAAAAAAAAAwQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAgQAAAAAAAACBAAAAAAAAAAAAAAAAPC/"
				],
				[
					969,
					1,
					"paste",
					null,
					"AQAAAAMEAAAAAAAAEQQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAwQAAAAAAAADBAAAAAAAAAAAAAAAAPC/"
				],
				[
					972,
					1,
					"left_delete",
					null,
					"AQAAAA0EAAAAAAAADQQAAAAAAAABAAAAMA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADgQAAAAAAAAOBAAAAAAAAAAAAAAAAPC/"
				],
				[
					974,
					1,
					"insert",
					{
						"characters": "HD"
					},
					"AgAAAA0EAAAAAAAADgQAAAAAAAAAAAAADgQAAAAAAAAPBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADQQAAAAAAAANBAAAAAAAAAAAAAAAAPC/"
				],
				[
					977,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAABIEAAAAAAAAEwQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEgQAAAAAAAASBAAAAAAAAAAAAAAAAPC/"
				],
				[
					978,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABMEAAAAAAAAFAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEwQAAAAAAAATBAAAAAAAAAAAAAAAAPC/"
				],
				[
					979,
					1,
					"paste",
					null,
					"AQAAABQEAAAAAAAAIgQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFAQAAAAAAAAUBAAAAAAAAAAAAAAAAPC/"
				],
				[
					981,
					1,
					"left_delete",
					null,
					"AQAAAB4EAAAAAAAAHgQAAAAAAAABAAAAMA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHwQAAAAAAAAfBAAAAAAAAAAAAAAAAPC/"
				],
				[
					982,
					1,
					"insert",
					{
						"characters": "D"
					},
					"AQAAAB4EAAAAAAAAHwQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHgQAAAAAAAAeBAAAAAAAAAAAAAAAAPC/"
				],
				[
					988,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACMEAAAAAAAAJAQAAAAAAAAAAAAAJAQAAAAAAAAoBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIwQAAAAAAAAjBAAAAAAAAAAAAAAAAPC/"
				],
				[
					989,
					1,
					"paste",
					null,
					"AQAAACgEAAAAAAAAcQQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKAQAAAAAAAAoBAAAAAAAAAAAAAAAAPC/"
				],
				[
					991,
					1,
					"left_delete",
					null,
					"AQAAAG4EAAAAAAAAbgQAAAAAAAABAAAAbA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbwQAAAAAAABvBAAAAAAAAAAAAAAAAPC/"
				],
				[
					992,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAAG4EAAAAAAAAbwQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbgQAAAAAAABuBAAAAAAAAAAAAAAAAPC/"
				],
				[
					996,
					1,
					"left_delete",
					null,
					"AQAAAF4EAAAAAAAAXgQAAAAAAAABAAAAbA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXwQAAAAAAABfBAAAAAAAAAAAAAAAAPC/"
				],
				[
					997,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAAF4EAAAAAAAAXwQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXgQAAAAAAABeBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1001,
					1,
					"left_delete",
					null,
					"AQAAAE0EAAAAAAAATQQAAAAAAAABAAAAbA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATgQAAAAAAABOBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1002,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAAE0EAAAAAAAATgQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATQQAAAAAAABNBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1006,
					1,
					"left_delete",
					null,
					"AQAAAD0EAAAAAAAAPQQAAAAAAAABAAAAbA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPgQAAAAAAAA+BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1007,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAAD0EAAAAAAAAPgQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPQQAAAAAAAA9BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1009,
					1,
					"right_delete",
					null,
					"AQAAACgEAAAAAAAAKAQAAAAAAAABAAAAbA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKAQAAAAAAAAoBAAAAAAAAAAAAAAAADxA"
				],
				[
					1010,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAACgEAAAAAAAAKQQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKAQAAAAAAAAoBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1025,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHEEAAAAAAAAcgQAAAAAAAAAAAAAcgQAAAAAAAB2BAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcQQAAAAAAABxBAAAAAAAAP///////+9/"
				],
				[
					1028,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAHYEAAAAAAAAdwQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdgQAAAAAAAB2BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1030,
					1,
					"insert",
					{
						"characters": "ddi"
					},
					"AwAAAHcEAAAAAAAAeAQAAAAAAAAAAAAAeAQAAAAAAAB5BAAAAAAAAAAAAAB5BAAAAAAAAHoEAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdwQAAAAAAAB3BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1032,
					1,
					"insert_completion",
					{
						"completion": "additionalParameters",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "additionalParameters"
					},
					"AgAAAHYEAAAAAAAAdgQAAAAAAAAEAAAAYWRkaXYEAAAAAAAAigQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAegQAAAAAAAB6BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1033,
					1,
					"insert",
					{
						"characters": " <-"
					},
					"AwAAAIoEAAAAAAAAiwQAAAAAAAAAAAAAiwQAAAAAAACMBAAAAAAAAAAAAACMBAAAAAAAAI0EAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAigQAAAAAAACKBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1034,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI0EAAAAAAAAjgQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjQQAAAAAAACNBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1042,
					1,
					"insert",
					{
						"characters": " #"
					},
					"AgAAACMEAAAAAAAAJAQAAAAAAAAAAAAAJAQAAAAAAAAlBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIwQAAAAAAAAjBAAAAAAAAP///////+9/"
				],
				[
					1043,
					1,
					"insert",
					{
						"characters": " isolate"
					},
					"CAAAACUEAAAAAAAAJgQAAAAAAAAAAAAAJgQAAAAAAAAnBAAAAAAAAAAAAAAnBAAAAAAAACgEAAAAAAAAAAAAACgEAAAAAAAAKQQAAAAAAAAAAAAAKQQAAAAAAAAqBAAAAAAAAAAAAAAqBAAAAAAAACsEAAAAAAAAAAAAACsEAAAAAAAALAQAAAAAAAAAAAAALAQAAAAAAAAtBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJQQAAAAAAAAlBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1044,
					1,
					"insert",
					{
						"characters": " them?"
					},
					"BgAAAC0EAAAAAAAALgQAAAAAAAAAAAAALgQAAAAAAAAvBAAAAAAAAAAAAAAvBAAAAAAAADAEAAAAAAAAAAAAADAEAAAAAAAAMQQAAAAAAAAAAAAAMQQAAAAAAAAyBAAAAAAAAAAAAAAyBAAAAAAAADMEAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALQQAAAAAAAAtBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1051,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAAJ4EAAAAAAAAnwQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngQAAAAAAACeBAAAAAAAAAAAAAAAWIRA"
				],
				[
					1053,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJ8EAAAAAAAAoQQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnwQAAAAAAACfBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1062,
					1,
					"insert",
					{
						"characters": "inp"
					},
					"AwAAAKAEAAAAAAAAoQQAAAAAAAAAAAAAoQQAAAAAAACiBAAAAAAAAAAAAACiBAAAAAAAAKMEAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAoAQAAAAAAACgBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1063,
					1,
					"insert_completion",
					{
						"completion": "input",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "input"
					},
					"AgAAAKAEAAAAAAAAoAQAAAAAAAADAAAAaW5woAQAAAAAAAClBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAowQAAAAAAACjBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1064,
					1,
					"insert",
					{
						"characters": "$HF"
					},
					"AwAAAKUEAAAAAAAApgQAAAAAAAAAAAAApgQAAAAAAACnBAAAAAAAAAAAAACnBAAAAAAAAKgEAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApQQAAAAAAAClBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1065,
					1,
					"left_delete",
					null,
					"AQAAAKcEAAAAAAAApwQAAAAAAAABAAAARg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqAQAAAAAAACoBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1066,
					1,
					"insert",
					{
						"characters": "G_"
					},
					"AgAAAKcEAAAAAAAAqAQAAAAAAAAAAAAAqAQAAAAAAACpBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApwQAAAAAAACnBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1068,
					1,
					"insert",
					{
						"characters": "H"
					},
					"AQAAAKkEAAAAAAAAqgQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqQQAAAAAAACpBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1070,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAKoEAAAAAAAAqwQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqgQAAAAAAACqBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1077,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKwEAAAAAAAArQQAAAAAAAAAAAAArQQAAAAAAACxBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArAQAAAAAAACsBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1080,
					1,
					"insert",
					{
						"characters": "npo"
					},
					"AwAAALEEAAAAAAAAsgQAAAAAAAAAAAAAsgQAAAAAAACzBAAAAAAAAAAAAACzBAAAAAAAALQEAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsQQAAAAAAACxBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1081,
					1,
					"insert_completion",
					{
						"completion": "npop",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "npop"
					},
					"AgAAALEEAAAAAAAAsQQAAAAAAAADAAAAbnBvsQQAAAAAAAC1BAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtAQAAAAAAAC0BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1082,
					1,
					"insert",
					{
						"characters": " <-"
					},
					"AwAAALUEAAAAAAAAtgQAAAAAAAAAAAAAtgQAAAAAAAC3BAAAAAAAAAAAAAC3BAAAAAAAALgEAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtQQAAAAAAAC1BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1083,
					1,
					"insert",
					{
						"characters": " input$H"
					},
					"CAAAALgEAAAAAAAAuQQAAAAAAAAAAAAAuQQAAAAAAAC6BAAAAAAAAAAAAAC6BAAAAAAAALsEAAAAAAAAAAAAALsEAAAAAAAAvAQAAAAAAAAAAAAAvAQAAAAAAAC9BAAAAAAAAAAAAAC9BAAAAAAAAL4EAAAAAAAAAAAAAL4EAAAAAAAAvwQAAAAAAAAAAAAAvwQAAAAAAADABAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuAQAAAAAAAC4BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1084,
					1,
					"insert",
					{
						"characters": "G_n"
					},
					"AwAAAMAEAAAAAAAAwQQAAAAAAAAAAAAAwQQAAAAAAADCBAAAAAAAAAAAAADCBAAAAAAAAMMEAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwAQAAAAAAADABAAAAAAAAAAAAAAAAPC/"
				],
				[
					1086,
					1,
					"insert_completion",
					{
						"completion": "HG_npop",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "HG_npop"
					},
					"AgAAAL8EAAAAAAAAvwQAAAAAAAAEAAAASEdfbr8EAAAAAAAAxgQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwwQAAAAAAADDBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1087,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMYEAAAAAAAAxwQAAAAAAAAAAAAAxwQAAAAAAADLBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxgQAAAAAAADGBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1089,
					1,
					"insert",
					{
						"characters": "ngen"
					},
					"BAAAAMsEAAAAAAAAzAQAAAAAAAAAAAAAzAQAAAAAAADNBAAAAAAAAAAAAADNBAAAAAAAAM4EAAAAAAAAAAAAAM4EAAAAAAAAzwQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAywQAAAAAAADLBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1090,
					1,
					"insert",
					{
						"characters": " <-"
					},
					"AwAAAM8EAAAAAAAA0AQAAAAAAAAAAAAA0AQAAAAAAADRBAAAAAAAAAAAAADRBAAAAAAAANIEAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzwQAAAAAAADPBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1091,
					1,
					"insert",
					{
						"characters": " input$"
					},
					"BwAAANIEAAAAAAAA0wQAAAAAAAAAAAAA0wQAAAAAAADUBAAAAAAAAAAAAADUBAAAAAAAANUEAAAAAAAAAAAAANUEAAAAAAAA1gQAAAAAAAAAAAAA1gQAAAAAAADXBAAAAAAAAAAAAADXBAAAAAAAANgEAAAAAAAAAAAAANgEAAAAAAAA2QQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0gQAAAAAAADSBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1092,
					1,
					"insert",
					{
						"characters": "HG_ng"
					},
					"BQAAANkEAAAAAAAA2gQAAAAAAAAAAAAA2gQAAAAAAADbBAAAAAAAAAAAAADbBAAAAAAAANwEAAAAAAAAAAAAANwEAAAAAAAA3QQAAAAAAAAAAAAA3QQAAAAAAADeBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2QQAAAAAAADZBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1093,
					1,
					"insert_completion",
					{
						"completion": "HG_ngen",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "HG_ngen"
					},
					"AgAAANkEAAAAAAAA2QQAAAAAAAAFAAAASEdfbmfZBAAAAAAAAOAEAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3gQAAAAAAADeBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1094,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOAEAAAAAAAA4QQAAAAAAAAAAAAA4QQAAAAAAADlBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4AQAAAAAAADgBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1097,
					1,
					"insert",
					{
						"characters": "topo"
					},
					"BAAAAOUEAAAAAAAA5gQAAAAAAAAAAAAA5gQAAAAAAADnBAAAAAAAAAAAAADnBAAAAAAAAOgEAAAAAAAAAAAAAOgEAAAAAAAA6QQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5QQAAAAAAADlBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1098,
					1,
					"insert",
					{
						"characters": " <-"
					},
					"AwAAAOkEAAAAAAAA6gQAAAAAAAAAAAAA6gQAAAAAAADrBAAAAAAAAAAAAADrBAAAAAAAAOwEAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6QQAAAAAAADpBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1099,
					1,
					"insert",
					{
						"characters": " input$"
					},
					"BwAAAOwEAAAAAAAA7QQAAAAAAAAAAAAA7QQAAAAAAADuBAAAAAAAAAAAAADuBAAAAAAAAO8EAAAAAAAAAAAAAO8EAAAAAAAA8AQAAAAAAAAAAAAA8AQAAAAAAADxBAAAAAAAAAAAAADxBAAAAAAAAPIEAAAAAAAAAAAAAPIEAAAAAAAA8wQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7AQAAAAAAADsBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1101,
					1,
					"insert",
					{
						"characters": "HG_T"
					},
					"BAAAAPMEAAAAAAAA9AQAAAAAAAAAAAAA9AQAAAAAAAD1BAAAAAAAAAAAAAD1BAAAAAAAAPYEAAAAAAAAAAAAAPYEAAAAAAAA9wQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8wQAAAAAAADzBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1102,
					1,
					"insert_completion",
					{
						"completion": "HG_topology",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "HG_topology"
					},
					"AgAAAPMEAAAAAAAA8wQAAAAAAAAEAAAASEdfVPMEAAAAAAAA/gQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9wQAAAAAAAD3BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1103,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAP4EAAAAAAAA/wQAAAAAAAAAAAAA/wQAAAAAAAADBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/gQAAAAAAAD+BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1106,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAAMFAAAAAAAABAUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAwUAAAAAAAADBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1108,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAAQFAAAAAAAABQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABAUAAAAAAAAEBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1110,
					1,
					"insert",
					{
						"characters": " <-"
					},
					"AwAAAAUFAAAAAAAABgUAAAAAAAAAAAAABgUAAAAAAAAHBQAAAAAAAAAAAAAHBQAAAAAAAAgFAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABQUAAAAAAAAFBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1111,
					1,
					"insert",
					{
						"characters": " input$H"
					},
					"CAAAAAgFAAAAAAAACQUAAAAAAAAAAAAACQUAAAAAAAAKBQAAAAAAAAAAAAAKBQAAAAAAAAsFAAAAAAAAAAAAAAsFAAAAAAAADAUAAAAAAAAAAAAADAUAAAAAAAANBQAAAAAAAAAAAAANBQAAAAAAAA4FAAAAAAAAAAAAAA4FAAAAAAAADwUAAAAAAAAAAAAADwUAAAAAAAAQBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACAUAAAAAAAAIBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1112,
					1,
					"insert",
					{
						"characters": "G_err"
					},
					"BQAAABAFAAAAAAAAEQUAAAAAAAAAAAAAEQUAAAAAAAASBQAAAAAAAAAAAAASBQAAAAAAABMFAAAAAAAAAAAAABMFAAAAAAAAFAUAAAAAAAAAAAAAFAUAAAAAAAAVBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEAUAAAAAAAAQBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1113,
					3,
					"left_delete",
					null,
					"AwAAABQFAAAAAAAAFAUAAAAAAAABAAAAchMFAAAAAAAAEwUAAAAAAAABAAAAchIFAAAAAAAAEgUAAAAAAAABAAAAZQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFQUAAAAAAAAVBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1114,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAABIFAAAAAAAAEwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEgUAAAAAAAASBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1117,
					1,
					"insert_completion",
					{
						"completion": "HG_thershold",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "HG_thershold"
					},
					"AgAAAA8FAAAAAAAADwUAAAAAAAAEAAAASEdfdA8FAAAAAAAAGwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEwUAAAAAAAATBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1122,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAADMFAAAAAAAANAUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMwUAAAAAAAAzBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1124,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAADQFAAAAAAAANQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANAUAAAAAAAA0BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1126,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADUFAAAAAAAANgUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANQUAAAAAAAA1BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1128,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADYFAAAAAAAANwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANgUAAAAAAAA2BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1130,
					1,
					"insert",
					{
						"characters": "ub,"
					},
					"AwAAADcFAAAAAAAAOAUAAAAAAAAAAAAAOAUAAAAAAAA5BQAAAAAAAAAAAAA5BQAAAAAAADoFAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANwUAAAAAAAA3BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1131,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADoFAAAAAAAAOwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOgUAAAAAAAA6BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1134,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABsFAAAAAAAAHAUAAAAAAAAAAAAAHAUAAAAAAAAgBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGwUAAAAAAAAbBQAAAAAAAAAAAAAAIGtA"
				],
				[
					1143,
					1,
					"insert",
					{
						"characters": "H"
					},
					"AgAAAEAFAAAAAAAAQQUAAAAAAAAAAAAAHAUAAAAAAAAcBQAAAAAAAAQAAAAgICAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQAUAAAAAAABABQAAAAAAAAAAAAAAAPC/"
				],
				[
					1145,
					1,
					"insert",
					{
						"characters": "G"
					},
					"AQAAAD0FAAAAAAAAPgUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPQUAAAAAAAA9BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1147,
					1,
					"insert",
					{
						"characters": "$"
					},
					"AQAAAD4FAAAAAAAAPwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPgUAAAAAAAA+BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1149,
					1,
					"insert",
					{
						"characters": "df,"
					},
					"AwAAAD8FAAAAAAAAQAUAAAAAAAAAAAAAQAUAAAAAAABBBQAAAAAAAAAAAABBBQAAAAAAAEIFAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPwUAAAAAAAA/BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1150,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEIFAAAAAAAAQwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQgUAAAAAAABCBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1152,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAEMFAAAAAAAARAUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQwUAAAAAAABDBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1154,
					1,
					"insert",
					{
						"characters": "ddi"
					},
					"AwAAAEQFAAAAAAAARQUAAAAAAAAAAAAARQUAAAAAAABGBQAAAAAAAAAAAABGBQAAAAAAAEcFAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARAUAAAAAAABEBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1155,
					1,
					"insert_completion",
					{
						"completion": "additionalParameters",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "additionalParameters"
					},
					"AgAAAEMFAAAAAAAAQwUAAAAAAAAEAAAAYWRkaUMFAAAAAAAAVwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARwUAAAAAAABHBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1156,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFcFAAAAAAAAWAUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVwUAAAAAAABXBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1157,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFgFAAAAAAAAWQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWAUAAAAAAABYBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1159,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAFkFAAAAAAAAWgUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWQUAAAAAAABZBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1161,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAFoFAAAAAAAAWwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWgUAAAAAAABaBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1163,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAAFsFAAAAAAAAXAUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWwUAAAAAAABbBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1165,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAFwFAAAAAAAAXQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXAUAAAAAAABcBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1167,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAF0FAAAAAAAAXgUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXQUAAAAAAABdBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1169,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAF4FAAAAAAAAXwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXgUAAAAAAABeBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1171,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAF8FAAAAAAAAYAUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXwUAAAAAAABfBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1173,
					1,
					"insert",
					{
						"characters": "gen,"
					},
					"BAAAAGAFAAAAAAAAYQUAAAAAAAAAAAAAYQUAAAAAAABiBQAAAAAAAAAAAABiBQAAAAAAAGMFAAAAAAAAAAAAAGMFAAAAAAAAZAUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYAUAAAAAAABgBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1174,
					1,
					"insert",
					{
						"characters": " topo"
					},
					"BQAAAGQFAAAAAAAAZQUAAAAAAAAAAAAAZQUAAAAAAABmBQAAAAAAAAAAAABmBQAAAAAAAGcFAAAAAAAAAAAAAGcFAAAAAAAAaAUAAAAAAAAAAAAAaAUAAAAAAABpBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZAUAAAAAAABkBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1175,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGkFAAAAAAAAagUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaQUAAAAAAABpBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1176,
					1,
					"left_delete",
					null,
					"AQAAAGkFAAAAAAAAaQUAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAagUAAAAAAABqBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1177,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGkFAAAAAAAAagUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaQUAAAAAAABpBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1178,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGoFAAAAAAAAawUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAagUAAAAAAABqBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1180,
					1,
					"insert",
					{
						"characters": "et"
					},
					"AgAAAGsFAAAAAAAAbAUAAAAAAAAAAAAAbAUAAAAAAABtBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAawUAAAAAAABrBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1195,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAG4FAAAAAAAAbwUAAAAAAAAAAAAAbwUAAAAAAABzBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbgUAAAAAAABuBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1197,
					1,
					"insert",
					{
						"characters": "show"
					},
					"BAAAAHMFAAAAAAAAdAUAAAAAAAAAAAAAdAUAAAAAAAB1BQAAAAAAAAAAAAB1BQAAAAAAAHYFAAAAAAAAAAAAAHYFAAAAAAAAdwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcwUAAAAAAABzBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1199,
					1,
					"insert_completion",
					{
						"completion": "showNotification",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "showNotification"
					},
					"AgAAAHMFAAAAAAAAcwUAAAAAAAAEAAAAc2hvd3MFAAAAAAAAgwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdwUAAAAAAAB3BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1200,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIMFAAAAAAAAhQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgwUAAAAAAACDBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1201,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAIQFAAAAAAAAhgUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhAUAAAAAAACEBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1202,
					1,
					"insert",
					{
						"characters": "test"
					},
					"BAAAAIUFAAAAAAAAhgUAAAAAAAAAAAAAhgUAAAAAAACHBQAAAAAAAAAAAACHBQAAAAAAAIgFAAAAAAAAAAAAAIgFAAAAAAAAiQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhQUAAAAAAACFBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1204,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAIoFAAAAAAAAiwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAigUAAAAAAACKBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1205,
					1,
					"insert",
					{
						"characters": " diur"
					},
					"BQAAAIsFAAAAAAAAjAUAAAAAAAAAAAAAjAUAAAAAAACNBQAAAAAAAAAAAACNBQAAAAAAAI4FAAAAAAAAAAAAAI4FAAAAAAAAjwUAAAAAAAAAAAAAjwUAAAAAAACQBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiwUAAAAAAACLBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1206,
					3,
					"left_delete",
					null,
					"AwAAAI8FAAAAAAAAjwUAAAAAAAABAAAAco4FAAAAAAAAjgUAAAAAAAABAAAAdY0FAAAAAAAAjQUAAAAAAAABAAAAaQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkAUAAAAAAACQBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1207,
					1,
					"insert",
					{
						"characters": "ura"
					},
					"AwAAAI0FAAAAAAAAjgUAAAAAAAAAAAAAjgUAAAAAAACPBQAAAAAAAAAAAACPBQAAAAAAAJAFAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjQUAAAAAAACNBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1208,
					1,
					"insert_completion",
					{
						"completion": "duration",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "duration"
					},
					"AgAAAIwFAAAAAAAAjAUAAAAAAAAEAAAAZHVyYYwFAAAAAAAAlAUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkAUAAAAAAACQBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1209,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAJQFAAAAAAAAlQUAAAAAAAAAAAAAlQUAAAAAAACWBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlAUAAAAAAACUBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1210,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAJYFAAAAAAAAlwUAAAAAAAAAAAAAlwUAAAAAAACYBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlgUAAAAAAACWBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1229,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJkFAAAAAAAAmgUAAAAAAAAAAAAAmgUAAAAAAACeBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmQUAAAAAAACZBQAAAAAAAAAAAAAAuIFA"
				],
				[
					1232,
					1,
					"insert",
					{
						"characters": "show"
					},
					"BAAAAJ4FAAAAAAAAnwUAAAAAAAAAAAAAnwUAAAAAAACgBQAAAAAAAAAAAACgBQAAAAAAAKEFAAAAAAAAAAAAAKEFAAAAAAAAogUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAngUAAAAAAACeBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1233,
					1,
					"insert_completion",
					{
						"completion": "showNotification",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "showNotification"
					},
					"AgAAAJ4FAAAAAAAAngUAAAAAAAAEAAAAc2hvd54FAAAAAAAArgUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAogUAAAAAAACiBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1234,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAK4FAAAAAAAAsAUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArgUAAAAAAACuBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1235,
					1,
					"insert",
					{
						"characters": "class"
					},
					"BQAAAK8FAAAAAAAAsAUAAAAAAAAAAAAAsAUAAAAAAACxBQAAAAAAAAAAAACxBQAAAAAAALIFAAAAAAAAAAAAALIFAAAAAAAAswUAAAAAAAAAAAAAswUAAAAAAAC0BQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArwUAAAAAAACvBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1236,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALQFAAAAAAAAtgUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtAUAAAAAAAC0BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1237,
					1,
					"insert",
					{
						"characters": "temp"
					},
					"BAAAALUFAAAAAAAAtgUAAAAAAAAAAAAAtgUAAAAAAAC3BQAAAAAAAAAAAAC3BQAAAAAAALgFAAAAAAAAAAAAALgFAAAAAAAAuQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtQUAAAAAAAC1BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1239,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAALoFAAAAAAAAuwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAugUAAAAAAAC6BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1240,
					1,
					"insert",
					{
						"characters": " dur"
					},
					"BAAAALsFAAAAAAAAvAUAAAAAAAAAAAAAvAUAAAAAAAC9BQAAAAAAAAAAAAC9BQAAAAAAAL4FAAAAAAAAAAAAAL4FAAAAAAAAvwUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuwUAAAAAAAC7BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1241,
					1,
					"insert_completion",
					{
						"completion": "duration",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "duration"
					},
					"AgAAALwFAAAAAAAAvAUAAAAAAAADAAAAZHVyvAUAAAAAAADEBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvwUAAAAAAAC/BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1242,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAMQFAAAAAAAAxQUAAAAAAAAAAAAAxQUAAAAAAADGBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxAUAAAAAAADEBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1243,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAMYFAAAAAAAAxwUAAAAAAAAAAAAAxwUAAAAAAADIBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxgUAAAAAAADGBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1255,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAACEFAAAAAAAAIgUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIQUAAAAAAAAhBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1266,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAJ8FAAAAAAAAoAUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnwUAAAAAAACfBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1297,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJwCAAAAAAAAnQIAAAAAAAAAAAAAnQIAAAAAAAChAgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnAIAAAAAAACcAgAAAAAAAAAAAAAAADxA"
				],
				[
					1300,
					1,
					"paste",
					null,
					"AQAAAJwCAAAAAAAAwgIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnAIAAAAAAACcAgAAAAAAAAAAAAAAADxA"
				],
				[
					1305,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANcCAAAAAAAA2AIAAAAAAAAAAAAA2AIAAAAAAADcAgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1wIAAAAAAADXAgAAAAAAAAAAAAAAYHJA"
				],
				[
					1307,
					1,
					"paste",
					null,
					"AQAAANwCAAAAAAAAAgMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3AIAAAAAAADcAgAAAAAAAAAAAAAAAPC/"
				],
				[
					1310,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABkDAAAAAAAAGgMAAAAAAAAAAAAAGgMAAAAAAAAeAwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGQMAAAAAAAAZAwAAAAAAAAAAAAAAYHJA"
				],
				[
					1312,
					1,
					"paste",
					null,
					"AQAAAB4DAAAAAAAARAMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHgMAAAAAAAAeAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1315,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFsDAAAAAAAAXAMAAAAAAAAAAAAAXAMAAAAAAABgAwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWwMAAAAAAABbAwAAAAAAAAAAAAAAYHJA"
				],
				[
					1317,
					1,
					"paste",
					null,
					"AQAAAGADAAAAAAAAhgMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYAMAAAAAAABgAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1320,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKEDAAAAAAAAogMAAAAAAAAAAAAAogMAAAAAAACmAwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAoQMAAAAAAAChAwAAAAAAAAAAAAAAYHJA"
				],
				[
					1321,
					1,
					"paste",
					null,
					"AQAAAKYDAAAAAAAAzAMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApgMAAAAAAACmAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1323,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOgDAAAAAAAA6QMAAAAAAAAAAAAA6QMAAAAAAADtAwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6AMAAAAAAADoAwAAAAAAAAAAAAAAYHJA"
				],
				[
					1325,
					1,
					"paste",
					null,
					"AQAAAO0DAAAAAAAAEwQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7QMAAAAAAADtAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1329,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAALICAAAAAAAAswIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsgIAAAAAAACyAgAAAAAAAAAAAAAAwGZA"
				],
				[
					1335,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAPMCAAAAAAAA9AIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8wIAAAAAAADzAgAAAAAAAAAAAAAAAPC/"
				],
				[
					1340,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAADYDAAAAAAAANwMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANgMAAAAAAAA2AwAAAAAAAAAAAAAAAPC/"
				],
				[
					1345,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAHkDAAAAAAAAegMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAeQMAAAAAAAB5AwAAAAAAAAAAAAAAAPC/"
				],
				[
					1349,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAMADAAAAAAAAwQMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwAMAAAAAAADAAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1354,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAAgEAAAAAAAACQQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACAQAAAAAAAAIBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1358,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADIEAAAAAAAAMwQAAAAAAAAAAAAAMwQAAAAAAAA3BAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMgQAAAAAAAAyBAAAAAAAAAAAAAAAoGdA"
				],
				[
					1360,
					1,
					"paste",
					null,
					"AQAAADcEAAAAAAAAXQQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANwQAAAAAAAA3BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1366,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAE0EAAAAAAAATgQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATQQAAAAAAABNBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1372,
					1,
					"left_delete",
					null,
					"AQAAAE0EAAAAAAAATQQAAAAAAAABAAAANQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATgQAAAAAAABOBAAAAAAAAAAAAAAAoGdA"
				],
				[
					1373,
					1,
					"insert",
					{
						"characters": "7"
					},
					"AQAAAE0EAAAAAAAATgQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATQQAAAAAAABNBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1375,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHcEAAAAAAAAeAQAAAAAAAAAAAAAeAQAAAAAAAB8BAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdwQAAAAAAAB3BAAAAAAAAAAAAAAAoGdA"
				],
				[
					1376,
					1,
					"paste",
					null,
					"AQAAAHwEAAAAAAAAogQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfAQAAAAAAAB8BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1382,
					1,
					"insert",
					{
						"characters": "9"
					},
					"AQAAAJIEAAAAAAAAkwQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkgQAAAAAAACSBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1384,
					1,
					"left_delete",
					null,
					"AQAAAJIEAAAAAAAAkgQAAAAAAAABAAAAOQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkwQAAAAAAACTBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1385,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AQAAAJIEAAAAAAAAkwQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkgQAAAAAAACSBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1387,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALwEAAAAAAAAvQQAAAAAAAAAAAAAvQQAAAAAAADBBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvAQAAAAAAAC8BAAAAAAAAAAAAAAAoGdA"
				],
				[
					1388,
					1,
					"paste",
					null,
					"AQAAAMEEAAAAAAAA5wQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwQQAAAAAAADBBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1395,
					1,
					"insert",
					{
						"characters": "9"
					},
					"AQAAANcEAAAAAAAA2AQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1wQAAAAAAADXBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1399,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAEFAAAAAAAAAgUAAAAAAAAAAAAAAgUAAAAAAAAGBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAQUAAAAAAAABBQAAAAAAAAAAAAAAoGdA"
				],
				[
					1401,
					1,
					"paste",
					null,
					"AQAAAAYFAAAAAAAALAUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABgUAAAAAAAAGBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1406,
					1,
					"insert",
					{
						"characters": "10"
					},
					"AgAAABwFAAAAAAAAHQUAAAAAAAAAAAAAHQUAAAAAAAAeBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHAUAAAAAAAAcBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1419,
					1,
					"left_delete",
					null,
					"AQAAAOUDAAAAAAAA5QMAAAAAAAABAAAAZQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5gMAAAAAAADmAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1422,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAOYDAAAAAAAA5wMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5gMAAAAAAADmAwAAAAAAAAAAAAAAAPC/"
				],
				[
					1430,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAJcCAAAAAAAAmAIAAAAAAAAAAAAAmAIAAAAAAACaAgAAAAAAAAAAAACaAgAAAAAAAJwCAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlwIAAAAAAACXAgAAAAAAAP///////+9/"
				],
				[
					1433,
					1,
					"insert",
					{
						"characters": "req"
					},
					"AwAAAJwCAAAAAAAAnQIAAAAAAAAAAAAAnQIAAAAAAACeAgAAAAAAAAAAAACeAgAAAAAAAJ8CAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnAIAAAAAAACcAgAAAAAAAAAAAAAAAPC/"
				],
				[
					1434,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJ8CAAAAAAAAoQIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnwIAAAAAAACfAgAAAAAAAAAAAAAAAPC/"
				],
				[
					1436,
					1,
					"insert",
					{
						"characters": "!"
					},
					"AQAAAKACAAAAAAAAoQIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAoAIAAAAAAACgAgAAAAAAAAAAAAAAAPC/"
				],
				[
					1438,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAKECAAAAAAAAogIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAoQIAAAAAAAChAgAAAAAAAAAAAAAAAPC/"
				],
				[
					1440,
					1,
					"insert",
					{
						"characters": "s.null"
					},
					"BgAAAKICAAAAAAAAowIAAAAAAAAAAAAAowIAAAAAAACkAgAAAAAAAAAAAACkAgAAAAAAAKUCAAAAAAAAAAAAAKUCAAAAAAAApgIAAAAAAAAAAAAApgIAAAAAAACnAgAAAAAAAAAAAACnAgAAAAAAAKgCAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAogIAAAAAAACiAgAAAAAAAAAAAAAAAPC/"
				],
				[
					1441,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKgCAAAAAAAAqgIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqAIAAAAAAACoAgAAAAAAAAAAAAAAAPC/"
				],
				[
					1442,
					1,
					"insert",
					{
						"characters": "HG$df"
					},
					"BQAAAKkCAAAAAAAAqgIAAAAAAAAAAAAAqgIAAAAAAACrAgAAAAAAAAAAAACrAgAAAAAAAKwCAAAAAAAAAAAAAKwCAAAAAAAArQIAAAAAAAAAAAAArQIAAAAAAACuAgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqQIAAAAAAACpAgAAAAAAAAAAAAAAAPC/"
				],
				[
					1492,
					4,
					"left_delete",
					null,
					"BAAAAB8FAAAAAAAAHwUAAAAAAAAoAAAAc2hvd05vdGlmaWNhdGlvbigidGVzdDEwIiwgZHVyYXRpb24gPSAwKR0FAAAAAAAAHQUAAAAAAAACAAAAICAbBQAAAAAAABsFAAAAAAAAAgAAACAgGgUAAAAAAAAaBQAAAAAAAAEAAAAK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARwUAAAAAAAAfBQAAAAAAAAAAAAAAADxA"
				],
				[
					1498,
					4,
					"left_delete",
					null,
					"BAAAANoEAAAAAAAA2gQAAAAAAAAnAAAAc2hvd05vdGlmaWNhdGlvbigidGVzdDkiLCBkdXJhdGlvbiA9IDAp2AQAAAAAAADYBAAAAAAAAAIAAAAgINYEAAAAAAAA1gQAAAAAAAACAAAAICDVBAAAAAAAANUEAAAAAAAAAQAAAAo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2gQAAAAAAAABBQAAAAAAAP///////+9/"
				],
				[
					1503,
					4,
					"left_delete",
					null,
					"BAAAAJUEAAAAAAAAlQQAAAAAAAAnAAAAc2hvd05vdGlmaWNhdGlvbigidGVzdDgiLCBkdXJhdGlvbiA9IDApkwQAAAAAAACTBAAAAAAAAAIAAAAgIJEEAAAAAAAAkQQAAAAAAAACAAAAICCQBAAAAAAAAJAEAAAAAAAAAQAAAAo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlQQAAAAAAAC8BAAAAAAAAP///////+9/"
				],
				[
					1509,
					1,
					"vi_eval",
					{
						"action_args":
						{
						},
						"action_command": "vi_delete",
						"motion_args":
						{
							"to": "line"
						},
						"motion_clip_to_line": false,
						"motion_command": "expand_selection",
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"AQAAAEwEAAAAAAAATAQAAAAAAAAsAAAAICAgIHNob3dOb3RpZmljYXRpb24oInRlc3Q3IiwgZHVyYXRpb24gPSAwKQo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYwQAAAAAAABjBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1513,
					1,
					"vi_eval",
					{
						"action_args":
						{
						},
						"action_command": "vi_delete",
						"motion_args":
						{
							"to": "line"
						},
						"motion_clip_to_line": false,
						"motion_command": "expand_selection",
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"AQAAAAcEAAAAAAAABwQAAAAAAAAsAAAAICAgIHNob3dOb3RpZmljYXRpb24oInRlc3Q2IiwgZHVyYXRpb24gPSAwKQo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABwQAAAAAAAAHBAAAAAAAAAAAAAAAAAAA"
				],
				[
					1517,
					1,
					"vi_eval",
					{
						"action_args":
						{
						},
						"action_command": "vi_delete",
						"motion_args":
						{
							"to": "line"
						},
						"motion_clip_to_line": false,
						"motion_command": "expand_selection",
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"AQAAAL8DAAAAAAAAvwMAAAAAAAAsAAAAICAgIHNob3dOb3RpZmljYXRpb24oInRlc3Q1IiwgZHVyYXRpb24gPSAwKQo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvwMAAAAAAAC/AwAAAAAAAAAAAAAAAAAA"
				],
				[
					1520,
					1,
					"vi_eval",
					{
						"action_args":
						{
						},
						"action_command": "vi_delete",
						"motion_args":
						{
							"to": "line"
						},
						"motion_clip_to_line": false,
						"motion_command": "expand_selection",
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"AQAAAHgDAAAAAAAAeAMAAAAAAAAsAAAAICAgIHNob3dOb3RpZmljYXRpb24oInRlc3Q0IiwgZHVyYXRpb24gPSAwKQo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAeAMAAAAAAAB4AwAAAAAAAAAAAAAAAAAA"
				],
				[
					1524,
					1,
					"vi_eval",
					{
						"action_args":
						{
						},
						"action_command": "vi_delete",
						"motion_args":
						{
							"to": "line"
						},
						"motion_clip_to_line": false,
						"motion_command": "expand_selection",
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"AQAAADUDAAAAAAAANQMAAAAAAAAsAAAAICAgIHNob3dOb3RpZmljYXRpb24oInRlc3QzIiwgZHVyYXRpb24gPSAwKQo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANQMAAAAAAAA1AwAAAAAAAAAAAAAAAAAA"
				],
				[
					1527,
					1,
					"vi_eval",
					{
						"action_args":
						{
						},
						"action_command": "vi_delete",
						"motion_args":
						{
							"to": "line"
						},
						"motion_clip_to_line": false,
						"motion_command": "expand_selection",
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"AQAAAPICAAAAAAAA8gIAAAAAAAAsAAAAICAgIHNob3dOb3RpZmljYXRpb24oInRlc3QyIiwgZHVyYXRpb24gPSAwKQo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8gIAAAAAAADyAgAAAAAAAAAAAAAAAAAA"
				],
				[
					1531,
					1,
					"vi_eval",
					{
						"action_args":
						{
						},
						"action_command": "vi_delete",
						"motion_args":
						{
							"to": "line"
						},
						"motion_clip_to_line": false,
						"motion_command": "expand_selection",
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"AQAAALECAAAAAAAAsQIAAAAAAAAsAAAAICAgIHNob3dOb3RpZmljYXRpb24oInRlc3QxIiwgZHVyYXRpb24gPSAwKQo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsQIAAAAAAACxAgAAAAAAAAAAAAAAAAAA"
				],
				[
					1544,
					1,
					"right_delete",
					null,
					"AQAAADoFAAAAAAAAOgUAAAAAAAABAAAAIw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOgUAAAAAAAA6BQAAAAAAAAAAAAAAAPC/"
				],
				[
					1547,
					1,
					"left_delete",
					null,
					"AQAAADQFAAAAAAAANAUAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANQUAAAAAAAA1BQAAAAAAAAAAAAAAADxA"
				],
				[
					1555,
					1,
					"right_delete",
					null,
					"AQAAALYFAAAAAAAAtgUAAAAAAAABAAAAIw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtgUAAAAAAAC2BQAAAAAAAAAAAAAAADxA"
				],
				[
					1568,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAC0AAAAAAAAALwAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALQAAAAAAAAAtAAAAAAAAAAAAAAAAAAAA"
				],
				[
					1570,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAC8AAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAyAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALwAAAAAAAAAvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1573,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAADIAAAAAAAAAMwAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMgAAAAAAAAAyAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1575,
					1,
					"insert",
					{
						"characters": "soVals"
					},
					"BgAAADMAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA1AAAAAAAAAAAAAAA1AAAAAAAAADYAAAAAAAAAAAAAADYAAAAAAAAANwAAAAAAAAAAAAAANwAAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADkAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMwAAAAAAAAAzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1576,
					1,
					"insert",
					{
						"characters": " <-"
					},
					"AwAAADkAAAAAAAAAOgAAAAAAAAAAAAAAOgAAAAAAAAA7AAAAAAAAAAAAAAA7AAAAAAAAADwAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOQAAAAAAAAA5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					1577,
					1,
					"insert",
					{
						"characters": " reac"
					},
					"BQAAADwAAAAAAAAAPQAAAAAAAAAAAAAAPQAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAAAAAAD8AAAAAAAAAAAAAAD8AAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABBAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPAAAAAAAAAA8AAAAAAAAAAAAAAAAAPC/"
				],
				[
					1578,
					1,
					"insert_completion",
					{
						"completion": "reactiveValues",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "reactiveValues"
					},
					"AgAAAD0AAAAAAAAAPQAAAAAAAAAEAAAAcmVhYz0AAAAAAAAASwAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQQAAAAAAAABBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1579,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAEsAAAAAAAAATAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASwAAAAAAAABLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1580,
					1,
					"left_delete",
					null,
					"AQAAAEsAAAAAAAAASwAAAAAAAAABAAAAKQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATAAAAAAAAABMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1581,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEsAAAAAAAAATQAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASwAAAAAAAABLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1582,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"CAAAAEwAAAAAAAAATQAAAAAAAAAAAAAATQAAAAAAAABPAAAAAAAAAAAAAABPAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAUgAAAAAAAAAAAAAATQAAAAAAAABNAAAAAAAAAAIAAAAgIE4AAAAAAAAATgAAAAAAAAACAAAAICBOAAAAAAAAAFIAAAAAAAAAAAAAAE0AAAAAAAAAUQAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATAAAAAAAAABMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1585,
					1,
					"left_delete",
					null,
					"AgAAAFQAAAAAAAAAVAAAAAAAAAACAAAAICBNAAAAAAAAAE0AAAAAAAAABAAAACAgICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVgAAAAAAAABWAAAAAAAAAAAAAAAAADxA"
				],
				[
					1587,
					1,
					"reindent",
					null,
					"AQAAAE0AAAAAAAAAUQAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATQAAAAAAAABNAAAAAAAAAAAAAAAAACxA"
				],
				[
					1589,
					1,
					"insert",
					{
						"characters": "iter"
					},
					"BAAAAFEAAAAAAAAAUgAAAAAAAAAAAAAAUgAAAAAAAABTAAAAAAAAAAAAAABTAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAVQAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUQAAAAAAAABRAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1590,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAFUAAAAAAAAAVgAAAAAAAAAAAAAAVgAAAAAAAABXAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVQAAAAAAAABVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1591,
					1,
					"insert",
					{
						"characters": " NULL,"
					},
					"BgAAAFcAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABZAAAAAAAAAAAAAABZAAAAAAAAAFoAAAAAAAAAAAAAAFoAAAAAAAAAWwAAAAAAAAAAAAAAWwAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAAAF0AAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVwAAAAAAAABXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1592,
					1,
					"insert",
					{
						"characters": " gl"
					},
					"AwAAAF0AAAAAAAAAXgAAAAAAAAAAAAAAXgAAAAAAAABfAAAAAAAAAAAAAABfAAAAAAAAAGAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXQAAAAAAAABdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1593,
					1,
					"insert",
					{
						"characters": "obal_"
					},
					"BQAAAGAAAAAAAAAAYQAAAAAAAAAAAAAAYQAAAAAAAABiAAAAAAAAAAAAAABiAAAAAAAAAGMAAAAAAAAAAAAAAGMAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAABlAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYAAAAAAAAABgAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1595,
					1,
					"insert_completion",
					{
						"completion": "global_best",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "global_best"
					},
					"AgAAAF4AAAAAAAAAXgAAAAAAAAAHAAAAZ2xvYmFsX14AAAAAAAAAaQAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZQAAAAAAAABlAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1597,
					1,
					"insert",
					{
						"characters": "_v"
					},
					"AgAAAGkAAAAAAAAAagAAAAAAAAAAAAAAagAAAAAAAABrAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaQAAAAAAAABpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1598,
					1,
					"insert_completion",
					{
						"completion": "global_best_vec",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "global_best_vec"
					},
					"AgAAAF4AAAAAAAAAXgAAAAAAAAANAAAAZ2xvYmFsX2Jlc3Rfdl4AAAAAAAAAbQAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAawAAAAAAAABrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1599,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAG0AAAAAAAAAbgAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbQAAAAAAAABtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1600,
					1,
					"insert",
					{
						"characters": " glob"
					},
					"BQAAAG4AAAAAAAAAbwAAAAAAAAAAAAAAbwAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAHEAAAAAAAAAAAAAAHEAAAAAAAAAcgAAAAAAAAAAAAAAcgAAAAAAAABzAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbgAAAAAAAABuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1601,
					1,
					"insert",
					{
						"characters": "al_best"
					},
					"BwAAAHMAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB1AAAAAAAAAAAAAAB1AAAAAAAAAHYAAAAAAAAAAAAAAHYAAAAAAAAAdwAAAAAAAAAAAAAAdwAAAAAAAAB4AAAAAAAAAAAAAAB4AAAAAAAAAHkAAAAAAAAAAAAAAHkAAAAAAAAAegAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcwAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1602,
					1,
					"insert",
					{
						"characters": "_we"
					},
					"AwAAAHoAAAAAAAAAewAAAAAAAAAAAAAAewAAAAAAAAB8AAAAAAAAAAAAAAB8AAAAAAAAAH0AAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAegAAAAAAAAB6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					1603,
					2,
					"left_delete",
					null,
					"AgAAAHwAAAAAAAAAfAAAAAAAAAABAAAAZXsAAAAAAAAAewAAAAAAAAABAAAAdw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfQAAAAAAAAB9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					1604,
					1,
					"insert",
					{
						"characters": "er"
					},
					"AgAAAHsAAAAAAAAAfAAAAAAAAAAAAAAAfAAAAAAAAAB9AAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAewAAAAAAAAB7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					1605,
					1,
					"insert_completion",
					{
						"completion": "global_best_error",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "global_best_error"
					},
					"AgAAAG8AAAAAAAAAbwAAAAAAAAAOAAAAZ2xvYmFsX2Jlc3RfZXJvAAAAAAAAAIAAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfQAAAAAAAAB9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					1607,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIAAAAAAAAAAgQAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1609,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAIEAAAAAAAAAggAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgQAAAAAAAACBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1611,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIIAAAAAAAAAgwAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAggAAAAAAAACCAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1613,
					1,
					"insert",
					{
						"characters": "NULL"
					},
					"BAAAAIMAAAAAAAAAhAAAAAAAAAAAAAAAhAAAAAAAAACFAAAAAAAAAAAAAACFAAAAAAAAAIYAAAAAAAAAAAAAAIYAAAAAAAAAhwAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgwAAAAAAAACDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1618,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG0AAAAAAAAAbgAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbQAAAAAAAABtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1620,
					1,
					"paste",
					null,
					"AQAAAG4AAAAAAAAAdQAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbgAAAAAAAABuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1627,
					1,
					"right_delete",
					null,
					"AQAAAG0AAAAAAAAAbQAAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbQAAAAAAAABtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1643,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAABsGAAAAAAAAHAYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGwYAAAAAAAAbBgAAAAAAAAAAAAAAADxA"
				],
				[
					1679,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAEwGAAAAAAAATQYAAAAAAAAAAAAATQYAAAAAAABPBgAAAAAAAAAAAABPBgAAAAAAAFAGAAAAAAAAAAAAAFAGAAAAAAAAUgYAAAAAAAAAAAAATQYAAAAAAABNBgAAAAAAAAIAAAAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATAYAAAAAAABMBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1681,
					1,
					"insert",
					{
						"characters": "renderTe"
					},
					"CAAAAFAGAAAAAAAAUQYAAAAAAAAAAAAAUQYAAAAAAABSBgAAAAAAAAAAAABSBgAAAAAAAFMGAAAAAAAAAAAAAFMGAAAAAAAAVAYAAAAAAAAAAAAAVAYAAAAAAABVBgAAAAAAAAAAAABVBgAAAAAAAFYGAAAAAAAAAAAAAFYGAAAAAAAAVwYAAAAAAAAAAAAAVwYAAAAAAABYBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUAYAAAAAAABQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1682,
					1,
					"insert",
					{
						"characters": "xt"
					},
					"AgAAAFgGAAAAAAAAWQYAAAAAAAAAAAAAWQYAAAAAAABaBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWAYAAAAAAABYBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1683,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFoGAAAAAAAAXAYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWgYAAAAAAABaBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1691,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAFsGAAAAAAAAXQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWwYAAAAAAABbBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1693,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAFwGAAAAAAAAXQYAAAAAAAAAAAAAXQYAAAAAAABfBgAAAAAAAAAAAABfBgAAAAAAAGAGAAAAAAAAAAAAAGAGAAAAAAAAYgYAAAAAAAAAAAAAXQYAAAAAAABdBgAAAAAAAAIAAAAgIF0GAAAAAAAAYQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXAYAAAAAAABcBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1697,
					1,
					"insert",
					{
						"characters": "output"
					},
					"BwAAAFAGAAAAAAAAUQYAAAAAAAAAAAAAXgYAAAAAAABeBgAAAAAAAAQAAAAgICAgUQYAAAAAAABSBgAAAAAAAAAAAABSBgAAAAAAAFMGAAAAAAAAAAAAAFMGAAAAAAAAVAYAAAAAAAAAAAAAVAYAAAAAAABVBgAAAAAAAAAAAABVBgAAAAAAAFYGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUAYAAAAAAABQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1698,
					1,
					"insert",
					{
						"characters": " <-"
					},
					"AwAAAFYGAAAAAAAAVwYAAAAAAAAAAAAAVwYAAAAAAABYBgAAAAAAAAAAAABYBgAAAAAAAFkGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVgYAAAAAAABWBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1699,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFkGAAAAAAAAWgYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWQYAAAAAAABZBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1701,
					4,
					"left_delete",
					null,
					"BAAAAFkGAAAAAAAAWQYAAAAAAAABAAAAIFgGAAAAAAAAWAYAAAAAAAABAAAALVcGAAAAAAAAVwYAAAAAAAABAAAAPFYGAAAAAAAAVgYAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWgYAAAAAAABaBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1702,
					1,
					"insert",
					{
						"characters": "$Iter"
					},
					"BQAAAFYGAAAAAAAAVwYAAAAAAAAAAAAAVwYAAAAAAABYBgAAAAAAAAAAAABYBgAAAAAAAFkGAAAAAAAAAAAAAFkGAAAAAAAAWgYAAAAAAAAAAAAAWgYAAAAAAABbBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVgYAAAAAAABWBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1703,
					1,
					"insert",
					{
						"characters": " <-"
					},
					"AwAAAFsGAAAAAAAAXAYAAAAAAAAAAAAAXAYAAAAAAABdBgAAAAAAAAAAAABdBgAAAAAAAF4GAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWwYAAAAAAABbBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1704,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAF4GAAAAAAAAXwYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXgYAAAAAAABeBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1706,
					1,
					"reindent",
					null,
					"AQAAAGwGAAAAAAAAcAYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbAYAAAAAAABsBgAAAAAAAAAAAAAAwF1A"
				],
				[
					1708,
					1,
					"insert",
					{
						"characters": "req/"
					},
					"BAAAAHAGAAAAAAAAcQYAAAAAAAAAAAAAcQYAAAAAAAByBgAAAAAAAAAAAAByBgAAAAAAAHMGAAAAAAAAAAAAAHMGAAAAAAAAdAYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcAYAAAAAAABwBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1709,
					1,
					"left_delete",
					null,
					"AQAAAHMGAAAAAAAAcwYAAAAAAAABAAAALw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdAYAAAAAAAB0BgAAAAAAAAAAAAAAAPC/"
				],
				[
					1710,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHMGAAAAAAAAdQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcwYAAAAAAABzBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1712,
					1,
					"insert",
					{
						"characters": "!"
					},
					"AQAAAHQGAAAAAAAAdQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdAYAAAAAAAB0BgAAAAAAAAAAAAAAAPC/"
				],
				[
					1714,
					1,
					"insert",
					{
						"characters": "is.null"
					},
					"BwAAAHUGAAAAAAAAdgYAAAAAAAAAAAAAdgYAAAAAAAB3BgAAAAAAAAAAAAB3BgAAAAAAAHgGAAAAAAAAAAAAAHgGAAAAAAAAeQYAAAAAAAAAAAAAeQYAAAAAAAB6BgAAAAAAAAAAAAB6BgAAAAAAAHsGAAAAAAAAAAAAAHsGAAAAAAAAfAYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdQYAAAAAAAB1BgAAAAAAAAAAAAAAAPC/"
				],
				[
					1715,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHwGAAAAAAAAfgYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfAYAAAAAAAB8BgAAAAAAAAAAAAAAAPC/"
				],
				[
					1716,
					1,
					"insert",
					{
						"characters": "psoVals"
					},
					"BwAAAH0GAAAAAAAAfgYAAAAAAAAAAAAAfgYAAAAAAAB/BgAAAAAAAAAAAAB/BgAAAAAAAIAGAAAAAAAAAAAAAIAGAAAAAAAAgQYAAAAAAAAAAAAAgQYAAAAAAACCBgAAAAAAAAAAAACCBgAAAAAAAIMGAAAAAAAAAAAAAIMGAAAAAAAAhAYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfQYAAAAAAAB9BgAAAAAAAAAAAAAAAPC/"
				],
				[
					1718,
					1,
					"insert",
					{
						"characters": "$"
					},
					"AQAAAIQGAAAAAAAAhQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhAYAAAAAAACEBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1720,
					1,
					"insert",
					{
						"characters": "iter"
					},
					"BAAAAIUGAAAAAAAAhgYAAAAAAAAAAAAAhgYAAAAAAACHBgAAAAAAAAAAAACHBgAAAAAAAIgGAAAAAAAAAAAAAIgGAAAAAAAAiQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhQYAAAAAAACFBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1731,
					1,
					"cut",
					null,
					"AQAAAFAGAAAAAAAAUAYAAAAAAABAAAAAb3V0cHV0JEl0ZXIgPC0gcmVuZGVyVGV4dCh7CiAgICByZXEoIWlzLm51bGwocHNvVmFscyRpdGVyKSkKICB9KQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkAYAAAAAAABQBgAAAAAAAAAAAAAAACxA"
				],
				[
					1732,
					3,
					"left_delete",
					null,
					"AwAAAE4GAAAAAAAATgYAAAAAAAACAAAAICBNBgAAAAAAAE0GAAAAAAAAAQAAAApMBgAAAAAAAEwGAAAAAAAAAQAAAAo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUAYAAAAAAABQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1738,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJQAAAAAAAAAlQAAAAAAAAAAAAAAlQAAAAAAAACXAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlAAAAAAAAACUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1740,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAJcAAAAAAAAAmAAAAAAAAAAAAAAAmAAAAAAAAACaAAAAAAAAAAAAAACVAAAAAAAAAJUAAAAAAAAAAgAAACAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlwAAAAAAAACXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1742,
					1,
					"paste",
					null,
					"AQAAAJgAAAAAAAAA2AAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmAAAAAAAAACYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1748,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANMAAAAAAAAA1AAAAAAAAAAAAAAA1AAAAAAAAADYAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0wAAAAAAAADTAAAAAAAAAP///////+9/"
				],
				[
					1751,
					1,
					"insert",
					{
						"characters": "as.character"
					},
					"DAAAANgAAAAAAAAA2QAAAAAAAAAAAAAA2QAAAAAAAADaAAAAAAAAAAAAAADaAAAAAAAAANsAAAAAAAAAAAAAANsAAAAAAAAA3AAAAAAAAAAAAAAA3AAAAAAAAADdAAAAAAAAAAAAAADdAAAAAAAAAN4AAAAAAAAAAAAAAN4AAAAAAAAA3wAAAAAAAAAAAAAA3wAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAOEAAAAAAAAAAAAAAOEAAAAAAAAA4gAAAAAAAAAAAAAA4gAAAAAAAADjAAAAAAAAAAAAAADjAAAAAAAAAOQAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2AAAAAAAAADYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1752,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOQAAAAAAAAA5gAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5AAAAAAAAADkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1753,
					1,
					"insert",
					{
						"characters": "psoV"
					},
					"BAAAAOUAAAAAAAAA5gAAAAAAAAAAAAAA5gAAAAAAAADnAAAAAAAAAAAAAADnAAAAAAAAAOgAAAAAAAAAAAAAAOgAAAAAAAAA6QAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5QAAAAAAAADlAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1754,
					1,
					"insert_completion",
					{
						"completion": "psoVals",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "psoVals"
					},
					"AgAAAOUAAAAAAAAA5QAAAAAAAAAEAAAAcHNvVuUAAAAAAAAA7AAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6QAAAAAAAADpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1755,
					1,
					"insert",
					{
						"characters": "$iter"
					},
					"BQAAAOwAAAAAAAAA7QAAAAAAAAAAAAAA7QAAAAAAAADuAAAAAAAAAAAAAADuAAAAAAAAAO8AAAAAAAAAAAAAAO8AAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAADxAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7AAAAAAAAADsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1776,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAE0GAAAAAAAATgYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATQYAAAAAAABNBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1778,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAE4GAAAAAAAATwYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATgYAAAAAAABOBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1780,
					1,
					"insert",
					{
						"characters": "F"
					},
					"AQAAAE8GAAAAAAAAUAYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATwYAAAAAAABPBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1782,
					1,
					"insert",
					{
						"characters": "A"
					},
					"AQAAAFAGAAAAAAAAUQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUAYAAAAAAABQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1784,
					1,
					"insert",
					{
						"characters": "LSE,"
					},
					"BAAAAFEGAAAAAAAAUgYAAAAAAAAAAAAAUgYAAAAAAABTBgAAAAAAAAAAAABTBgAAAAAAAFQGAAAAAAAAAAAAAFQGAAAAAAAAVQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUQYAAAAAAABRBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1785,
					1,
					"insert",
					{
						"characters": " TRUE"
					},
					"BQAAAFUGAAAAAAAAVgYAAAAAAAAAAAAAVgYAAAAAAABXBgAAAAAAAAAAAABXBgAAAAAAAFgGAAAAAAAAAAAAAFgGAAAAAAAAWQYAAAAAAAAAAAAAWQYAAAAAAABaBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVQYAAAAAAABVBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1796,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAAEGAAAAAAAAAgYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAQYAAAAAAAABBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1820,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALYEAAAAAAAAtwQAAAAAAAAAAAAAtwQAAAAAAAC7BAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtgQAAAAAAAC2BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1823,
					1,
					"insert",
					{
						"characters": "sho"
					},
					"AwAAALsEAAAAAAAAvAQAAAAAAAAAAAAAvAQAAAAAAAC9BAAAAAAAAAAAAAC9BAAAAAAAAL4EAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuwQAAAAAAAC7BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1824,
					1,
					"insert_completion",
					{
						"completion": "showNotification",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "showNotification"
					},
					"AgAAALsEAAAAAAAAuwQAAAAAAAADAAAAc2hvuwQAAAAAAADLBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvgQAAAAAAAC+BAAAAAAAAAAAAAAAAPC/"
				],
				[
					1825,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMsEAAAAAAAAzQQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAywQAAAAAAADLBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1826,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAMwEAAAAAAAAzgQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzAQAAAAAAADMBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1827,
					1,
					"insert",
					{
						"characters": "test"
					},
					"BAAAAM0EAAAAAAAAzgQAAAAAAAAAAAAAzgQAAAAAAADPBAAAAAAAAAAAAADPBAAAAAAAANAEAAAAAAAAAAAAANAEAAAAAAAA0QQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzQQAAAAAAADNBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1829,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANIEAAAAAAAA0wQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0gQAAAAAAADSBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1830,
					1,
					"insert",
					{
						"characters": " du"
					},
					"AwAAANMEAAAAAAAA1AQAAAAAAAAAAAAA1AQAAAAAAADVBAAAAAAAAAAAAADVBAAAAAAAANYEAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0wQAAAAAAADTBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1831,
					1,
					"insert_completion",
					{
						"completion": "duration",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "duration"
					},
					"AgAAANQEAAAAAAAA1AQAAAAAAAACAAAAZHXUBAAAAAAAANwEAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1gQAAAAAAADWBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1832,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAANwEAAAAAAAA3QQAAAAAAAAAAAAA3QQAAAAAAADeBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3AQAAAAAAADcBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1833,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAN4EAAAAAAAA3wQAAAAAAAAAAAAA3wQAAAAAAADgBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3gQAAAAAAADeBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1853,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPcDAAAAAAAA+AMAAAAAAAAAAAAA+AMAAAAAAAD8AwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9wMAAAAAAAD3AwAAAAAAAAAAAAAAADxA"
				],
				[
					1856,
					1,
					"paste",
					null,
					"AQAAAPcDAAAAAAAAHQQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9wMAAAAAAAD3AwAAAAAAAAAAAAAAADxA"
				],
				[
					1859,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAIEEAAAAAAAAggQAAAAAAAAAAAAAggQAAAAAAACGBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgQQAAAAAAACBBAAAAAAAAAAAAAAAYHJA"
				],
				[
					1861,
					1,
					"paste",
					null,
					"AQAAAIYEAAAAAAAArAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhgQAAAAAAACGBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1866,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAJwEAAAAAAAAnQQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnAQAAAAAAACcBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1871,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAA0EAAAAAAAADgQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADQQAAAAAAAANBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1877,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAACkFAAAAAAAAKgUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKQUAAAAAAAApBQAAAAAAAAAAAAAAAPC/"
				],
				[
					1911,
					1,
					"vi_eval",
					{
						"action_args":
						{
						},
						"action_command": "vi_delete",
						"motion_args":
						{
							"to": "line"
						},
						"motion_clip_to_line": false,
						"motion_command": "expand_selection",
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"AQAAAPMDAAAAAAAA8wMAAAAAAAAsAAAAICAgIHNob3dOb3RpZmljYXRpb24oInRlc3QxIiwgZHVyYXRpb24gPSAwKQo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADgQAAAAAAAAOBAAAAAAAAAAAAAAAAPC/"
				],
				[
					1916,
					1,
					"vi_eval",
					{
						"action_args":
						{
						},
						"action_command": "vi_delete",
						"motion_args":
						{
							"to": "line"
						},
						"motion_clip_to_line": false,
						"motion_command": "expand_selection",
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"AQAAAFcEAAAAAAAAVwQAAAAAAAAsAAAAICAgIHNob3dOb3RpZmljYXRpb24oInRlc3QyIiwgZHVyYXRpb24gPSAwKQo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVwQAAAAAAABXBAAAAAAAAAAAAAAAAAAA"
				],
				[
					1925,
					1,
					"vi_eval",
					{
						"action_args":
						{
						},
						"action_command": "vi_delete",
						"motion_args":
						{
							"to": "line"
						},
						"motion_clip_to_line": false,
						"motion_command": "expand_selection",
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"AQAAALcEAAAAAAAAtwQAAAAAAAAsAAAAICAgIHNob3dOb3RpZmljYXRpb24oInRlc3QzIiwgZHVyYXRpb24gPSAwKQo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtwQAAAAAAAC3BAAAAAAAAAAAAAAAAAAA"
				],
				[
					1930,
					1,
					"vi_eval",
					{
						"action_args":
						{
						},
						"action_command": "vi_right_delete",
						"motion_args":
						{
						},
						"motion_clip_to_line": false,
						"motion_command": null,
						"motion_inclusive": false,
						"motion_mode": 0
					},
					"AQAAAAEGAAAAAAAAAQYAAAAAAAABAAAAIw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAQYAAAAAAAABBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1944,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAAE8GAAAAAAAAUAYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATwYAAAAAAABPBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1946,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFAGAAAAAAAAUgYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUAYAAAAAAABQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1948,
					1,
					"right_delete",
					null,
					"AQAAAFEGAAAAAAAAUQYAAAAAAAABAAAAKQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUQYAAAAAAABRBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1951,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAF0GAAAAAAAAXgYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXQYAAAAAAABdBgAAAAAAAP///////+9/"
				],
				[
					1967,
					1,
					"right_delete",
					null,
					"AQAAAI4GAAAAAAAAjgYAAAAAAAABAAAAIw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjgYAAAAAAACOBgAAAAAAAAAAAAAAADxA"
				],
				[
					1986,
					1,
					"insert",
					{
						"characters": "as.charact"
					},
					"CgAAAJ8GAAAAAAAAoAYAAAAAAAAAAAAAoAYAAAAAAAChBgAAAAAAAAAAAAChBgAAAAAAAKIGAAAAAAAAAAAAAKIGAAAAAAAAowYAAAAAAAAAAAAAowYAAAAAAACkBgAAAAAAAAAAAACkBgAAAAAAAKUGAAAAAAAAAAAAAKUGAAAAAAAApgYAAAAAAAAAAAAApgYAAAAAAACnBgAAAAAAAAAAAACnBgAAAAAAAKgGAAAAAAAAAAAAAKgGAAAAAAAAqQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnwYAAAAAAACfBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1987,
					1,
					"insert",
					{
						"characters": "er"
					},
					"AgAAAKkGAAAAAAAAqgYAAAAAAAAAAAAAqgYAAAAAAACrBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqQYAAAAAAACpBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1988,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKsGAAAAAAAArQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqwYAAAAAAACrBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1989,
					1,
					"right_delete",
					null,
					"AQAAAKwGAAAAAAAArAYAAAAAAAABAAAAKQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArAYAAAAAAACsBgAAAAAAAAAAAAAAAPC/"
				],
				[
					1991,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAALcGAAAAAAAAuAYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtwYAAAAAAAC3BgAAAAAAAAAAAAAAAPC/"
				],
				[
					2002,
					2,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AgAAALcGAAAAAAAAuQYAAAAAAAAAAAAAuAYAAAAAAAC6BgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtwYAAAAAAAC3BgAAAAAAAAAAAAAAAPC/"
				],
				[
					2003,
					1,
					"insert",
					{
						"characters": "12"
					},
					"AgAAALkGAAAAAAAAugYAAAAAAAAAAAAAugYAAAAAAAC7BgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuQYAAAAAAAC5BgAAAAAAAAAAAAAAAPC/"
				],
				[
					2004,
					1,
					"left_delete",
					null,
					"AQAAALoGAAAAAAAAugYAAAAAAAABAAAAMg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuwYAAAAAAAC7BgAAAAAAAAAAAAAAAPC/"
				],
				[
					2019,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMwGAAAAAAAAzQYAAAAAAAAAAAAAzQYAAAAAAADRBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzAYAAAAAAADMBgAAAAAAAP///////+9/"
				],
				[
					2022,
					1,
					"insert",
					{
						"characters": "sho"
					},
					"AwAAANEGAAAAAAAA0gYAAAAAAAAAAAAA0gYAAAAAAADTBgAAAAAAAAAAAADTBgAAAAAAANQGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0QYAAAAAAADRBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2023,
					1,
					"insert_completion",
					{
						"completion": "showNotification",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "showNotification"
					},
					"AgAAANEGAAAAAAAA0QYAAAAAAAADAAAAc2hv0QYAAAAAAADhBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1AYAAAAAAADUBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2024,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOEGAAAAAAAA4wYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4QYAAAAAAADhBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2025,
					1,
					"insert",
					{
						"characters": "temp$messa"
					},
					"CgAAAOIGAAAAAAAA4wYAAAAAAAAAAAAA4wYAAAAAAADkBgAAAAAAAAAAAADkBgAAAAAAAOUGAAAAAAAAAAAAAOUGAAAAAAAA5gYAAAAAAAAAAAAA5gYAAAAAAADnBgAAAAAAAAAAAADnBgAAAAAAAOgGAAAAAAAAAAAAAOgGAAAAAAAA6QYAAAAAAAAAAAAA6QYAAAAAAADqBgAAAAAAAAAAAADqBgAAAAAAAOsGAAAAAAAAAAAAAOsGAAAAAAAA7AYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4gYAAAAAAADiBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2026,
					1,
					"insert_completion",
					{
						"completion": "message",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "message"
					},
					"AgAAAOcGAAAAAAAA5wYAAAAAAAAFAAAAbWVzc2HnBgAAAAAAAO4GAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7AYAAAAAAADsBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2027,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAO4GAAAAAAAA7wYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7gYAAAAAAADuBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2028,
					1,
					"insert",
					{
						"characters": " dur"
					},
					"BAAAAO8GAAAAAAAA8AYAAAAAAAAAAAAA8AYAAAAAAADxBgAAAAAAAAAAAADxBgAAAAAAAPIGAAAAAAAAAAAAAPIGAAAAAAAA8wYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7wYAAAAAAADvBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2029,
					1,
					"insert_completion",
					{
						"completion": "duration",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "duration"
					},
					"AgAAAPAGAAAAAAAA8AYAAAAAAAADAAAAZHVy8AYAAAAAAAD4BgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8wYAAAAAAADzBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2030,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAPgGAAAAAAAA+QYAAAAAAAAAAAAA+QYAAAAAAAD6BgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+AYAAAAAAAD4BgAAAAAAAAAAAAAAAPC/"
				],
				[
					2031,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAPoGAAAAAAAA+wYAAAAAAAAAAAAA+wYAAAAAAAD8BgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+gYAAAAAAAD6BgAAAAAAAAAAAAAAAPC/"
				],
				[
					2044,
					1,
					"paste",
					null,
					"AgAAAPAFAAAAAAAA/AUAAAAAAAAAAAAA/AUAAAAAAAD8BQAAAAAAAAwAAABIR190aGVyc2hvbGQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8AUAAAAAAAD8BQAAAAAAAAAAAAAAAPC/"
				],
				[
					2061,
					1,
					"left_delete",
					null,
					"AQAAAE8GAAAAAAAATwYAAAAAAAAOAAAAYyhGQUxTRSwgVFJVRSk",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATwYAAAAAAABdBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2063,
					1,
					"insert",
					{
						"characters": "pso"
					},
					"AwAAAE8GAAAAAAAAUAYAAAAAAAAAAAAAUAYAAAAAAABRBgAAAAAAAAAAAABRBgAAAAAAAFIGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATwYAAAAAAABPBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2064,
					1,
					"insert_completion",
					{
						"completion": "psoVals",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "psoVals"
					},
					"AgAAAE8GAAAAAAAATwYAAAAAAAADAAAAcHNvTwYAAAAAAABWBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUgYAAAAAAABSBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2077,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2079,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAEAAAAAAAAAAgAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2084,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAeQEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					2093,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2115,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHECAAAAAAAAcgIAAAAAAAAAAAAAcgIAAAAAAAB0AgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcQIAAAAAAABxAgAAAAAAAAAAAAAAAPC/"
				],
				[
					2117,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAHQCAAAAAAAAdQIAAAAAAAAAAAAAdQIAAAAAAAB3AgAAAAAAAAAAAAByAgAAAAAAAHICAAAAAAAAAgAAACAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdAIAAAAAAAB0AgAAAAAAAAAAAAAAAPC/"
				],
				[
					2120,
					1,
					"",
					null,
					"AQAAAHUCAAAAAAAArAIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdQIAAAAAAAB1AgAAAAAAAAAAAAAAAPC/"
				],
				[
					2127,
					1,
					"left_delete",
					null,
					"AQAAAKgCAAAAAAAAqAIAAAAAAAACAAAAICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqgIAAAAAAACqAgAAAAAAAAAAAAAAAPC/"
				],
				[
					2133,
					1,
					"left_delete",
					null,
					"AQAAAJoCAAAAAAAAmgIAAAAAAAACAAAAICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnAIAAAAAAACcAgAAAAAAAAAAAAAAAPC/"
				],
				[
					2144,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADxA"
				],
				[
					2147,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					2148,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAEAAAAAAAAAAgAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2150,
					1,
					"",
					null,
					"AQAAAAIAAAAAAAAAQgAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2176,
					1,
					"left_delete",
					null,
					"AQAAAN0CAAAAAAAA3QIAAAAAAAAJAAAAc3RyKGNhcnMp",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5gIAAAAAAADdAgAAAAAAAAAAAAAAADxA"
				],
				[
					2177,
					1,
					"paste",
					null,
					"AQAAAN0CAAAAAAAA9wIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3QIAAAAAAADdAgAAAAAAAAAAAAAAAPC/"
				],
				[
					2193,
					1,
					"cut",
					null,
					"AQAAALgCAAAAAAAAuAIAAAAAAABEAAAAd2l0aENvbnNvbGVSZWRpcmVjdCgiY29uc29sZSIsIHsKICAgIGFzLmNoYXJhY3Rlcihwc29WYWxzJGl0ZXIpCiAgfSk",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuAIAAAAAAAD8AgAAAAAAAAAAAAAAAPC/"
				],
				[
					2200,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAL0HAAAAAAAAvgcAAAAAAAAAAAAAvgcAAAAAAADCBwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvQcAAAAAAAC9BwAAAAAAAAAAAAAAAPC/"
				],
				[
					2202,
					1,
					"paste",
					null,
					"AQAAAMIHAAAAAAAABggAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwgcAAAAAAADCBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2206,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAAQIAAAAAAAABggAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABAgAAAAAAAAECAAAAAAAAAAAAAAAAPC/"
				],
				[
					2211,
					1,
					"cut",
					null,
					"AQAAAA0IAAAAAAAADQgAAAAAAABWAAAAdGVtcCA8LSBvcHRpKCJoZyIsIGxiLCB1YiwgSEckZGYsIGFkZGl0aW9uYWxQYXJhbWV0ZXJzLCBucG9wLCBuZ2VuLCB0b3BvLCBldCwgcHNvVmFscyk",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADQgAAAAAAABjCAAAAAAAAP///////+9/"
				],
				[
					2217,
					1,
					"left_delete",
					null,
					"AQAAAOcHAAAAAAAA5wcAAAAAAAAaAAAAYXMuY2hhcmFjdGVyKHBzb1ZhbHMkaXRlcik",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5wcAAAAAAAABCAAAAAAAAP///////+9/"
				],
				[
					2219,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAOcHAAAAAAAA6QcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5wcAAAAAAADnBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2221,
					1,
					"paste",
					null,
					"AQAAAOkHAAAAAAAAPwgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6QcAAAAAAADpBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2225,
					1,
					"left_delete",
					null,
					"AQAAALQCAAAAAAAAtAIAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtQIAAAAAAAC1AgAAAAAAAAAAAAAAAPC/"
				],
				[
					2229,
					1,
					"left_delete",
					null,
					"AQAAALUCAAAAAAAAtQIAAAAAAAACAAAAICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtwIAAAAAAAC3AgAAAAAAAAAAAAAAADxA"
				],
				[
					2231,
					1,
					"left_delete",
					null,
					"AQAAALQCAAAAAAAAtAIAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtQIAAAAAAAC1AgAAAAAAAAAAAAAAAPC/"
				],
				[
					2237,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALkHAAAAAAAAugcAAAAAAAAAAAAAugcAAAAAAAC+BwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuQcAAAAAAAC5BwAAAAAAAAAAAAAAAPC/"
				],
				[
					2244,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAL4HAAAAAAAAvwcAAAAAAAAAAAAAvwcAAAAAAADDBwAAAAAAAAAAAAC6BwAAAAAAALoHAAAAAAAABAAAACAgICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvgcAAAAAAAC+BwAAAAAAAAAAAAAAAPC/"
				],
				[
					2246,
					1,
					"insert",
					{
						"characters": "temp"
					},
					"BAAAAL8HAAAAAAAAwAcAAAAAAAAAAAAAwAcAAAAAAADBBwAAAAAAAAAAAADBBwAAAAAAAMIHAAAAAAAAAAAAAMIHAAAAAAAAwwcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvwcAAAAAAAC/BwAAAAAAAAAAAAAAAPC/"
				],
				[
					2247,
					1,
					"insert",
					{
						"characters": " <-"
					},
					"AwAAAMMHAAAAAAAAxAcAAAAAAAAAAAAAxAcAAAAAAADFBwAAAAAAAAAAAADFBwAAAAAAAMYHAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwwcAAAAAAADDBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2248,
					1,
					"insert",
					{
						"characters": " NULL"
					},
					"BQAAAMYHAAAAAAAAxwcAAAAAAAAAAAAAxwcAAAAAAADIBwAAAAAAAAAAAADIBwAAAAAAAMkHAAAAAAAAAAAAAMkHAAAAAAAAygcAAAAAAAAAAAAAygcAAAAAAADLBwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxgcAAAAAAADGBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2263,
					1,
					"left_delete",
					null,
					"AQAAAHoAAAAAAAAAegAAAAAAAABwAAAAIyBDaGFuZ2UgdHlwZT0ib3V0cHV0IiB0byB0eXBlPSJtZXNzYWdlIiB0byBjYXRjaCBzdGRlcnIKICAjIChtZXNzYWdlcywgd2FybmluZ3MsIGFuZCBlcnJvcnMpIGluc3RlYWQgb2Ygc3Rkb3V0Lg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6gAAAAAAAAB6AAAAAAAAAAAAAAAAACxA"
				],
				[
					2265,
					1,
					"left_delete",
					null,
					"AQAAAHgAAAAAAAAAeAAAAAAAAAACAAAAICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAegAAAAAAAAB6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					2267,
					1,
					"left_delete",
					null,
					"AQAAAHcAAAAAAAAAdwAAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAeAAAAAAAAAB4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					2284,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAANoHAAAAAAAA2wcAAAAAAAAAAAAA2wcAAAAAAADhBwAAAAAAAAAAAADhBwAAAAAAAOIHAAAAAAAAAAAAAOIHAAAAAAAA6AcAAAAAAAAAAAAA2wcAAAAAAADbBwAAAAAAAAYAAAAgICAgICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2gcAAAAAAADaBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2285,
					1,
					"paste",
					null,
					"AQAAAOIHAAAAAAAAQggAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4gcAAAAAAADiBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2288,
					1,
					"insert",
					{
						"characters": "\t\t"
					},
					"AgAAAD8IAAAAAAAAQQgAAAAAAAAAAAAAQQgAAAAAAABDCAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPwgAAAAAAAA/CAAAAAAAAAAAAAAAAPC/"
				],
				[
					2291,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAACIIAAAAAAAAJAgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIggAAAAAAAAiCAAAAAAAAAAAAAAAAPC/"
				],
				[
					2298,
					1,
					"insert_completion",
					{
						"completion": "req",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "req"
					},
					"AQAAAAIIAAAAAAAABQgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAggAAAAAAAACCAAAAAAAAAAAAAAAAPC/"
				],
				[
					2300,
					3,
					"left_delete",
					null,
					"AwAAAAQIAAAAAAAABAgAAAAAAAABAAAAcQMIAAAAAAAAAwgAAAAAAAABAAAAZQIIAAAAAAAAAggAAAAAAAABAAAAcg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABQgAAAAAAAAFCAAAAAAAAAAAAAAAAPC/"
				],
				[
					2302,
					1,
					"insert",
					{
						"characters": "\t\t\t"
					},
					"AwAAAAIIAAAAAAAABAgAAAAAAAAAAAAABAgAAAAAAAAGCAAAAAAAAAAAAAAGCAAAAAAAAAgIAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAggAAAAAAAACCAAAAAAAAAAAAAAAAPC/"
				],
				[
					2305,
					1,
					"insert",
					{
						"characters": "\t\t"
					},
					"AgAAACoIAAAAAAAALAgAAAAAAAAAAAAALAgAAAAAAAAuCAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKggAAAAAAAAqCAAAAAAAAAAAAAAAAEVA"
				],
				[
					2318,
					3,
					"left_delete",
					null,
					"AwAAANwHAAAAAAAA3AcAAAAAAAB2AAAAICAgICAgb3V0cHV0JEl0ZXIgPC0gcmVuZGVyVGV4dCh7CiAgICAgICAgICByZXEoIWlzLm51bGwocHNvVmFscyRpdGVyKSkKICAgICAgICAgIGFzLmNoYXJhY3Rlcihwc29WYWxzJGl0ZXIpCiAgICAgIH0pCtsHAAAAAAAA2wcAAAAAAAABAAAACtoHAAAAAAAA2gcAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUggAAAAAAADcBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2327,
					1,
					"left_delete",
					null,
					"AQAAAHoBAAAAAAAAegEAAAAAAABkAAAAICBwc29WYWxzIDwtIHJlYWN0aXZlVmFsdWVzKAogICAgaXRlciA9IE5VTEwsIGdsb2JhbF9iZXN0X3ZlYyA9IE5VTEwsIGdsb2JhbF9iZXN0X2Vycm9yID0gTlVMTAogICkgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3gEAAAAAAAB6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					2330,
					1,
					"left_delete",
					null,
					"AQAAAHoBAAAAAAAAegEAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAewEAAAAAAAB7AQAAAAAAAAAAAAAAAAAA"
				],
				[
					2332,
					1,
					"left_delete",
					null,
					"AQAAAHkBAAAAAAAAeQEAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAegEAAAAAAAB6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					2339,
					9,
					"left_delete",
					null,
					"CQAAAHIHAAAAAAAAcgcAAAAAAAABAAAAc3EHAAAAAAAAcQcAAAAAAAABAAAAbHAHAAAAAAAAcAcAAAAAAAABAAAAYW8HAAAAAAAAbwcAAAAAAAABAAAAVm4HAAAAAAAAbgcAAAAAAAABAAAAb20HAAAAAAAAbQcAAAAAAAABAAAAc2wHAAAAAAAAbAcAAAAAAAABAAAAcGsHAAAAAAAAawcAAAAAAAABAAAAIGoHAAAAAAAAagcAAAAAAAABAAAALA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcwcAAAAAAABzBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2349,
					1,
					"left_delete",
					null,
					"AQAAAHoBAAAAAAAAegEAAAAAAABhAAAAICBvdXRwdXQkSXRlciA8LSByZW5kZXJUZXh0KHsKICAgIHJlcSghaXMubnVsbChwc29WYWxzJGl0ZXIpKQogICAgYXMuY2hhcmFjdGVyKHBzb1ZhbHMkaXRlcikKICB9KQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2wEAAAAAAAB6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					2352,
					1,
					"left_delete",
					null,
					"AQAAAHoBAAAAAAAAegEAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAewEAAAAAAAB7AQAAAAAAAAAAAAAAAAAA"
				],
				[
					2354,
					1,
					"left_delete",
					null,
					"AQAAAHkBAAAAAAAAeQEAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAegEAAAAAAAB6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					2419,
					1,
					"left_delete",
					null,
					"AQAAAJAGAAAAAAAAkAYAAAAAAAAkAAAAICAgIHdpdGhDb25zb2xlUmVkaXJlY3QoImNvbnNvbGUiLCB7",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtAYAAAAAAACQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2421,
					1,
					"left_delete",
					null,
					"AQAAAI8GAAAAAAAAjwYAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkAYAAAAAAACQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2426,
					1,
					"left_delete",
					null,
					"AQAAAJQGAAAAAAAAlAYAAAAAAAACAAAAICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlgYAAAAAAACWBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2431,
					1,
					"left_delete",
					null,
					"AQAAAOIGAAAAAAAA4gYAAAAAAAAGAAAAICAgIH0p",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6AYAAAAAAADiBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2433,
					1,
					"left_delete",
					null,
					"AQAAAOEGAAAAAAAA4QYAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4gYAAAAAAADiBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2472,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOYGAAAAAAAA5wYAAAAAAAAAAAAA5wYAAAAAAADrBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5gYAAAAAAADmBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2474,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAOsGAAAAAAAA7AYAAAAAAAAAAAAA7AYAAAAAAADwBgAAAAAAAAAAAADnBgAAAAAAAOcGAAAAAAAABAAAACAgICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6wYAAAAAAADrBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2477,
					1,
					"reindent",
					null,
					"AQAAAOcGAAAAAAAA6wYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5wYAAAAAAADnBgAAAAAAAAAAAAAAADxA"
				],
				[
					2481,
					1,
					"",
					null,
					"AQAAAOsGAAAAAAAAbwgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6wYAAAAAAADrBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2486,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"BQAAAG0IAAAAAAAAbwgAAAAAAAAAAAAAQQgAAAAAAABDCAAAAAAAAAAAAAAZCAAAAAAAABsIAAAAAAAAAAAAAO4HAAAAAAAA8AcAAAAAAAAAAAAAeAgAAAAAAAB4CAAAAAAAAAQAAAAgICAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAAEAAAA7gcAAAAAAADuBwAAAAAAAAAAAAAAACxAGQgAAAAAAAAZCAAAAAAAAAAAAAAAACxAQQgAAAAAAABBCAAAAAAAAAAAAAAAACxAbQgAAAAAAABtCAAAAAAAAAAAAAAAAPC/"
				],
				[
					2492,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AgAAAJsHAAAAAAAAnQcAAAAAAAAAAAAAgAcAAAAAAACCBwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAgAcAAAAAAACABwAAAAAAAAAAAAAAACxAmwcAAAAAAACbBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2499,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AgAAAEkHAAAAAAAASwcAAAAAAAAAAAAAFgcAAAAAAAAYBwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAFgcAAAAAAAAWBwAAAAAAAAAAAAAAACxASQcAAAAAAABJBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2508,
					1,
					"left_delete",
					null,
					"AQAAAOsGAAAAAAAA6wYAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7AYAAAAAAADsBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2517,
					1,
					"insert",
					{
						"characters": "//"
					},
					"BAAAAJQGAAAAAAAAlQYAAAAAAAAAAAAAgwYAAAAAAACEBgAAAAAAAAAAAACWBgAAAAAAAJcGAAAAAAAAAAAAAIQGAAAAAAAAhQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAgwYAAAAAAACDBgAAAAAAAAAAAAAAADxAlAYAAAAAAACUBgAAAAAAAAAAAAAAADxA"
				],
				[
					2521,
					2,
					"left_delete",
					null,
					"BAAAAJcGAAAAAAAAlwYAAAAAAAABAAAAL4QGAAAAAAAAhAYAAAAAAAABAAAAL5UGAAAAAAAAlQYAAAAAAAABAAAAL4MGAAAAAAAAgwYAAAAAAAABAAAALw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAhQYAAAAAAACFBgAAAAAAAAAAAAAAAPC/mAYAAAAAAACYBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2522,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AgAAAJQGAAAAAAAAlQYAAAAAAAAAAAAAgwYAAAAAAACEBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAgwYAAAAAAACDBgAAAAAAAAAAAAAAAPC/lAYAAAAAAACUBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2562,
					1,
					"left_delete",
					null,
					"AQAAAIMHAAAAAAAAgwcAAAAAAAAcAAAAICAgICMgQ2FsbCB0aGUgb3B0aSBmdW5jdGlvbg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnwcAAAAAAACDBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2564,
					1,
					"left_delete",
					null,
					"AQAAAIIHAAAAAAAAggcAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgwcAAAAAAACDBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2567,
					1,
					"left_delete",
					null,
					"AQAAAIAHAAAAAAAAgAcAAAAAAAACAAAAICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAggcAAAAAAACCBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2569,
					1,
					"left_delete",
					null,
					"AQAAAH8HAAAAAAAAfwcAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgAcAAAAAAACABwAAAAAAAAAAAAAAAPC/"
				],
				[
					2574,
					1,
					"left_delete",
					null,
					"AQAAAO0GAAAAAAAA7QYAAAAAAAAnAAAAIyBSZWRpcmVjdCBjb25zb2xlIG91dHB1dCB0byBhIHZhcmlhYmxl",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFAcAAAAAAADtBgAAAAAAAAAAAAAAADxA"
				],
				[
					2576,
					1,
					"left_delete",
					null,
					"AQAAAOsGAAAAAAAA6wYAAAAAAAACAAAAICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7QYAAAAAAADtBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2579,
					1,
					"left_delete",
					null,
					"AQAAAOkGAAAAAAAA6QYAAAAAAAACAAAAICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6wYAAAAAAADrBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2581,
					1,
					"left_delete",
					null,
					"AQAAAOgGAAAAAAAA6AYAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6QYAAAAAAADpBgAAAAAAAAAAAAAAAPC/"
				],
				[
					2594,
					4,
					"left_delete",
					null,
					"BAAAAK0HAAAAAAAArQcAAAAAAAAoAAAAIyBDYXB0dXJlIGFuZCBkaXNwbGF5IHRoZSBjb25zb2xlIG91dHB1dKsHAAAAAAAAqwcAAAAAAAACAAAAICCpBwAAAAAAAKkHAAAAAAAAAgAAACAgqAcAAAAAAACoBwAAAAAAAAEAAAAK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArQcAAAAAAADVBwAAAAAAAP///////+9/"
				],
				[
					2596,
					2,
					"left_delete",
					null,
					"AgAAAKYHAAAAAAAApgcAAAAAAAACAAAAICClBwAAAAAAAKUHAAAAAAAAAQAAAAo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqAcAAAAAAACoBwAAAAAAAAAAAAAAAPC/"
				],
				[
					2604,
					1,
					"left_delete",
					null,
					"AQAAAAUIAAAAAAAABQgAAAAAAACfAAAACiAgICBzaG93Tm90aWZpY2F0aW9uKCJ0ZXN0IiwgZHVyYXRpb24gPSAwKQogICAgc2hvd05vdGlmaWNhdGlvbihhcy5jaGFyYWN0ZXIoY2xhc3ModGVtcClbWzFdXSksIGR1cmF0aW9uID0gMCkKICAgIHNob3dOb3RpZmljYXRpb24odGVtcCRtZXNzYWdlLCBkdXJhdGlvbiA9IDAp",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApAgAAAAAAAAFCAAAAAAAAAAAAAAAuIFA"
				],
				[
					2606,
					1,
					"left_delete",
					null,
					"AQAAAAQIAAAAAAAABAgAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABQgAAAAAAAAFCAAAAAAAAAAAAAAAAPC/"
				],
				[
					2616,
					1,
					"left_delete",
					null,
					"AQAAAH4GAAAAAAAAfgYAAAAAAABqAAAACiAgICAjdGVtcCA8LSBOVUxMCiAgICAjdGVtcCA8LSBvcHRpKCJoZyIsIGxiLCB1YiwgSEckZGYsIGFkZGl0aW9uYWxQYXJhbWV0ZXJzLCBucG9wLCBuZ2VuLCB0b3BvLCBldCkKICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6AYAAAAAAAB+BgAAAAAAAAAAAAAAAEVA"
				],
				[
					2618,
					1,
					"left_delete",
					null,
					"AQAAAH0GAAAAAAAAfQYAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfgYAAAAAAAB+BgAAAAAAAAAAAAAAAPC/"
				],
				[
					2675,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAABJAQAAIyBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9qY2hlbmc1LzM4MzAyNDQ3NTdmOGNhMjVkNGIwMGNlMzg5ZWE0MWIzCndpdGhDb25zb2xlUmVkaXJlY3QgPC0gZnVuY3Rpb24oY29udGFpbmVySWQsIGV4cHIpIHsKICB0eHQgPC0gY2FwdHVyZS5vdXRwdXQocmVzdWx0cyA8LSBleHByLCB0eXBlID0gIm91dHB1dCIpCiAgaWYgKGxlbmd0aCh0eHQpID4gMCkgewogICAgaW5zZXJ0VUkocGFzdGUwKCIjIiwgY29udGFpbmVySWQpLCB3aGVyZSA9ICJiZWZvcmVFbmQiLAogICAgICB1aSA9IHBhc3RlMCh0eHQsICJcbiIsIGNvbGxhcHNlID0gIiIpCiAgICApCiAgfQogIHJlc3VsdHMKfQo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASQEAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2681,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2692,
					1,
					"left_delete",
					null,
					"AQAAADgFAAAAAAAAOAUAAAAAAAAwAAAAc2luayh0ZW1wX291dHB1dCA8LSB0ZW1wZmlsZSgpLCB0eXBlID0gIm91dHB1dCIp",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOAUAAAAAAABoBQAAAAAAAP///////+9/"
				],
				[
					2697,
					3,
					"left_delete",
					null,
					"AwAAAD0FAAAAAAAAPQUAAAAAAAAxAAAAb24uZXhpdChzaW5rKCksIGFkZCA9IFRSVUUpICAjIFJlc2V0IHNpbmsgb24gZXhpdDsFAAAAAAAAOwUAAAAAAAACAAAAICA5BQAAAAAAADkFAAAAAAAAAgAAACAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPQUAAAAAAABuBQAAAAAAAP///////+9/"
				],
				[
					2703,
					4,
					"left_delete",
					null,
					"BAAAAJAFAAAAAAAAkAUAAAAAAABaAAAAb3V0cHV0JGNvbnNvbGVPdXRwdXQgPC0gcmVuZGVyUHJpbnQoewogICAgICBjYXQocmVhZExpbmVzKHRlbXBfb3V0cHV0KSwgc2VwID0gIlxuIikKICAgIH0pjgUAAAAAAACOBQAAAAAAAAIAAAAgIIwFAAAAAAAAjAUAAAAAAAACAAAAICCLBQAAAAAAAIsFAAAAAAAAAQAAAAo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkAUAAAAAAADqBQAAAAAAAP///////+9/"
				],
				[
					2706,
					1,
					"left_delete",
					null,
					"AQAAADgFAAAAAAAAOAUAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOQUAAAAAAAA5BQAAAAAAAAAAAAAAuIFA"
				],
				[
					2708,
					3,
					"left_delete",
					null,
					"AwAAADYFAAAAAAAANgUAAAAAAAACAAAAICA0BQAAAAAAADQFAAAAAAAAAgAAACAgMwUAAAAAAAAzBQAAAAAAAAEAAAAK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOAUAAAAAAAA4BQAAAAAAAAAAAAAAAPC/"
				],
				[
					2712,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAIQFAAAAAAAAhQUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhAUAAAAAAACEBQAAAAAAAAAAAAAAAPC/"
				],
				[
					2713,
					1,
					"insert",
					{
						"characters": " TRUE"
					},
					"BQAAAIUFAAAAAAAAhgUAAAAAAAAAAAAAhgUAAAAAAACHBQAAAAAAAAAAAACHBQAAAAAAAIgFAAAAAAAAAAAAAIgFAAAAAAAAiQUAAAAAAAAAAAAAiQUAAAAAAACKBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhQUAAAAAAACFBQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/home/konrad/Documents/GitHub/temporary/app/ggplot.py",
			"settings":
			{
				"buffer_size": 213,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					8,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAADHAAAAaW1wb3J0IG51bXB5IGFzIG5wCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBwbG90bmluZSBpbXBvcnQgKgoKI21hdHBsb3RsaWIgaW5saW5lCnN1cnZzX2RmID0gcGQucmVhZF9jc3YoJ2lyaXMuY3N2JykuZHJvcG5hKCkKCmdncGxvdChzdXJ2c19kZiwgYWVzKHggPSAnU3BlY2llcycsIHkgPSAnU2VwYWwuTGVuZ3RoJykpICsgZ2VvbV9wb2ludCgpCgAAAAAAAAAA1QAAAAAAAAAAAAAAAAAAAAAAAADVAAAAAAAAAAAAAAAAAAAAAAAAANUAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMcAAAAAAAAAxwAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "tsf/inst/tinytest/test_all.R",
			"settings":
			{
				"buffer_size": 9341,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"terminus",
				"Terminus: Open Default Shell in Panel"
			],
			[
				":w",
				":w - Save"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				":File ",
				"git: File History"
			],
			[
				":f",
				"File: Search Files"
			],
			[
				"goto",
				"Exact Quick Find: Goto Prev"
			],
			[
				"tmu",
				"Tmux: Open here (split horizontally)"
			],
			[
				"tmux",
				"Tmux: Open project folder"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"tmix",
				"Tmux: Open here (split horizontally)"
			],
			[
				"terminus c",
				"Terminus: Close All"
			],
			[
				"gitsa",
				"Git: Status"
			],
			[
				"terminus ",
				"Terminus: Close All"
			],
			[
				":g",
				"Go: Get"
			],
			[
				"termi",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"term",
				"TerminalProjectFolder: open terminal in project folder"
			],
			[
				"terminu",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"termin",
				"Preferences: Terminus Key Bindings"
			],
			[
				"tern",
				"Terminus: Toggle Panel"
			],
			[
				"has",
				"Build With: Haskell"
			],
			[
				"late",
				"LaTeXBox: View PDF"
			],
			[
				"markdown pre",
				"Markdown Preview: Preview in Browser"
			],
			[
				"mark",
				"MarkdownEditing: Open Journal"
			],
			[
				"mar",
				"MarkdownLivePreview: Open Preview"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"m",
				"Markdown Slideshow"
			],
			[
				"sendc",
				"SendCode: Choose Program"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 234.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/konrad/Documents/GitHub/Thermosimfit",
		"/home/konrad/Documents/GitHub/Thermosimfit/tsf",
		"/home/konrad/Documents/GitHub/Thermosimfit/tsf/inst",
		"/home/konrad/Documents/GitHub/Thermosimfit/tsf/inst/tinytest",
		"/home/konrad/Documents/GitHub/Thermosimfit/tsf/R"
	],
	"file_history":
	[
		"/home/konrad/Documents/GitHub/Thermosimfit/Reproducability/Test3/Info.txt",
		"/home/konrad/Documents/GitHub/Thermosimfit/Reproducability/Test2/Info.txt",
		"/home/konrad/Documents/GitHub/Thermosimfit/tsf/R/optimize.R",
		"/home/konrad/Documents/GitHub/Thermosimfit/tsf/R/pso.R",
		"/home/konrad/Documents/GitHub/shinychem/app/server.R",
		"/home/konrad/Documents/GitHub/shinychem/app/ui/plotting.R",
		"/home/konrad/Documents/GitHub/Thermosimfit/tsf/NAMESPACE",
		"/home/konrad/Documents/GitHub/Thermosimfit/tsf/DESCRIPTION",
		"/home/konrad/Documents/GitHub/shinychem/app/ui.R",
		"/home/konrad/Documents/GitHub/Thermosimfit/tsf/R/importData.R",
		"/home/konrad/Documents/GitHub/shinychem/Biostats_Standalone/server.R",
		"/home/konrad/Documents/GitHub/etr_supplement/ETR/include/etr_bits/binaryCalculations.hpp",
		"/home/konrad/Documents/GitHub/etr_supplement/ETR/include/etr_bits/BufferVector.hpp",
		"/home/konrad/Documents/GitHub/etr_supplement/ETR/include/etr_bits/UtilsTraits.hpp",
		"/home/konrad/Documents/GitHub/etr_supplement/ETR/tests/test.cpp",
		"/home/konrad/Documents/GitHub/etr_supplement/ETR/include/etr.hpp",
		"/home/konrad/Documents/GitHub/etr_supplement/ETR/tests/maintests.cpp",
		"/home/konrad/Documents/GitHub/Thermosimfit/tsf/inst/examples/GDA.txt",
		"/home/konrad/Documents/GitHub/Thermosimfit/Reproducability/Replica_8.txt",
		"/home/konrad/Documents/GitHub/Thermosimfit/Reproducability/Replica_2.txt",
		"/home/konrad/Documents/GitHub/etr_supplement/ETR/include/etr_bits/helper.hpp",
		"/home/konrad/Documents/GitHub/Thermosimfit/Reproducability/Replica_1.txt",
		"/home/konrad/Documents/GitHub/thermosimfit/thermosimfit-1.1/Fitting/Samples/data_GDA-Estradiol-CB7-BE.txt",
		"/home/konrad/Documents/GitHub/thermosimfit/thermosimfit-1.1/Fitting/Samples/Sim-thermoHD-GDA1.txt",
		"/home/konrad/Documents/GitHub/thermosimfit/data_GDA-Estradiol-CB7-BE.txt",
		"/home/konrad/Documents/GitHub/Thermosimfit/tags",
		"/home/konrad/Documents/GitHub/github_token2",
		"/home/konrad/Documents/GitHub/etr_supplement/ETR/include/etr_bits/distri.hpp",
		"/home/konrad/Documents/GitHub/ast2ast_supplement/prettify.sh",
		"/home/konrad/Documents/GitHub/d3testing/3d/index.html",
		"/home/konrad/Documents/GitHub/d3testing/3d/script.js",
		"/home/konrad/Documents/GitHub/d3testing/index.html",
		"/home/konrad/Documents/GitHub/etr_supplement/ETR/rmath/tests/demo.cpp",
		"/home/konrad/Documents/GitHub/etr_supplement/r-source/src/main/RNG.c",
		"/home/konrad/Downloads/README.md",
		"/home/konrad/Documents/GitHub/d3testing/zoom/script.js",
		"/home/konrad/Documents/GitHub/d3testing/app.js",
		"/home/konrad/Documents/GitHub/etr_supplement/test_ownRNG.sh",
		"/home/konrad/Documents/GitHub/etr_supplement/compare_seeds.R",
		"/home/konrad/Documents/GitHub/etr_supplement/test_RNG.sh",
		"/home/konrad/Documents/GitHub/etr_supplement/ETR/rmath/tests/RNG.hpp",
		"/home/konrad/Documents/GitHub/PostDoc/MTT/202402012_start/names.txt",
		"/home/konrad/Documents/GitHub/PostDoc/MTT/Reports_2023/xnum_affiliation.txt",
		"/home/konrad/Documents/GitHub/shinychem/MTT/inst/examples/template_pdf.qmd",
		"/home/konrad/Documents/GitHub/PostDoc/MTT/Reports_2023/Claudia_Bizarri/20230825_start/names.txt",
		"/home/konrad/Documents/GitHub/PostDoc/MTT/Reports_2023/Claudia_Bizarri/20230825_start",
		"/home/konrad/Documents/GitHub/PostDoc/MTT/Reports_2023/20230302_start",
		"/home/konrad/Documents/GitHub/PostDoc/MTT/Reports_2023/20230209_start",
		"/home/konrad/Documents/GitHub/etr_supplement/ETR/rmath/Makefile",
		"/home/konrad/Documents/GitHub/etr_supplement/ETR/rmath/include/Rmath.h",
		"/home/konrad/Documents/GitHub/etr_supplement/ETR/rmath/src/sunif.c",
		"/home/konrad/Documents/GitHub/thermosimfit/test_data/IDA_6µM-BC_4.3µMCB7_add Cadaverine 100µM_MilliQ-6(Correct).txt",
		"/home/konrad/Documents/GitHub/shinychem/dropped text.txt",
		"/home/konrad/Documents/GitHub/etr_supplement/ETR/rmath/Plan.md",
		"/home/konrad/Documents/GitHub/etr_supplement/ETR/rmath/tests/demo.c",
		"/home/konrad/Documents/GitHub/paropt_supplement/paropt/.gitignore",
		"/home/konrad/Documents/GitHub/etr_supplement/ETR/.gitignore",
		"/home/konrad/Documents/GitHub/ast2ast_supplement/ast2ast/inst/tinytest/test_all.R",
		"/home/konrad/Documents/GitHub/ast2ast_supplement/ast2ast/src/Tests.cpp",
		"/home/konrad/Documents/GitHub/shinychem/MTT/DESCRIPTION",
		"/home/konrad/Documents/GitHub/shinychem/Meetingmd",
		"/home/konrad/Documents/GitHub/shinychem/Meeting.md",
		"/home/konrad/Documents/GitHub/shinychem/Meeting",
		"/home/konrad/Documents/GitHub/shinychem/build_and_run.go",
		"/home/konrad/Downloads/tsv",
		"/home/konrad/Documents/GitHub/github_token3",
		"/home/konrad/Documents/GitHub/etr_supplement/ETR/rmath/tests/build.sh",
		"/home/konrad/Documents/GitHub/etr_supplement/ETR/rmath/src/snorm.c",
		"/home/konrad/Documents/GitHub/etr_supplement/ETR/rmath/src/sexp.c",
		"/home/konrad/Documents/GitHub/etr_supplement/ETR/rmath/tests/Makefile",
		"/home/konrad/Documents/GitHub/etr_supplement/rmath/README.md",
		"/home/konrad/Documents/GitHub/etr_supplement/rmath/CMakeLists.txt",
		"/home/konrad/Documents/GitHub/etr_supplement/ETR/rmath/MAKEFILE",
		"/home/konrad/Documents/GitHub/etr_supplement/ETR/include/test.cpp",
		"/home/konrad/Documents/GitHub/thermosimfit/test_data/IDA_1.txt",
		"/home/konrad/Documents/GitHub/thermosimfit/root_ida.R",
		"/home/konrad/Documents/GitHub/thermosimfit/algEq/R/pso.R",
		"/home/konrad/Documents/GitHub/thermosimfit/test_data/test1.R",
		"/home/konrad/Documents/GitHub/thermosimfit/ida_gda_eliminate_hd.mac",
		"/home/konrad/Documents/GitHub/shinychem_new/comeln/R/download.R",
		"/home/konrad/Documents/GitHub/shinychem_new/app/server.R",
		"/home/konrad/Documents/GitHub/thermosimfit/root_gda.R",
		"/home/konrad/Documents/GitHub/thermosimfit/hg_eliminate.mac",
		"/home/konrad/passwords.txt",
		"/home/konrad/Documents/GitHub/shinychem_new/build_and_run.sh",
		"/home/konrad/Documents/GitHub/shinychem_new/Dockerfile",
		"/home/konrad/Documents/GitHub/shinychem_new/comeln/DESCRIPTION",
		"/home/konrad/Documents/GitHub/chromatogramsR/Bruker/PD-01-02(2).dat",
		"/home/konrad/Documents/GitHub/chromatogramsR/Bruker/analyse.R",
		"/home/konrad/Documents/GitHub/chromatogramsR/chromatogram/src/reading.cpp",
		"/home/konrad/Documents/GitHub/chromatogramsR/install.sh",
		"/home/konrad/Documents/GitHub/chromatogramsR/aston_stuff.py",
		"/home/konrad/Documents/GitHub/chromatogramsR/checktab.cpp",
		"/home/konrad/Documents/GitHub/chromatogramsR/chromatogram/R/import_and_plot.R",
		"/home/konrad/Documents/GitHub/chromatogramsR/analyse.cpp",
		"/home/konrad/Documents/heyer/bug_finding/data/lb.txt",
		"/home/konrad/Documents/heyer/bug_finding/lb.txt",
		"/home/konrad/Documents/GitHub/chromatogramsR/result.txt",
		"/home/konrad/Documents/GitHub/chromatogramsR/output.txt",
		"/home/konrad/Documents/GitHub/chromatogramsR/dad1.uv_xxd_c_1.txt",
		"/home/konrad/Documents/heyer/testbestparm.csv",
		"/home/konrad/Documents/heyer/teststates.csv",
		"/home/konrad/Documents/GitHub/chromatogramsR/X-Vials/X3349.D/dad1.uv",
		"/home/konrad/Documents/GitHub/chromatogramsR/pattern_finding.R",
		"/home/konrad/Documents/GitHub/chromatogramsR/testing.R",
		"/home/konrad/Documents/GitHub/chromatogramsR/from_aston_uv_parser.cpp",
		"/home/konrad/Documents/GitHub/chromatogramsR/X-Vials/X3346.D/RUN.LOG",
		"/home/konrad/Documents/GitHub/chromatogramsR/X-Vials/X3346.D/ACQRES.REG",
		"/home/konrad/Documents/GitHub/chromatogramsR/X-Vials/X3346.D/SAMPLE.MAC",
		"/home/konrad/Documents/GitHub/chromatogramsR/X-Vials/X3346.D/dad1.uv",
		"/home/konrad/Documents/GitHub/chromatogramsR/X-Vials/X3346.D/LCDIAG.REG",
		"/home/konrad/Documents/GitHub/chromatogramsR/chromatogram/DESCRIPTION",
		"/home/konrad/Documents/GitHub/chromatogramsR/chromatogram/NAMESPACE",
		"/home/konrad/Documents/GitHub/Station/server.go",
		"/home/konrad/Documents/GitHub/chromatogramsR/plot.html",
		"/home/konrad/Documents/GitHub/paropt_supplement/paropt/NAMESPACE",
		"/home/konrad/Documents/GitHub/chromatogramsR/chromatogram/man/read_chrom.Rd",
		"/home/konrad/Documents/GitHub/chromatogramsR/chromatogram/man/plot_chromatogram.Rd",
		"/home/konrad/Documents/GitHub/dfdr_supplement/dfdr/DESCRIPTION",
		"/home/konrad/Documents/GitHub/chromatogramsR/chromatogram/R/storageClass.R",
		"/home/konrad/Documents/GitHub/ast2ast_supplement/ast2ast/DESCRIPTION",
		"/home/konrad/Documents/GitHub/ast2ast_supplement/ast2ast/NAMESPACE",
		"/home/konrad/Documents/GitHub/ast2ast_supplement/ast2ast/man/translate.Rd",
		"/home/konrad/Documents/GitHub/temporary/lua/nelua.nelua",
		"/home/konrad/Documents/GitHub/chromatogramsR/dc.cpp",
		"/home/konrad/Documents/GitHub/chromatogramsR/chromatogram/src/RcppExports.cpp",
		"/home/konrad/.config/sublime-text-3/Packages/User/nelua.sublime-build",
		"/home/konrad/Documents/GitHub/auto_mtt/001OT2/http_api/src/atomic_commands.cpp"
	],
	"find":
	{
		"height": 24.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			" )"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "tsf/R/runApp.R",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4520,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"R-Box.completions":
							[
								[
									".radialGradientPattern\t{grDevices}",
									".radialGradientPattern"
								],
								[
									"gray.colors\t{grDevices}",
									"gray.colors"
								],
								[
									"rainbow\t{grDevices}",
									"rainbow"
								],
								[
									"check.options\t{grDevices}",
									"check.options"
								],
								[
									"hcl.pals\t{grDevices}",
									"hcl.pals"
								],
								[
									"glyphFontList\t{grDevices}",
									"glyphFontList"
								],
								[
									"embedFonts\t{grDevices}",
									"embedFonts"
								],
								[
									"cairo_ps\t{grDevices}",
									"cairo_ps"
								],
								[
									"colorspaces\t{grDevices}",
									"colorspaces"
								],
								[
									"cairo_pdf\t{grDevices}",
									"cairo_pdf"
								],
								[
									"getGraphicsEventEnv\t{grDevices}",
									"getGraphicsEventEnv"
								],
								[
									".axisPars\t{grDevices}",
									".axisPars"
								],
								[
									"bmp\t{grDevices}",
									"bmp"
								],
								[
									".devUp\t{grDevices}",
									".devUp"
								],
								[
									".mask\t{grDevices}",
									".mask"
								],
								[
									"graphics.off\t{grDevices}",
									"graphics.off"
								],
								[
									"densCols\t{grDevices}",
									"densCols"
								],
								[
									"savePlot\t{grDevices}",
									"savePlot"
								],
								[
									"X11Font\t{grDevices}",
									"X11Font"
								],
								[
									"grey\t{grDevices}",
									"grey"
								],
								[
									".setMask\t{grDevices}",
									".setMask"
								],
								[
									"deviceIsInteractive\t{grDevices}",
									"deviceIsInteractive"
								],
								[
									".opIndex\t{grDevices}",
									".opIndex"
								],
								[
									"quartz.save\t{grDevices}",
									"quartz.save"
								],
								[
									"quartz\t{grDevices}",
									"quartz"
								],
								[
									"xfig\t{grDevices}",
									"xfig"
								],
								[
									"dev.capabilities\t{grDevices}",
									"dev.capabilities"
								],
								[
									"extendrange\t{grDevices}",
									"extendrange"
								],
								[
									"nclass.Sturges\t{grDevices}",
									"nclass.Sturges"
								],
								[
									".defineGroup\t{grDevices}",
									".defineGroup"
								],
								[
									".useGroup\t{grDevices}",
									".useGroup"
								],
								[
									"colors\t{grDevices}",
									"colors"
								],
								[
									"pictex\t{grDevices}",
									"pictex"
								],
								[
									".ruleIndex\t{grDevices}",
									".ruleIndex"
								],
								[
									"dev.set\t{grDevices}",
									"dev.set"
								],
								[
									"trans3d\t{grDevices}",
									"trans3d"
								],
								[
									"recordPlot\t{grDevices}",
									"recordPlot"
								],
								[
									"glyphWidthLeft\t{grDevices}",
									"glyphWidthLeft"
								],
								[
									"hsv\t{grDevices}",
									"hsv"
								],
								[
									"bitmap\t{grDevices}",
									"bitmap"
								],
								[
									"embedGlyphs\t{grDevices}",
									"embedGlyphs"
								],
								[
									"hcl\t{grDevices}",
									"hcl"
								],
								[
									"postscriptFonts\t{grDevices}",
									"postscriptFonts"
								],
								[
									"tiff\t{grDevices}",
									"tiff"
								],
								[
									"X11\t{grDevices}",
									"X11"
								],
								[
									"Hershey\t{grDevices}",
									"Hershey"
								],
								[
									"palette.colors\t{grDevices}",
									"palette.colors"
								],
								[
									"glyphHeight\t{grDevices}",
									"glyphHeight"
								],
								[
									"is.raster\t{grDevices}",
									"is.raster"
								],
								[
									"colorConverter\t{grDevices}",
									"colorConverter"
								],
								[
									"glyphFont\t{grDevices}",
									"glyphFont"
								],
								[
									"dev2bitmap\t{grDevices}",
									"dev2bitmap"
								],
								[
									"dev.next\t{grDevices}",
									"dev.next"
								],
								[
									"dev.interactive\t{grDevices}",
									"dev.interactive"
								],
								[
									"grey.colors\t{grDevices}",
									"grey.colors"
								],
								[
									"dev.copy2pdf\t{grDevices}",
									"dev.copy2pdf"
								],
								[
									"terrain.colors\t{grDevices}",
									"terrain.colors"
								],
								[
									"grSoftVersion\t{grDevices}",
									"grSoftVersion"
								],
								[
									"quartz.options\t{grDevices}",
									"quartz.options"
								],
								[
									".tilingPattern\t{grDevices}",
									".tilingPattern"
								],
								[
									"hcl.colors\t{grDevices}",
									"hcl.colors"
								],
								[
									"glyphAnchor\t{grDevices}",
									"glyphAnchor"
								],
								[
									"nclass.scott\t{grDevices}",
									"nclass.scott"
								],
								[
									"dev.hold\t{grDevices}",
									"dev.hold"
								],
								[
									"glyphWidth\t{grDevices}",
									"glyphWidth"
								],
								[
									"devAskNewPage\t{grDevices}",
									"devAskNewPage"
								],
								[
									"x11\t{grDevices}",
									"x11"
								],
								[
									"as.raster\t{grDevices}",
									"as.raster"
								],
								[
									".clipPath\t{grDevices}",
									".clipPath"
								],
								[
									"rgb2hsv\t{grDevices}",
									"rgb2hsv"
								],
								[
									"setGraphicsEventEnv\t{grDevices}",
									"setGraphicsEventEnv"
								],
								[
									"heat.colors\t{grDevices}",
									"heat.colors"
								],
								[
									"topo.colors\t{grDevices}",
									"topo.colors"
								],
								[
									"blues9\t{grDevices}",
									"blues9"
								],
								[
									"recordGraphics\t{grDevices}",
									"recordGraphics"
								],
								[
									"boxplot.stats\t{grDevices}",
									"boxplot.stats"
								],
								[
									"svg\t{grDevices}",
									"svg"
								],
								[
									"dev.list\t{grDevices}",
									"dev.list"
								],
								[
									"colours\t{grDevices}",
									"colours"
								],
								[
									"convertColor\t{grDevices}",
									"convertColor"
								],
								[
									"dev.copy\t{grDevices}",
									"dev.copy"
								],
								[
									"chull\t{grDevices}",
									"chull"
								],
								[
									"xy.coords\t{grDevices}",
									"xy.coords"
								],
								[
									"dev.capture\t{grDevices}",
									"dev.capture"
								],
								[
									"dev.cur\t{grDevices}",
									"dev.cur"
								],
								[
									"glyphJust\t{grDevices}",
									"glyphJust"
								],
								[
									"setEPS\t{grDevices}",
									"setEPS"
								],
								[
									"cm\t{grDevices}",
									"cm"
								],
								[
									"dev.flush\t{grDevices}",
									"dev.flush"
								],
								[
									"glyphHeightBottom\t{grDevices}",
									"glyphHeightBottom"
								],
								[
									"dev.size\t{grDevices}",
									"dev.size"
								],
								[
									"setPS\t{grDevices}",
									"setPS"
								],
								[
									"cm.colors\t{grDevices}",
									"cm.colors"
								],
								[
									"dev.off\t{grDevices}",
									"dev.off"
								],
								[
									"pdf\t{grDevices}",
									"pdf"
								],
								[
									"gray\t{grDevices}",
									"gray"
								],
								[
									"nclass.FD\t{grDevices}",
									"nclass.FD"
								],
								[
									"ps.options\t{grDevices}",
									"ps.options"
								],
								[
									"as.graphicsAnnot\t{grDevices}",
									"as.graphicsAnnot"
								],
								[
									".setPattern\t{grDevices}",
									".setPattern"
								],
								[
									"X11.options\t{grDevices}",
									"X11.options"
								],
								[
									"palette\t{grDevices}",
									"palette"
								],
								[
									"replayPlot\t{grDevices}",
									"replayPlot"
								],
								[
									"pdfFonts\t{grDevices}",
									"pdfFonts"
								],
								[
									"cairoSymbolFont\t{grDevices}",
									"cairoSymbolFont"
								],
								[
									"dev.new\t{grDevices}",
									"dev.new"
								],
								[
									"pdf.options\t{grDevices}",
									"pdf.options"
								],
								[
									"X11Fonts\t{grDevices}",
									"X11Fonts"
								],
								[
									"axisTicks\t{grDevices}",
									"axisTicks"
								],
								[
									"make.rgb\t{grDevices}",
									"make.rgb"
								],
								[
									".setClipPath\t{grDevices}",
									".setClipPath"
								],
								[
									"n2mfrow\t{grDevices}",
									"n2mfrow"
								],
								[
									"rgb\t{grDevices}",
									"rgb"
								],
								[
									"quartzFont\t{grDevices}",
									"quartzFont"
								],
								[
									"getGraphicsEvent\t{grDevices}",
									"getGraphicsEvent"
								],
								[
									"xyz.coords\t{grDevices}",
									"xyz.coords"
								],
								[
									"xyTable\t{grDevices}",
									"xyTable"
								],
								[
									"CIDFont\t{grDevices}",
									"CIDFont"
								],
								[
									"adjustcolor\t{grDevices}",
									"adjustcolor"
								],
								[
									"col2rgb\t{grDevices}",
									"col2rgb"
								],
								[
									"dev.prev\t{grDevices}",
									"dev.prev"
								],
								[
									"quartzFonts\t{grDevices}",
									"quartzFonts"
								],
								[
									"png\t{grDevices}",
									"png"
								],
								[
									"colorRampPalette\t{grDevices}",
									"colorRampPalette"
								],
								[
									"palette.pals\t{grDevices}",
									"palette.pals"
								],
								[
									"glyphInfo\t{grDevices}",
									"glyphInfo"
								],
								[
									".linearGradientPattern\t{grDevices}",
									".linearGradientPattern"
								],
								[
									"jpeg\t{grDevices}",
									"jpeg"
								],
								[
									"colorRamp\t{grDevices}",
									"colorRamp"
								],
								[
									"setGraphicsEventHandlers\t{grDevices}",
									"setGraphicsEventHandlers"
								],
								[
									"dev.control\t{grDevices}",
									"dev.control"
								],
								[
									"dev.print\t{grDevices}",
									"dev.print"
								],
								[
									"dev.copy2eps\t{grDevices}",
									"dev.copy2eps"
								],
								[
									"Type1Font\t{grDevices}",
									"Type1Font"
								],
								[
									"contourLines\t{grDevices}",
									"contourLines"
								],
								[
									"postscript\t{grDevices}",
									"postscript"
								],
								[
									"asOneSidedFormula\t{stats}",
									"asOneSidedFormula"
								],
								[
									"r2dtable\t{stats}",
									"r2dtable"
								],
								[
									"drop.terms\t{stats}",
									"drop.terms"
								],
								[
									"confint.lm\t{stats}",
									"confint.lm"
								],
								[
									"is.mts\t{stats}",
									"is.mts"
								],
								[
									"nlminb\t{stats}",
									"nlminb"
								],
								[
									"alias\t{stats}",
									"alias"
								],
								[
									"gaussian\t{stats}",
									"gaussian"
								],
								[
									"profile\t{stats}",
									"profile"
								],
								[
									"ls.diag\t{stats}",
									"ls.diag"
								],
								[
									"mahalanobis\t{stats}",
									"mahalanobis"
								],
								[
									"rmultinom\t{stats}",
									"rmultinom"
								],
								[
									"dpois\t{stats}",
									"dpois"
								],
								[
									"numericDeriv\t{stats}",
									"numericDeriv"
								],
								[
									"makepredictcall\t{stats}",
									"makepredictcall"
								],
								[
									"qlogis\t{stats}",
									"qlogis"
								],
								[
									"loadings\t{stats}",
									"loadings"
								],
								[
									"dlogis\t{stats}",
									"dlogis"
								],
								[
									"nlm\t{stats}",
									"nlm"
								],
								[
									"residuals.glm\t{stats}",
									"residuals.glm"
								],
								[
									"qcauchy\t{stats}",
									"qcauchy"
								],
								[
									"nextn\t{stats}",
									"nextn"
								],
								[
									"nls\t{stats}",
									"nls"
								],
								[
									"plot.stepfun\t{stats}",
									"plot.stepfun"
								],
								[
									"arima0.diag\t{stats}",
									"arima0.diag"
								],
								[
									"dummy.coef\t{stats}",
									"dummy.coef"
								],
								[
									"ftable\t{stats}",
									"ftable"
								],
								[
									"as.formula\t{stats}",
									"as.formula"
								],
								[
									"pairwise.wilcox.test\t{stats}",
									"pairwise.wilcox.test"
								],
								[
									"time\t{stats}",
									"time"
								],
								[
									"embed\t{stats}",
									"embed"
								],
								[
									"mantelhaen.test\t{stats}",
									"mantelhaen.test"
								],
								[
									"dwilcox\t{stats}",
									"dwilcox"
								],
								[
									"ar\t{stats}",
									"ar"
								],
								[
									"oneway.test\t{stats}",
									"oneway.test"
								],
								[
									"fligner.test\t{stats}",
									"fligner.test"
								],
								[
									"bw.bcv\t{stats}",
									"bw.bcv"
								],
								[
									"predict.glm\t{stats}",
									"predict.glm"
								],
								[
									"rWishart\t{stats}",
									"rWishart"
								],
								[
									"logLik\t{stats}",
									"logLik"
								],
								[
									"confint.default\t{stats}",
									"confint.default"
								],
								[
									"AIC\t{stats}",
									"AIC"
								],
								[
									"rlogis\t{stats}",
									"rlogis"
								],
								[
									"bw.ucv\t{stats}",
									"bw.ucv"
								],
								[
									"arima\t{stats}",
									"arima"
								],
								[
									"plot.ts\t{stats}",
									"plot.ts"
								],
								[
									"tsp\t{stats}",
									"tsp"
								],
								[
									"model.extract\t{stats}",
									"model.extract"
								],
								[
									"stat.anova\t{stats}",
									"stat.anova"
								],
								[
									"update.formula\t{stats}",
									"update.formula"
								],
								[
									"qbeta\t{stats}",
									"qbeta"
								],
								[
									"bw.SJ\t{stats}",
									"bw.SJ"
								],
								[
									"factanal\t{stats}",
									"factanal"
								],
								[
									"drop.scope\t{stats}",
									"drop.scope"
								],
								[
									"summary.aov\t{stats}",
									"summary.aov"
								],
								[
									"optimHess\t{stats}",
									"optimHess"
								],
								[
									".lm.fit\t{stats}",
									".lm.fit"
								],
								[
									"cooks.distance\t{stats}",
									"cooks.distance"
								],
								[
									"dnorm\t{stats}",
									"dnorm"
								],
								[
									"psmirnov\t{stats}",
									"psmirnov"
								],
								[
									"extractAIC\t{stats}",
									"extractAIC"
								],
								[
									"qbirthday\t{stats}",
									"qbirthday"
								],
								[
									"C\t{stats}",
									"C"
								],
								[
									"sortedXyData\t{stats}",
									"sortedXyData"
								],
								[
									"D\t{stats}",
									"D"
								],
								[
									"lowess\t{stats}",
									"lowess"
								],
								[
									"varimax\t{stats}",
									"varimax"
								],
								[
									"optimize\t{stats}",
									"optimize"
								],
								[
									"manova\t{stats}",
									"manova"
								],
								[
									"deviance\t{stats}",
									"deviance"
								],
								[
									"optim\t{stats}",
									"optim"
								],
								[
									"lag.plot\t{stats}",
									"lag.plot"
								],
								[
									"constrOptim\t{stats}",
									"constrOptim"
								],
								[
									"splinefunH\t{stats}",
									"splinefunH"
								],
								[
									"reformulate\t{stats}",
									"reformulate"
								],
								[
									"pacf\t{stats}",
									"pacf"
								],
								[
									"mcnemar.test\t{stats}",
									"mcnemar.test"
								],
								[
									"df\t{stats}",
									"df"
								],
								[
									"tsSmooth\t{stats}",
									"tsSmooth"
								],
								[
									"make.link\t{stats}",
									"make.link"
								],
								[
									"glm.control\t{stats}",
									"glm.control"
								],
								[
									"hasTsp\t{stats}",
									"hasTsp"
								],
								[
									"pgamma\t{stats}",
									"pgamma"
								],
								[
									"addmargins\t{stats}",
									"addmargins"
								],
								[
									"dexp\t{stats}",
									"dexp"
								],
								[
									"power.anova.test\t{stats}",
									"power.anova.test"
								],
								[
									"prop.test\t{stats}",
									"prop.test"
								],
								[
									"model.weights\t{stats}",
									"model.weights"
								],
								[
									"ave\t{stats}",
									"ave"
								],
								[
									"is.stepfun\t{stats}",
									"is.stepfun"
								],
								[
									"heatmap\t{stats}",
									"heatmap"
								],
								[
									"stepfun\t{stats}",
									"stepfun"
								],
								[
									"loess.smooth\t{stats}",
									"loess.smooth"
								],
								[
									"line\t{stats}",
									"line"
								],
								[
									"qqline\t{stats}",
									"qqline"
								],
								[
									"ar.mle\t{stats}",
									"ar.mle"
								],
								[
									"residuals\t{stats}",
									"residuals"
								],
								[
									"lsfit\t{stats}",
									"lsfit"
								],
								[
									"get_all_vars\t{stats}",
									"get_all_vars"
								],
								[
									"dt\t{stats}",
									"dt"
								],
								[
									"splinefun\t{stats}",
									"splinefun"
								],
								[
									"ks.test\t{stats}",
									"ks.test"
								],
								[
									"cor\t{stats}",
									"cor"
								],
								[
									"add.scope\t{stats}",
									"add.scope"
								],
								[
									"ecdf\t{stats}",
									"ecdf"
								],
								[
									"pwilcox\t{stats}",
									"pwilcox"
								],
								[
									"cov\t{stats}",
									"cov"
								],
								[
									"dendrapply\t{stats}",
									"dendrapply"
								],
								[
									"rsignrank\t{stats}",
									"rsignrank"
								],
								[
									"bandwidth.kernel\t{stats}",
									"bandwidth.kernel"
								],
								[
									"as.dist\t{stats}",
									"as.dist"
								],
								[
									"SSweibull\t{stats}",
									"SSweibull"
								],
								[
									"bw.nrd\t{stats}",
									"bw.nrd"
								],
								[
									"start\t{stats}",
									"start"
								],
								[
									"plnorm\t{stats}",
									"plnorm"
								],
								[
									"ts.union\t{stats}",
									"ts.union"
								],
								[
									"mvfft\t{stats}",
									"mvfft"
								],
								[
									"dweibull\t{stats}",
									"dweibull"
								],
								[
									"as.ts\t{stats}",
									"as.ts"
								],
								[
									"cor.test\t{stats}",
									"cor.test"
								],
								[
									".checkMFClasses\t{stats}",
									".checkMFClasses"
								],
								[
									"effects\t{stats}",
									"effects"
								],
								[
									"reorder\t{stats}",
									"reorder"
								],
								[
									"KalmanForecast\t{stats}",
									"KalmanForecast"
								],
								[
									"eff.aovlist\t{stats}",
									"eff.aovlist"
								],
								[
									"qgamma\t{stats}",
									"qgamma"
								],
								[
									"glm.fit\t{stats}",
									"glm.fit"
								],
								[
									"plot.spec.coherency\t{stats}",
									"plot.spec.coherency"
								],
								[
									"dgamma\t{stats}",
									"dgamma"
								],
								[
									"cov2cor\t{stats}",
									"cov2cor"
								],
								[
									"ls.print\t{stats}",
									"ls.print"
								],
								[
									"setNames\t{stats}",
									"setNames"
								],
								[
									"acf2AR\t{stats}",
									"acf2AR"
								],
								[
									"add1\t{stats}",
									"add1"
								],
								[
									"rcauchy\t{stats}",
									"rcauchy"
								],
								[
									"shapiro.test\t{stats}",
									"shapiro.test"
								],
								[
									"deriv3\t{stats}",
									"deriv3"
								],
								[
									"window\t{stats}",
									"window"
								],
								[
									"model.tables\t{stats}",
									"model.tables"
								],
								[
									"model.matrix\t{stats}",
									"model.matrix"
								],
								[
									".nknots.smspl\t{stats}",
									".nknots.smspl"
								],
								[
									"KalmanLike\t{stats}",
									"KalmanLike"
								],
								[
									"SSasymp\t{stats}",
									"SSasymp"
								],
								[
									"predict\t{stats}",
									"predict"
								],
								[
									"as.stepfun\t{stats}",
									"as.stepfun"
								],
								[
									"t.test\t{stats}",
									"t.test"
								],
								[
									"power.prop.test\t{stats}",
									"power.prop.test"
								],
								[
									"rstandard\t{stats}",
									"rstandard"
								],
								[
									"binom.test\t{stats}",
									"binom.test"
								],
								[
									"cophenetic\t{stats}",
									"cophenetic"
								],
								[
									"pbeta\t{stats}",
									"pbeta"
								],
								[
									"KalmanRun\t{stats}",
									"KalmanRun"
								],
								[
									"naprint\t{stats}",
									"naprint"
								],
								[
									"qlnorm\t{stats}",
									"qlnorm"
								],
								[
									"plclust\t{stats}",
									"plclust"
								],
								[
									"model.response\t{stats}",
									"model.response"
								],
								[
									"dlnorm\t{stats}",
									"dlnorm"
								],
								[
									"lag\t{stats}",
									"lag"
								],
								[
									"spec.pgram\t{stats}",
									"spec.pgram"
								],
								[
									"interaction.plot\t{stats}",
									"interaction.plot"
								],
								[
									"fitted\t{stats}",
									"fitted"
								],
								[
									"rgeom\t{stats}",
									"rgeom"
								],
								[
									"estVar\t{stats}",
									"estVar"
								],
								[
									"rgamma\t{stats}",
									"rgamma"
								],
								[
									"arima0\t{stats}",
									"arima0"
								],
								[
									"loglin\t{stats}",
									"loglin"
								],
								[
									"ar.yw\t{stats}",
									"ar.yw"
								],
								[
									"promax\t{stats}",
									"promax"
								],
								[
									"phyper\t{stats}",
									"phyper"
								],
								[
									"drop1\t{stats}",
									"drop1"
								],
								[
									"SSfol\t{stats}",
									"SSfol"
								],
								[
									"runif\t{stats}",
									"runif"
								],
								[
									"family\t{stats}",
									"family"
								],
								[
									"quantile\t{stats}",
									"quantile"
								],
								[
									"wilcox.test\t{stats}",
									"wilcox.test"
								],
								[
									"psignrank\t{stats}",
									"psignrank"
								],
								[
									"complete.cases\t{stats}",
									"complete.cases"
								],
								[
									"offset\t{stats}",
									"offset"
								],
								[
									"scatter.smooth\t{stats}",
									"scatter.smooth"
								],
								[
									"dmultinom\t{stats}",
									"dmultinom"
								],
								[
									"rlnorm\t{stats}",
									"rlnorm"
								],
								[
									"approx\t{stats}",
									"approx"
								],
								[
									"naresid\t{stats}",
									"naresid"
								],
								[
									"SSfpl\t{stats}",
									"SSfpl"
								],
								[
									"proj\t{stats}",
									"proj"
								],
								[
									"supsmu\t{stats}",
									"supsmu"
								],
								[
									"qqnorm\t{stats}",
									"qqnorm"
								],
								[
									"end\t{stats}",
									"end"
								],
								[
									"printCoefmat\t{stats}",
									"printCoefmat"
								],
								[
									"princomp\t{stats}",
									"princomp"
								],
								[
									"aggregate.data.frame\t{stats}",
									"aggregate.data.frame"
								],
								[
									"dnbinom\t{stats}",
									"dnbinom"
								],
								[
									"lm.influence\t{stats}",
									"lm.influence"
								],
								[
									"rect.hclust\t{stats}",
									"rect.hclust"
								],
								[
									"convolve\t{stats}",
									"convolve"
								],
								[
									"ansari.test\t{stats}",
									"ansari.test"
								],
								[
									"median.default\t{stats}",
									"median.default"
								],
								[
									"ARMAacf\t{stats}",
									"ARMAacf"
								],
								[
									"poly\t{stats}",
									"poly"
								],
								[
									"NLSstRtAsymptote\t{stats}",
									"NLSstRtAsymptote"
								],
								[
									"power.t.test\t{stats}",
									"power.t.test"
								],
								[
									"write.ftable\t{stats}",
									"write.ftable"
								],
								[
									"qhyper\t{stats}",
									"qhyper"
								],
								[
									"polym\t{stats}",
									"polym"
								],
								[
									"weights\t{stats}",
									"weights"
								],
								[
									"dhyper\t{stats}",
									"dhyper"
								],
								[
									"kernel\t{stats}",
									"kernel"
								],
								[
									"friedman.test\t{stats}",
									"friedman.test"
								],
								[
									"acf\t{stats}",
									"acf"
								],
								[
									"qwilcox\t{stats}",
									"qwilcox"
								],
								[
									"filter\t{stats}",
									"filter"
								],
								[
									"lm.fit\t{stats}",
									"lm.fit"
								],
								[
									"rpois\t{stats}",
									"rpois"
								],
								[
									"cmdscale\t{stats}",
									"cmdscale"
								],
								[
									"factor.scope\t{stats}",
									"factor.scope"
								],
								[
									"Gamma\t{stats}",
									"Gamma"
								],
								[
									"pweibull\t{stats}",
									"pweibull"
								],
								[
									"pchisq\t{stats}",
									"pchisq"
								],
								[
									"ksmooth\t{stats}",
									"ksmooth"
								],
								[
									"symnum\t{stats}",
									"symnum"
								],
								[
									"smooth\t{stats}",
									"smooth"
								],
								[
									"quasipoisson\t{stats}",
									"quasipoisson"
								],
								[
									"ppr\t{stats}",
									"ppr"
								],
								[
									"spec.ar\t{stats}",
									"spec.ar"
								],
								[
									"pnbinom\t{stats}",
									"pnbinom"
								],
								[
									"coefficients\t{stats}",
									"coefficients"
								],
								[
									"model.offset\t{stats}",
									"model.offset"
								],
								[
									"dbeta\t{stats}",
									"dbeta"
								],
								[
									"SSasympOff\t{stats}",
									"SSasympOff"
								],
								[
									"pbirthday\t{stats}",
									"pbirthday"
								],
								[
									"replications\t{stats}",
									"replications"
								],
								[
									"ar.ols\t{stats}",
									"ar.ols"
								],
								[
									"rhyper\t{stats}",
									"rhyper"
								],
								[
									"spectrum\t{stats}",
									"spectrum"
								],
								[
									"lm\t{stats}",
									"lm"
								],
								[
									"expand.model.frame\t{stats}",
									"expand.model.frame"
								],
								[
									"kernapply\t{stats}",
									"kernapply"
								],
								[
									"bw.nrd0\t{stats}",
									"bw.nrd0"
								],
								[
									"stl\t{stats}",
									"stl"
								],
								[
									"loess\t{stats}",
									"loess"
								],
								[
									"IQR\t{stats}",
									"IQR"
								],
								[
									"qgeom\t{stats}",
									"qgeom"
								],
								[
									"contr.helmert\t{stats}",
									"contr.helmert"
								],
								[
									"na.pass\t{stats}",
									"na.pass"
								],
								[
									"toeplitz\t{stats}",
									"toeplitz"
								],
								[
									"pairwise.t.test\t{stats}",
									"pairwise.t.test"
								],
								[
									"dist\t{stats}",
									"dist"
								],
								[
									".getXlevels\t{stats}",
									".getXlevels"
								],
								[
									"NLSstClosestX\t{stats}",
									"NLSstClosestX"
								],
								[
									"getInitial\t{stats}",
									"getInitial"
								],
								[
									"sigma\t{stats}",
									"sigma"
								],
								[
									"qchisq\t{stats}",
									"qchisq"
								],
								[
									"contr.poly\t{stats}",
									"contr.poly"
								],
								[
									"dchisq\t{stats}",
									"dchisq"
								],
								[
									"spline\t{stats}",
									"spline"
								],
								[
									"qunif\t{stats}",
									"qunif"
								],
								[
									"confint\t{stats}",
									"confint"
								],
								[
									"pairwise.table\t{stats}",
									"pairwise.table"
								],
								[
									"SSasympOrig\t{stats}",
									"SSasympOrig"
								],
								[
									"pexp\t{stats}",
									"pexp"
								],
								[
									"plot.spec.phase\t{stats}",
									"plot.spec.phase"
								],
								[
									"density.default\t{stats}",
									"density.default"
								],
								[
									"medpolish\t{stats}",
									"medpolish"
								],
								[
									"ptukey\t{stats}",
									"ptukey"
								],
								[
									"cancor\t{stats}",
									"cancor"
								],
								[
									"Box.test\t{stats}",
									"Box.test"
								],
								[
									"TukeyHSD\t{stats}",
									"TukeyHSD"
								],
								[
									"rnorm\t{stats}",
									"rnorm"
								],
								[
									"var.test\t{stats}",
									"var.test"
								],
								[
									"poisson\t{stats}",
									"poisson"
								],
								[
									"bartlett.test\t{stats}",
									"bartlett.test"
								],
								[
									"summary.stepfun\t{stats}",
									"summary.stepfun"
								],
								[
									"na.fail\t{stats}",
									"na.fail"
								],
								[
									"model.frame\t{stats}",
									"model.frame"
								],
								[
									"covratio\t{stats}",
									"covratio"
								],
								[
									"contrasts\t{stats}",
									"contrasts"
								],
								[
									"ar.burg\t{stats}",
									"ar.burg"
								],
								[
									"residuals.lm\t{stats}",
									"residuals.lm"
								],
								[
									"df.residual\t{stats}",
									"df.residual"
								],
								[
									"ts.intersect\t{stats}",
									"ts.intersect"
								],
								[
									"power\t{stats}",
									"power"
								],
								[
									"SSlogis\t{stats}",
									"SSlogis"
								],
								[
									"glm\t{stats}",
									"glm"
								],
								[
									"rchisq\t{stats}",
									"rchisq"
								],
								[
									"getCall\t{stats}",
									"getCall"
								],
								[
									"model.matrix.lm\t{stats}",
									"model.matrix.lm"
								],
								[
									"chisq.test\t{stats}",
									"chisq.test"
								],
								[
									"coef\t{stats}",
									"coef"
								],
								[
									"step\t{stats}",
									"step"
								],
								[
									"ppoints\t{stats}",
									"ppoints"
								],
								[
									"vcov\t{stats}",
									"vcov"
								],
								[
									".preformat.ts\t{stats}",
									".preformat.ts"
								],
								[
									"qqplot\t{stats}",
									"qqplot"
								],
								[
									"DF2formula\t{stats}",
									"DF2formula"
								],
								[
									"update.default\t{stats}",
									"update.default"
								],
								[
									"qtukey\t{stats}",
									"qtukey"
								],
								[
									"quade.test\t{stats}",
									"quade.test"
								],
								[
									"qpois\t{stats}",
									"qpois"
								],
								[
									"df.kernel\t{stats}",
									"df.kernel"
								],
								[
									"influence\t{stats}",
									"influence"
								],
								[
									"qsmirnov\t{stats}",
									"qsmirnov"
								],
								[
									"cutree\t{stats}",
									"cutree"
								],
								[
									"poisson.test\t{stats}",
									"poisson.test"
								],
								[
									"pf\t{stats}",
									"pf"
								],
								[
									"case.names\t{stats}",
									"case.names"
								],
								[
									"frequency\t{stats}",
									"frequency"
								],
								[
									"tsdiag\t{stats}",
									"tsdiag"
								],
								[
									"qweibull\t{stats}",
									"qweibull"
								],
								[
									"NLSstLfAsymptote\t{stats}",
									"NLSstLfAsymptote"
								],
								[
									"kmeans\t{stats}",
									"kmeans"
								],
								[
									"weighted.residuals\t{stats}",
									"weighted.residuals"
								],
								[
									"mauchly.test\t{stats}",
									"mauchly.test"
								],
								[
									"napredict\t{stats}",
									"napredict"
								],
								[
									"qexp\t{stats}",
									"qexp"
								],
								[
									"deriv\t{stats}",
									"deriv"
								],
								[
									"var\t{stats}",
									"var"
								],
								[
									"aggregate.ts\t{stats}",
									"aggregate.ts"
								],
								[
									"rwilcox\t{stats}",
									"rwilcox"
								],
								[
									"SSbiexp\t{stats}",
									"SSbiexp"
								],
								[
									"pt\t{stats}",
									"pt"
								],
								[
									"rsmirnov\t{stats}",
									"rsmirnov"
								],
								[
									"qf\t{stats}",
									"qf"
								],
								[
									"xtabs\t{stats}",
									"xtabs"
								],
								[
									"kruskal.test\t{stats}",
									"kruskal.test"
								],
								[
									"median\t{stats}",
									"median"
								],
								[
									"as.hclust\t{stats}",
									"as.hclust"
								],
								[
									"termplot\t{stats}",
									"termplot"
								],
								[
									"rweibull\t{stats}",
									"rweibull"
								],
								[
									"resid\t{stats}",
									"resid"
								],
								[
									"pgeom\t{stats}",
									"pgeom"
								],
								[
									"qnbinom\t{stats}",
									"qnbinom"
								],
								[
									"se.contrast\t{stats}",
									"se.contrast"
								],
								[
									"summary.manova\t{stats}",
									"summary.manova"
								],
								[
									"prcomp\t{stats}",
									"prcomp"
								],
								[
									"preplot\t{stats}",
									"preplot"
								],
								[
									"plot.ecdf\t{stats}",
									"plot.ecdf"
								],
								[
									"arima.sim\t{stats}",
									"arima.sim"
								],
								[
									"lm.wfit\t{stats}",
									"lm.wfit"
								],
								[
									"ccf\t{stats}",
									"ccf"
								],
								[
									"is.leaf\t{stats}",
									"is.leaf"
								],
								[
									"na.action\t{stats}",
									"na.action"
								],
								[
									"screeplot\t{stats}",
									"screeplot"
								],
								[
									"approxfun\t{stats}",
									"approxfun"
								],
								[
									"NLSstAsymptotic\t{stats}",
									"NLSstAsymptotic"
								],
								[
									"order.dendrogram\t{stats}",
									"order.dendrogram"
								],
								[
									"cycle\t{stats}",
									"cycle"
								],
								[
									"qt\t{stats}",
									"qt"
								],
								[
									"rf\t{stats}",
									"rf"
								],
								[
									"punif\t{stats}",
									"punif"
								],
								[
									"quasi\t{stats}",
									"quasi"
								],
								[
									"ts.plot\t{stats}",
									"ts.plot"
								],
								[
									"cov.wt\t{stats}",
									"cov.wt"
								],
								[
									"mood.test\t{stats}",
									"mood.test"
								],
								[
									"PP.test\t{stats}",
									"PP.test"
								],
								[
									"is.empty.model\t{stats}",
									"is.empty.model"
								],
								[
									"loess.control\t{stats}",
									"loess.control"
								],
								[
									"decompose\t{stats}",
									"decompose"
								],
								[
									"aggregate\t{stats}",
									"aggregate"
								],
								[
									"BIC\t{stats}",
									"BIC"
								],
								[
									"reshape\t{stats}",
									"reshape"
								],
								[
									"makeARIMA\t{stats}",
									"makeARIMA"
								],
								[
									"ARMAtoMA\t{stats}",
									"ARMAtoMA"
								],
								[
									"weighted.mean\t{stats}",
									"weighted.mean"
								],
								[
									"pbinom\t{stats}",
									"pbinom"
								],
								[
									"selfStart\t{stats}",
									"selfStart"
								],
								[
									"SSgompertz\t{stats}",
									"SSgompertz"
								],
								[
									"qnorm\t{stats}",
									"qnorm"
								],
								[
									"inverse.gaussian\t{stats}",
									"inverse.gaussian"
								],
								[
									"na.omit\t{stats}",
									"na.omit"
								],
								[
									"sd\t{stats}",
									"sd"
								],
								[
									"rt\t{stats}",
									"rt"
								],
								[
									"fft\t{stats}",
									"fft"
								],
								[
									"dcauchy\t{stats}",
									"dcauchy"
								],
								[
									"fivenum\t{stats}",
									"fivenum"
								],
								[
									"toeplitz2\t{stats}",
									"toeplitz2"
								],
								[
									"relevel\t{stats}",
									"relevel"
								],
								[
									"summary.glm\t{stats}",
									"summary.glm"
								],
								[
									"rexp\t{stats}",
									"rexp"
								],
								[
									"monthplot\t{stats}",
									"monthplot"
								],
								[
									"dfbeta\t{stats}",
									"dfbeta"
								],
								[
									"diffinv\t{stats}",
									"diffinv"
								],
								[
									"nobs\t{stats}",
									"nobs"
								],
								[
									"SSmicmen\t{stats}",
									"SSmicmen"
								],
								[
									"is.ts\t{stats}",
									"is.ts"
								],
								[
									"dummy.coef.lm\t{stats}",
									"dummy.coef.lm"
								],
								[
									"hatvalues\t{stats}",
									"hatvalues"
								],
								[
									"variable.names\t{stats}",
									"variable.names"
								],
								[
									"Pair\t{stats}",
									"Pair"
								],
								[
									"model.frame.default\t{stats}",
									"model.frame.default"
								],
								[
									"anova\t{stats}",
									"anova"
								],
								[
									"simulate\t{stats}",
									"simulate"
								],
								[
									"dffits\t{stats}",
									"dffits"
								],
								[
									"model.matrix.default\t{stats}",
									"model.matrix.default"
								],
								[
									"contr.SAS\t{stats}",
									"contr.SAS"
								],
								[
									"contr.treatment\t{stats}",
									"contr.treatment"
								],
								[
									"predict.lm\t{stats}",
									"predict.lm"
								],
								[
									"prop.trend.test\t{stats}",
									"prop.trend.test"
								],
								[
									"as.dendrogram\t{stats}",
									"as.dendrogram"
								],
								[
									"ppois\t{stats}",
									"ppois"
								],
								[
									"pcauchy\t{stats}",
									"pcauchy"
								],
								[
									"smoothEnds\t{stats}",
									"smoothEnds"
								],
								[
									"qbinom\t{stats}",
									"qbinom"
								],
								[
									"hat\t{stats}",
									"hat"
								],
								[
									"p.adjust\t{stats}",
									"p.adjust"
								],
								[
									".MFclass\t{stats}",
									".MFclass"
								],
								[
									"dbinom\t{stats}",
									"dbinom"
								],
								[
									"terms.formula\t{stats}",
									"terms.formula"
								],
								[
									"spec.taper\t{stats}",
									"spec.taper"
								],
								[
									"HoltWinters\t{stats}",
									"HoltWinters"
								],
								[
									"ts\t{stats}",
									"ts"
								],
								[
									"na.exclude\t{stats}",
									"na.exclude"
								],
								[
									"dsignrank\t{stats}",
									"dsignrank"
								],
								[
									"is.tskernel\t{stats}",
									"is.tskernel"
								],
								[
									"fitted.values\t{stats}",
									"fitted.values"
								],
								[
									"qsignrank\t{stats}",
									"qsignrank"
								],
								[
									"integrate\t{stats}",
									"integrate"
								],
								[
									"optimise\t{stats}",
									"optimise"
								],
								[
									"binomial\t{stats}",
									"binomial"
								],
								[
									"KalmanSmooth\t{stats}",
									"KalmanSmooth"
								],
								[
									".vcov.aliased\t{stats}",
									".vcov.aliased"
								],
								[
									"deltat\t{stats}",
									"deltat"
								],
								[
									"p.adjust.methods\t{stats}",
									"p.adjust.methods"
								],
								[
									"SSD\t{stats}",
									"SSD"
								],
								[
									"summary.lm\t{stats}",
									"summary.lm"
								],
								[
									"smooth.spline\t{stats}",
									"smooth.spline"
								],
								[
									"rstudent\t{stats}",
									"rstudent"
								],
								[
									"hclust\t{stats}",
									"hclust"
								],
								[
									"density\t{stats}",
									"density"
								],
								[
									"dgeom\t{stats}",
									"dgeom"
								],
								[
									"terms\t{stats}",
									"terms"
								],
								[
									"fisher.test\t{stats}",
									"fisher.test"
								],
								[
									"rbinom\t{stats}",
									"rbinom"
								],
								[
									"formula\t{stats}",
									"formula"
								],
								[
									"nls.control\t{stats}",
									"nls.control"
								],
								[
									"isoreg\t{stats}",
									"isoreg"
								],
								[
									"contr.sum\t{stats}",
									"contr.sum"
								],
								[
									"uniroot\t{stats}",
									"uniroot"
								],
								[
									"quasibinomial\t{stats}",
									"quasibinomial"
								],
								[
									"dunif\t{stats}",
									"dunif"
								],
								[
									"influence.measures\t{stats}",
									"influence.measures"
								],
								[
									"na.contiguous\t{stats}",
									"na.contiguous"
								],
								[
									"dfbetas\t{stats}",
									"dfbetas"
								],
								[
									"pairwise.prop.test\t{stats}",
									"pairwise.prop.test"
								],
								[
									"rnbinom\t{stats}",
									"rnbinom"
								],
								[
									"pnorm\t{stats}",
									"pnorm"
								],
								[
									"rbeta\t{stats}",
									"rbeta"
								],
								[
									"cpgram\t{stats}",
									"cpgram"
								],
								[
									"knots\t{stats}",
									"knots"
								],
								[
									"biplot\t{stats}",
									"biplot"
								],
								[
									"runmed\t{stats}",
									"runmed"
								],
								[
									"mad\t{stats}",
									"mad"
								],
								[
									"delete.response\t{stats}",
									"delete.response"
								],
								[
									"plogis\t{stats}",
									"plogis"
								],
								[
									"read.ftable\t{stats}",
									"read.ftable"
								],
								[
									"aov\t{stats}",
									"aov"
								],
								[
									"update\t{stats}",
									"update"
								],
								[
									"StructTS\t{stats}",
									"StructTS"
								],
								[
									"polypath\t{graphics}",
									"polypath"
								],
								[
									"sunflowerplot\t{graphics}",
									"sunflowerplot"
								],
								[
									"plot.new\t{graphics}",
									"plot.new"
								],
								[
									"layout.show\t{graphics}",
									"layout.show"
								],
								[
									"matplot\t{graphics}",
									"matplot"
								],
								[
									"boxplot\t{graphics}",
									"boxplot"
								],
								[
									"panel.smooth\t{graphics}",
									"panel.smooth"
								],
								[
									"box\t{graphics}",
									"box"
								],
								[
									"lcm\t{graphics}",
									"lcm"
								],
								[
									"locator\t{graphics}",
									"locator"
								],
								[
									"plot.design\t{graphics}",
									"plot.design"
								],
								[
									"barplot.default\t{graphics}",
									"barplot.default"
								],
								[
									"axis.POSIXct\t{graphics}",
									"axis.POSIXct"
								],
								[
									"curve\t{graphics}",
									"curve"
								],
								[
									"matpoints\t{graphics}",
									"matpoints"
								],
								[
									"plot.default\t{graphics}",
									"plot.default"
								],
								[
									"pairs.default\t{graphics}",
									"pairs.default"
								],
								[
									"coplot\t{graphics}",
									"coplot"
								],
								[
									"par\t{graphics}",
									"par"
								],
								[
									"co.intervals\t{graphics}",
									"co.intervals"
								],
								[
									"hist.default\t{graphics}",
									"hist.default"
								],
								[
									"xyinch\t{graphics}",
									"xyinch"
								],
								[
									"mtext\t{graphics}",
									"mtext"
								],
								[
									"frame\t{graphics}",
									"frame"
								],
								[
									"screen\t{graphics}",
									"screen"
								],
								[
									"image.default\t{graphics}",
									"image.default"
								],
								[
									"boxplot.default\t{graphics}",
									"boxplot.default"
								],
								[
									"stem\t{graphics}",
									"stem"
								],
								[
									"polygon\t{graphics}",
									"polygon"
								],
								[
									"stars\t{graphics}",
									"stars"
								],
								[
									"lines\t{graphics}",
									"lines"
								],
								[
									"symbols\t{graphics}",
									"symbols"
								],
								[
									"pairs\t{graphics}",
									"pairs"
								],
								[
									"points\t{graphics}",
									"points"
								],
								[
									"grconvertX\t{graphics}",
									"grconvertX"
								],
								[
									"assocplot\t{graphics}",
									"assocplot"
								],
								[
									"spineplot\t{graphics}",
									"spineplot"
								],
								[
									"grconvertY\t{graphics}",
									"grconvertY"
								],
								[
									"title\t{graphics}",
									"title"
								],
								[
									"barplot\t{graphics}",
									"barplot"
								],
								[
									"persp\t{graphics}",
									"persp"
								],
								[
									"legend\t{graphics}",
									"legend"
								],
								[
									"identify\t{graphics}",
									"identify"
								],
								[
									"image\t{graphics}",
									"image"
								],
								[
									"filled.contour\t{graphics}",
									"filled.contour"
								],
								[
									"lines.default\t{graphics}",
									"lines.default"
								],
								[
									"hist\t{graphics}",
									"hist"
								],
								[
									"stripchart\t{graphics}",
									"stripchart"
								],
								[
									"contour\t{graphics}",
									"contour"
								],
								[
									"plot.function\t{graphics}",
									"plot.function"
								],
								[
									"mosaicplot\t{graphics}",
									"mosaicplot"
								],
								[
									"fourfoldplot\t{graphics}",
									"fourfoldplot"
								],
								[
									"split.screen\t{graphics}",
									"split.screen"
								],
								[
									"smoothScatter\t{graphics}",
									"smoothScatter"
								],
								[
									"matlines\t{graphics}",
									"matlines"
								],
								[
									"axTicks\t{graphics}",
									"axTicks"
								],
								[
									"arrows\t{graphics}",
									"arrows"
								],
								[
									"text.default\t{graphics}",
									"text.default"
								],
								[
									"points.default\t{graphics}",
									"points.default"
								],
								[
									"xinch\t{graphics}",
									"xinch"
								],
								[
									"dotchart\t{graphics}",
									"dotchart"
								],
								[
									"strheight\t{graphics}",
									"strheight"
								],
								[
									"rect\t{graphics}",
									"rect"
								],
								[
									"grid\t{graphics}",
									"grid"
								],
								[
									".filled.contour\t{graphics}",
									".filled.contour"
								],
								[
									"close.screen\t{graphics}",
									"close.screen"
								],
								[
									"axis\t{graphics}",
									"axis"
								],
								[
									"layout\t{graphics}",
									"layout"
								],
								[
									"contour.default\t{graphics}",
									"contour.default"
								],
								[
									"cdplot\t{graphics}",
									"cdplot"
								],
								[
									"pie\t{graphics}",
									"pie"
								],
								[
									"xspline\t{graphics}",
									"xspline"
								],
								[
									"text\t{graphics}",
									"text"
								],
								[
									"strwidth\t{graphics}",
									"strwidth"
								],
								[
									"axis.Date\t{graphics}",
									"axis.Date"
								],
								[
									"boxplot.matrix\t{graphics}",
									"boxplot.matrix"
								],
								[
									"bxp\t{graphics}",
									"bxp"
								],
								[
									"abline\t{graphics}",
									"abline"
								],
								[
									"plot.xy\t{graphics}",
									"plot.xy"
								],
								[
									"rasterImage\t{graphics}",
									"rasterImage"
								],
								[
									"segments\t{graphics}",
									"segments"
								],
								[
									"yinch\t{graphics}",
									"yinch"
								],
								[
									"plot\t{graphics}",
									"plot"
								],
								[
									"plot.window\t{graphics}",
									"plot.window"
								],
								[
									"clip\t{graphics}",
									"clip"
								],
								[
									"erase.screen\t{graphics}",
									"erase.screen"
								],
								[
									"rug\t{graphics}",
									"rug"
								],
								[
									"Axis\t{graphics}",
									"Axis"
								],
								[
									".__C__signature\t{methods}",
									".__C__signature"
								],
								[
									".ShortPrimitiveSkeletons\t{methods}",
									".ShortPrimitiveSkeletons"
								],
								[
									"showExtends\t{methods}",
									"showExtends"
								],
								[
									".__C__packageInfo\t{methods}",
									".__C__packageInfo"
								],
								[
									".__C__MethodSelectionReport\t{methods}",
									".__C__MethodSelectionReport"
								],
								[
									".__C__uninitializedField\t{methods}",
									".__C__uninitializedField"
								],
								[
									"extends\t{methods}",
									"extends"
								],
								[
									".__C__ordered\t{methods}",
									".__C__ordered"
								],
								[
									".__C__oldClass\t{methods}",
									".__C__oldClass"
								],
								[
									"addNextMethod\t{methods}",
									"addNextMethod"
								],
								[
									".__C__groupGenericFunction\t{methods}",
									".__C__groupGenericFunction"
								],
								[
									"getGenerics\t{methods}",
									"getGenerics"
								],
								[
									".__C__standardGeneric\t{methods}",
									".__C__standardGeneric"
								],
								[
									".__C__nonstandardGroupGenericFunction\t{methods}",
									".__C__nonstandardGroupGenericFunction"
								],
								[
									"makeExtends\t{methods}",
									"makeExtends"
								],
								[
									".__C__S3\t{methods}",
									".__C__S3"
								],
								[
									".__C__array\t{methods}",
									".__C__array"
								],
								[
									".__C__S4\t{methods}",
									".__C__S4"
								],
								[
									".EmptyPrimitiveSkeletons\t{methods}",
									".EmptyPrimitiveSkeletons"
								],
								[
									".__C__SuperClassMethod\t{methods}",
									".__C__SuperClassMethod"
								],
								[
									"showMlist\t{methods}",
									"showMlist"
								],
								[
									"setAs\t{methods}",
									"setAs"
								],
								[
									".__C__aov\t{methods}",
									".__C__aov"
								],
								[
									"resetClass\t{methods}",
									"resetClass"
								],
								[
									"assignMethodsMetaData\t{methods}",
									"assignMethodsMetaData"
								],
								[
									".__C__integrate\t{methods}",
									".__C__integrate"
								],
								[
									"getDataPart\t{methods}",
									"getDataPart"
								],
								[
									".__C__listOfMethods\t{methods}",
									".__C__listOfMethods"
								],
								[
									".__C__ClassUnionRepresentation\t{methods}",
									".__C__ClassUnionRepresentation"
								],
								[
									"findMethodSignatures\t{methods}",
									"findMethodSignatures"
								],
								[
									"getGroupMembers\t{methods}",
									"getGroupMembers"
								],
								[
									"signature\t{methods}",
									"signature"
								],
								[
									"setReplaceMethod\t{methods}",
									"setReplaceMethod"
								],
								[
									"removeClass\t{methods}",
									"removeClass"
								],
								[
									"implicitGeneric\t{methods}",
									"implicitGeneric"
								],
								[
									".OldClassesList\t{methods}",
									".OldClassesList"
								],
								[
									".__C__refObject\t{methods}",
									".__C__refObject"
								],
								[
									"cacheMetaData\t{methods}",
									"cacheMetaData"
								],
								[
									"el\t{methods}",
									"el"
								],
								[
									"callGeneric\t{methods}",
									"callGeneric"
								],
								[
									"showClass\t{methods}",
									"showClass"
								],
								[
									"Complex\t{methods}",
									"Complex"
								],
								[
									".__C__.Other\t{methods}",
									".__C__.Other"
								],
								[
									".__C__classPrototypeDef\t{methods}",
									".__C__classPrototypeDef"
								],
								[
									".__C__ts\t{methods}",
									".__C__ts"
								],
								[
									"evalSource\t{methods}",
									"evalSource"
								],
								[
									"kronecker\t{methods}",
									"kronecker"
								],
								[
									"resetGeneric\t{methods}",
									"resetGeneric"
								],
								[
									"possibleExtends\t{methods}",
									"possibleExtends"
								],
								[
									".__C__table\t{methods}",
									".__C__table"
								],
								[
									"missingArg\t{methods}",
									"missingArg"
								],
								[
									"Quote\t{methods}",
									"Quote"
								],
								[
									"registerImplicitGenerics\t{methods}",
									"registerImplicitGenerics"
								],
								[
									".__C__double\t{methods}",
									".__C__double"
								],
								[
									"isClassDef\t{methods}",
									"isClassDef"
								],
								[
									"initRefFields\t{methods}",
									"initRefFields"
								],
								[
									".__C__environment\t{methods}",
									".__C__environment"
								],
								[
									"insertMethod\t{methods}",
									"insertMethod"
								],
								[
									"findFunction\t{methods}",
									"findFunction"
								],
								[
									"externalRefMethod\t{methods}",
									"externalRefMethod"
								],
								[
									"fixPre1.8\t{methods}",
									"fixPre1.8"
								],
								[
									"checkAtAssignment\t{methods}",
									"checkAtAssignment"
								],
								[
									".__C__Date\t{methods}",
									".__C__Date"
								],
								[
									"finalDefaultMethod\t{methods}",
									"finalDefaultMethod"
								],
								[
									".__C__character\t{methods}",
									".__C__character"
								],
								[
									"isClass\t{methods}",
									"isClass"
								],
								[
									"completeClassDefinition\t{methods}",
									"completeClassDefinition"
								],
								[
									"callNextMethod\t{methods}",
									"callNextMethod"
								],
								[
									"isVirtualClass\t{methods}",
									"isVirtualClass"
								],
								[
									"slotNames\t{methods}",
									"slotNames"
								],
								[
									"getSlots\t{methods}",
									"getSlots"
								],
								[
									".__C__LinearMethodsList\t{methods}",
									".__C__LinearMethodsList"
								],
								[
									"selectSuperClasses\t{methods}",
									"selectSuperClasses"
								],
								[
									"removeMethods\t{methods}",
									"removeMethods"
								],
								[
									".classEnv\t{methods}",
									".classEnv"
								],
								[
									".__C__structure\t{methods}",
									".__C__structure"
								],
								[
									"evalOnLoad\t{methods}",
									"evalOnLoad"
								],
								[
									"cbind2\t{methods}",
									"cbind2"
								],
								[
									".__C__lm\t{methods}",
									".__C__lm"
								],
								[
									".__C__dump.frames\t{methods}",
									".__C__dump.frames"
								],
								[
									"setClassUnion\t{methods}",
									"setClassUnion"
								],
								[
									".__C__density\t{methods}",
									".__C__density"
								],
								[
									".hasSlot\t{methods}",
									".hasSlot"
								],
								[
									"initialize\t{methods}",
									"initialize"
								],
								[
									"Summary\t{methods}",
									"Summary"
								],
								[
									"representation\t{methods}",
									"representation"
								],
								[
									"getClass\t{methods}",
									"getClass"
								],
								[
									"method.skeleton\t{methods}",
									"method.skeleton"
								],
								[
									".__C__vector\t{methods}",
									".__C__vector"
								],
								[
									"setRefClass\t{methods}",
									"setRefClass"
								],
								[
									"Math2\t{methods}",
									"Math2"
								],
								[
									"getMethods\t{methods}",
									"getMethods"
								],
								[
									".__C__repeat\t{methods}",
									".__C__repeat"
								],
								[
									".__C__MethodsList\t{methods}",
									".__C__MethodsList"
								],
								[
									"Logic\t{methods}",
									"Logic"
								],
								[
									"matchSignature\t{methods}",
									"matchSignature"
								],
								[
									".__C__className\t{methods}",
									".__C__className"
								],
								[
									"methodsPackageMetaName\t{methods}",
									"methodsPackageMetaName"
								],
								[
									"defaultDumpName\t{methods}",
									"defaultDumpName"
								],
								[
									".__C__name\t{methods}",
									".__C__name"
								],
								[
									"getGroup\t{methods}",
									"getGroup"
								],
								[
									".__C__ObjectsWithPackage\t{methods}",
									".__C__ObjectsWithPackage"
								],
								[
									".__C__glm.null\t{methods}",
									".__C__glm.null"
								],
								[
									"substituteDirect\t{methods}",
									"substituteDirect"
								],
								[
									"packageSlot\t{methods}",
									"packageSlot"
								],
								[
									".__C__defaultBindingFunction\t{methods}",
									".__C__defaultBindingFunction"
								],
								[
									"removeMethod\t{methods}",
									"removeMethod"
								],
								[
									".__C__special\t{methods}",
									".__C__special"
								],
								[
									".__C__SealedMethodDefinition\t{methods}",
									".__C__SealedMethodDefinition"
								],
								[
									"MethodsListSelect\t{methods}",
									"MethodsListSelect"
								],
								[
									"S3Part\t{methods}",
									"S3Part"
								],
								[
									".__C__list\t{methods}",
									".__C__list"
								],
								[
									".__C__NULL\t{methods}",
									".__C__NULL"
								],
								[
									"is\t{methods}",
									"is"
								],
								[
									"checkSlotAssignment\t{methods}",
									"checkSlotAssignment"
								],
								[
									"classMetaName\t{methods}",
									"classMetaName"
								],
								[
									"slotsFromS3\t{methods}",
									"slotsFromS3"
								],
								[
									"promptMethods\t{methods}",
									"promptMethods"
								],
								[
									"insertClassMethods\t{methods}",
									"insertClassMethods"
								],
								[
									"isXS3Class\t{methods}",
									"isXS3Class"
								],
								[
									"isRematched\t{methods}",
									"isRematched"
								],
								[
									".__C__.environment\t{methods}",
									".__C__.environment"
								],
								[
									".selectSuperClasses\t{methods}",
									".selectSuperClasses"
								],
								[
									".__C__genericFunctionWithTrace\t{methods}",
									".__C__genericFunctionWithTrace"
								],
								[
									".__C__anova\t{methods}",
									".__C__anova"
								],
								[
									".__C__socket\t{methods}",
									".__C__socket"
								],
								[
									"emptyMethodsList\t{methods}",
									"emptyMethodsList"
								],
								[
									"listFromMethods\t{methods}",
									"listFromMethods"
								],
								[
									"isGeneric\t{methods}",
									"isGeneric"
								],
								[
									".__C__refGeneratorSlot\t{methods}",
									".__C__refGeneratorSlot"
								],
								[
									".__C__integer\t{methods}",
									".__C__integer"
								],
								[
									"show\t{methods}",
									"show"
								],
								[
									"metaNameUndo\t{methods}",
									"metaNameUndo"
								],
								[
									".untracedFunction\t{methods}",
									".untracedFunction"
								],
								[
									"getMethodsForDispatch\t{methods}",
									"getMethodsForDispatch"
								],
								[
									".__C__packageIQR\t{methods}",
									".__C__packageIQR"
								],
								[
									".__C__envRefClass\t{methods}",
									".__C__envRefClass"
								],
								[
									"Math\t{methods}",
									"Math"
								],
								[
									"makePrototypeFromClassDef\t{methods}",
									"makePrototypeFromClassDef"
								],
								[
									"slot\t{methods}",
									"slot"
								],
								[
									".__C__complex\t{methods}",
									".__C__complex"
								],
								[
									"reconcilePropertiesAndPrototype\t{methods}",
									"reconcilePropertiesAndPrototype"
								],
								[
									"doPrimitiveMethod\t{methods}",
									"doPrimitiveMethod"
								],
								[
									"getValidity\t{methods}",
									"getValidity"
								],
								[
									".__C__classRepresentation\t{methods}",
									".__C__classRepresentation"
								],
								[
									"SignatureMethod\t{methods}",
									"SignatureMethod"
								],
								[
									".__C__libraryIQR\t{methods}",
									".__C__libraryIQR"
								],
								[
									"isSealedMethod\t{methods}",
									"isSealedMethod"
								],
								[
									"getPackageName\t{methods}",
									"getPackageName"
								],
								[
									".__C__OptionalFunction\t{methods}",
									".__C__OptionalFunction"
								],
								[
									"setIs\t{methods}",
									"setIs"
								],
								[
									"balanceMethodsList\t{methods}",
									"balanceMethodsList"
								],
								[
									".__C__missing\t{methods}",
									".__C__missing"
								],
								[
									"setLoadActions\t{methods}",
									"setLoadActions"
								],
								[
									"setDataPart\t{methods}",
									"setDataPart"
								],
								[
									".__C__refMethodDef\t{methods}",
									".__C__refMethodDef"
								],
								[
									"setGroupGeneric\t{methods}",
									"setGroupGeneric"
								],
								[
									".__C__genericFunction\t{methods}",
									".__C__genericFunction"
								],
								[
									"S3Class\t{methods}",
									"S3Class"
								],
								[
									"findUnique\t{methods}",
									"findUnique"
								],
								[
									".__C__classGeneratorFunction\t{methods}",
									".__C__classGeneratorFunction"
								],
								[
									"dumpMethods\t{methods}",
									"dumpMethods"
								],
								[
									".__C__raw\t{methods}",
									".__C__raw"
								],
								[
									".__C__mlm\t{methods}",
									".__C__mlm"
								],
								[
									"sigToEnv\t{methods}",
									"sigToEnv"
								],
								[
									"setGenericImplicit\t{methods}",
									"setGenericImplicit"
								],
								[
									".__C__POSIXct\t{methods}",
									".__C__POSIXct"
								],
								[
									"sealClass\t{methods}",
									"sealClass"
								],
								[
									".__C__groupGenericFunctionWithTrace\t{methods}",
									".__C__groupGenericFunctionWithTrace"
								],
								[
									"hasArg\t{methods}",
									"hasArg"
								],
								[
									"makeStandardGeneric\t{methods}",
									"makeStandardGeneric"
								],
								[
									"selectMethod\t{methods}",
									"selectMethod"
								],
								[
									"loadMethod\t{methods}",
									"loadMethod"
								],
								[
									"getLoadActions\t{methods}",
									"getLoadActions"
								],
								[
									"prohibitGeneric\t{methods}",
									"prohibitGeneric"
								],
								[
									"substituteFunctionArgs\t{methods}",
									"substituteFunctionArgs"
								],
								[
									"completeExtends\t{methods}",
									"completeExtends"
								],
								[
									"assignClassDef\t{methods}",
									"assignClassDef"
								],
								[
									"methodSignatureMatrix\t{methods}",
									"methodSignatureMatrix"
								],
								[
									"isGrammarSymbol\t{methods}",
									"isGrammarSymbol"
								],
								[
									"prototype\t{methods}",
									"prototype"
								],
								[
									"requireMethods\t{methods}",
									"requireMethods"
								],
								[
									".__C__data.frameRowLabels\t{methods}",
									".__C__data.frameRowLabels"
								],
								[
									".__C__activeBindingFunction\t{methods}",
									".__C__activeBindingFunction"
								],
								[
									".__C__externalptr\t{methods}",
									".__C__externalptr"
								],
								[
									".__C__.name\t{methods}",
									".__C__.name"
								],
								[
									"setOldClass\t{methods}",
									"setOldClass"
								],
								[
									"setPrimitiveMethods\t{methods}",
									"setPrimitiveMethods"
								],
								[
									".__C__recordedplot\t{methods}",
									".__C__recordedplot"
								],
								[
									"isGroup\t{methods}",
									"isGroup"
								],
								[
									"getAllSuperClasses\t{methods}",
									"getAllSuperClasses"
								],
								[
									".__C__localRefClass\t{methods}",
									".__C__localRefClass"
								],
								[
									"findMethods\t{methods}",
									"findMethods"
								],
								[
									"rematchDefinition\t{methods}",
									"rematchDefinition"
								],
								[
									"MethodAddCoerce\t{methods}",
									"MethodAddCoerce"
								],
								[
									".__C__POSIXt\t{methods}",
									".__C__POSIXt"
								],
								[
									".__C__summary.table\t{methods}",
									".__C__summary.table"
								],
								[
									"hasMethod\t{methods}",
									"hasMethod"
								],
								[
									".__C__language\t{methods}",
									".__C__language"
								],
								[
									".__C__refClass\t{methods}",
									".__C__refClass"
								],
								[
									"evalqOnLoad\t{methods}",
									"evalqOnLoad"
								],
								[
									"insertSource\t{methods}",
									"insertSource"
								],
								[
									"hasLoadAction\t{methods}",
									"hasLoadAction"
								],
								[
									".__C__numeric\t{methods}",
									".__C__numeric"
								],
								[
									".__C__derivedDefaultMethodWithTrace\t{methods}",
									".__C__derivedDefaultMethodWithTrace"
								],
								[
									".__C__externalRefMethod\t{methods}",
									".__C__externalRefMethod"
								],
								[
									"validSlotNames\t{methods}",
									"validSlotNames"
								],
								[
									"multipleClasses\t{methods}",
									"multipleClasses"
								],
								[
									"empty.dump\t{methods}",
									"empty.dump"
								],
								[
									"setPackageName\t{methods}",
									"setPackageName"
								],
								[
									".__C__MethodDefinitionWithTrace\t{methods}",
									".__C__MethodDefinitionWithTrace"
								],
								[
									".__C__maov\t{methods}",
									".__C__maov"
								],
								[
									".__C__standardGenericWithTrace\t{methods}",
									".__C__standardGenericWithTrace"
								],
								[
									"getClassDef\t{methods}",
									"getClassDef"
								],
								[
									"newEmptyObject\t{methods}",
									"newEmptyObject"
								],
								[
									"formalArgs\t{methods}",
									"formalArgs"
								],
								[
									"Arith\t{methods}",
									"Arith"
								],
								[
									"mergeMethods\t{methods}",
									"mergeMethods"
								],
								[
									"MethodsList\t{methods}",
									"MethodsList"
								],
								[
									"getRefClass\t{methods}",
									"getRefClass"
								],
								[
									"inheritedSlotNames\t{methods}",
									"inheritedSlotNames"
								],
								[
									".__C__.NULL\t{methods}",
									".__C__.NULL"
								],
								[
									".__C__PossibleMethod\t{methods}",
									".__C__PossibleMethod"
								],
								[
									"classesToAM\t{methods}",
									"classesToAM"
								],
								[
									".__C__functionWithTrace\t{methods}",
									".__C__functionWithTrace"
								],
								[
									"asMethodDefinition\t{methods}",
									"asMethodDefinition"
								],
								[
									".__C__factor\t{methods}",
									".__C__factor"
								],
								[
									".__C__sourceEnvironment\t{methods}",
									".__C__sourceEnvironment"
								],
								[
									"languageEl\t{methods}",
									"languageEl"
								],
								[
									"Ops\t{methods}",
									"Ops"
								],
								[
									"getMethod\t{methods}",
									"getMethod"
								],
								[
									".__C__MethodDefinition\t{methods}",
									".__C__MethodDefinition"
								],
								[
									"listFromMlist\t{methods}",
									"listFromMlist"
								],
								[
									"allNames\t{methods}",
									"allNames"
								],
								[
									".__C__mts\t{methods}",
									".__C__mts"
								],
								[
									".__C__mtable\t{methods}",
									".__C__mtable"
								],
								[
									"completeSubclasses\t{methods}",
									"completeSubclasses"
								],
								[
									"cacheGenericsMetaData\t{methods}",
									"cacheGenericsMetaData"
								],
								[
									".__C__data.frame\t{methods}",
									".__C__data.frame"
								],
								[
									"tryNew\t{methods}",
									"tryNew"
								],
								[
									"findClass\t{methods}",
									"findClass"
								],
								[
									"cacheMethod\t{methods}",
									"cacheMethod"
								],
								[
									"showDefault\t{methods}",
									"showDefault"
								],
								[
									"Compare\t{methods}",
									"Compare"
								],
								[
									"new\t{methods}",
									"new"
								],
								[
									".__C__if\t{methods}",
									".__C__if"
								],
								[
									".__C__EmptyMethodsList\t{methods}",
									".__C__EmptyMethodsList"
								],
								[
									"makeClassRepresentation\t{methods}",
									"makeClassRepresentation"
								],
								[
									"promptClass\t{methods}",
									"promptClass"
								],
								[
									".__C__optionalMethod\t{methods}",
									".__C__optionalMethod"
								],
								[
									"newClassRepresentation\t{methods}",
									"newClassRepresentation"
								],
								[
									".S4methods\t{methods}",
									".S4methods"
								],
								[
									".__C__ANY\t{methods}",
									".__C__ANY"
								],
								[
									"testVirtual\t{methods}",
									"testVirtual"
								],
								[
									".__C__refClassRepresentation\t{methods}",
									".__C__refClassRepresentation"
								],
								[
									".__C__conditionalExtension\t{methods}",
									".__C__conditionalExtension"
								],
								[
									"linearizeMlist\t{methods}",
									"linearizeMlist"
								],
								[
									"removeGeneric\t{methods}",
									"removeGeneric"
								],
								[
									"canCoerce\t{methods}",
									"canCoerce"
								],
								[
									".__C__traceable\t{methods}",
									".__C__traceable"
								],
								[
									".__C__MethodWithNextWithTrace\t{methods}",
									".__C__MethodWithNextWithTrace"
								],
								[
									"rbind2\t{methods}",
									"rbind2"
								],
								[
									".__C__anova.glm.null\t{methods}",
									".__C__anova.glm.null"
								],
								[
									".__C__.externalptr\t{methods}",
									".__C__.externalptr"
								],
								[
									".__C__matrix\t{methods}",
									".__C__matrix"
								],
								[
									"setValidity\t{methods}",
									"setValidity"
								],
								[
									"functionBody\t{methods}",
									"functionBody"
								],
								[
									".__C__hsearch\t{methods}",
									".__C__hsearch"
								],
								[
									".__C__function\t{methods}",
									".__C__function"
								],
								[
									"getGeneric\t{methods}",
									"getGeneric"
								],
								[
									".__C__POSIXlt\t{methods}",
									".__C__POSIXlt"
								],
								[
									"dumpMethod\t{methods}",
									"dumpMethod"
								],
								[
									"elNamed\t{methods}",
									"elNamed"
								],
								[
									".__C__logical\t{methods}",
									".__C__logical"
								],
								[
									".__C__nonstandardGenericWithTrace\t{methods}",
									".__C__nonstandardGenericWithTrace"
								],
								[
									".__C__summaryDefault\t{methods}",
									".__C__summaryDefault"
								],
								[
									".__C__derivedDefaultMethod\t{methods}",
									".__C__derivedDefaultMethod"
								],
								[
									".__C__nonstandardGeneric\t{methods}",
									".__C__nonstandardGeneric"
								],
								[
									".doTracePrint\t{methods}",
									".doTracePrint"
								],
								[
									".__C__glm\t{methods}",
									".__C__glm"
								],
								[
									".__C__nonstandardGenericFunction\t{methods}",
									".__C__nonstandardGenericFunction"
								],
								[
									".__C__refObjectGenerator\t{methods}",
									".__C__refObjectGenerator"
								],
								[
									".__C__builtin\t{methods}",
									".__C__builtin"
								],
								[
									"setClass\t{methods}",
									"setClass"
								],
								[
									".__C__for\t{methods}",
									".__C__for"
								],
								[
									"isSealedClass\t{methods}",
									"isSealedClass"
								],
								[
									"generic.skeleton\t{methods}",
									"generic.skeleton"
								],
								[
									".__C__internalDispatchMethod\t{methods}",
									".__C__internalDispatchMethod"
								],
								[
									".__C__anova.glm\t{methods}",
									".__C__anova.glm"
								],
								[
									"makeGeneric\t{methods}",
									"makeGeneric"
								],
								[
									"setMethod\t{methods}",
									"setMethod"
								],
								[
									"isClassUnion\t{methods}",
									"isClassUnion"
								],
								[
									"coerce\t{methods}",
									"coerce"
								],
								[
									"initFieldArgs\t{methods}",
									"initFieldArgs"
								],
								[
									".valueClassTest\t{methods}",
									".valueClassTest"
								],
								[
									"validObject\t{methods}",
									"validObject"
								],
								[
									"getClasses\t{methods}",
									"getClasses"
								],
								[
									"setGeneric\t{methods}",
									"setGeneric"
								],
								[
									"unRematchDefinition\t{methods}",
									"unRematchDefinition"
								],
								[
									".__C__nonStructure\t{methods}",
									".__C__nonStructure"
								],
								[
									"hasMethods\t{methods}",
									"hasMethods"
								],
								[
									".__C__call\t{methods}",
									".__C__call"
								],
								[
									"existsFunction\t{methods}",
									"existsFunction"
								],
								[
									"classLabel\t{methods}",
									"classLabel"
								],
								[
									"defaultPrototype\t{methods}",
									"defaultPrototype"
								],
								[
									".__C__MethodWithNext\t{methods}",
									".__C__MethodWithNext"
								],
								[
									".__C__rle\t{methods}",
									".__C__rle"
								],
								[
									"showMethods\t{methods}",
									"showMethods"
								],
								[
									".__C__logLik\t{methods}",
									".__C__logLik"
								],
								[
									".__C__namedList\t{methods}",
									".__C__namedList"
								],
								[
									".__C__formula\t{methods}",
									".__C__formula"
								],
								[
									"findMethod\t{methods}",
									"findMethod"
								],
								[
									"testInheritedMethods\t{methods}",
									"testInheritedMethods"
								],
								[
									"as\t{methods}",
									"as"
								],
								[
									"conformMethod\t{methods}",
									"conformMethod"
								],
								[
									"makeMethodsList\t{methods}",
									"makeMethodsList"
								],
								[
									"newBasic\t{methods}",
									"newBasic"
								],
								[
									".__C__while\t{methods}",
									".__C__while"
								],
								[
									".slotNames\t{methods}",
									".slotNames"
								],
								[
									"className\t{methods}",
									"className"
								],
								[
									".__C__expression\t{methods}",
									".__C__expression"
								],
								[
									".__C__refMethodDefWithTrace\t{methods}",
									".__C__refMethodDefWithTrace"
								],
								[
									"setLoadAction\t{methods}",
									"setLoadAction"
								],
								[
									".__C__VIRTUAL\t{methods}",
									".__C__VIRTUAL"
								],
								[
									"superClassDepth\t{methods}",
									"superClassDepth"
								],
								[
									".__C__SClassExtension\t{methods}",
									".__C__SClassExtension"
								],
								[
									"existsMethod\t{methods}",
									"existsMethod"
								],
								[
									"getFunction\t{methods}",
									"getFunction"
								],
								[
									"getMethodsMetaData\t{methods}",
									"getMethodsMetaData"
								],
								[
									"write.socket\t{utils}",
									"write.socket"
								],
								[
									"fixInNamespace\t{utils}",
									"fixInNamespace"
								],
								[
									"changedFiles\t{utils}",
									"changedFiles"
								],
								[
									"history\t{utils}",
									"history"
								],
								[
									"SweaveHooks\t{utils}",
									"SweaveHooks"
								],
								[
									"packageDate\t{utils}",
									"packageDate"
								],
								[
									"installed.packages\t{utils}",
									"installed.packages"
								],
								[
									"citEntry\t{utils}",
									"citEntry"
								],
								[
									"as.roman\t{utils}",
									"as.roman"
								],
								[
									".romans\t{utils}",
									".romans"
								],
								[
									"suppressForeignCheck\t{utils}",
									"suppressForeignCheck"
								],
								[
									"aregexec\t{utils}",
									"aregexec"
								],
								[
									"txtProgressBar\t{utils}",
									"txtProgressBar"
								],
								[
									"strcapture\t{utils}",
									"strcapture"
								],
								[
									"xemacs\t{utils}",
									"xemacs"
								],
								[
									"rtags\t{utils}",
									"rtags"
								],
								[
									"as.person\t{utils}",
									"as.person"
								],
								[
									"maintainer\t{utils}",
									"maintainer"
								],
								[
									"aspell\t{utils}",
									"aspell"
								],
								[
									"bug.report\t{utils}",
									"bug.report"
								],
								[
									"capture.output\t{utils}",
									"capture.output"
								],
								[
									"remhash\t{utils}",
									"remhash"
								],
								[
									"assignInMyNamespace\t{utils}",
									"assignInMyNamespace"
								],
								[
									"aspell_package_vignettes\t{utils}",
									"aspell_package_vignettes"
								],
								[
									"memory.limit\t{utils}",
									"memory.limit"
								],
								[
									"person\t{utils}",
									"person"
								],
								[
									"ls.str\t{utils}",
									"ls.str"
								],
								[
									"read.delim2\t{utils}",
									"read.delim2"
								],
								[
									"RweaveLatexWritedoc\t{utils}",
									"RweaveLatexWritedoc"
								],
								[
									"hasName\t{utils}",
									"hasName"
								],
								[
									"getTxtProgressBar\t{utils}",
									"getTxtProgressBar"
								],
								[
									"news\t{utils}",
									"news"
								],
								[
									"typhash\t{utils}",
									"typhash"
								],
								[
									"read.csv\t{utils}",
									"read.csv"
								],
								[
									"RSiteSearch\t{utils}",
									"RSiteSearch"
								],
								[
									"debugger\t{utils}",
									"debugger"
								],
								[
									"demo\t{utils}",
									"demo"
								],
								[
									"isS3stdGeneric\t{utils}",
									"isS3stdGeneric"
								],
								[
									"Sweave\t{utils}",
									"Sweave"
								],
								[
									"nsl\t{utils}",
									"nsl"
								],
								[
									"modifyList\t{utils}",
									"modifyList"
								],
								[
									"promptData\t{utils}",
									"promptData"
								],
								[
									"help.request\t{utils}",
									"help.request"
								],
								[
									"alarm\t{utils}",
									"alarm"
								],
								[
									".DollarNames\t{utils}",
									".DollarNames"
								],
								[
									"promptImport\t{utils}",
									"promptImport"
								],
								[
									"close.socket\t{utils}",
									"close.socket"
								],
								[
									"read.csv2\t{utils}",
									"read.csv2"
								],
								[
									"zip\t{utils}",
									"zip"
								],
								[
									"hsearch_db_concepts\t{utils}",
									"hsearch_db_concepts"
								],
								[
									"assignInNamespace\t{utils}",
									"assignInNamespace"
								],
								[
									"askYesNo\t{utils}",
									"askYesNo"
								],
								[
									"read.delim\t{utils}",
									"read.delim"
								],
								[
									"limitedLabels\t{utils}",
									"limitedLabels"
								],
								[
									"is.relistable\t{utils}",
									"is.relistable"
								],
								[
									"toLatex\t{utils}",
									"toLatex"
								],
								[
									"citFooter\t{utils}",
									"citFooter"
								],
								[
									"head.matrix\t{utils}",
									"head.matrix"
								],
								[
									"View\t{utils}",
									"View"
								],
								[
									"findMatches\t{utils}",
									"findMatches"
								],
								[
									"create.post\t{utils}",
									"create.post"
								],
								[
									"globalVariables\t{utils}",
									"globalVariables"
								],
								[
									"vi\t{utils}",
									"vi"
								],
								[
									"bibentry\t{utils}",
									"bibentry"
								],
								[
									"checkCRAN\t{utils}",
									"checkCRAN"
								],
								[
									"Stangle\t{utils}",
									"Stangle"
								],
								[
									"methods\t{utils}",
									"methods"
								],
								[
									"sethash\t{utils}",
									"sethash"
								],
								[
									"type.convert\t{utils}",
									"type.convert"
								],
								[
									"findLineNum\t{utils}",
									"findLineNum"
								],
								[
									"menu\t{utils}",
									"menu"
								],
								[
									"aspell_package_C_files\t{utils}",
									"aspell_package_C_files"
								],
								[
									"old.packages\t{utils}",
									"old.packages"
								],
								[
									"hsearch_db_keywords\t{utils}",
									"hsearch_db_keywords"
								],
								[
									"RShowDoc\t{utils}",
									"RShowDoc"
								],
								[
									"browseURL\t{utils}",
									"browseURL"
								],
								[
									"debugcall\t{utils}",
									"debugcall"
								],
								[
									"is.hashtab\t{utils}",
									"is.hashtab"
								],
								[
									"gethash\t{utils}",
									"gethash"
								],
								[
									"setTxtProgressBar\t{utils}",
									"setTxtProgressBar"
								],
								[
									"tail\t{utils}",
									"tail"
								],
								[
									"emacs\t{utils}",
									"emacs"
								],
								[
									"object.size\t{utils}",
									"object.size"
								],
								[
									"RweaveTryStop\t{utils}",
									"RweaveTryStop"
								],
								[
									"undebugcall\t{utils}",
									"undebugcall"
								],
								[
									"download.file\t{utils}",
									"download.file"
								],
								[
									"loadhistory\t{utils}",
									"loadhistory"
								],
								[
									"RweaveChunkPrefix\t{utils}",
									"RweaveChunkPrefix"
								],
								[
									"summaryRprof\t{utils}",
									"summaryRprof"
								],
								[
									"make.socket\t{utils}",
									"make.socket"
								],
								[
									"xedit\t{utils}",
									"xedit"
								],
								[
									"data\t{utils}",
									"data"
								],
								[
									"charClass\t{utils}",
									"charClass"
								],
								[
									"RtangleSetup\t{utils}",
									"RtangleSetup"
								],
								[
									"browseEnv\t{utils}",
									"browseEnv"
								],
								[
									"update.packages\t{utils}",
									"update.packages"
								],
								[
									"untar\t{utils}",
									"untar"
								],
								[
									"tail.matrix\t{utils}",
									"tail.matrix"
								],
								[
									"getS3method\t{utils}",
									"getS3method"
								],
								[
									"write.table\t{utils}",
									"write.table"
								],
								[
									"strOptions\t{utils}",
									"strOptions"
								],
								[
									"rc.status\t{utils}",
									"rc.status"
								],
								[
									"asDateBuilt\t{utils}",
									"asDateBuilt"
								],
								[
									"Rprofmem\t{utils}",
									"Rprofmem"
								],
								[
									"apropos\t{utils}",
									"apropos"
								],
								[
									"getSrcDirectory\t{utils}",
									"getSrcDirectory"
								],
								[
									"as.relistable\t{utils}",
									"as.relistable"
								],
								[
									"SweaveSyntaxNoweb\t{utils}",
									"SweaveSyntaxNoweb"
								],
								[
									"SweaveSyntaxLatex\t{utils}",
									"SweaveSyntaxLatex"
								],
								[
									"citeNatbib\t{utils}",
									"citeNatbib"
								],
								[
									"read.fwf\t{utils}",
									"read.fwf"
								],
								[
									"de.setup\t{utils}",
									"de.setup"
								],
								[
									"removeSource\t{utils}",
									"removeSource"
								],
								[
									"data.entry\t{utils}",
									"data.entry"
								],
								[
									"packageVersion\t{utils}",
									"packageVersion"
								],
								[
									"as.personList\t{utils}",
									"as.personList"
								],
								[
									"citation\t{utils}",
									"citation"
								],
								[
									"citHeader\t{utils}",
									"citHeader"
								],
								[
									"read.fortran\t{utils}",
									"read.fortran"
								],
								[
									"findCRANmirror\t{utils}",
									"findCRANmirror"
								],
								[
									"aspell_package_R_files\t{utils}",
									"aspell_package_R_files"
								],
								[
									"RtangleFinish\t{utils}",
									"RtangleFinish"
								],
								[
									"hashtab\t{utils}",
									"hashtab"
								],
								[
									"rc.getOption\t{utils}",
									"rc.getOption"
								],
								[
									"RtangleWritedoc\t{utils}",
									"RtangleWritedoc"
								],
								[
									"readCitationFile\t{utils}",
									"readCitationFile"
								],
								[
									"stack\t{utils}",
									"stack"
								],
								[
									"package.skeleton\t{utils}",
									"package.skeleton"
								],
								[
									"memory.size\t{utils}",
									"memory.size"
								],
								[
									"de.ncols\t{utils}",
									"de.ncols"
								],
								[
									"file.edit\t{utils}",
									"file.edit"
								],
								[
									"sessionInfo\t{utils}",
									"sessionInfo"
								],
								[
									"SweaveSyntConv\t{utils}",
									"SweaveSyntConv"
								],
								[
									"RweaveLatex\t{utils}",
									"RweaveLatex"
								],
								[
									"help\t{utils}",
									"help"
								],
								[
									"prompt\t{utils}",
									"prompt"
								],
								[
									"getParseText\t{utils}",
									"getParseText"
								],
								[
									"osVersion\t{utils}",
									"osVersion"
								],
								[
									".AtNames\t{utils}",
									".AtNames"
								],
								[
									"url.show\t{utils}",
									"url.show"
								],
								[
									"getCRANmirrors\t{utils}",
									"getCRANmirrors"
								],
								[
									"head\t{utils}",
									"head"
								],
								[
									"localeToCharset\t{utils}",
									"localeToCharset"
								],
								[
									"Rprof\t{utils}",
									"Rprof"
								],
								[
									"getParseData\t{utils}",
									"getParseData"
								],
								[
									"RweaveLatexSetup\t{utils}",
									"RweaveLatexSetup"
								],
								[
									"formatOL\t{utils}",
									"formatOL"
								],
								[
									"dump.frames\t{utils}",
									"dump.frames"
								],
								[
									"read.table\t{utils}",
									"read.table"
								],
								[
									"URLdecode\t{utils}",
									"URLdecode"
								],
								[
									"numhash\t{utils}",
									"numhash"
								],
								[
									"isS3method\t{utils}",
									"isS3method"
								],
								[
									"compareVersion\t{utils}",
									"compareVersion"
								],
								[
									"count.fields\t{utils}",
									"count.fields"
								],
								[
									"tar\t{utils}",
									"tar"
								],
								[
									"setRepositories\t{utils}",
									"setRepositories"
								],
								[
									"edit\t{utils}",
									"edit"
								],
								[
									"mirror2html\t{utils}",
									"mirror2html"
								],
								[
									"relist\t{utils}",
									"relist"
								],
								[
									"chooseBioCmirror\t{utils}",
									"chooseBioCmirror"
								],
								[
									"available.packages\t{utils}",
									"available.packages"
								],
								[
									"aspell_write_personal_dictionary_file\t{utils}",
									"aspell_write_personal_dictionary_file"
								],
								[
									"getAnywhere\t{utils}",
									"getAnywhere"
								],
								[
									"hsearch_db\t{utils}",
									"hsearch_db"
								],
								[
									"personList\t{utils}",
									"personList"
								],
								[
									"fileSnapshot\t{utils}",
									"fileSnapshot"
								],
								[
									"combn\t{utils}",
									"combn"
								],
								[
									"packageStatus\t{utils}",
									"packageStatus"
								],
								[
									"read.socket\t{utils}",
									"read.socket"
								],
								[
									"find\t{utils}",
									"find"
								],
								[
									"RweaveLatexOptions\t{utils}",
									"RweaveLatexOptions"
								],
								[
									"page\t{utils}",
									"page"
								],
								[
									"write.csv\t{utils}",
									"write.csv"
								],
								[
									"dataentry\t{utils}",
									"dataentry"
								],
								[
									"getSrcFilename\t{utils}",
									"getSrcFilename"
								],
								[
									"packageDescription\t{utils}",
									"packageDescription"
								],
								[
									"file_test\t{utils}",
									"file_test"
								],
								[
									"toBibtex\t{utils}",
									"toBibtex"
								],
								[
									"browseVignettes\t{utils}",
									"browseVignettes"
								],
								[
									"setBreakpoint\t{utils}",
									"setBreakpoint"
								],
								[
									"download.packages\t{utils}",
									"download.packages"
								],
								[
									"remove.packages\t{utils}",
									"remove.packages"
								],
								[
									"RweaveLatexFinish\t{utils}",
									"RweaveLatexFinish"
								],
								[
									"chooseCRANmirror\t{utils}",
									"chooseCRANmirror"
								],
								[
									"upgrade\t{utils}",
									"upgrade"
								],
								[
									"de\t{utils}",
									"de"
								],
								[
									".RtangleCodeLabel\t{utils}",
									".RtangleCodeLabel"
								],
								[
									"formatUL\t{utils}",
									"formatUL"
								],
								[
									"de.restore\t{utils}",
									"de.restore"
								],
								[
									"promptPackage\t{utils}",
									"promptPackage"
								],
								[
									"write.csv2\t{utils}",
									"write.csv2"
								],
								[
									"Rtangle\t{utils}",
									"Rtangle"
								],
								[
									"packageName\t{utils}",
									"packageName"
								],
								[
									"glob2rx\t{utils}",
									"glob2rx"
								],
								[
									"unstack\t{utils}",
									"unstack"
								],
								[
									"read.DIF\t{utils}",
									"read.DIF"
								],
								[
									"savehistory\t{utils}",
									"savehistory"
								],
								[
									"vignette\t{utils}",
									"vignette"
								],
								[
									"install.packages\t{utils}",
									"install.packages"
								],
								[
									".S3methods\t{utils}",
									".S3methods"
								],
								[
									"argsAnywhere\t{utils}",
									"argsAnywhere"
								],
								[
									"help.search\t{utils}",
									"help.search"
								],
								[
									"getSrcref\t{utils}",
									"getSrcref"
								],
								[
									"makeRweaveLatexCodeRunner\t{utils}",
									"makeRweaveLatexCodeRunner"
								],
								[
									"RweaveEvalWithOpt\t{utils}",
									"RweaveEvalWithOpt"
								],
								[
									"lsf.str\t{utils}",
									"lsf.str"
								],
								[
									"select.list\t{utils}",
									"select.list"
								],
								[
									"cite\t{utils}",
									"cite"
								],
								[
									"recover\t{utils}",
									"recover"
								],
								[
									"fix\t{utils}",
									"fix"
								],
								[
									"new.packages\t{utils}",
									"new.packages"
								],
								[
									"aspell_package_Rd_files\t{utils}",
									"aspell_package_Rd_files"
								],
								[
									"str\t{utils}",
									"str"
								],
								[
									"RtangleRuncode\t{utils}",
									"RtangleRuncode"
								],
								[
									"process.events\t{utils}",
									"process.events"
								],
								[
									"example\t{utils}",
									"example"
								],
								[
									"warnErrList\t{utils}",
									"warnErrList"
								],
								[
									"getSrcLocation\t{utils}",
									"getSrcLocation"
								],
								[
									"flush.console\t{utils}",
									"flush.console"
								],
								[
									"maphash\t{utils}",
									"maphash"
								],
								[
									"timestamp\t{utils}",
									"timestamp"
								],
								[
									"make.packages.html\t{utils}",
									"make.packages.html"
								],
								[
									"rc.options\t{utils}",
									"rc.options"
								],
								[
									"getFromNamespace\t{utils}",
									"getFromNamespace"
								],
								[
									"clrhash\t{utils}",
									"clrhash"
								],
								[
									"adist\t{utils}",
									"adist"
								],
								[
									"contrib.url\t{utils}",
									"contrib.url"
								],
								[
									"URLencode\t{utils}",
									"URLencode"
								],
								[
									"rc.settings\t{utils}",
									"rc.settings"
								],
								[
									"help.start\t{utils}",
									"help.start"
								],
								[
									"unzip\t{utils}",
									"unzip"
								],
								[
									"pico\t{utils}",
									"pico"
								],
								[
									"-\t{base}",
									"-"
								],
								[
									"as.matrix.data.frame\t{base}",
									"as.matrix.data.frame"
								],
								[
									"F\t{base}",
									"F"
								],
								[
									"I\t{base}",
									"I"
								],
								[
									"registerS3methods\t{base}",
									"registerS3methods"
								],
								[
									"as.POSIXct.Date\t{base}",
									"as.POSIXct.Date"
								],
								[
									"T\t{base}",
									"T"
								],
								[
									"c\t{base}",
									"c"
								],
								[
									"q\t{base}",
									"q"
								],
								[
									"t\t{base}",
									"t"
								],
								[
									"array2DF\t{base}",
									"array2DF"
								],
								[
									"qr.solve\t{base}",
									"qr.solve"
								],
								[
									"str2expression\t{base}",
									"str2expression"
								],
								[
									"dynGet\t{base}",
									"dynGet"
								],
								[
									"as.single\t{base}",
									"as.single"
								],
								[
									"interaction\t{base}",
									"interaction"
								],
								[
									"as.POSIXlt.default\t{base}",
									"as.POSIXlt.default"
								],
								[
									"gamma\t{base}",
									"gamma"
								],
								[
									"as.package_version\t{base}",
									"as.package_version"
								],
								[
									".GlobalEnv\t{base}",
									".GlobalEnv"
								],
								[
									"getNativeSymbolInfo\t{base}",
									"getNativeSymbolInfo"
								],
								[
									"print.srcfile\t{base}",
									"print.srcfile"
								],
								[
									"packageHasNamespace\t{base}",
									"packageHasNamespace"
								],
								[
									".handleSimpleError\t{base}",
									".handleSimpleError"
								],
								[
									"xtfrm.AsIs\t{base}",
									"xtfrm.AsIs"
								],
								[
									"file.choose\t{base}",
									"file.choose"
								],
								[
									"summary.connection\t{base}",
									"summary.connection"
								],
								[
									".C\t{base}",
									".C"
								],
								[
									"subset.default\t{base}",
									"subset.default"
								],
								[
									"warningCondition\t{base}",
									"warningCondition"
								],
								[
									"utf8ToInt\t{base}",
									"utf8ToInt"
								],
								[
									"baseenv\t{base}",
									"baseenv"
								],
								[
									".set_row_names\t{base}",
									".set_row_names"
								],
								[
									"Ops.POSIXt\t{base}",
									"Ops.POSIXt"
								],
								[
									"quote\t{base}",
									"quote"
								],
								[
									"inverse.rle\t{base}",
									"inverse.rle"
								],
								[
									"memory.profile\t{base}",
									"memory.profile"
								],
								[
									"split.POSIXct\t{base}",
									"split.POSIXct"
								],
								[
									"unique.numeric_version\t{base}",
									"unique.numeric_version"
								],
								[
									"infoRDS\t{base}",
									"infoRDS"
								],
								[
									"length.POSIXlt\t{base}",
									"length.POSIXlt"
								],
								[
									"getOption\t{base}",
									"getOption"
								],
								[
									"Im\t{base}",
									"Im"
								],
								[
									"qr.Q\t{base}",
									"qr.Q"
								],
								[
									"qr.R\t{base}",
									"qr.R"
								],
								[
									"rapply\t{base}",
									"rapply"
								],
								[
									"qr.X\t{base}",
									"qr.X"
								],
								[
									"library.dynam\t{base}",
									"library.dynam"
								],
								[
									"evalq\t{base}",
									"evalq"
								],
								[
									"units.difftime\t{base}",
									"units.difftime"
								],
								[
									"Re\t{base}",
									"Re"
								],
								[
									"package_version\t{base}",
									"package_version"
								],
								[
									"is.name\t{base}",
									"is.name"
								],
								[
									"as.data.frame.matrix\t{base}",
									"as.data.frame.matrix"
								],
								[
									".NotYetImplemented\t{base}",
									".NotYetImplemented"
								],
								[
									"LETTERS\t{base}",
									"LETTERS"
								],
								[
									"unique.array\t{base}",
									"unique.array"
								],
								[
									".LC.categories\t{base}",
									".LC.categories"
								],
								[
									"dimnames.data.frame\t{base}",
									"dimnames.data.frame"
								],
								[
									"require\t{base}",
									"require"
								],
								[
									"parse\t{base}",
									"parse"
								],
								[
									"by\t{base}",
									"by"
								],
								[
									"gc\t{base}",
									"gc"
								],
								[
									"gl\t{base}",
									"gl"
								],
								[
									"if\t{base}",
									"if"
								],
								[
									"ls\t{base}",
									"ls"
								],
								[
									"unique.warnings\t{base}",
									"unique.warnings"
								],
								[
									"pi\t{base}",
									"pi"
								],
								[
									"gzcon\t{base}",
									"gzcon"
								],
								[
									"qr\t{base}",
									"qr"
								],
								[
									"lapply\t{base}",
									"lapply"
								],
								[
									"rm\t{base}",
									"rm"
								],
								[
									"paste\t{base}",
									"paste"
								],
								[
									"match\t{base}",
									"match"
								],
								[
									"order\t{base}",
									"order"
								],
								[
									"xpdrows.data.frame\t{base}",
									"xpdrows.data.frame"
								],
								[
									"rank\t{base}",
									"rank"
								],
								[
									"seq.default\t{base}",
									"seq.default"
								],
								[
									"startsWith\t{base}",
									"startsWith"
								],
								[
									".noGenerics\t{base}",
									".noGenerics"
								],
								[
									"aperm.default\t{base}",
									"aperm.default"
								],
								[
									"kronecker\t{base}",
									"kronecker"
								],
								[
									"traceback\t{base}",
									"traceback"
								],
								[
									"as.character.hexmode\t{base}",
									"as.character.hexmode"
								],
								[
									"simpleError\t{base}",
									"simpleError"
								],
								[
									"warnings\t{base}",
									"warnings"
								],
								[
									"as.Date.POSIXct\t{base}",
									"as.Date.POSIXct"
								],
								[
									"kappa.qr\t{base}",
									"kappa.qr"
								],
								[
									"isNamespace\t{base}",
									"isNamespace"
								],
								[
									"is.finite.POSIXlt\t{base}",
									"is.finite.POSIXlt"
								],
								[
									"colMeans\t{base}",
									"colMeans"
								],
								[
									"as.Date.POSIXlt\t{base}",
									"as.Date.POSIXlt"
								],
								[
									"asNamespace\t{base}",
									"asNamespace"
								],
								[
									"xtfrm.difftime\t{base}",
									"xtfrm.difftime"
								],
								[
									"quit\t{base}",
									"quit"
								],
								[
									"kappa.lm\t{base}",
									"kappa.lm"
								],
								[
									"setSessionTimeLimit\t{base}",
									"setSessionTimeLimit"
								],
								[
									"find.package\t{base}",
									"find.package"
								],
								[
									"weekdays.POSIXt\t{base}",
									"weekdays.POSIXt"
								],
								[
									"eval\t{base}",
									"eval"
								],
								[
									"c.numeric_version\t{base}",
									"c.numeric_version"
								],
								[
									"deparse1\t{base}",
									"deparse1"
								],
								[
									"split.Date\t{base}",
									"split.Date"
								],
								[
									"readChar\t{base}",
									"readChar"
								],
								[
									"autoloader\t{base}",
									"autoloader"
								],
								[
									"untracemem\t{base}",
									"untracemem"
								],
								[
									"Encoding\t{base}",
									"Encoding"
								],
								[
									"debuggingState\t{base}",
									"debuggingState"
								],
								[
									"do.call\t{base}",
									"do.call"
								],
								[
									".cache_class\t{base}",
									".cache_class"
								],
								[
									".getRequiredPackages2\t{base}",
									".getRequiredPackages2"
								],
								[
									"chooseOpsMethod.default\t{base}",
									"chooseOpsMethod.default"
								],
								[
									"levels.default\t{base}",
									"levels.default"
								],
								[
									"computeRestarts\t{base}",
									"computeRestarts"
								],
								[
									"readBin\t{base}",
									"readBin"
								],
								[
									"as.double.difftime\t{base}",
									"as.double.difftime"
								],
								[
									"sys.call\t{base}",
									"sys.call"
								],
								[
									"path.expand\t{base}",
									"path.expand"
								],
								[
									"fifo\t{base}",
									"fifo"
								],
								[
									"substitute\t{base}",
									"substitute"
								],
								[
									"data.matrix\t{base}",
									"data.matrix"
								],
								[
									"all.equal.formula\t{base}",
									"all.equal.formula"
								],
								[
									"as.logical.factor\t{base}",
									"as.logical.factor"
								],
								[
									"file\t{base}",
									"file"
								],
								[
									"srcfilealias\t{base}",
									"srcfilealias"
								],
								[
									"determinant\t{base}",
									"determinant"
								],
								[
									"print.noquote\t{base}",
									"print.noquote"
								],
								[
									"by.default\t{base}",
									"by.default"
								],
								[
									"Ops.ordered\t{base}",
									"Ops.ordered"
								],
								[
									"getNamespace\t{base}",
									"getNamespace"
								],
								[
									"as.POSIXct.default\t{base}",
									"as.POSIXct.default"
								],
								[
									"conditionMessage.condition\t{base}",
									"conditionMessage.condition"
								],
								[
									".OptRequireMethods\t{base}",
									".OptRequireMethods"
								],
								[
									"mean.POSIXct\t{base}",
									"mean.POSIXct"
								],
								[
									"as.POSIXct.POSIXlt\t{base}",
									"as.POSIXct.POSIXlt"
								],
								[
									"mean.POSIXlt\t{base}",
									"mean.POSIXlt"
								],
								[
									"as.character.octmode\t{base}",
									"as.character.octmode"
								],
								[
									".makeMessage\t{base}",
									".makeMessage"
								],
								[
									"browserSetDebug\t{base}",
									"browserSetDebug"
								],
								[
									"parent.env\t{base}",
									"parent.env"
								],
								[
									"print.listof\t{base}",
									"print.listof"
								],
								[
									"close.srcfile\t{base}",
									"close.srcfile"
								],
								[
									"anyNA.numeric_version\t{base}",
									"anyNA.numeric_version"
								],
								[
									"chooseOpsMethod\t{base}",
									"chooseOpsMethod"
								],
								[
									"socketAccept\t{base}",
									"socketAccept"
								],
								[
									"transform.data.frame\t{base}",
									"transform.data.frame"
								],
								[
									"interactive\t{base}",
									"interactive"
								],
								[
									"unname\t{base}",
									"unname"
								],
								[
									"remove\t{base}",
									"remove"
								],
								[
									"sample\t{base}",
									"sample"
								],
								[
									"getNamespaceVersion\t{base}",
									"getNamespaceVersion"
								],
								[
									"removeTaskCallback\t{base}",
									"removeTaskCallback"
								],
								[
									"scale\t{base}",
									"scale"
								],
								[
									"is.data.frame\t{base}",
									"is.data.frame"
								],
								[
									"textConnectionValue\t{base}",
									"textConnectionValue"
								],
								[
									"transform\t{base}",
									"transform"
								],
								[
									"lchoose\t{base}",
									"lchoose"
								],
								[
									"format.POSIXct\t{base}",
									"format.POSIXct"
								],
								[
									"is.call\t{base}",
									"is.call"
								],
								[
									".packages\t{base}",
									".packages"
								],
								[
									"row.names\t{base}",
									"row.names"
								],
								[
									"str2lang\t{base}",
									"str2lang"
								],
								[
									"print.factor\t{base}",
									"print.factor"
								],
								[
									"format.POSIXlt\t{base}",
									"format.POSIXlt"
								],
								[
									"switch\t{base}",
									"switch"
								],
								[
									"getElement\t{base}",
									"getElement"
								],
								[
									".amatch_costs\t{base}",
									".amatch_costs"
								],
								[
									"lengths\t{base}",
									"lengths"
								],
								[
									"save\t{base}",
									"save"
								],
								[
									"function\t{base}",
									"function"
								],
								[
									"is.single\t{base}",
									"is.single"
								],
								[
									"default.stringsAsFactors\t{base}",
									"default.stringsAsFactors"
								],
								[
									"pmatch\t{base}",
									"pmatch"
								],
								[
									"withRestarts\t{base}",
									"withRestarts"
								],
								[
									"scan\t{base}",
									"scan"
								],
								[
									"is.null\t{base}",
									"is.null"
								],
								[
									"sink.number\t{base}",
									"sink.number"
								],
								[
									"pretty\t{base}",
									"pretty"
								],
								[
									"Summary.Date\t{base}",
									"Summary.Date"
								],
								[
									"library.dynam.unload\t{base}",
									"library.dynam.unload"
								],
								[
									"letters\t{base}",
									"letters"
								],
								[
									"diff.difftime\t{base}",
									"diff.difftime"
								],
								[
									"browserCondition\t{base}",
									"browserCondition"
								],
								[
									"dir.exists\t{base}",
									"dir.exists"
								],
								[
									"print.srcref\t{base}",
									"print.srcref"
								],
								[
									"arrayInd\t{base}",
									"arrayInd"
								],
								[
									"casefold\t{base}",
									"casefold"
								],
								[
									"anyNA\t{base}",
									"anyNA"
								],
								[
									"suppressWarnings\t{base}",
									"suppressWarnings"
								],
								[
									"seek\t{base}",
									"seek"
								],
								[
									"is.language\t{base}",
									"is.language"
								],
								[
									"xtfrm.numeric_version\t{base}",
									"xtfrm.numeric_version"
								],
								[
									"get0\t{base}",
									"get0"
								],
								[
									"as.vector\t{base}",
									"as.vector"
								],
								[
									"strftime\t{base}",
									"strftime"
								],
								[
									"readRDS\t{base}",
									"readRDS"
								],
								[
									"is.pairlist\t{base}",
									"is.pairlist"
								],
								[
									"chartr\t{base}",
									"chartr"
								],
								[
									"rep.Date\t{base}",
									"rep.Date"
								],
								[
									"isFALSE\t{base}",
									"isFALSE"
								],
								[
									"as.pairlist\t{base}",
									"as.pairlist"
								],
								[
									"as.octmode\t{base}",
									"as.octmode"
								],
								[
									"is.na.numeric_version\t{base}",
									"is.na.numeric_version"
								],
								[
									"length\t{base}",
									"length"
								],
								[
									"formals\t{base}",
									"formals"
								],
								[
									"rawConnectionValue\t{base}",
									"rawConnectionValue"
								],
								[
									"Math.POSIXt\t{base}",
									"Math.POSIXt"
								],
								[
									"Sys.chmod\t{base}",
									"Sys.chmod"
								],
								[
									"formatC\t{base}",
									"formatC"
								],
								[
									"sign\t{base}",
									"sign"
								],
								[
									"sinh\t{base}",
									"sinh"
								],
								[
									"sink\t{base}",
									"sink"
								],
								[
									"solve\t{base}",
									"solve"
								],
								[
									".External.graphics\t{base}",
									".External.graphics"
								],
								[
									"as.data.frame.default\t{base}",
									"as.data.frame.default"
								],
								[
									"is.numeric.Date\t{base}",
									"is.numeric.Date"
								],
								[
									"all.equal.character\t{base}",
									"all.equal.character"
								],
								[
									"unsplit\t{base}",
									"unsplit"
								],
								[
									"as.hexmode\t{base}",
									"as.hexmode"
								],
								[
									"globalenv\t{base}",
									"globalenv"
								],
								[
									"list.files\t{base}",
									"list.files"
								],
								[
									"loadingNamespaceInfo\t{base}",
									"loadingNamespaceInfo"
								],
								[
									"packageEvent\t{base}",
									"packageEvent"
								],
								[
									"make.unique\t{base}",
									"make.unique"
								],
								[
									".decode_numeric_version\t{base}",
									".decode_numeric_version"
								],
								[
									"logical\t{base}",
									"logical"
								],
								[
									"as.vector.factor\t{base}",
									"as.vector.factor"
								],
								[
									"noquote\t{base}",
									"noquote"
								],
								[
									"as.qr\t{base}",
									"as.qr"
								],
								[
									"suppressPackageStartupMessages\t{base}",
									"suppressPackageStartupMessages"
								],
								[
									"as.null.default\t{base}",
									"as.null.default"
								],
								[
									"c.difftime\t{base}",
									"c.difftime"
								],
								[
									"as.data.frame.data.frame\t{base}",
									"as.data.frame.data.frame"
								],
								[
									"summary.warnings\t{base}",
									"summary.warnings"
								],
								[
									"file.show\t{base}",
									"file.show"
								],
								[
									"bindingIsLocked\t{base}",
									"bindingIsLocked"
								],
								[
									".maskedMsg\t{base}",
									".maskedMsg"
								],
								[
									".colSums\t{base}",
									".colSums"
								],
								[
									"acosh\t{base}",
									"acosh"
								],
								[
									"bzfile\t{base}",
									"bzfile"
								],
								[
									"intersect\t{base}",
									"intersect"
								],
								[
									"by.data.frame\t{base}",
									"by.data.frame"
								],
								[
									"summary.srcref\t{base}",
									"summary.srcref"
								],
								[
									"withAutoprint\t{base}",
									"withAutoprint"
								],
								[
									"as.table.default\t{base}",
									"as.table.default"
								],
								[
									"kappa.default\t{base}",
									"kappa.default"
								],
								[
									"as.list.Date\t{base}",
									"as.list.Date"
								],
								[
									".Primitive\t{base}",
									".Primitive"
								],
								[
									"getDLLRegisteredRoutines.character\t{base}",
									"getDLLRegisteredRoutines.character"
								],
								[
									"gctorture2\t{base}",
									"gctorture2"
								],
								[
									"Conj\t{base}",
									"Conj"
								],
								[
									"normalizePath\t{base}",
									"normalizePath"
								],
								[
									"sort\t{base}",
									"sort"
								],
								[
									"addNA\t{base}",
									"addNA"
								],
								[
									"is.matrix\t{base}",
									"is.matrix"
								],
								[
									"writeLines\t{base}",
									"writeLines"
								],
								[
									"colSums\t{base}",
									"colSums"
								],
								[
									"saveRDS\t{base}",
									"saveRDS"
								],
								[
									"suppressMessages\t{base}",
									"suppressMessages"
								],
								[
									"print.data.frame\t{base}",
									"print.data.frame"
								],
								[
									"undebug\t{base}",
									"undebug"
								],
								[
									"tanh\t{base}",
									"tanh"
								],
								[
									"is.loaded\t{base}",
									"is.loaded"
								],
								[
									"curlGetHeaders\t{base}",
									"curlGetHeaders"
								],
								[
									"sqrt\t{base}",
									"sqrt"
								],
								[
									"sample.int\t{base}",
									"sample.int"
								],
								[
									"grep\t{base}",
									"grep"
								],
								[
									"xtfrm.POSIXct\t{base}",
									"xtfrm.POSIXct"
								],
								[
									"is.logical\t{base}",
									"is.logical"
								],
								[
									"print.proc_time\t{base}",
									"print.proc_time"
								],
								[
									"Sys.readlink\t{base}",
									"Sys.readlink"
								],
								[
									"strsplit\t{base}",
									"strsplit"
								],
								[
									"xtfrm.POSIXlt\t{base}",
									"xtfrm.POSIXlt"
								],
								[
									"Cstack_info\t{base}",
									"Cstack_info"
								],
								[
									"dir.create\t{base}",
									"dir.create"
								],
								[
									"nlevels\t{base}",
									"nlevels"
								],
								[
									"aperm\t{base}",
									"aperm"
								],
								[
									"xtfrm\t{base}",
									"xtfrm"
								],
								[
									"Summary.data.frame\t{base}",
									"Summary.data.frame"
								],
								[
									"gsub\t{base}",
									"gsub"
								],
								[
									"merge.data.frame\t{base}",
									"merge.data.frame"
								],
								[
									"as.vector.POSIXlt\t{base}",
									"as.vector.POSIXlt"
								],
								[
									".S3PrimitiveGenerics\t{base}",
									".S3PrimitiveGenerics"
								],
								[
									"stop\t{base}",
									"stop"
								],
								[
									"sort.list\t{base}",
									"sort.list"
								],
								[
									"unloadNamespace\t{base}",
									"unloadNamespace"
								],
								[
									"grouping\t{base}",
									"grouping"
								],
								[
									"seek.connection\t{base}",
									"seek.connection"
								],
								[
									"as.matrix.default\t{base}",
									"as.matrix.default"
								],
								[
									"as.POSIXlt.numeric\t{base}",
									"as.POSIXlt.numeric"
								],
								[
									"eval.parent\t{base}",
									"eval.parent"
								],
								[
									"diff.POSIXt\t{base}",
									"diff.POSIXt"
								],
								[
									"pushBack\t{base}",
									"pushBack"
								],
								[
									"transform.default\t{base}",
									"transform.default"
								],
								[
									"srcfilecopy\t{base}",
									"srcfilecopy"
								],
								[
									"qr.coef\t{base}",
									"qr.coef"
								],
								[
									"restartFormals\t{base}",
									"restartFormals"
								],
								[
									"print.rle\t{base}",
									"print.rle"
								],
								[
									"format.octmode\t{base}",
									"format.octmode"
								],
								[
									"diff.Date\t{base}",
									"diff.Date"
								],
								[
									"conditionCall.condition\t{base}",
									"conditionCall.condition"
								],
								[
									"as.matrix\t{base}",
									"as.matrix"
								],
								[
									"enc2utf8\t{base}",
									"enc2utf8"
								],
								[
									"sys.function\t{base}",
									"sys.function"
								],
								[
									"print.DLLInfo\t{base}",
									"print.DLLInfo"
								],
								[
									"UseMethod\t{base}",
									"UseMethod"
								],
								[
									"write.dcf\t{base}",
									"write.dcf"
								],
								[
									"split\t{base}",
									"split"
								],
								[
									"match.call\t{base}",
									"match.call"
								],
								[
									"is.numeric.POSIXt\t{base}",
									"is.numeric.POSIXt"
								],
								[
									"sys.calls\t{base}",
									"sys.calls"
								],
								[
									".AutoloadEnv\t{base}",
									".AutoloadEnv"
								],
								[
									"format.numeric_version\t{base}",
									"format.numeric_version"
								],
								[
									"char.expand\t{base}",
									"char.expand"
								],
								[
									"signif\t{base}",
									"signif"
								],
								[
									"file.link\t{base}",
									"file.link"
								],
								[
									".Devices\t{base}",
									".Devices"
								],
								[
									"diff.default\t{base}",
									"diff.default"
								],
								[
									"dyn.load\t{base}",
									"dyn.load"
								],
								[
									".userHooksEnv\t{base}",
									".userHooksEnv"
								],
								[
									"anyNA.POSIXlt\t{base}",
									"anyNA.POSIXlt"
								],
								[
									".subset\t{base}",
									".subset"
								],
								[
									"expm1\t{base}",
									"expm1"
								],
								[
									"is.vector\t{base}",
									"is.vector"
								],
								[
									"apply\t{base}",
									"apply"
								],
								[
									"iconvlist\t{base}",
									"iconvlist"
								],
								[
									"chkDots\t{base}",
									"chkDots"
								],
								[
									".gt\t{base}",
									".gt"
								],
								[
									"is.na.data.frame\t{base}",
									"is.na.data.frame"
								],
								[
									"library\t{base}",
									"library"
								],
								[
									"julian.POSIXt\t{base}",
									"julian.POSIXt"
								],
								[
									"path.package\t{base}",
									"path.package"
								],
								[
									"as.data.frame.vector\t{base}",
									"as.data.frame.vector"
								],
								[
									"proc.time\t{base}",
									"proc.time"
								],
								[
									"table\t{base}",
									"table"
								],
								[
									"enc2native\t{base}",
									"enc2native"
								],
								[
									"as.data.frame.table\t{base}",
									"as.data.frame.table"
								],
								[
									"debug\t{base}",
									"debug"
								],
								[
									"OlsonNames\t{base}",
									"OlsonNames"
								],
								[
									"marginSums\t{base}",
									"marginSums"
								],
								[
									".Library\t{base}",
									".Library"
								],
								[
									"isOpen\t{base}",
									"isOpen"
								],
								[
									"grepRaw\t{base}",
									"grepRaw"
								],
								[
									"nullfile\t{base}",
									"nullfile"
								],
								[
									"rowsum\t{base}",
									"rowsum"
								],
								[
									"as.list.data.frame\t{base}",
									"as.list.data.frame"
								],
								[
									"as.list\t{base}",
									"as.list"
								],
								[
									"topenv\t{base}",
									"topenv"
								],
								[
									"system.file\t{base}",
									"system.file"
								],
								[
									"repeat\t{base}",
									"repeat"
								],
								[
									"as.character.factor\t{base}",
									"as.character.factor"
								],
								[
									"print.table\t{base}",
									"print.table"
								],
								[
									"lockEnvironment\t{base}",
									"lockEnvironment"
								],
								[
									"xtfrm.default\t{base}",
									"xtfrm.default"
								],
								[
									"all.vars\t{base}",
									"all.vars"
								],
								[
									"format.default\t{base}",
									"format.default"
								],
								[
									"choose\t{base}",
									"choose"
								],
								[
									"as.expression.default\t{base}",
									"as.expression.default"
								],
								[
									"bitwAnd\t{base}",
									"bitwAnd"
								],
								[
									"mem.maxVSize\t{base}",
									"mem.maxVSize"
								],
								[
									"tabulate\t{base}",
									"tabulate"
								],
								[
									"cut.POSIXt\t{base}",
									"cut.POSIXt"
								],
								[
									"as.POSIXlt.Date\t{base}",
									"as.POSIXlt.Date"
								],
								[
									"c.noquote\t{base}",
									"c.noquote"
								],
								[
									"file.size\t{base}",
									"file.size"
								],
								[
									"makeActiveBinding\t{base}",
									"makeActiveBinding"
								],
								[
									"c.Date\t{base}",
									"c.Date"
								],
								[
									"findInterval\t{base}",
									"findInterval"
								],
								[
									"all.equal.raw\t{base}",
									"all.equal.raw"
								],
								[
									"parseNamespaceFile\t{base}",
									"parseNamespaceFile"
								],
								[
									"icuSetCollate\t{base}",
									"icuSetCollate"
								],
								[
									"print.numeric_version\t{base}",
									"print.numeric_version"
								],
								[
									"sequence.default\t{base}",
									"sequence.default"
								],
								[
									"Sys.localeconv\t{base}",
									"Sys.localeconv"
								],
								[
									"conditionCall\t{base}",
									"conditionCall"
								],
								[
									"margin.table\t{base}",
									"margin.table"
								],
								[
									"sprintf\t{base}",
									"sprintf"
								],
								[
									"duplicated.matrix\t{base}",
									"duplicated.matrix"
								],
								[
									".ArgsEnv\t{base}",
									".ArgsEnv"
								],
								[
									"cbind.data.frame\t{base}",
									"cbind.data.frame"
								],
								[
									"read.dcf\t{base}",
									"read.dcf"
								],
								[
									"names\t{base}",
									"names"
								],
								[
									"append\t{base}",
									"append"
								],
								[
									"rowsum.data.frame\t{base}",
									"rowsum.data.frame"
								],
								[
									"mat.or.vec\t{base}",
									"mat.or.vec"
								],
								[
									"as.POSIXlt.POSIXct\t{base}",
									"as.POSIXlt.POSIXct"
								],
								[
									"R.version.string\t{base}",
									"R.version.string"
								],
								[
									"tanpi\t{base}",
									"tanpi"
								],
								[
									"namespaceExport\t{base}",
									"namespaceExport"
								],
								[
									"Summary.numeric_version\t{base}",
									"Summary.numeric_version"
								],
								[
									"prmatrix\t{base}",
									"prmatrix"
								],
								[
									"as.single.default\t{base}",
									"as.single.default"
								],
								[
									"expand.grid\t{base}",
									"expand.grid"
								],
								[
									"vapply\t{base}",
									"vapply"
								],
								[
									"dimnames\t{base}",
									"dimnames"
								],
								[
									"nameOfClass\t{base}",
									"nameOfClass"
								],
								[
									".popath\t{base}",
									".popath"
								],
								[
									"kappa\t{base}",
									"kappa"
								],
								[
									"identical\t{base}",
									"identical"
								],
								[
									"chol.default\t{base}",
									"chol.default"
								],
								[
									"sapply\t{base}",
									"sapply"
								],
								[
									".format.zeros\t{base}",
									".format.zeros"
								],
								[
									"gctorture\t{base}",
									"gctorture"
								],
								[
									"missing\t{base}",
									"missing"
								],
								[
									"abbreviate\t{base}",
									"abbreviate"
								],
								[
									"showConnections\t{base}",
									"showConnections"
								],
								[
									"merge\t{base}",
									"merge"
								],
								[
									"nargs\t{base}",
									"nargs"
								],
								[
									"proportions\t{base}",
									"proportions"
								],
								[
									"is.R\t{base}",
									"is.R"
								],
								[
									"Sys.sleep\t{base}",
									"Sys.sleep"
								],
								[
									"reg.finalizer\t{base}",
									"reg.finalizer"
								],
								[
									"isdebugged\t{base}",
									"isdebugged"
								],
								[
									".C_R_getTaskCallbackNames\t{base}",
									".C_R_getTaskCallbackNames"
								],
								[
									"anyDuplicated.default\t{base}",
									"anyDuplicated.default"
								],
								[
									"mapply\t{base}",
									"mapply"
								],
								[
									"asplit\t{base}",
									"asplit"
								],
								[
									"rep.factor\t{base}",
									"rep.factor"
								],
								[
									"zapsmall\t{base}",
									"zapsmall"
								],
								[
									"outer\t{base}",
									"outer"
								],
								[
									"print.function\t{base}",
									"print.function"
								],
								[
									"qr.default\t{base}",
									"qr.default"
								],
								[
									"backsolve\t{base}",
									"backsolve"
								],
								[
									"ISOdate\t{base}",
									"ISOdate"
								],
								[
									"duplicated.array\t{base}",
									"duplicated.array"
								],
								[
									"isS4\t{base}",
									"isS4"
								],
								[
									"isBaseNamespace\t{base}",
									"isBaseNamespace"
								],
								[
									"errorCondition\t{base}",
									"errorCondition"
								],
								[
									".detach\t{base}",
									".detach"
								],
								[
									"Arg\t{base}",
									"Arg"
								],
								[
									"file.mtime\t{base}",
									"file.mtime"
								],
								[
									"setwd\t{base}",
									"setwd"
								],
								[
									".kappa_tri\t{base}",
									".kappa_tri"
								],
								[
									"bitwNot\t{base}",
									"bitwNot"
								],
								[
									".getRequiredPackages\t{base}",
									".getRequiredPackages"
								],
								[
									"getwd\t{base}",
									"getwd"
								],
								[
									"list2env\t{base}",
									"list2env"
								],
								[
									"set.seed\t{base}",
									"set.seed"
								],
								[
									".doWrap\t{base}",
									".doWrap"
								],
								[
									"R_compiled_by\t{base}",
									"R_compiled_by"
								],
								[
									"is.primitive\t{base}",
									"is.primitive"
								],
								[
									"grepl\t{base}",
									"grepl"
								],
								[
									"Ops.data.frame\t{base}",
									"Ops.data.frame"
								],
								[
									"format.difftime\t{base}",
									"format.difftime"
								],
								[
									"trigamma\t{base}",
									"trigamma"
								],
								[
									"as.list.difftime\t{base}",
									"as.list.difftime"
								],
								[
									"character\t{base}",
									"character"
								],
								[
									".col\t{base}",
									".col"
								],
								[
									".POSIXct\t{base}",
									".POSIXct"
								],
								[
									"returnValue\t{base}",
									"returnValue"
								],
								[
									".POSIXlt\t{base}",
									".POSIXlt"
								],
								[
									"xtfrm.data.frame\t{base}",
									"xtfrm.data.frame"
								],
								[
									"Math.difftime\t{base}",
									"Math.difftime"
								],
								[
									"version\t{base}",
									"version"
								],
								[
									".F_dchdc\t{base}",
									".F_dchdc"
								],
								[
									"jitter\t{base}",
									"jitter"
								],
								[
									"isNamespaceLoaded\t{base}",
									"isNamespaceLoaded"
								],
								[
									"print.warnings\t{base}",
									"print.warnings"
								],
								[
									"simpleWarning\t{base}",
									"simpleWarning"
								],
								[
									"double\t{base}",
									"double"
								],
								[
									"as.expression\t{base}",
									"as.expression"
								],
								[
									"summary.srcfile\t{base}",
									"summary.srcfile"
								],
								[
									"summary.data.frame\t{base}",
									"summary.data.frame"
								],
								[
									"c.factor\t{base}",
									"c.factor"
								],
								[
									"debugonce\t{base}",
									"debugonce"
								],
								[
									"print\t{base}",
									"print"
								],
								[
									".isMethodsDispatchOn\t{base}",
									".isMethodsDispatchOn"
								],
								[
									"gregexec\t{base}",
									"gregexec"
								],
								[
									"forceAndCall\t{base}",
									"forceAndCall"
								],
								[
									"close.srcfilealias\t{base}",
									"close.srcfilealias"
								],
								[
									".gtn\t{base}",
									".gtn"
								],
								[
									".mergeExportMethods\t{base}",
									".mergeExportMethods"
								],
								[
									".primTrace\t{base}",
									".primTrace"
								],
								[
									"seq.int\t{base}",
									"seq.int"
								],
								[
									"gregexpr\t{base}",
									"gregexpr"
								],
								[
									"namespaceImportClasses\t{base}",
									"namespaceImportClasses"
								],
								[
									"contributors\t{base}",
									"contributors"
								],
								[
									"unix.time\t{base}",
									"unix.time"
								],
								[
									"ngettext\t{base}",
									"ngettext"
								],
								[
									"print.Dlist\t{base}",
									"print.Dlist"
								],
								[
									"Find\t{base}",
									"Find"
								],
								[
									"all.equal.envRefClass\t{base}",
									"all.equal.envRefClass"
								],
								[
									"as.name\t{base}",
									"as.name"
								],
								[
									"gettext\t{base}",
									"gettext"
								],
								[
									"rawToChar\t{base}",
									"rawToChar"
								],
								[
									"anyDuplicated.array\t{base}",
									"anyDuplicated.array"
								],
								[
									"unique.POSIXlt\t{base}",
									"unique.POSIXlt"
								],
								[
									"as.list.POSIXct\t{base}",
									"as.list.POSIXct"
								],
								[
									"as.data.frame.character\t{base}",
									"as.data.frame.character"
								],
								[
									"importIntoEnv\t{base}",
									"importIntoEnv"
								],
								[
									"as.list.POSIXlt\t{base}",
									"as.list.POSIXlt"
								],
								[
									"isIncomplete\t{base}",
									"isIncomplete"
								],
								[
									"qr.qy\t{base}",
									"qr.qy"
								],
								[
									"bitwXor\t{base}",
									"bitwXor"
								],
								[
									"format.factor\t{base}",
									"format.factor"
								],
								[
									"Map\t{base}",
									"Map"
								],
								[
									"getTaskCallbackNames\t{base}",
									"getTaskCallbackNames"
								],
								[
									"data.frame\t{base}",
									"data.frame"
								],
								[
									"Mod\t{base}",
									"Mod"
								],
								[
									"sQuote\t{base}",
									"sQuote"
								],
								[
									"regexec\t{base}",
									"regexec"
								],
								[
									"-.Date\t{base}",
									"-.Date"
								],
								[
									"regexpr\t{base}",
									"regexpr"
								],
								[
									"packageNotFoundError\t{base}",
									"packageNotFoundError"
								],
								[
									"sys.nframe\t{base}",
									"sys.nframe"
								],
								[
									"as.table\t{base}",
									"as.table"
								],
								[
									"sys.load.image\t{base}",
									"sys.load.image"
								],
								[
									"source\t{base}",
									"source"
								],
								[
									"objects\t{base}",
									"objects"
								],
								[
									"is.table\t{base}",
									"is.table"
								],
								[
									"sys.status\t{base}",
									"sys.status"
								],
								[
									"array\t{base}",
									"array"
								],
								[
									"search\t{base}",
									"search"
								],
								[
									"is.infinite\t{base}",
									"is.infinite"
								],
								[
									"Sys.setLanguage\t{base}",
									"Sys.setLanguage"
								],
								[
									".Machine\t{base}",
									".Machine"
								],
								[
									"weekdays.Date\t{base}",
									"weekdays.Date"
								],
								[
									"rownames\t{base}",
									"rownames"
								],
								[
									"readRenviron\t{base}",
									"readRenviron"
								],
								[
									"textConnection\t{base}",
									"textConnection"
								],
								[
									".rowMeans\t{base}",
									".rowMeans"
								],
								[
									"getSrcLines\t{base}",
									"getSrcLines"
								],
								[
									".Call\t{base}",
									".Call"
								],
								[
									"unclass\t{base}",
									"unclass"
								],
								[
									".expand_R_libs_env_var\t{base}",
									".expand_R_libs_env_var"
								],
								[
									"gc.time\t{base}",
									"gc.time"
								],
								[
									"cummax\t{base}",
									"cummax"
								],
								[
									"gcinfo\t{base}",
									"gcinfo"
								],
								[
									"cummin\t{base}",
									"cummin"
								],
								[
									".mergeImportMethods\t{base}",
									".mergeImportMethods"
								],
								[
									".subset2\t{base}",
									".subset2"
								],
								[
									"addTaskCallback\t{base}",
									"addTaskCallback"
								],
								[
									"file.mode\t{base}",
									"file.mode"
								],
								[
									".knownS3Generics\t{base}",
									".knownS3Generics"
								],
								[
									"unlockBinding\t{base}",
									"unlockBinding"
								],
								[
									"solve.qr\t{base}",
									"solve.qr"
								],
								[
									".deparseOpts\t{base}",
									".deparseOpts"
								],
								[
									"file.info\t{base}",
									"file.info"
								],
								[
									".row\t{base}",
									".row"
								],
								[
									"round.POSIXt\t{base}",
									"round.POSIXt"
								],
								[
									"duplicated.POSIXlt\t{base}",
									"duplicated.POSIXlt"
								],
								[
									"attachNamespace\t{base}",
									"attachNamespace"
								],
								[
									"dQuote\t{base}",
									"dQuote"
								],
								[
									"bquote\t{base}",
									"bquote"
								],
								[
									"builtins\t{base}",
									"builtins"
								],
								[
									".standard_regexps\t{base}",
									".standard_regexps"
								],
								[
									"format.summaryDefault\t{base}",
									"format.summaryDefault"
								],
								[
									"xzfile\t{base}",
									"xzfile"
								],
								[
									"cut.Date\t{base}",
									"cut.Date"
								],
								[
									"nchar\t{base}",
									"nchar"
								],
								[
									"simplify2array\t{base}",
									"simplify2array"
								],
								[
									"writeChar\t{base}",
									"writeChar"
								],
								[
									"La_library\t{base}",
									"La_library"
								],
								[
									"strptime\t{base}",
									"strptime"
								],
								[
									"serverSocket\t{base}",
									"serverSocket"
								],
								[
									"all.equal.numeric\t{base}",
									"all.equal.numeric"
								],
								[
									"readline\t{base}",
									"readline"
								],
								[
									"duplicated.data.frame\t{base}",
									"duplicated.data.frame"
								],
								[
									".__H__.rbind\t{base}",
									".__H__.rbind"
								],
								[
									"registerS3method\t{base}",
									"registerS3method"
								],
								[
									"as.list.default\t{base}",
									"as.list.default"
								],
								[
									"setNamespaceInfo\t{base}",
									"setNamespaceInfo"
								],
								[
									"seq.Date\t{base}",
									"seq.Date"
								],
								[
									"getNamespaceInfo\t{base}",
									"getNamespaceInfo"
								],
								[
									"asinh\t{base}",
									"asinh"
								],
								[
									"sys.on.exit\t{base}",
									"sys.on.exit"
								],
								[
									"anyNA.data.frame\t{base}",
									"anyNA.data.frame"
								],
								[
									"namespaceImportMethods\t{base}",
									"namespaceImportMethods"
								],
								[
									"sort.int\t{base}",
									"sort.int"
								],
								[
									"cumsum\t{base}",
									"cumsum"
								],
								[
									"environmentName\t{base}",
									"environmentName"
								],
								[
									"as.list.environment\t{base}",
									"as.list.environment"
								],
								[
									"restartDescription\t{base}",
									"restartDescription"
								],
								[
									".signalSimpleWarning\t{base}",
									".signalSimpleWarning"
								],
								[
									"autoload\t{base}",
									"autoload"
								],
								[
									"format.pval\t{base}",
									"format.pval"
								],
								[
									"as.data.frame\t{base}",
									"as.data.frame"
								],
								[
									"as.call\t{base}",
									"as.call"
								],
								[
									"with\t{base}",
									"with"
								],
								[
									"round.Date\t{base}",
									"round.Date"
								],
								[
									"emptyenv\t{base}",
									"emptyenv"
								],
								[
									"as.list.function\t{base}",
									"as.list.function"
								],
								[
									"agrepl\t{base}",
									"agrepl"
								],
								[
									"seq_len\t{base}",
									"seq_len"
								],
								[
									"rowsum.default\t{base}",
									"rowsum.default"
								],
								[
									"months.POSIXt\t{base}",
									"months.POSIXt"
								],
								[
									"besselI\t{base}",
									"besselI"
								],
								[
									"besselJ\t{base}",
									"besselJ"
								],
								[
									"besselK\t{base}",
									"besselK"
								],
								[
									"besselY\t{base}",
									"besselY"
								],
								[
									"numeric\t{base}",
									"numeric"
								],
								[
									"withCallingHandlers\t{base}",
									"withCallingHandlers"
								],
								[
									"open.srcfilecopy\t{base}",
									"open.srcfilecopy"
								],
								[
									"weekdays\t{base}",
									"weekdays"
								],
								[
									"formatDL\t{base}",
									"formatDL"
								],
								[
									"qr.fitted\t{base}",
									"qr.fitted"
								],
								[
									"system2\t{base}",
									"system2"
								],
								[
									".External2\t{base}",
									".External2"
								],
								[
									"as.factor\t{base}",
									"as.factor"
								],
								[
									"data.class\t{base}",
									"data.class"
								],
								[
									"is.symbol\t{base}",
									"is.symbol"
								],
								[
									"memCompress\t{base}",
									"memCompress"
								],
								[
									"simpleMessage\t{base}",
									"simpleMessage"
								],
								[
									"La_version\t{base}",
									"La_version"
								],
								[
									"as.difftime\t{base}",
									"as.difftime"
								],
								[
									"make.names\t{base}",
									"make.names"
								],
								[
									"as.null\t{base}",
									"as.null"
								],
								[
									"storage.mode\t{base}",
									"storage.mode"
								],
								[
									"getExportedValue\t{base}",
									"getExportedValue"
								],
								[
									"mean.Date\t{base}",
									"mean.Date"
								],
								[
									"atan2\t{base}",
									"atan2"
								],
								[
									"requireNamespace\t{base}",
									"requireNamespace"
								],
								[
									"atanh\t{base}",
									"atanh"
								],
								[
									"is.nan\t{base}",
									"is.nan"
								],
								[
									"class\t{base}",
									"class"
								],
								[
									"agrep\t{base}",
									"agrep"
								],
								[
									"which.min\t{base}",
									"which.min"
								],
								[
									"as.Date.default\t{base}",
									"as.Date.default"
								],
								[
									"Sys.glob\t{base}",
									"Sys.glob"
								],
								[
									"Sys.getpid\t{base}",
									"Sys.getpid"
								],
								[
									"which.max\t{base}",
									"which.max"
								],
								[
									"pretty.default\t{base}",
									"pretty.default"
								],
								[
									"on.exit\t{base}",
									"on.exit"
								],
								[
									".pretty\t{base}",
									".pretty"
								],
								[
									"tcrossprod\t{base}",
									"tcrossprod"
								],
								[
									".Date\t{base}",
									".Date"
								],
								[
									"crossprod\t{base}",
									"crossprod"
								],
								[
									"anyDuplicated.data.frame\t{base}",
									"anyDuplicated.data.frame"
								],
								[
									"abs\t{base}",
									"abs"
								],
								[
									"months.Date\t{base}",
									"months.Date"
								],
								[
									"-.POSIXt\t{base}",
									"-.POSIXt"
								],
								[
									"stdin\t{base}",
									"stdin"
								],
								[
									"all\t{base}",
									"all"
								],
								[
									"as.numeric\t{base}",
									"as.numeric"
								],
								[
									"any\t{base}",
									"any"
								],
								[
									"isTRUE\t{base}",
									"isTRUE"
								],
								[
									"charToRaw\t{base}",
									"charToRaw"
								],
								[
									"Sys.time\t{base}",
									"Sys.time"
								],
								[
									"as.Date.numeric\t{base}",
									"as.Date.numeric"
								],
								[
									"environment\t{base}",
									"environment"
								],
								[
									"cat\t{base}",
									"cat"
								],
								[
									"is.raw\t{base}",
									"is.raw"
								],
								[
									"mean.difftime\t{base}",
									"mean.difftime"
								],
								[
									"readLines\t{base}",
									"readLines"
								],
								[
									".rowSums\t{base}",
									".rowSums"
								],
								[
									"charmatch\t{base}",
									"charmatch"
								],
								[
									"col\t{base}",
									"col"
								],
								[
									"cos\t{base}",
									"cos"
								],
								[
									"mtfrm\t{base}",
									"mtfrm"
								],
								[
									"Sys.Date\t{base}",
									"Sys.Date"
								],
								[
									"det\t{base}",
									"det"
								],
								[
									"cut\t{base}",
									"cut"
								],
								[
									"dim\t{base}",
									"dim"
								],
								[
									"dir\t{base}",
									"dir"
								],
								[
									"as.data.frame.raw\t{base}",
									"as.data.frame.raw"
								],
								[
									"as.symbol\t{base}",
									"as.symbol"
								],
								[
									"as.data.frame.AsIs\t{base}",
									"as.data.frame.AsIs"
								],
								[
									"summary.factor\t{base}",
									"summary.factor"
								],
								[
									"anyDuplicated.matrix\t{base}",
									"anyDuplicated.matrix"
								],
								[
									"getDLLRegisteredRoutines.DLLInfo\t{base}",
									"getDLLRegisteredRoutines.DLLInfo"
								],
								[
									"exp\t{base}",
									"exp"
								],
								[
									"print.Date\t{base}",
									"print.Date"
								],
								[
									"split.data.frame\t{base}",
									"split.data.frame"
								],
								[
									"for\t{base}",
									"for"
								],
								[
									"rowSums\t{base}",
									"rowSums"
								],
								[
									"rawShift\t{base}",
									"rawShift"
								],
								[
									"get\t{base}",
									"get"
								],
								[
									"open.srcfilealias\t{base}",
									"open.srcfilealias"
								],
								[
									"as.list.numeric_version\t{base}",
									"as.list.numeric_version"
								],
								[
									"identity\t{base}",
									"identity"
								],
								[
									"Summary.factor\t{base}",
									"Summary.factor"
								],
								[
									"print.summaryDefault\t{base}",
									"print.summaryDefault"
								],
								[
									"toString.default\t{base}",
									"toString.default"
								],
								[
									"pushBackLength\t{base}",
									"pushBackLength"
								],
								[
									"extSoftVersion\t{base}",
									"extSoftVersion"
								],
								[
									"serialize\t{base}",
									"serialize"
								],
								[
									"is.complex\t{base}",
									"is.complex"
								],
								[
									"loadNamespace\t{base}",
									"loadNamespace"
								],
								[
									"all.equal.default\t{base}",
									"all.equal.default"
								],
								[
									"print.condition\t{base}",
									"print.condition"
								],
								[
									"RNGkind\t{base}",
									"RNGkind"
								],
								[
									"summary.table\t{base}",
									"summary.table"
								],
								[
									"nameOfClass.default\t{base}",
									"nameOfClass.default"
								],
								[
									"list\t{base}",
									"list"
								],
								[
									"isa\t{base}",
									"isa"
								],
								[
									"print.difftime\t{base}",
									"print.difftime"
								],
								[
									"as.character.error\t{base}",
									"as.character.error"
								],
								[
									"strtrim\t{base}",
									"strtrim"
								],
								[
									"licence\t{base}",
									"licence"
								],
								[
									"summary\t{base}",
									"summary"
								],
								[
									"row.names.data.frame\t{base}",
									"row.names.data.frame"
								],
								[
									"packageStartupMessage\t{base}",
									"packageStartupMessage"
								],
								[
									"print.summary.warnings\t{base}",
									"print.summary.warnings"
								],
								[
									"pmax.int\t{base}",
									"pmax.int"
								],
								[
									"julian.Date\t{base}",
									"julian.Date"
								],
								[
									"license\t{base}",
									"license"
								],
								[
									"sys.save.image\t{base}",
									"sys.save.image"
								],
								[
									"lazyLoadDBexec\t{base}",
									"lazyLoadDBexec"
								],
								[
									"max.col\t{base}",
									"max.col"
								],
								[
									"invisible\t{base}",
									"invisible"
								],
								[
									"open.srcfile\t{base}",
									"open.srcfile"
								],
								[
									"searchpaths\t{base}",
									"searchpaths"
								],
								[
									".formula2varlist\t{base}",
									".formula2varlist"
								],
								[
									"namespaceImportFrom\t{base}",
									"namespaceImportFrom"
								],
								[
									"sys.frames\t{base}",
									"sys.frames"
								],
								[
									"Recall\t{base}",
									"Recall"
								],
								[
									".difftime\t{base}",
									".difftime"
								],
								[
									"log\t{base}",
									"log"
								],
								[
									"numToBits\t{base}",
									"numToBits"
								],
								[
									"rawToBits\t{base}",
									"rawToBits"
								],
								[
									"max\t{base}",
									"max"
								],
								[
									"floor\t{base}",
									"floor"
								],
								[
									"Ops.numeric_version\t{base}",
									"Ops.numeric_version"
								],
								[
									"close\t{base}",
									"close"
								],
								[
									"Math.Date\t{base}",
									"Math.Date"
								],
								[
									"Math.data.frame\t{base}",
									"Math.data.frame"
								],
								[
									"min\t{base}",
									"min"
								],
								[
									"as.array\t{base}",
									"as.array"
								],
								[
									"assign\t{base}",
									"assign"
								],
								[
									"taskCallbackManager\t{base}",
									"taskCallbackManager"
								],
								[
									"gettextf\t{base}",
									"gettextf"
								],
								[
									".NotYetUsed\t{base}",
									".NotYetUsed"
								],
								[
									"setHook\t{base}",
									"setHook"
								],
								[
									"load\t{base}",
									"load"
								],
								[
									"socketTimeout\t{base}",
									"socketTimeout"
								],
								[
									"Negate\t{base}",
									"Negate"
								],
								[
									"unique.matrix\t{base}",
									"unique.matrix"
								],
								[
									"log2\t{base}",
									"log2"
								],
								[
									"as.character.POSIXt\t{base}",
									"as.character.POSIXt"
								],
								[
									"untrace\t{base}",
									"untrace"
								],
								[
									"logb\t{base}",
									"logb"
								],
								[
									"is.array\t{base}",
									"is.array"
								],
								[
									"droplevels.factor\t{base}",
									"droplevels.factor"
								],
								[
									"R.version\t{base}",
									"R.version"
								],
								[
									"R.Version\t{base}",
									"R.Version"
								],
								[
									"within.list\t{base}",
									"within.list"
								],
								[
									"inherits\t{base}",
									"inherits"
								],
								[
									"Sys.setenv\t{base}",
									"Sys.setenv"
								],
								[
									"comment\t{base}",
									"comment"
								],
								[
									"as.vector.data.frame\t{base}",
									"as.vector.data.frame"
								],
								[
									"print.DLLInfoList\t{base}",
									"print.DLLInfoList"
								],
								[
									"vector\t{base}",
									"vector"
								],
								[
									"system\t{base}",
									"system"
								],
								[
									".First.sys\t{base}",
									".First.sys"
								],
								[
									"save.image\t{base}",
									"save.image"
								],
								[
									"as.array.default\t{base}",
									"as.array.default"
								],
								[
									"format.info\t{base}",
									"format.info"
								],
								[
									".F_dqrqy\t{base}",
									".F_dqrqy"
								],
								[
									"Sys.setFileTime\t{base}",
									"Sys.setFileTime"
								],
								[
									".F_dqrxb\t{base}",
									".F_dqrxb"
								],
								[
									"setequal\t{base}",
									"setequal"
								],
								[
									"raw\t{base}",
									"raw"
								],
								[
									"typeof\t{base}",
									"typeof"
								],
								[
									"rep\t{base}",
									"rep"
								],
								[
									"rev\t{base}",
									"rev"
								],
								[
									"paste0\t{base}",
									"paste0"
								],
								[
									"rle\t{base}",
									"rle"
								],
								[
									"conditionMessage\t{base}",
									"conditionMessage"
								],
								[
									".F_dqrcf\t{base}",
									".F_dqrcf"
								],
								[
									"row\t{base}",
									"row"
								],
								[
									"stderr\t{base}",
									"stderr"
								],
								[
									".Last.value\t{base}",
									".Last.value"
								],
								[
									"seq\t{base}",
									"seq"
								],
								[
									"flush\t{base}",
									"flush"
								],
								[
									"sin\t{base}",
									"sin"
								],
								[
									"intToUtf8\t{base}",
									"intToUtf8"
								],
								[
									"acos\t{base}",
									"acos"
								],
								[
									"globalCallingHandlers\t{base}",
									"globalCallingHandlers"
								],
								[
									"within\t{base}",
									"within"
								],
								[
									"tan\t{base}",
									"tan"
								],
								[
									"as.matrix.noquote\t{base}",
									"as.matrix.noquote"
								],
								[
									"libcurlVersion\t{base}",
									"libcurlVersion"
								],
								[
									"sub\t{base}",
									"sub"
								],
								[
									"sum\t{base}",
									"sum"
								],
								[
									"svd\t{base}",
									"svd"
								],
								[
									"upper.tri\t{base}",
									"upper.tri"
								],
								[
									"isSymmetric.matrix\t{base}",
									"isSymmetric.matrix"
								],
								[
									"is.factor\t{base}",
									"is.factor"
								],
								[
									"mean\t{base}",
									"mean"
								],
								[
									"try\t{base}",
									"try"
								],
								[
									"rev.default\t{base}",
									"rev.default"
								],
								[
									"is.character\t{base}",
									"is.character"
								],
								[
									"Sys.getenv\t{base}",
									"Sys.getenv"
								],
								[
									"unz\t{base}",
									"unz"
								],
								[
									"as.data.frame.factor\t{base}",
									"as.data.frame.factor"
								],
								[
									"url\t{base}",
									"url"
								],
								[
									"Ops.Date\t{base}",
									"Ops.Date"
								],
								[
									"as.environment\t{base}",
									"as.environment"
								],
								[
									"mget\t{base}",
									"mget"
								],
								[
									"print.eigen\t{base}",
									"print.eigen"
								],
								[
									"invokeRestartInteractively\t{base}",
									"invokeRestartInteractively"
								],
								[
									"getNamespaceExports\t{base}",
									"getNamespaceExports"
								],
								[
									"subset.matrix\t{base}",
									"subset.matrix"
								],
								[
									"forwardsolve\t{base}",
									"forwardsolve"
								],
								[
									"solve.default\t{base}",
									"solve.default"
								],
								[
									"icuGetCollate\t{base}",
									"icuGetCollate"
								],
								[
									"dirname\t{base}",
									"dirname"
								],
								[
									"as.data.frame.model.matrix\t{base}",
									"as.data.frame.model.matrix"
								],
								[
									"Sys.info\t{base}",
									"Sys.info"
								],
								[
									"as.Date.character\t{base}",
									"as.Date.character"
								],
								[
									".encode_numeric_version\t{base}",
									".encode_numeric_version"
								],
								[
									"xor\t{base}",
									"xor"
								],
								[
									"quarters.POSIXt\t{base}",
									"quarters.POSIXt"
								],
								[
									"allowInterrupts\t{base}",
									"allowInterrupts"
								],
								[
									"julian\t{base}",
									"julian"
								],
								[
									"intToBits\t{base}",
									"intToBits"
								],
								[
									"validUTF8\t{base}",
									"validUTF8"
								],
								[
									"capabilities\t{base}",
									"capabilities"
								],
								[
									"print.simple.list\t{base}",
									"print.simple.list"
								],
								[
									"namespaceImport\t{base}",
									"namespaceImport"
								],
								[
									"geterrmessage\t{base}",
									"geterrmessage"
								],
								[
									"delayedAssign\t{base}",
									"delayedAssign"
								],
								[
									"print.DLLRegisteredRoutines\t{base}",
									"print.DLLRegisteredRoutines"
								],
								[
									"Sys.setlocale\t{base}",
									"Sys.setlocale"
								],
								[
									"difftime\t{base}",
									"difftime"
								],
								[
									"..getNamespace\t{base}",
									"..getNamespace"
								],
								[
									"range\t{base}",
									"range"
								],
								[
									"unique.data.frame\t{base}",
									"unique.data.frame"
								],
								[
									"deparse\t{base}",
									"deparse"
								],
								[
									"pairlist\t{base}",
									"pairlist"
								],
								[
									"sinpi\t{base}",
									"sinpi"
								],
								[
									"summary.POSIXct\t{base}",
									"summary.POSIXct"
								],
								[
									"print.NativeRoutineList\t{base}",
									"print.NativeRoutineList"
								],
								[
									"psigamma\t{base}",
									"psigamma"
								],
								[
									"file.access\t{base}",
									"file.access"
								],
								[
									"is.environment\t{base}",
									"is.environment"
								],
								[
									"Math.factor\t{base}",
									"Math.factor"
								],
								[
									"getRversion\t{base}",
									"getRversion"
								],
								[
									"droplevels\t{base}",
									"droplevels"
								],
								[
									"determinant.matrix\t{base}",
									"determinant.matrix"
								],
								[
									"stdout\t{base}",
									"stdout"
								],
								[
									"summary.POSIXlt\t{base}",
									"summary.POSIXlt"
								],
								[
									"suspendInterrupts\t{base}",
									"suspendInterrupts"
								],
								[
									"tapply\t{base}",
									"tapply"
								],
								[
									".F_dqrqty\t{base}",
									".F_dqrqty"
								],
								[
									"trace\t{base}",
									"trace"
								],
								[
									"callCC\t{base}",
									"callCC"
								],
								[
									".getNamespace\t{base}",
									".getNamespace"
								],
								[
									"as.matrix.POSIXlt\t{base}",
									"as.matrix.POSIXlt"
								],
								[
									"rowMeans\t{base}",
									"rowMeans"
								],
								[
									".isOpen\t{base}",
									".isOpen"
								],
								[
									"format.packageInfo\t{base}",
									"format.packageInfo"
								],
								[
									".F_dqrrsd\t{base}",
									".F_dqrrsd"
								],
								[
									"print.default\t{base}",
									"print.default"
								],
								[
									"shQuote\t{base}",
									"shQuote"
								],
								[
									"cut.default\t{base}",
									"cut.default"
								],
								[
									"range.default\t{base}",
									"range.default"
								],
								[
									"structure\t{base}",
									"structure"
								],
								[
									"mode\t{base}",
									"mode"
								],
								[
									"Ops.difftime\t{base}",
									"Ops.difftime"
								],
								[
									"attributes\t{base}",
									"attributes"
								],
								[
									"as.POSIXct\t{base}",
									"as.POSIXct"
								],
								[
									"all.names\t{base}",
									"all.names"
								],
								[
									"as.character\t{base}",
									"as.character"
								],
								[
									"as.POSIXlt\t{base}",
									"as.POSIXlt"
								],
								[
									"sort.default\t{base}",
									"sort.default"
								],
								[
									"simpleCondition\t{base}",
									"simpleCondition"
								],
								[
									"within.data.frame\t{base}",
									"within.data.frame"
								],
								[
									"endsWith\t{base}",
									"endsWith"
								],
								[
									"print.connection\t{base}",
									"print.connection"
								],
								[
									"split.default\t{base}",
									"split.default"
								],
								[
									"asS3\t{base}",
									"asS3"
								],
								[
									"asS4\t{base}",
									"asS4"
								],
								[
									"with.default\t{base}",
									"with.default"
								],
								[
									"balancePOSIXlt\t{base}",
									"balancePOSIXlt"
								],
								[
									"args\t{base}",
									"args"
								],
								[
									"break\t{base}",
									"break"
								],
								[
									"R_system_version\t{base}",
									"R_system_version"
								],
								[
									"matrix\t{base}",
									"matrix"
								],
								[
									"is.na.POSIXlt\t{base}",
									"is.na.POSIXlt"
								],
								[
									"basename\t{base}",
									"basename"
								],
								[
									"lbeta\t{base}",
									"lbeta"
								],
								[
									"asin\t{base}",
									"asin"
								],
								[
									"summary.default\t{base}",
									"summary.default"
								],
								[
									"file.append\t{base}",
									"file.append"
								],
								[
									"srcfile\t{base}",
									"srcfile"
								],
								[
									"Sys.which\t{base}",
									"Sys.which"
								],
								[
									"ncol\t{base}",
									"ncol"
								],
								[
									"return\t{base}",
									"return"
								],
								[
									"atan\t{base}",
									"atan"
								],
								[
									"eapply\t{base}",
									"eapply"
								],
								[
									"rep.POSIXct\t{base}",
									"rep.POSIXct"
								],
								[
									"rep.POSIXlt\t{base}",
									"rep.POSIXlt"
								],
								[
									"socketConnection\t{base}",
									"socketConnection"
								],
								[
									"format.Date\t{base}",
									"format.Date"
								],
								[
									"getConnection\t{base}",
									"getConnection"
								],
								[
									"tryCatch\t{base}",
									"tryCatch"
								],
								[
									"attr\t{base}",
									"attr"
								],
								[
									"tracemem\t{base}",
									"tracemem"
								],
								[
									"as.data.frame.ordered\t{base}",
									"as.data.frame.ordered"
								],
								[
									"format.hexmode\t{base}",
									"format.hexmode"
								],
								[
									"beta\t{base}",
									"beta"
								],
								[
									"seq.POSIXt\t{base}",
									"seq.POSIXt"
								],
								[
									"summary.Date\t{base}",
									"summary.Date"
								],
								[
									"next\t{base}",
									"next"
								],
								[
									"Sys.getlocale\t{base}",
									"Sys.getlocale"
								],
								[
									"lower.tri\t{base}",
									"lower.tri"
								],
								[
									"rbind\t{base}",
									"rbind"
								],
								[
									"union\t{base}",
									"union"
								],
								[
									"write\t{base}",
									"write"
								],
								[
									"units\t{base}",
									"units"
								],
								[
									"cbind\t{base}",
									"cbind"
								],
								[
									"dim.data.frame\t{base}",
									"dim.data.frame"
								],
								[
									"t.data.frame\t{base}",
									"t.data.frame"
								],
								[
									"month.abb\t{base}",
									"month.abb"
								],
								[
									"Sys.unsetenv\t{base}",
									"Sys.unsetenv"
								],
								[
									"dyn.unload\t{base}",
									"dyn.unload"
								],
								[
									"scale.default\t{base}",
									"scale.default"
								],
								[
									"invokeRestart\t{base}",
									"invokeRestart"
								],
								[
									"as.data.frame.integer\t{base}",
									"as.data.frame.integer"
								],
								[
									"all.equal.language\t{base}",
									"all.equal.language"
								],
								[
									"bitwOr\t{base}",
									"bitwOr"
								],
								[
									".Library.site\t{base}",
									".Library.site"
								],
								[
									".packageStartupMessage\t{base}",
									".packageStartupMessage"
								],
								[
									"close.connection\t{base}",
									"close.connection"
								],
								[
									"trimws\t{base}",
									"trimws"
								],
								[
									".Call.graphics\t{base}",
									".Call.graphics"
								],
								[
									".C_R_addTaskCallback\t{base}",
									".C_R_addTaskCallback"
								],
								[
									"unserialize\t{base}",
									"unserialize"
								],
								[
									".amatch_bounds\t{base}",
									".amatch_bounds"
								],
								[
									".S3_methods_table\t{base}",
									".S3_methods_table"
								],
								[
									".row_names_info\t{base}",
									".row_names_info"
								],
								[
									"standardGeneric\t{base}",
									"standardGeneric"
								],
								[
									".F_dqrdc2\t{base}",
									".F_dqrdc2"
								],
								[
									"is.nan.POSIXlt\t{base}",
									"is.nan.POSIXlt"
								],
								[
									"as.data.frame.Date\t{base}",
									"as.data.frame.Date"
								],
								[
									"R.home\t{base}",
									"R.home"
								],
								[
									"unique.default\t{base}",
									"unique.default"
								],
								[
									"sys.frame\t{base}",
									"sys.frame"
								],
								[
									"sys.source\t{base}",
									"sys.source"
								],
								[
									"as.double.POSIXlt\t{base}",
									"as.double.POSIXlt"
								],
								[
									"clearPushBack\t{base}",
									"clearPushBack"
								],
								[
									".leap.seconds\t{base}",
									".leap.seconds"
								],
								[
									".mapply\t{base}",
									".mapply"
								],
								[
									"bindtextdomain\t{base}",
									"bindtextdomain"
								],
								[
									"lgamma\t{base}",
									"lgamma"
								],
								[
									"aperm.table\t{base}",
									"aperm.table"
								],
								[
									"getLoadedDLLs\t{base}",
									"getLoadedDLLs"
								],
								[
									"subset.data.frame\t{base}",
									"subset.data.frame"
								],
								[
									"as.Date.factor\t{base}",
									"as.Date.factor"
								],
								[
									"format.libraryIQR\t{base}",
									"format.libraryIQR"
								],
								[
									"unique\t{base}",
									"unique"
								],
								[
									"as.data.frame.difftime\t{base}",
									"as.data.frame.difftime"
								],
								[
									"merge.default\t{base}",
									"merge.default"
								],
								[
									"ifelse\t{base}",
									"ifelse"
								],
								[
									"is.atomic\t{base}",
									"is.atomic"
								],
								[
									"sys.parents\t{base}",
									"sys.parents"
								],
								[
									"body\t{base}",
									"body"
								],
								[
									"as.character.default\t{base}",
									"as.character.default"
								],
								[
									"rep.int\t{base}",
									"rep.int"
								],
								[
									"as.data.frame.array\t{base}",
									"as.data.frame.array"
								],
								[
									"xtfrm.Date\t{base}",
									"xtfrm.Date"
								],
								[
									"norm\t{base}",
									"norm"
								],
								[
									"as.list.factor\t{base}",
									"as.list.factor"
								],
								[
									"retracemem\t{base}",
									"retracemem"
								],
								[
									"local\t{base}",
									"local"
								],
								[
									"expression\t{base}",
									"expression"
								],
								[
									"Reduce\t{base}",
									"Reduce"
								],
								[
									"signalCondition\t{base}",
									"signalCondition"
								],
								[
									"validEnc\t{base}",
									"validEnc"
								],
								[
									"log10\t{base}",
									"log10"
								],
								[
									"isSymmetric\t{base}",
									"isSymmetric"
								],
								[
									"log1p\t{base}",
									"log1p"
								],
								[
									"is.expression\t{base}",
									"is.expression"
								],
								[
									"tryInvokeRestart\t{base}",
									"tryInvokeRestart"
								],
								[
									"is.unsorted\t{base}",
									"is.unsorted"
								],
								[
									"droplevels.data.frame\t{base}",
									"droplevels.data.frame"
								],
								[
									"sys.parent\t{base}",
									"sys.parent"
								],
								[
									"call\t{base}",
									"call"
								],
								[
									"is.object\t{base}",
									"is.object"
								],
								[
									"pos.to.env\t{base}",
									"pos.to.env"
								],
								[
									"as.POSIXlt.character\t{base}",
									"as.POSIXlt.character"
								],
								[
									"sweep\t{base}",
									"sweep"
								],
								[
									".C_R_removeTaskCallback\t{base}",
									".C_R_removeTaskCallback"
								],
								[
									".libPaths\t{base}",
									".libPaths"
								],
								[
									".getNamespaceInfo\t{base}",
									".getNamespaceInfo"
								],
								[
									"trunc.POSIXt\t{base}",
									"trunc.POSIXt"
								],
								[
									"encodeString\t{base}",
									"encodeString"
								],
								[
									"trunc\t{base}",
									"trunc"
								],
								[
									"system.time\t{base}",
									"system.time"
								],
								[
									"all.equal.POSIXt\t{base}",
									"all.equal.POSIXt"
								],
								[
									"bitwShiftR\t{base}",
									"bitwShiftR"
								],
								[
									"nrow\t{base}",
									"nrow"
								],
								[
									"bitwShiftL\t{base}",
									"bitwShiftL"
								],
								[
									"print.restart\t{base}",
									"print.restart"
								],
								[
									"RNGversion\t{base}",
									"RNGversion"
								],
								[
									"sort.POSIXlt\t{base}",
									"sort.POSIXlt"
								],
								[
									"print.POSIXct\t{base}",
									"print.POSIXct"
								],
								[
									".S3method\t{base}",
									".S3method"
								],
								[
									"print.POSIXlt\t{base}",
									"print.POSIXlt"
								],
								[
									"withVisible\t{base}",
									"withVisible"
								],
								[
									"file.create\t{base}",
									"file.create"
								],
								[
									"getHook\t{base}",
									"getHook"
								],
								[
									"as.data.frame.list\t{base}",
									"as.data.frame.list"
								],
								[
									"row.names.default\t{base}",
									"row.names.default"
								],
								[
									"print.AsIs\t{base}",
									"print.AsIs"
								],
								[
									"Filter\t{base}",
									"Filter"
								],
								[
									"options\t{base}",
									"options"
								],
								[
									"single\t{base}",
									"single"
								],
								[
									"attr.all.equal\t{base}",
									"attr.all.equal"
								],
								[
									".primUntrace\t{base}",
									".primUntrace"
								],
								[
									"factorial\t{base}",
									"factorial"
								],
								[
									"lfactorial\t{base}",
									"lfactorial"
								],
								[
									"colnames\t{base}",
									"colnames"
								],
								[
									"dontCheck\t{base}",
									"dontCheck"
								],
								[
									".Options\t{base}",
									".Options"
								],
								[
									"all.equal.list\t{base}",
									"all.equal.list"
								],
								[
									"levels\t{base}",
									"levels"
								],
								[
									".colMeans\t{base}",
									".colMeans"
								],
								[
									"labels\t{base}",
									"labels"
								],
								[
									".dynLibs\t{base}",
									".dynLibs"
								],
								[
									"isatty\t{base}",
									"isatty"
								],
								[
									"file.remove\t{base}",
									"file.remove"
								],
								[
									"ordered\t{base}",
									"ordered"
								],
								[
									"...length\t{base}",
									"...length"
								],
								[
									"exists\t{base}",
									"exists"
								],
								[
									"prettyNum\t{base}",
									"prettyNum"
								],
								[
									"isRestart\t{base}",
									"isRestart"
								],
								[
									"setTimeLimit\t{base}",
									"setTimeLimit"
								],
								[
									"names.POSIXlt\t{base}",
									"names.POSIXlt"
								],
								[
									".__H__.cbind\t{base}",
									".__H__.cbind"
								],
								[
									"list.dirs\t{base}",
									"list.dirs"
								],
								[
									"truncate\t{base}",
									"truncate"
								],
								[
									"quarters\t{base}",
									"quarters"
								],
								[
									".External\t{base}",
									".External"
								],
								[
									"xtfrm.factor\t{base}",
									"xtfrm.factor"
								],
								[
									"oldClass\t{base}",
									"oldClass"
								],
								[
									"as.function.default\t{base}",
									"as.function.default"
								],
								[
									"chol\t{base}",
									"chol"
								],
								[
									"file.rename\t{base}",
									"file.rename"
								],
								[
									"loadedNamespaces\t{base}",
									"loadedNamespaces"
								],
								[
									"all.equal.factor\t{base}",
									"all.equal.factor"
								],
								[
									".BaseNamespaceEnv\t{base}",
									".BaseNamespaceEnv"
								],
								[
									"truncate.connection\t{base}",
									"truncate.connection"
								],
								[
									"is.finite\t{base}",
									"is.finite"
								],
								[
									"as.data.frame.numeric\t{base}",
									"as.data.frame.numeric"
								],
								[
									"labels.default\t{base}",
									"labels.default"
								],
								[
									"strwrap\t{base}",
									"strwrap"
								],
								[
									".Internal\t{base}",
									".Internal"
								],
								[
									"tolower\t{base}",
									"tolower"
								],
								[
									"gzfile\t{base}",
									"gzfile"
								],
								[
									".Fortran\t{base}",
									".Fortran"
								],
								[
									"as.character.numeric_version\t{base}",
									"as.character.numeric_version"
								],
								[
									"env.profile\t{base}",
									"env.profile"
								],
								[
									"is.na\t{base}",
									"is.na"
								],
								[
									"Summary.POSIXct\t{base}",
									"Summary.POSIXct"
								],
								[
									"open.connection\t{base}",
									"open.connection"
								],
								[
									"is.qr\t{base}",
									"is.qr"
								],
								[
									"list2DF\t{base}",
									"list2DF"
								],
								[
									"duplicated\t{base}",
									"duplicated"
								],
								[
									"writeBin\t{base}",
									"writeBin"
								],
								[
									"flush.connection\t{base}",
									"flush.connection"
								],
								[
									"rcond\t{base}",
									"rcond"
								],
								[
									"is.ordered\t{base}",
									"is.ordered"
								],
								[
									"isSeekable\t{base}",
									"isSeekable"
								],
								[
									"as.ordered\t{base}",
									"as.ordered"
								],
								[
									"iconv\t{base}",
									"iconv"
								],
								[
									"tempdir\t{base}",
									"tempdir"
								],
								[
									"Summary.POSIXlt\t{base}",
									"Summary.POSIXlt"
								],
								[
									"is.numeric.difftime\t{base}",
									"is.numeric.difftime"
								],
								[
									"print.octmode\t{base}",
									"print.octmode"
								],
								[
									"summary.proc_time\t{base}",
									"summary.proc_time"
								],
								[
									"chol2inv\t{base}",
									"chol2inv"
								],
								[
									"as.character.Date\t{base}",
									"as.character.Date"
								],
								[
									".sys.timezone\t{base}",
									".sys.timezone"
								],
								[
									"Sys.timezone\t{base}",
									"Sys.timezone"
								],
								[
									"quarters.Date\t{base}",
									"quarters.Date"
								],
								[
									"stopifnot\t{base}",
									"stopifnot"
								],
								[
									"as.data.frame.complex\t{base}",
									"as.data.frame.complex"
								],
								[
									"all.equal.function\t{base}",
									"all.equal.function"
								],
								[
									"packBits\t{base}",
									"packBits"
								],
								[
									"c.POSIXct\t{base}",
									"c.POSIXct"
								],
								[
									"rep.difftime\t{base}",
									"rep.difftime"
								],
								[
									"strrep\t{base}",
									"strrep"
								],
								[
									"force\t{base}",
									"force"
								],
								[
									"c.POSIXlt\t{base}",
									"c.POSIXlt"
								],
								[
									"mem.maxNSize\t{base}",
									"mem.maxNSize"
								],
								[
									"format\t{base}",
									"format"
								],
								[
									"NextMethod\t{base}",
									"NextMethod"
								],
								[
									"..deparseOpts\t{base}",
									"..deparseOpts"
								],
								[
									".TAOCP1997init\t{base}",
									".TAOCP1997init"
								],
								[
									"Vectorize\t{base}",
									"Vectorize"
								],
								[
									"getNamespaceUsers\t{base}",
									"getNamespaceUsers"
								],
								[
									"cosh\t{base}",
									"cosh"
								],
								[
									"open\t{base}",
									"open"
								],
								[
									"qr.qty\t{base}",
									"qr.qty"
								],
								[
									"subset\t{base}",
									"subset"
								],
								[
									"print.summary.table\t{base}",
									"print.summary.table"
								],
								[
									"is.infinite.POSIXlt\t{base}",
									"is.infinite.POSIXlt"
								],
								[
									"substr\t{base}",
									"substr"
								],
								[
									"cospi\t{base}",
									"cospi"
								],
								[
									"c.warnings\t{base}",
									"c.warnings"
								],
								[
									"print.packageInfo\t{base}",
									"print.packageInfo"
								],
								[
									"NCOL\t{base}",
									"NCOL"
								],
								[
									"is.numeric\t{base}",
									"is.numeric"
								],
								[
									"strtoi\t{base}",
									"strtoi"
								],
								[
									".GenericArgsEnv\t{base}",
									".GenericArgsEnv"
								],
								[
									"rep_len\t{base}",
									"rep_len"
								],
								[
									".make_numeric_version\t{base}",
									".make_numeric_version"
								],
								[
									"date\t{base}",
									"date"
								],
								[
									"closeAllConnections\t{base}",
									"closeAllConnections"
								],
								[
									"as.logical\t{base}",
									"as.logical"
								],
								[
									"getDLLRegisteredRoutines\t{base}",
									"getDLLRegisteredRoutines"
								],
								[
									"round\t{base}",
									"round"
								],
								[
									"file.exists\t{base}",
									"file.exists"
								],
								[
									".F_dtrco\t{base}",
									".F_dtrco"
								],
								[
									"polyroot\t{base}",
									"polyroot"
								],
								[
									".kronecker\t{base}",
									".kronecker"
								],
								[
									".traceback\t{base}",
									".traceback"
								],
								[
									"browser\t{base}",
									"browser"
								],
								[
									"conflictRules\t{base}",
									"conflictRules"
								],
								[
									"is.double\t{base}",
									"is.double"
								],
								[
									"months\t{base}",
									"months"
								],
								[
									"toupper\t{base}",
									"toupper"
								],
								[
									"duplicated.default\t{base}",
									"duplicated.default"
								],
								[
									".bincode\t{base}",
									".bincode"
								],
								[
									"qr.resid\t{base}",
									"qr.resid"
								],
								[
									"toString\t{base}",
									"toString"
								],
								[
									"socketSelect\t{base}",
									"socketSelect"
								],
								[
									".class2\t{base}",
									".class2"
								],
								[
									"print.libraryIQR\t{base}",
									"print.libraryIQR"
								],
								[
									"prop.table\t{base}",
									"prop.table"
								],
								[
									"new.env\t{base}",
									"new.env"
								],
								[
									"which\t{base}",
									"which"
								],
								[
									"duplicated.numeric_version\t{base}",
									"duplicated.numeric_version"
								],
								[
									"while\t{base}",
									"while"
								],
								[
									"is.element\t{base}",
									"is.element"
								],
								[
									"as.raw\t{base}",
									"as.raw"
								],
								[
									"nzchar\t{base}",
									"nzchar"
								],
								[
									"replace\t{base}",
									"replace"
								],
								[
									"complex\t{base}",
									"complex"
								],
								[
									"dget\t{base}",
									"dget"
								],
								[
									"environmentIsLocked\t{base}",
									"environmentIsLocked"
								],
								[
									".Deprecated\t{base}",
									".Deprecated"
								],
								[
									"alist\t{base}",
									"alist"
								],
								[
									"is.list\t{base}",
									"is.list"
								],
								[
									"Ops.factor\t{base}",
									"Ops.factor"
								],
								[
									"setdiff\t{base}",
									"setdiff"
								],
								[
									"pmin.int\t{base}",
									"pmin.int"
								],
								[
									"slice.index\t{base}",
									"slice.index"
								],
								[
									"getAllConnections\t{base}",
									"getAllConnections"
								],
								[
									"duplicated.warnings\t{base}",
									"duplicated.warnings"
								],
								[
									"numeric_version\t{base}",
									"numeric_version"
								],
								[
									"ceiling\t{base}",
									"ceiling"
								],
								[
									"diag\t{base}",
									"diag"
								],
								[
									"as.complex\t{base}",
									"as.complex"
								],
								[
									"sequence\t{base}",
									"sequence"
								],
								[
									".check_tzones\t{base}",
									".check_tzones"
								],
								[
									"diff\t{base}",
									"diff"
								],
								[
									".doSortWrap\t{base}",
									".doSortWrap"
								],
								[
									"anyDuplicated\t{base}",
									"anyDuplicated"
								],
								[
									"all.equal.environment\t{base}",
									"all.equal.environment"
								],
								[
									"pipe\t{base}",
									"pipe"
								],
								[
									"ISOdatetime\t{base}",
									"ISOdatetime"
								],
								[
									"replicate\t{base}",
									"replicate"
								],
								[
									"rbind.data.frame\t{base}",
									"rbind.data.frame"
								],
								[
									"lazyLoadDBfetch\t{base}",
									"lazyLoadDBfetch"
								],
								[
									"conflicts\t{base}",
									"conflicts"
								],
								[
									".rmpkg\t{base}",
									".rmpkg"
								],
								[
									"as.Date\t{base}",
									"as.Date"
								],
								[
									"as.data.frame.numeric_version\t{base}",
									"as.data.frame.numeric_version"
								],
								[
									"mean.default\t{base}",
									"mean.default"
								],
								[
									"cumprod\t{base}",
									"cumprod"
								],
								[
									"as.double\t{base}",
									"as.double"
								],
								[
									"as.data.frame.logical\t{base}",
									"as.data.frame.logical"
								],
								[
									"as.data.frame.POSIXct\t{base}",
									"as.data.frame.POSIXct"
								],
								[
									"findRestart\t{base}",
									"findRestart"
								],
								[
									"as.data.frame.POSIXlt\t{base}",
									"as.data.frame.POSIXlt"
								],
								[
									"as.data.frame.ts\t{base}",
									"as.data.frame.ts"
								],
								[
									"findPackageEnv\t{base}",
									"findPackageEnv"
								],
								[
									"plot\t{base}",
									"plot"
								],
								[
									"pmax\t{base}",
									"pmax"
								],
								[
									"getNamespaceImports\t{base}",
									"getNamespaceImports"
								],
								[
									"as.numeric_version\t{base}",
									"as.numeric_version"
								],
								[
									"pmin\t{base}",
									"pmin"
								],
								[
									"as.character.srcref\t{base}",
									"as.character.srcref"
								],
								[
									"trunc.Date\t{base}",
									"trunc.Date"
								],
								[
									"print.hexmode\t{base}",
									"print.hexmode"
								],
								[
									"provideDimnames\t{base}",
									"provideDimnames"
								],
								[
									"match.arg\t{base}",
									"match.arg"
								],
								[
									"enquote\t{base}",
									"enquote"
								],
								[
									"file.path\t{base}",
									"file.path"
								],
								[
									"as.character.condition\t{base}",
									"as.character.condition"
								],
								[
									".Platform\t{base}",
									".Platform"
								],
								[
									"memDecompress\t{base}",
									"memDecompress"
								],
								[
									"activeBindingFunction\t{base}",
									"activeBindingFunction"
								],
								[
									"format.data.frame\t{base}",
									"format.data.frame"
								],
								[
									"unCfillPOSIXlt\t{base}",
									"unCfillPOSIXlt"
								],
								[
									"lazyLoad\t{base}",
									"lazyLoad"
								],
								[
									"srcref\t{base}",
									"srcref"
								],
								[
									"as.POSIXlt.factor\t{base}",
									"as.POSIXlt.factor"
								],
								[
									"t.default\t{base}",
									"t.default"
								],
								[
									"warning\t{base}",
									"warning"
								],
								[
									".__S3MethodsTable__.\t{base}",
									".__S3MethodsTable__."
								],
								[
									"substring\t{base}",
									"substring"
								],
								[
									"commandArgs\t{base}",
									"commandArgs"
								],
								[
									"file.symlink\t{base}",
									"file.symlink"
								],
								[
									"getCallingDLLe\t{base}",
									"getCallingDLLe"
								],
								[
									"Summary.difftime\t{base}",
									"Summary.difftime"
								],
								[
									"NROW\t{base}",
									"NROW"
								],
								[
									"match.fun\t{base}",
									"match.fun"
								],
								[
									"dput\t{base}",
									"dput"
								],
								[
									"tempfile\t{base}",
									"tempfile"
								],
								[
									"...elt\t{base}",
									"...elt"
								],
								[
									"print.by\t{base}",
									"print.by"
								],
								[
									"summary.matrix\t{base}",
									"summary.matrix"
								],
								[
									"...names\t{base}",
									"...names"
								],
								[
									"Summary.ordered\t{base}",
									"Summary.ordered"
								],
								[
									".Script\t{base}",
									".Script"
								],
								[
									"La.svd\t{base}",
									"La.svd"
								],
								[
									"rawConnection\t{base}",
									"rawConnection"
								],
								[
									"format.AsIs\t{base}",
									"format.AsIs"
								],
								[
									"is.integer\t{base}",
									"is.integer"
								],
								[
									"prod\t{base}",
									"prod"
								],
								[
									"as.integer\t{base}",
									"as.integer"
								],
								[
									"drop\t{base}",
									"drop"
								],
								[
									"Sys.umask\t{base}",
									"Sys.umask"
								],
								[
									".doTrace\t{base}",
									".doTrace"
								],
								[
									"browserText\t{base}",
									"browserText"
								],
								[
									"is.package_version\t{base}",
									"is.package_version"
								],
								[
									"bindingIsActive\t{base}",
									"bindingIsActive"
								],
								[
									"file.copy\t{base}",
									"file.copy"
								],
								[
									"eigen\t{base}",
									"eigen"
								],
								[
									"is.function\t{base}",
									"is.function"
								],
								[
									"month.name\t{base}",
									"month.name"
								],
								[
									"digamma\t{base}",
									"digamma"
								],
								[
									"l10n_info\t{base}",
									"l10n_info"
								],
								[
									"detach\t{base}",
									"detach"
								],
								[
									"as.data.frame.noquote\t{base}",
									"as.data.frame.noquote"
								],
								[
									"integer\t{base}",
									"integer"
								],
								[
									"getCallingDLL\t{base}",
									"getCallingDLL"
								],
								[
									"tracingState\t{base}",
									"tracingState"
								],
								[
									"as.function\t{base}",
									"as.function"
								],
								[
									"attach\t{base}",
									"attach"
								],
								[
									"dump\t{base}",
									"dump"
								],
								[
									"as.POSIXct.numeric\t{base}",
									"as.POSIXct.numeric"
								],
								[
									"is.recursive\t{base}",
									"is.recursive"
								],
								[
									"unlink\t{base}",
									"unlink"
								],
								[
									"seq_along\t{base}",
									"seq_along"
								],
								[
									"pcre_config\t{base}",
									"pcre_config"
								],
								[
									"unlist\t{base}",
									"unlist"
								],
								[
									"all.equal\t{base}",
									"all.equal"
								],
								[
									"regmatches\t{base}",
									"regmatches"
								],
								[
									"is.numeric_version\t{base}",
									"is.numeric_version"
								],
								[
									".Device\t{base}",
									".Device"
								],
								[
									".tryResumeInterrupt\t{base}",
									".tryResumeInterrupt"
								],
								[
									"getNamespaceName\t{base}",
									"getNamespaceName"
								],
								[
									"parent.frame\t{base}",
									"parent.frame"
								],
								[
									"factor\t{base}",
									"factor"
								],
								[
									"mtfrm.default\t{base}",
									"mtfrm.default"
								],
								[
									"message\t{base}",
									"message"
								],
								[
									"lockBinding\t{base}",
									"lockBinding"
								],
								[
									"numToInts\t{base}",
									"numToInts"
								],
								[
									".valid.factor\t{base}",
									".valid.factor"
								],
								[
									"Position\t{base}",
									"Position"
								],
								[
									"rep.numeric_version\t{base}",
									"rep.numeric_version"
								],
								[
									".Defunct\t{base}",
									".Defunct"
								],
								[
									"agricolae\tInstalled Package",
									"agricolae"
								],
								[
									"AlgDesign\tInstalled Package",
									"AlgDesign"
								],
								[
									"algEq\tInstalled Package",
									"algEq"
								],
								[
									"anytime\tInstalled Package",
									"anytime"
								],
								[
									"AsioHeaders\tInstalled Package",
									"AsioHeaders"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"ast2ast\tInstalled Package",
									"ast2ast"
								],
								[
									"BB\tInstalled Package",
									"BB"
								],
								[
									"BBmisc\tInstalled Package",
									"BBmisc"
								],
								[
									"bibtex\tInstalled Package",
									"bibtex"
								],
								[
									"bigD\tInstalled Package",
									"bigD"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"bmp\tInstalled Package",
									"bmp"
								],
								[
									"brew\tInstalled Package",
									"brew"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broman\tInstalled Package",
									"broman"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"ca\tInstalled Package",
									"ca"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"Cairo\tInstalled Package",
									"Cairo"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"car\tInstalled Package",
									"car"
								],
								[
									"carData\tInstalled Package",
									"carData"
								],
								[
									"cellranger\tInstalled Package",
									"cellranger"
								],
								[
									"chromatogram\tInstalled Package",
									"chromatogram"
								],
								[
									"chromatographR\tInstalled Package",
									"chromatographR"
								],
								[
									"chromConverter\tInstalled Package",
									"chromConverter"
								],
								[
									"chromote\tInstalled Package",
									"chromote"
								],
								[
									"cinterpolate\tInstalled Package",
									"cinterpolate"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"clipr\tInstalled Package",
									"clipr"
								],
								[
									"clue\tInstalled Package",
									"clue"
								],
								[
									"collections\tInstalled Package",
									"collections"
								],
								[
									"colorout\tInstalled Package",
									"colorout"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"combinat\tInstalled Package",
									"combinat"
								],
								[
									"COMELN\tInstalled Package",
									"COMELN"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"config\tInstalled Package",
									"config"
								],
								[
									"confintr\tInstalled Package",
									"confintr"
								],
								[
									"corrplot\tInstalled Package",
									"corrplot"
								],
								[
									"cowplot\tInstalled Package",
									"cowplot"
								],
								[
									"CPAT\tInstalled Package",
									"CPAT"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"credentials\tInstalled Package",
									"credentials"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"cyclocomp\tInstalled Package",
									"cyclocomp"
								],
								[
									"dendextend\tInstalled Package",
									"dendextend"
								],
								[
									"Deriv\tInstalled Package",
									"Deriv"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"deSolve\tInstalled Package",
									"deSolve"
								],
								[
									"devtools\tInstalled Package",
									"devtools"
								],
								[
									"dfdr\tInstalled Package",
									"dfdr"
								],
								[
									"dfoptim\tInstalled Package",
									"dfoptim"
								],
								[
									"DiagrammeR\tInstalled Package",
									"DiagrammeR"
								],
								[
									"DiagrammeRsvg\tInstalled Package",
									"DiagrammeRsvg"
								],
								[
									"differential\tInstalled Package",
									"differential"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dlstats\tInstalled Package",
									"dlstats"
								],
								[
									"doParallel\tInstalled Package",
									"doParallel"
								],
								[
									"downlit\tInstalled Package",
									"downlit"
								],
								[
									"downloader\tInstalled Package",
									"downloader"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"drc\tInstalled Package",
									"drc"
								],
								[
									"dsa2a\tInstalled Package",
									"dsa2a"
								],
								[
									"dtw\tInstalled Package",
									"dtw"
								],
								[
									"dtwclust\tInstalled Package",
									"dtwclust"
								],
								[
									"dynamicTreeCut\tInstalled Package",
									"dynamicTreeCut"
								],
								[
									"ellipse\tInstalled Package",
									"ellipse"
								],
								[
									"emmeans\tInstalled Package",
									"emmeans"
								],
								[
									"entab\tInstalled Package",
									"entab"
								],
								[
									"estimability\tInstalled Package",
									"estimability"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"factoextra\tInstalled Package",
									"factoextra"
								],
								[
									"FactoMineR\tInstalled Package",
									"FactoMineR"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastcluster\tInstalled Package",
									"fastcluster"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"ff\tInstalled Package",
									"ff"
								],
								[
									"filelock\tInstalled Package",
									"filelock"
								],
								[
									"flashClust\tInstalled Package",
									"flashClust"
								],
								[
									"flexclust\tInstalled Package",
									"flexclust"
								],
								[
									"flexdashboard\tInstalled Package",
									"flexdashboard"
								],
								[
									"fontawesome\tInstalled Package",
									"fontawesome"
								],
								[
									"forcats\tInstalled Package",
									"forcats"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"future\tInstalled Package",
									"future"
								],
								[
									"future.apply\tInstalled Package",
									"future.apply"
								],
								[
									"gapminder\tInstalled Package",
									"gapminder"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"gert\tInstalled Package",
									"gert"
								],
								[
									"gg3D\tInstalled Package",
									"gg3D"
								],
								[
									"gganimate\tInstalled Package",
									"gganimate"
								],
								[
									"ggdendro\tInstalled Package",
									"ggdendro"
								],
								[
									"ggfortify\tInstalled Package",
									"ggfortify"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"ggpmisc\tInstalled Package",
									"ggpmisc"
								],
								[
									"ggpp\tInstalled Package",
									"ggpp"
								],
								[
									"ggpubr\tInstalled Package",
									"ggpubr"
								],
								[
									"ggrepel\tInstalled Package",
									"ggrepel"
								],
								[
									"ggsci\tInstalled Package",
									"ggsci"
								],
								[
									"ggsignif\tInstalled Package",
									"ggsignif"
								],
								[
									"gifski\tInstalled Package",
									"gifski"
								],
								[
									"glmnet\tInstalled Package",
									"glmnet"
								],
								[
									"globals\tInstalled Package",
									"globals"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"gt\tInstalled Package",
									"gt"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"gtools\tInstalled Package",
									"gtools"
								],
								[
									"hardhat\tInstalled Package",
									"hardhat"
								],
								[
									"haven\tInstalled Package",
									"haven"
								],
								[
									"HDclassif\tInstalled Package",
									"HDclassif"
								],
								[
									"here\tInstalled Package",
									"here"
								],
								[
									"highcharter\tInstalled Package",
									"highcharter"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"hunspell\tInstalled Package",
									"hunspell"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"imager\tInstalled Package",
									"imager"
								],
								[
									"inline\tInstalled Package",
									"inline"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"jose\tInstalled Package",
									"jose"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"juicyjuice\tInstalled Package",
									"juicyjuice"
								],
								[
									"kableExtra\tInstalled Package",
									"kableExtra"
								],
								[
									"katex\tInstalled Package",
									"katex"
								],
								[
									"keras\tInstalled Package",
									"keras"
								],
								[
									"keyring\tInstalled Package",
									"keyring"
								],
								[
									"klaR\tInstalled Package",
									"klaR"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"labelled\tInstalled Package",
									"labelled"
								],
								[
									"languageserver\tInstalled Package",
									"languageserver"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lbfgs\tInstalled Package",
									"lbfgs"
								],
								[
									"lbfgsb3c\tInstalled Package",
									"lbfgsb3c"
								],
								[
									"leaps\tInstalled Package",
									"leaps"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"lintr\tInstalled Package",
									"lintr"
								],
								[
									"lme4\tInstalled Package",
									"lme4"
								],
								[
									"lmodel2\tInstalled Package",
									"lmodel2"
								],
								[
									"lobstr\tInstalled Package",
									"lobstr"
								],
								[
									"luajr\tInstalled Package",
									"luajr"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"marqLevAlg\tInstalled Package",
									"marqLevAlg"
								],
								[
									"MatrixModels\tInstalled Package",
									"MatrixModels"
								],
								[
									"microbenchmark\tInstalled Package",
									"microbenchmark"
								],
								[
									"miniUI\tInstalled Package",
									"miniUI"
								],
								[
									"minpack.lm\tInstalled Package",
									"minpack.lm"
								],
								[
									"minqa\tInstalled Package",
									"minqa"
								],
								[
									"mlr\tInstalled Package",
									"mlr"
								],
								[
									"modeltools\tInstalled Package",
									"modeltools"
								],
								[
									"MTT\tInstalled Package",
									"MTT"
								],
								[
									"multcomp\tInstalled Package",
									"multcomp"
								],
								[
									"multcompView\tInstalled Package",
									"multcompView"
								],
								[
									"mvtnorm\tInstalled Package",
									"mvtnorm"
								],
								[
									"networkD3\tInstalled Package",
									"networkD3"
								],
								[
									"nleqslv\tInstalled Package",
									"nleqslv"
								],
								[
									"nloptr\tInstalled Package",
									"nloptr"
								],
								[
									"numbers\tInstalled Package",
									"numbers"
								],
								[
									"nvimcom\tInstalled Package",
									"nvimcom"
								],
								[
									"odin\tInstalled Package",
									"odin"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"openxlsx\tInstalled Package",
									"openxlsx"
								],
								[
									"optimx\tInstalled Package",
									"optimx"
								],
								[
									"orca\tInstalled Package",
									"orca"
								],
								[
									"packrat\tInstalled Package",
									"packrat"
								],
								[
									"parallelly\tInstalled Package",
									"parallelly"
								],
								[
									"parallelMap\tInstalled Package",
									"parallelMap"
								],
								[
									"ParamHelpers\tInstalled Package",
									"ParamHelpers"
								],
								[
									"paropt\tInstalled Package",
									"paropt"
								],
								[
									"parsedate\tInstalled Package",
									"parsedate"
								],
								[
									"patchwork\tInstalled Package",
									"patchwork"
								],
								[
									"pattern\tInstalled Package",
									"pattern"
								],
								[
									"pbkrtest\tInstalled Package",
									"pbkrtest"
								],
								[
									"pheatmap\tInstalled Package",
									"pheatmap"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgdown\tInstalled Package",
									"pkgdown"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"PKI\tInstalled Package",
									"PKI"
								],
								[
									"plantuml\tInstalled Package",
									"plantuml"
								],
								[
									"platereader\tInstalled Package",
									"platereader"
								],
								[
									"plotly\tInstalled Package",
									"plotly"
								],
								[
									"plotrix\tInstalled Package",
									"plotrix"
								],
								[
									"polynom\tInstalled Package",
									"polynom"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"profvis\tInstalled Package",
									"profvis"
								],
								[
									"pryr\tInstalled Package",
									"pryr"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"ptw\tInstalled Package",
									"ptw"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"pvclust\tInstalled Package",
									"pvclust"
								],
								[
									"quantreg\tInstalled Package",
									"quantreg"
								],
								[
									"quarto\tInstalled Package",
									"quarto"
								],
								[
									"questionr\tInstalled Package",
									"questionr"
								],
								[
									"R.cache\tInstalled Package",
									"R.cache"
								],
								[
									"R.methodsS3\tInstalled Package",
									"R.methodsS3"
								],
								[
									"R.oo\tInstalled Package",
									"R.oo"
								],
								[
									"R.utils\tInstalled Package",
									"R.utils"
								],
								[
									"ragg\tInstalled Package",
									"ragg"
								],
								[
									"rARPACK\tInstalled Package",
									"rARPACK"
								],
								[
									"rbibutils\tInstalled Package",
									"rbibutils"
								],
								[
									"rcmdcheck\tInstalled Package",
									"rcmdcheck"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppArmadillo\tInstalled Package",
									"RcppArmadillo"
								],
								[
									"RcppClock\tInstalled Package",
									"RcppClock"
								],
								[
									"RcppDE\tInstalled Package",
									"RcppDE"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"RcppEnsmallen\tInstalled Package",
									"RcppEnsmallen"
								],
								[
									"RcppParallel\tInstalled Package",
									"RcppParallel"
								],
								[
									"RcppThread\tInstalled Package",
									"RcppThread"
								],
								[
									"RcppTOML\tInstalled Package",
									"RcppTOML"
								],
								[
									"RcppXPtrUtils\tInstalled Package",
									"RcppXPtrUtils"
								],
								[
									"Rdpack\tInstalled Package",
									"Rdpack"
								],
								[
									"reactable\tInstalled Package",
									"reactable"
								],
								[
									"reactR\tInstalled Package",
									"reactR"
								],
								[
									"readbitmap\tInstalled Package",
									"readbitmap"
								],
								[
									"readr\tInstalled Package",
									"readr"
								],
								[
									"readxl\tInstalled Package",
									"readxl"
								],
								[
									"RefManageR\tInstalled Package",
									"RefManageR"
								],
								[
									"rematch\tInstalled Package",
									"rematch"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"renv\tInstalled Package",
									"renv"
								],
								[
									"reticulate\tInstalled Package",
									"reticulate"
								],
								[
									"rhub\tInstalled Package",
									"rhub"
								],
								[
									"ring\tInstalled Package",
									"ring"
								],
								[
									"RInside\tInstalled Package",
									"RInside"
								],
								[
									"rjson\tInstalled Package",
									"rjson"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rlist\tInstalled Package",
									"rlist"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"rootSolve\tInstalled Package",
									"rootSolve"
								],
								[
									"roxygen2\tInstalled Package",
									"roxygen2"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rsconnect\tInstalled Package",
									"rsconnect"
								],
								[
									"rstatix\tInstalled Package",
									"rstatix"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"rsvg\tInstalled Package",
									"rsvg"
								],
								[
									"rversions\tInstalled Package",
									"rversions"
								],
								[
									"rvest\tInstalled Package",
									"rvest"
								],
								[
									"Ryacas\tInstalled Package",
									"Ryacas"
								],
								[
									"sandwich\tInstalled Package",
									"sandwich"
								],
								[
									"sanitizers\tInstalled Package",
									"sanitizers"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"scatterplot3d\tInstalled Package",
									"scatterplot3d"
								],
								[
									"sensitivity\tInstalled Package",
									"sensitivity"
								],
								[
									"serial\tInstalled Package",
									"serial"
								],
								[
									"sessioninfo\tInstalled Package",
									"sessioninfo"
								],
								[
									"shape\tInstalled Package",
									"shape"
								],
								[
									"shinydashboard\tInstalled Package",
									"shinydashboard"
								],
								[
									"shinyjs\tInstalled Package",
									"shinyjs"
								],
								[
									"shinyWidgets\tInstalled Package",
									"shinyWidgets"
								],
								[
									"spelling\tInstalled Package",
									"spelling"
								],
								[
									"splus2R\tInstalled Package",
									"splus2R"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"styler\tInstalled Package",
									"styler"
								],
								[
									"subplex\tInstalled Package",
									"subplex"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"tensorflow\tInstalled Package",
									"tensorflow"
								],
								[
									"test\tInstalled Package",
									"test"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"tfautograph\tInstalled Package",
									"tfautograph"
								],
								[
									"tfdatasets\tInstalled Package",
									"tfdatasets"
								],
								[
									"tfruns\tInstalled Package",
									"tfruns"
								],
								[
									"TH.data\tInstalled Package",
									"TH.data"
								],
								[
									"thermosimfit\tInstalled Package",
									"thermosimfit"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyCpp\tInstalled Package",
									"tidyCpp"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tiff\tInstalled Package",
									"tiff"
								],
								[
									"timechange\tInstalled Package",
									"timechange"
								],
								[
									"tinytest\tInstalled Package",
									"tinytest"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tsf\tInstalled Package",
									"tsf"
								],
								[
									"tweenr\tInstalled Package",
									"tweenr"
								],
								[
									"tzdb\tInstalled Package",
									"tzdb"
								],
								[
									"ucminf\tInstalled Package",
									"ucminf"
								],
								[
									"unix\tInstalled Package",
									"unix"
								],
								[
									"urlchecker\tInstalled Package",
									"urlchecker"
								],
								[
									"usethis\tInstalled Package",
									"usethis"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"uuid\tInstalled Package",
									"uuid"
								],
								[
									"V8\tInstalled Package",
									"V8"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"visNetwork\tInstalled Package",
									"visNetwork"
								],
								[
									"VPdtw\tInstalled Package",
									"VPdtw"
								],
								[
									"vroom\tInstalled Package",
									"vroom"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"webshot\tInstalled Package",
									"webshot"
								],
								[
									"webshot2\tInstalled Package",
									"webshot2"
								],
								[
									"websocket\tInstalled Package",
									"websocket"
								],
								[
									"whisker\tInstalled Package",
									"whisker"
								],
								[
									"whoami\tInstalled Package",
									"whoami"
								],
								[
									"wiesbaden\tInstalled Package",
									"wiesbaden"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"xlsx\tInstalled Package",
									"xlsx"
								],
								[
									"xlsxjars\tInstalled Package",
									"xlsxjars"
								],
								[
									"xmlparsedata\tInstalled Package",
									"xmlparsedata"
								],
								[
									"xopen\tInstalled Package",
									"xopen"
								],
								[
									"xts\tInstalled Package",
									"xts"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"yardstick\tInstalled Package",
									"yardstick"
								],
								[
									"zeallot\tInstalled Package",
									"zeallot"
								],
								[
									"zip\tInstalled Package",
									"zip"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"fontawesome\tInstalled Package",
									"fontawesome"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"jquerylib\tInstalled Package",
									"jquerylib"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"abind\tInstalled Package",
									"abind"
								],
								[
									"acepack\tInstalled Package",
									"acepack"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"assertthat\tInstalled Package",
									"assertthat"
								],
								[
									"backports\tInstalled Package",
									"backports"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bench\tInstalled Package",
									"bench"
								],
								[
									"BH\tInstalled Package",
									"BH"
								],
								[
									"bit\tInstalled Package",
									"bit"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"bitops\tInstalled Package",
									"bitops"
								],
								[
									"blob\tInstalled Package",
									"blob"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"caret\tInstalled Package",
									"caret"
								],
								[
									"caTools\tInstalled Package",
									"caTools"
								],
								[
									"cba\tInstalled Package",
									"cba"
								],
								[
									"checkmate\tInstalled Package",
									"checkmate"
								],
								[
									"chron\tInstalled Package",
									"chron"
								],
								[
									"classInt\tInstalled Package",
									"classInt"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"cliapp\tInstalled Package",
									"cliapp"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"conquer\tInstalled Package",
									"conquer"
								],
								[
									"covr\tInstalled Package",
									"covr"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"crosstalk\tInstalled Package",
									"crosstalk"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"CVST\tInstalled Package",
									"CVST"
								],
								[
									"data.table\tInstalled Package",
									"data.table"
								],
								[
									"DBI\tInstalled Package",
									"DBI"
								],
								[
									"DBItest\tInstalled Package",
									"DBItest"
								],
								[
									"dbplyr\tInstalled Package",
									"dbplyr"
								],
								[
									"ddalpha\tInstalled Package",
									"ddalpha"
								],
								[
									"decor\tInstalled Package",
									"decor"
								],
								[
									"deldir\tInstalled Package",
									"deldir"
								],
								[
									"DEoptimR\tInstalled Package",
									"DEoptimR"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"diffobj\tInstalled Package",
									"diffobj"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dimRed\tInstalled Package",
									"dimRed"
								],
								[
									"doMC\tInstalled Package",
									"doMC"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"DRR\tInstalled Package",
									"DRR"
								],
								[
									"DT\tInstalled Package",
									"DT"
								],
								[
									"dygraphs\tInstalled Package",
									"dygraphs"
								],
								[
									"e1071\tInstalled Package",
									"e1071"
								],
								[
									"earth\tInstalled Package",
									"earth"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastICA\tInstalled Package",
									"fastICA"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"fastmatch\tInstalled Package",
									"fastmatch"
								],
								[
									"filehash\tInstalled Package",
									"filehash"
								],
								[
									"FNN\tInstalled Package",
									"FNN"
								],
								[
									"fontBitstreamVera\tInstalled Package",
									"fontBitstreamVera"
								],
								[
									"fontLiberation\tInstalled Package",
									"fontLiberation"
								],
								[
									"fontquiver\tInstalled Package",
									"fontquiver"
								],
								[
									"foreach\tInstalled Package",
									"foreach"
								],
								[
									"Formula\tInstalled Package",
									"Formula"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"fts\tInstalled Package",
									"fts"
								],
								[
									"furrr\tInstalled Package",
									"furrr"
								],
								[
									"future\tInstalled Package",
									"future"
								],
								[
									"future.apply\tInstalled Package",
									"future.apply"
								],
								[
									"gdata\tInstalled Package",
									"gdata"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"geometry\tInstalled Package",
									"geometry"
								],
								[
									"geosphere\tInstalled Package",
									"geosphere"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"gh\tInstalled Package",
									"gh"
								],
								[
									"gitcreds\tInstalled Package",
									"gitcreds"
								],
								[
									"globals\tInstalled Package",
									"globals"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"goftest\tInstalled Package",
									"goftest"
								],
								[
									"gower\tInstalled Package",
									"gower"
								],
								[
									"gplots\tInstalled Package",
									"gplots"
								],
								[
									"gridExtra\tInstalled Package",
									"gridExtra"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"gtools\tInstalled Package",
									"gtools"
								],
								[
									"hexbin\tInstalled Package",
									"hexbin"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"Hmisc\tInstalled Package",
									"Hmisc"
								],
								[
									"hms\tInstalled Package",
									"hms"
								],
								[
									"htmlTable\tInstalled Package",
									"htmlTable"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"httr\tInstalled Package",
									"httr"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"ini\tInstalled Package",
									"ini"
								],
								[
									"interp\tInstalled Package",
									"interp"
								],
								[
									"ipred\tInstalled Package",
									"ipred"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"iterators\tInstalled Package",
									"iterators"
								],
								[
									"jpeg\tInstalled Package",
									"jpeg"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"kernlab\tInstalled Package",
									"kernlab"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"ks\tInstalled Package",
									"ks"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"latticeExtra\tInstalled Package",
									"latticeExtra"
								],
								[
									"lava\tInstalled Package",
									"lava"
								],
								[
									"lazyeval\tInstalled Package",
									"lazyeval"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"linprog\tInstalled Package",
									"linprog"
								],
								[
									"listenv\tInstalled Package",
									"listenv"
								],
								[
									"littler\tInstalled Package",
									"littler"
								],
								[
									"lme4\tInstalled Package",
									"lme4"
								],
								[
									"lobstr\tInstalled Package",
									"lobstr"
								],
								[
									"logcondens\tInstalled Package",
									"logcondens"
								],
								[
									"lpSolve\tInstalled Package",
									"lpSolve"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"lwgeom\tInstalled Package",
									"lwgeom"
								],
								[
									"magic\tInstalled Package",
									"magic"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"mapproj\tInstalled Package",
									"mapproj"
								],
								[
									"maps\tInstalled Package",
									"maps"
								],
								[
									"maptools\tInstalled Package",
									"maptools"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"MatrixModels\tInstalled Package",
									"MatrixModels"
								],
								[
									"matrixStats\tInstalled Package",
									"matrixStats"
								],
								[
									"mclust\tInstalled Package",
									"mclust"
								],
								[
									"mda\tInstalled Package",
									"mda"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"mets\tInstalled Package",
									"mets"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"minqa\tInstalled Package",
									"minqa"
								],
								[
									"misc3d\tInstalled Package",
									"misc3d"
								],
								[
									"mlbench\tInstalled Package",
									"mlbench"
								],
								[
									"MLmetrics\tInstalled Package",
									"MLmetrics"
								],
								[
									"mockery\tInstalled Package",
									"mockery"
								],
								[
									"mockr\tInstalled Package",
									"mockr"
								],
								[
									"modeldata\tInstalled Package",
									"modeldata"
								],
								[
									"ModelMetrics\tInstalled Package",
									"ModelMetrics"
								],
								[
									"multcomp\tInstalled Package",
									"multcomp"
								],
								[
									"multicool\tInstalled Package",
									"multicool"
								],
								[
									"munsell\tInstalled Package",
									"munsell"
								],
								[
									"mvtnorm\tInstalled Package",
									"mvtnorm"
								],
								[
									"nloptr\tInstalled Package",
									"nloptr"
								],
								[
									"numDeriv\tInstalled Package",
									"numDeriv"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"palmerpenguins\tInstalled Package",
									"palmerpenguins"
								],
								[
									"parallelly\tInstalled Package",
									"parallelly"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgconfig\tInstalled Package",
									"pkgconfig"
								],
								[
									"pkgKitten\tInstalled Package",
									"pkgKitten"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"plogr\tInstalled Package",
									"plogr"
								],
								[
									"plot3D\tInstalled Package",
									"plot3D"
								],
								[
									"plotmo\tInstalled Package",
									"plotmo"
								],
								[
									"plotrix\tInstalled Package",
									"plotrix"
								],
								[
									"pls\tInstalled Package",
									"pls"
								],
								[
									"plyr\tInstalled Package",
									"plyr"
								],
								[
									"png\tInstalled Package",
									"png"
								],
								[
									"polyclip\tInstalled Package",
									"polyclip"
								],
								[
									"pracma\tInstalled Package",
									"pracma"
								],
								[
									"praise\tInstalled Package",
									"praise"
								],
								[
									"prettycode\tInstalled Package",
									"prettycode"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"pROC\tInstalled Package",
									"pROC"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"prodlim\tInstalled Package",
									"prodlim"
								],
								[
									"profmem\tInstalled Package",
									"profmem"
								],
								[
									"progress\tInstalled Package",
									"progress"
								],
								[
									"progressr\tInstalled Package",
									"progressr"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"proxy\tInstalled Package",
									"proxy"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"quadprog\tInstalled Package",
									"quadprog"
								],
								[
									"quantmod\tInstalled Package",
									"quantmod"
								],
								[
									"quantreg\tInstalled Package",
									"quantreg"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"ragg\tInstalled Package",
									"ragg"
								],
								[
									"RANN\tInstalled Package",
									"RANN"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"raster\tInstalled Package",
									"raster"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppArmadillo\tInstalled Package",
									"RcppArmadillo"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"RcppProgress\tInstalled Package",
									"RcppProgress"
								],
								[
									"RcppRoll\tInstalled Package",
									"RcppRoll"
								],
								[
									"recipes\tInstalled Package",
									"recipes"
								],
								[
									"rematch2\tInstalled Package",
									"rematch2"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"reshape2\tInstalled Package",
									"reshape2"
								],
								[
									"rex\tInstalled Package",
									"rex"
								],
								[
									"rgdal\tInstalled Package",
									"rgdal"
								],
								[
									"rgl\tInstalled Package",
									"rgl"
								],
								[
									"rJava\tInstalled Package",
									"rJava"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"RMySQL\tInstalled Package",
									"RMySQL"
								],
								[
									"robustbase\tInstalled Package",
									"robustbase"
								],
								[
									"ROCR\tInstalled Package",
									"ROCR"
								],
								[
									"RPostgreSQL\tInstalled Package",
									"RPostgreSQL"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rsample\tInstalled Package",
									"rsample"
								],
								[
									"RSpectra\tInstalled Package",
									"RSpectra"
								],
								[
									"RSQLite\tInstalled Package",
									"RSQLite"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"RUnit\tInstalled Package",
									"RUnit"
								],
								[
									"s2\tInstalled Package",
									"s2"
								],
								[
									"sandwich\tInstalled Package",
									"sandwich"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"selectr\tInstalled Package",
									"selectr"
								],
								[
									"setRNG\tInstalled Package",
									"setRNG"
								],
								[
									"sf\tInstalled Package",
									"sf"
								],
								[
									"sfsmisc\tInstalled Package",
									"sfsmisc"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"slider\tInstalled Package",
									"slider"
								],
								[
									"sodium\tInstalled Package",
									"sodium"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"sp\tInstalled Package",
									"sp"
								],
								[
									"SparseM\tInstalled Package",
									"SparseM"
								],
								[
									"spatstat\tInstalled Package",
									"spatstat"
								],
								[
									"spatstat.core\tInstalled Package",
									"spatstat.core"
								],
								[
									"spatstat.data\tInstalled Package",
									"spatstat.data"
								],
								[
									"spatstat.geom\tInstalled Package",
									"spatstat.geom"
								],
								[
									"spatstat.linnet\tInstalled Package",
									"spatstat.linnet"
								],
								[
									"spatstat.sparse\tInstalled Package",
									"spatstat.sparse"
								],
								[
									"spatstat.utils\tInstalled Package",
									"spatstat.utils"
								],
								[
									"SQUAREM\tInstalled Package",
									"SQUAREM"
								],
								[
									"statmod\tInstalled Package",
									"statmod"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"svglite\tInstalled Package",
									"svglite"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"systemfonts\tInstalled Package",
									"systemfonts"
								],
								[
									"TeachingDemos\tInstalled Package",
									"TeachingDemos"
								],
								[
									"tensor\tInstalled Package",
									"tensor"
								],
								[
									"terra\tInstalled Package",
									"terra"
								],
								[
									"testit\tInstalled Package",
									"testit"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"textshaping\tInstalled Package",
									"textshaping"
								],
								[
									"TH.data\tInstalled Package",
									"TH.data"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tikzDevice\tInstalled Package",
									"tikzDevice"
								],
								[
									"timeDate\tInstalled Package",
									"timeDate"
								],
								[
									"timereg\tInstalled Package",
									"timereg"
								],
								[
									"timeSeries\tInstalled Package",
									"timeSeries"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tseries\tInstalled Package",
									"tseries"
								],
								[
									"TTR\tInstalled Package",
									"TTR"
								],
								[
									"units\tInstalled Package",
									"units"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"vdiffr\tInstalled Package",
									"vdiffr"
								],
								[
									"viridis\tInstalled Package",
									"viridis"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"warp\tInstalled Package",
									"warp"
								],
								[
									"webfakes\tInstalled Package",
									"webfakes"
								],
								[
									"webutils\tInstalled Package",
									"webutils"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"wk\tInstalled Package",
									"wk"
								],
								[
									"wkutils\tInstalled Package",
									"wkutils"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"XML\tInstalled Package",
									"XML"
								],
								[
									"xml2\tInstalled Package",
									"xml2"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"xts\tInstalled Package",
									"xts"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								],
								[
									"base\tInstalled Package",
									"base"
								],
								[
									"boot\tInstalled Package",
									"boot"
								],
								[
									"class\tInstalled Package",
									"class"
								],
								[
									"cluster\tInstalled Package",
									"cluster"
								],
								[
									"codetools\tInstalled Package",
									"codetools"
								],
								[
									"compiler\tInstalled Package",
									"compiler"
								],
								[
									"datasets\tInstalled Package",
									"datasets"
								],
								[
									"foreign\tInstalled Package",
									"foreign"
								],
								[
									"graphics\tInstalled Package",
									"graphics"
								],
								[
									"grDevices\tInstalled Package",
									"grDevices"
								],
								[
									"grid\tInstalled Package",
									"grid"
								],
								[
									"KernSmooth\tInstalled Package",
									"KernSmooth"
								],
								[
									"lattice\tInstalled Package",
									"lattice"
								],
								[
									"MASS\tInstalled Package",
									"MASS"
								],
								[
									"Matrix\tInstalled Package",
									"Matrix"
								],
								[
									"methods\tInstalled Package",
									"methods"
								],
								[
									"mgcv\tInstalled Package",
									"mgcv"
								],
								[
									"nlme\tInstalled Package",
									"nlme"
								],
								[
									"nnet\tInstalled Package",
									"nnet"
								],
								[
									"parallel\tInstalled Package",
									"parallel"
								],
								[
									"rpart\tInstalled Package",
									"rpart"
								],
								[
									"spatial\tInstalled Package",
									"spatial"
								],
								[
									"splines\tInstalled Package",
									"splines"
								],
								[
									"stats\tInstalled Package",
									"stats"
								],
								[
									"stats4\tInstalled Package",
									"stats4"
								],
								[
									"survival\tInstalled Package",
									"survival"
								],
								[
									"tcltk\tInstalled Package",
									"tcltk"
								],
								[
									"tools\tInstalled Package",
									"tools"
								],
								[
									"utils\tInstalled Package",
									"utils"
								]
							],
							"R-Box.loaded_packages":
							[
								"grDevices",
								"stats",
								"graphics",
								"methods",
								"utils",
								"base"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/R/R.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 225.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "tsf/R/optimize.R",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7177,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"R-Box.completions":
							[
								[
									".radialGradientPattern\t{grDevices}",
									".radialGradientPattern"
								],
								[
									"gray.colors\t{grDevices}",
									"gray.colors"
								],
								[
									"rainbow\t{grDevices}",
									"rainbow"
								],
								[
									"check.options\t{grDevices}",
									"check.options"
								],
								[
									"hcl.pals\t{grDevices}",
									"hcl.pals"
								],
								[
									"glyphFontList\t{grDevices}",
									"glyphFontList"
								],
								[
									"embedFonts\t{grDevices}",
									"embedFonts"
								],
								[
									"cairo_ps\t{grDevices}",
									"cairo_ps"
								],
								[
									"colorspaces\t{grDevices}",
									"colorspaces"
								],
								[
									"cairo_pdf\t{grDevices}",
									"cairo_pdf"
								],
								[
									"getGraphicsEventEnv\t{grDevices}",
									"getGraphicsEventEnv"
								],
								[
									".axisPars\t{grDevices}",
									".axisPars"
								],
								[
									"bmp\t{grDevices}",
									"bmp"
								],
								[
									".devUp\t{grDevices}",
									".devUp"
								],
								[
									".mask\t{grDevices}",
									".mask"
								],
								[
									"graphics.off\t{grDevices}",
									"graphics.off"
								],
								[
									"densCols\t{grDevices}",
									"densCols"
								],
								[
									"savePlot\t{grDevices}",
									"savePlot"
								],
								[
									"X11Font\t{grDevices}",
									"X11Font"
								],
								[
									"grey\t{grDevices}",
									"grey"
								],
								[
									".setMask\t{grDevices}",
									".setMask"
								],
								[
									"deviceIsInteractive\t{grDevices}",
									"deviceIsInteractive"
								],
								[
									".opIndex\t{grDevices}",
									".opIndex"
								],
								[
									"quartz.save\t{grDevices}",
									"quartz.save"
								],
								[
									"quartz\t{grDevices}",
									"quartz"
								],
								[
									"xfig\t{grDevices}",
									"xfig"
								],
								[
									"dev.capabilities\t{grDevices}",
									"dev.capabilities"
								],
								[
									"extendrange\t{grDevices}",
									"extendrange"
								],
								[
									"nclass.Sturges\t{grDevices}",
									"nclass.Sturges"
								],
								[
									".defineGroup\t{grDevices}",
									".defineGroup"
								],
								[
									".useGroup\t{grDevices}",
									".useGroup"
								],
								[
									"colors\t{grDevices}",
									"colors"
								],
								[
									"pictex\t{grDevices}",
									"pictex"
								],
								[
									".ruleIndex\t{grDevices}",
									".ruleIndex"
								],
								[
									"dev.set\t{grDevices}",
									"dev.set"
								],
								[
									"trans3d\t{grDevices}",
									"trans3d"
								],
								[
									"recordPlot\t{grDevices}",
									"recordPlot"
								],
								[
									"glyphWidthLeft\t{grDevices}",
									"glyphWidthLeft"
								],
								[
									"hsv\t{grDevices}",
									"hsv"
								],
								[
									"bitmap\t{grDevices}",
									"bitmap"
								],
								[
									"embedGlyphs\t{grDevices}",
									"embedGlyphs"
								],
								[
									"hcl\t{grDevices}",
									"hcl"
								],
								[
									"postscriptFonts\t{grDevices}",
									"postscriptFonts"
								],
								[
									"tiff\t{grDevices}",
									"tiff"
								],
								[
									"X11\t{grDevices}",
									"X11"
								],
								[
									"Hershey\t{grDevices}",
									"Hershey"
								],
								[
									"palette.colors\t{grDevices}",
									"palette.colors"
								],
								[
									"glyphHeight\t{grDevices}",
									"glyphHeight"
								],
								[
									"is.raster\t{grDevices}",
									"is.raster"
								],
								[
									"colorConverter\t{grDevices}",
									"colorConverter"
								],
								[
									"glyphFont\t{grDevices}",
									"glyphFont"
								],
								[
									"dev2bitmap\t{grDevices}",
									"dev2bitmap"
								],
								[
									"dev.next\t{grDevices}",
									"dev.next"
								],
								[
									"dev.interactive\t{grDevices}",
									"dev.interactive"
								],
								[
									"grey.colors\t{grDevices}",
									"grey.colors"
								],
								[
									"dev.copy2pdf\t{grDevices}",
									"dev.copy2pdf"
								],
								[
									"terrain.colors\t{grDevices}",
									"terrain.colors"
								],
								[
									"grSoftVersion\t{grDevices}",
									"grSoftVersion"
								],
								[
									"quartz.options\t{grDevices}",
									"quartz.options"
								],
								[
									".tilingPattern\t{grDevices}",
									".tilingPattern"
								],
								[
									"hcl.colors\t{grDevices}",
									"hcl.colors"
								],
								[
									"glyphAnchor\t{grDevices}",
									"glyphAnchor"
								],
								[
									"nclass.scott\t{grDevices}",
									"nclass.scott"
								],
								[
									"dev.hold\t{grDevices}",
									"dev.hold"
								],
								[
									"glyphWidth\t{grDevices}",
									"glyphWidth"
								],
								[
									"devAskNewPage\t{grDevices}",
									"devAskNewPage"
								],
								[
									"x11\t{grDevices}",
									"x11"
								],
								[
									"as.raster\t{grDevices}",
									"as.raster"
								],
								[
									".clipPath\t{grDevices}",
									".clipPath"
								],
								[
									"rgb2hsv\t{grDevices}",
									"rgb2hsv"
								],
								[
									"setGraphicsEventEnv\t{grDevices}",
									"setGraphicsEventEnv"
								],
								[
									"heat.colors\t{grDevices}",
									"heat.colors"
								],
								[
									"topo.colors\t{grDevices}",
									"topo.colors"
								],
								[
									"blues9\t{grDevices}",
									"blues9"
								],
								[
									"recordGraphics\t{grDevices}",
									"recordGraphics"
								],
								[
									"boxplot.stats\t{grDevices}",
									"boxplot.stats"
								],
								[
									"svg\t{grDevices}",
									"svg"
								],
								[
									"dev.list\t{grDevices}",
									"dev.list"
								],
								[
									"colours\t{grDevices}",
									"colours"
								],
								[
									"convertColor\t{grDevices}",
									"convertColor"
								],
								[
									"dev.copy\t{grDevices}",
									"dev.copy"
								],
								[
									"chull\t{grDevices}",
									"chull"
								],
								[
									"xy.coords\t{grDevices}",
									"xy.coords"
								],
								[
									"dev.capture\t{grDevices}",
									"dev.capture"
								],
								[
									"dev.cur\t{grDevices}",
									"dev.cur"
								],
								[
									"glyphJust\t{grDevices}",
									"glyphJust"
								],
								[
									"setEPS\t{grDevices}",
									"setEPS"
								],
								[
									"cm\t{grDevices}",
									"cm"
								],
								[
									"dev.flush\t{grDevices}",
									"dev.flush"
								],
								[
									"glyphHeightBottom\t{grDevices}",
									"glyphHeightBottom"
								],
								[
									"dev.size\t{grDevices}",
									"dev.size"
								],
								[
									"setPS\t{grDevices}",
									"setPS"
								],
								[
									"cm.colors\t{grDevices}",
									"cm.colors"
								],
								[
									"dev.off\t{grDevices}",
									"dev.off"
								],
								[
									"pdf\t{grDevices}",
									"pdf"
								],
								[
									"gray\t{grDevices}",
									"gray"
								],
								[
									"nclass.FD\t{grDevices}",
									"nclass.FD"
								],
								[
									"ps.options\t{grDevices}",
									"ps.options"
								],
								[
									"as.graphicsAnnot\t{grDevices}",
									"as.graphicsAnnot"
								],
								[
									".setPattern\t{grDevices}",
									".setPattern"
								],
								[
									"X11.options\t{grDevices}",
									"X11.options"
								],
								[
									"palette\t{grDevices}",
									"palette"
								],
								[
									"replayPlot\t{grDevices}",
									"replayPlot"
								],
								[
									"pdfFonts\t{grDevices}",
									"pdfFonts"
								],
								[
									"cairoSymbolFont\t{grDevices}",
									"cairoSymbolFont"
								],
								[
									"dev.new\t{grDevices}",
									"dev.new"
								],
								[
									"pdf.options\t{grDevices}",
									"pdf.options"
								],
								[
									"X11Fonts\t{grDevices}",
									"X11Fonts"
								],
								[
									"axisTicks\t{grDevices}",
									"axisTicks"
								],
								[
									"make.rgb\t{grDevices}",
									"make.rgb"
								],
								[
									".setClipPath\t{grDevices}",
									".setClipPath"
								],
								[
									"n2mfrow\t{grDevices}",
									"n2mfrow"
								],
								[
									"rgb\t{grDevices}",
									"rgb"
								],
								[
									"quartzFont\t{grDevices}",
									"quartzFont"
								],
								[
									"getGraphicsEvent\t{grDevices}",
									"getGraphicsEvent"
								],
								[
									"xyz.coords\t{grDevices}",
									"xyz.coords"
								],
								[
									"xyTable\t{grDevices}",
									"xyTable"
								],
								[
									"CIDFont\t{grDevices}",
									"CIDFont"
								],
								[
									"adjustcolor\t{grDevices}",
									"adjustcolor"
								],
								[
									"col2rgb\t{grDevices}",
									"col2rgb"
								],
								[
									"dev.prev\t{grDevices}",
									"dev.prev"
								],
								[
									"quartzFonts\t{grDevices}",
									"quartzFonts"
								],
								[
									"png\t{grDevices}",
									"png"
								],
								[
									"colorRampPalette\t{grDevices}",
									"colorRampPalette"
								],
								[
									"palette.pals\t{grDevices}",
									"palette.pals"
								],
								[
									"glyphInfo\t{grDevices}",
									"glyphInfo"
								],
								[
									".linearGradientPattern\t{grDevices}",
									".linearGradientPattern"
								],
								[
									"jpeg\t{grDevices}",
									"jpeg"
								],
								[
									"colorRamp\t{grDevices}",
									"colorRamp"
								],
								[
									"setGraphicsEventHandlers\t{grDevices}",
									"setGraphicsEventHandlers"
								],
								[
									"dev.control\t{grDevices}",
									"dev.control"
								],
								[
									"dev.print\t{grDevices}",
									"dev.print"
								],
								[
									"dev.copy2eps\t{grDevices}",
									"dev.copy2eps"
								],
								[
									"Type1Font\t{grDevices}",
									"Type1Font"
								],
								[
									"contourLines\t{grDevices}",
									"contourLines"
								],
								[
									"postscript\t{grDevices}",
									"postscript"
								],
								[
									"asOneSidedFormula\t{stats}",
									"asOneSidedFormula"
								],
								[
									"r2dtable\t{stats}",
									"r2dtable"
								],
								[
									"drop.terms\t{stats}",
									"drop.terms"
								],
								[
									"confint.lm\t{stats}",
									"confint.lm"
								],
								[
									"is.mts\t{stats}",
									"is.mts"
								],
								[
									"nlminb\t{stats}",
									"nlminb"
								],
								[
									"alias\t{stats}",
									"alias"
								],
								[
									"gaussian\t{stats}",
									"gaussian"
								],
								[
									"profile\t{stats}",
									"profile"
								],
								[
									"ls.diag\t{stats}",
									"ls.diag"
								],
								[
									"mahalanobis\t{stats}",
									"mahalanobis"
								],
								[
									"rmultinom\t{stats}",
									"rmultinom"
								],
								[
									"dpois\t{stats}",
									"dpois"
								],
								[
									"numericDeriv\t{stats}",
									"numericDeriv"
								],
								[
									"makepredictcall\t{stats}",
									"makepredictcall"
								],
								[
									"qlogis\t{stats}",
									"qlogis"
								],
								[
									"loadings\t{stats}",
									"loadings"
								],
								[
									"dlogis\t{stats}",
									"dlogis"
								],
								[
									"nlm\t{stats}",
									"nlm"
								],
								[
									"residuals.glm\t{stats}",
									"residuals.glm"
								],
								[
									"qcauchy\t{stats}",
									"qcauchy"
								],
								[
									"nextn\t{stats}",
									"nextn"
								],
								[
									"nls\t{stats}",
									"nls"
								],
								[
									"plot.stepfun\t{stats}",
									"plot.stepfun"
								],
								[
									"arima0.diag\t{stats}",
									"arima0.diag"
								],
								[
									"dummy.coef\t{stats}",
									"dummy.coef"
								],
								[
									"ftable\t{stats}",
									"ftable"
								],
								[
									"as.formula\t{stats}",
									"as.formula"
								],
								[
									"pairwise.wilcox.test\t{stats}",
									"pairwise.wilcox.test"
								],
								[
									"time\t{stats}",
									"time"
								],
								[
									"embed\t{stats}",
									"embed"
								],
								[
									"mantelhaen.test\t{stats}",
									"mantelhaen.test"
								],
								[
									"dwilcox\t{stats}",
									"dwilcox"
								],
								[
									"ar\t{stats}",
									"ar"
								],
								[
									"oneway.test\t{stats}",
									"oneway.test"
								],
								[
									"fligner.test\t{stats}",
									"fligner.test"
								],
								[
									"bw.bcv\t{stats}",
									"bw.bcv"
								],
								[
									"predict.glm\t{stats}",
									"predict.glm"
								],
								[
									"rWishart\t{stats}",
									"rWishart"
								],
								[
									"logLik\t{stats}",
									"logLik"
								],
								[
									"confint.default\t{stats}",
									"confint.default"
								],
								[
									"AIC\t{stats}",
									"AIC"
								],
								[
									"rlogis\t{stats}",
									"rlogis"
								],
								[
									"bw.ucv\t{stats}",
									"bw.ucv"
								],
								[
									"arima\t{stats}",
									"arima"
								],
								[
									"plot.ts\t{stats}",
									"plot.ts"
								],
								[
									"tsp\t{stats}",
									"tsp"
								],
								[
									"model.extract\t{stats}",
									"model.extract"
								],
								[
									"stat.anova\t{stats}",
									"stat.anova"
								],
								[
									"update.formula\t{stats}",
									"update.formula"
								],
								[
									"qbeta\t{stats}",
									"qbeta"
								],
								[
									"bw.SJ\t{stats}",
									"bw.SJ"
								],
								[
									"factanal\t{stats}",
									"factanal"
								],
								[
									"drop.scope\t{stats}",
									"drop.scope"
								],
								[
									"summary.aov\t{stats}",
									"summary.aov"
								],
								[
									"optimHess\t{stats}",
									"optimHess"
								],
								[
									".lm.fit\t{stats}",
									".lm.fit"
								],
								[
									"cooks.distance\t{stats}",
									"cooks.distance"
								],
								[
									"dnorm\t{stats}",
									"dnorm"
								],
								[
									"psmirnov\t{stats}",
									"psmirnov"
								],
								[
									"extractAIC\t{stats}",
									"extractAIC"
								],
								[
									"qbirthday\t{stats}",
									"qbirthday"
								],
								[
									"C\t{stats}",
									"C"
								],
								[
									"sortedXyData\t{stats}",
									"sortedXyData"
								],
								[
									"D\t{stats}",
									"D"
								],
								[
									"lowess\t{stats}",
									"lowess"
								],
								[
									"varimax\t{stats}",
									"varimax"
								],
								[
									"optimize\t{stats}",
									"optimize"
								],
								[
									"manova\t{stats}",
									"manova"
								],
								[
									"deviance\t{stats}",
									"deviance"
								],
								[
									"optim\t{stats}",
									"optim"
								],
								[
									"lag.plot\t{stats}",
									"lag.plot"
								],
								[
									"constrOptim\t{stats}",
									"constrOptim"
								],
								[
									"splinefunH\t{stats}",
									"splinefunH"
								],
								[
									"reformulate\t{stats}",
									"reformulate"
								],
								[
									"pacf\t{stats}",
									"pacf"
								],
								[
									"mcnemar.test\t{stats}",
									"mcnemar.test"
								],
								[
									"df\t{stats}",
									"df"
								],
								[
									"tsSmooth\t{stats}",
									"tsSmooth"
								],
								[
									"make.link\t{stats}",
									"make.link"
								],
								[
									"glm.control\t{stats}",
									"glm.control"
								],
								[
									"hasTsp\t{stats}",
									"hasTsp"
								],
								[
									"pgamma\t{stats}",
									"pgamma"
								],
								[
									"addmargins\t{stats}",
									"addmargins"
								],
								[
									"dexp\t{stats}",
									"dexp"
								],
								[
									"power.anova.test\t{stats}",
									"power.anova.test"
								],
								[
									"prop.test\t{stats}",
									"prop.test"
								],
								[
									"model.weights\t{stats}",
									"model.weights"
								],
								[
									"ave\t{stats}",
									"ave"
								],
								[
									"is.stepfun\t{stats}",
									"is.stepfun"
								],
								[
									"heatmap\t{stats}",
									"heatmap"
								],
								[
									"stepfun\t{stats}",
									"stepfun"
								],
								[
									"loess.smooth\t{stats}",
									"loess.smooth"
								],
								[
									"line\t{stats}",
									"line"
								],
								[
									"qqline\t{stats}",
									"qqline"
								],
								[
									"ar.mle\t{stats}",
									"ar.mle"
								],
								[
									"residuals\t{stats}",
									"residuals"
								],
								[
									"lsfit\t{stats}",
									"lsfit"
								],
								[
									"get_all_vars\t{stats}",
									"get_all_vars"
								],
								[
									"dt\t{stats}",
									"dt"
								],
								[
									"splinefun\t{stats}",
									"splinefun"
								],
								[
									"ks.test\t{stats}",
									"ks.test"
								],
								[
									"cor\t{stats}",
									"cor"
								],
								[
									"add.scope\t{stats}",
									"add.scope"
								],
								[
									"ecdf\t{stats}",
									"ecdf"
								],
								[
									"pwilcox\t{stats}",
									"pwilcox"
								],
								[
									"cov\t{stats}",
									"cov"
								],
								[
									"dendrapply\t{stats}",
									"dendrapply"
								],
								[
									"rsignrank\t{stats}",
									"rsignrank"
								],
								[
									"bandwidth.kernel\t{stats}",
									"bandwidth.kernel"
								],
								[
									"as.dist\t{stats}",
									"as.dist"
								],
								[
									"SSweibull\t{stats}",
									"SSweibull"
								],
								[
									"bw.nrd\t{stats}",
									"bw.nrd"
								],
								[
									"start\t{stats}",
									"start"
								],
								[
									"plnorm\t{stats}",
									"plnorm"
								],
								[
									"ts.union\t{stats}",
									"ts.union"
								],
								[
									"mvfft\t{stats}",
									"mvfft"
								],
								[
									"dweibull\t{stats}",
									"dweibull"
								],
								[
									"as.ts\t{stats}",
									"as.ts"
								],
								[
									"cor.test\t{stats}",
									"cor.test"
								],
								[
									".checkMFClasses\t{stats}",
									".checkMFClasses"
								],
								[
									"effects\t{stats}",
									"effects"
								],
								[
									"reorder\t{stats}",
									"reorder"
								],
								[
									"KalmanForecast\t{stats}",
									"KalmanForecast"
								],
								[
									"eff.aovlist\t{stats}",
									"eff.aovlist"
								],
								[
									"qgamma\t{stats}",
									"qgamma"
								],
								[
									"glm.fit\t{stats}",
									"glm.fit"
								],
								[
									"plot.spec.coherency\t{stats}",
									"plot.spec.coherency"
								],
								[
									"dgamma\t{stats}",
									"dgamma"
								],
								[
									"cov2cor\t{stats}",
									"cov2cor"
								],
								[
									"ls.print\t{stats}",
									"ls.print"
								],
								[
									"setNames\t{stats}",
									"setNames"
								],
								[
									"acf2AR\t{stats}",
									"acf2AR"
								],
								[
									"add1\t{stats}",
									"add1"
								],
								[
									"rcauchy\t{stats}",
									"rcauchy"
								],
								[
									"shapiro.test\t{stats}",
									"shapiro.test"
								],
								[
									"deriv3\t{stats}",
									"deriv3"
								],
								[
									"window\t{stats}",
									"window"
								],
								[
									"model.tables\t{stats}",
									"model.tables"
								],
								[
									"model.matrix\t{stats}",
									"model.matrix"
								],
								[
									".nknots.smspl\t{stats}",
									".nknots.smspl"
								],
								[
									"KalmanLike\t{stats}",
									"KalmanLike"
								],
								[
									"SSasymp\t{stats}",
									"SSasymp"
								],
								[
									"predict\t{stats}",
									"predict"
								],
								[
									"as.stepfun\t{stats}",
									"as.stepfun"
								],
								[
									"t.test\t{stats}",
									"t.test"
								],
								[
									"power.prop.test\t{stats}",
									"power.prop.test"
								],
								[
									"rstandard\t{stats}",
									"rstandard"
								],
								[
									"binom.test\t{stats}",
									"binom.test"
								],
								[
									"cophenetic\t{stats}",
									"cophenetic"
								],
								[
									"pbeta\t{stats}",
									"pbeta"
								],
								[
									"KalmanRun\t{stats}",
									"KalmanRun"
								],
								[
									"naprint\t{stats}",
									"naprint"
								],
								[
									"qlnorm\t{stats}",
									"qlnorm"
								],
								[
									"plclust\t{stats}",
									"plclust"
								],
								[
									"model.response\t{stats}",
									"model.response"
								],
								[
									"dlnorm\t{stats}",
									"dlnorm"
								],
								[
									"lag\t{stats}",
									"lag"
								],
								[
									"spec.pgram\t{stats}",
									"spec.pgram"
								],
								[
									"interaction.plot\t{stats}",
									"interaction.plot"
								],
								[
									"fitted\t{stats}",
									"fitted"
								],
								[
									"rgeom\t{stats}",
									"rgeom"
								],
								[
									"estVar\t{stats}",
									"estVar"
								],
								[
									"rgamma\t{stats}",
									"rgamma"
								],
								[
									"arima0\t{stats}",
									"arima0"
								],
								[
									"loglin\t{stats}",
									"loglin"
								],
								[
									"ar.yw\t{stats}",
									"ar.yw"
								],
								[
									"promax\t{stats}",
									"promax"
								],
								[
									"phyper\t{stats}",
									"phyper"
								],
								[
									"drop1\t{stats}",
									"drop1"
								],
								[
									"SSfol\t{stats}",
									"SSfol"
								],
								[
									"runif\t{stats}",
									"runif"
								],
								[
									"family\t{stats}",
									"family"
								],
								[
									"quantile\t{stats}",
									"quantile"
								],
								[
									"wilcox.test\t{stats}",
									"wilcox.test"
								],
								[
									"psignrank\t{stats}",
									"psignrank"
								],
								[
									"complete.cases\t{stats}",
									"complete.cases"
								],
								[
									"offset\t{stats}",
									"offset"
								],
								[
									"scatter.smooth\t{stats}",
									"scatter.smooth"
								],
								[
									"dmultinom\t{stats}",
									"dmultinom"
								],
								[
									"rlnorm\t{stats}",
									"rlnorm"
								],
								[
									"approx\t{stats}",
									"approx"
								],
								[
									"naresid\t{stats}",
									"naresid"
								],
								[
									"SSfpl\t{stats}",
									"SSfpl"
								],
								[
									"proj\t{stats}",
									"proj"
								],
								[
									"supsmu\t{stats}",
									"supsmu"
								],
								[
									"qqnorm\t{stats}",
									"qqnorm"
								],
								[
									"end\t{stats}",
									"end"
								],
								[
									"printCoefmat\t{stats}",
									"printCoefmat"
								],
								[
									"princomp\t{stats}",
									"princomp"
								],
								[
									"aggregate.data.frame\t{stats}",
									"aggregate.data.frame"
								],
								[
									"dnbinom\t{stats}",
									"dnbinom"
								],
								[
									"lm.influence\t{stats}",
									"lm.influence"
								],
								[
									"rect.hclust\t{stats}",
									"rect.hclust"
								],
								[
									"convolve\t{stats}",
									"convolve"
								],
								[
									"ansari.test\t{stats}",
									"ansari.test"
								],
								[
									"median.default\t{stats}",
									"median.default"
								],
								[
									"ARMAacf\t{stats}",
									"ARMAacf"
								],
								[
									"poly\t{stats}",
									"poly"
								],
								[
									"NLSstRtAsymptote\t{stats}",
									"NLSstRtAsymptote"
								],
								[
									"power.t.test\t{stats}",
									"power.t.test"
								],
								[
									"write.ftable\t{stats}",
									"write.ftable"
								],
								[
									"qhyper\t{stats}",
									"qhyper"
								],
								[
									"polym\t{stats}",
									"polym"
								],
								[
									"weights\t{stats}",
									"weights"
								],
								[
									"dhyper\t{stats}",
									"dhyper"
								],
								[
									"kernel\t{stats}",
									"kernel"
								],
								[
									"friedman.test\t{stats}",
									"friedman.test"
								],
								[
									"acf\t{stats}",
									"acf"
								],
								[
									"qwilcox\t{stats}",
									"qwilcox"
								],
								[
									"filter\t{stats}",
									"filter"
								],
								[
									"lm.fit\t{stats}",
									"lm.fit"
								],
								[
									"rpois\t{stats}",
									"rpois"
								],
								[
									"cmdscale\t{stats}",
									"cmdscale"
								],
								[
									"factor.scope\t{stats}",
									"factor.scope"
								],
								[
									"Gamma\t{stats}",
									"Gamma"
								],
								[
									"pweibull\t{stats}",
									"pweibull"
								],
								[
									"pchisq\t{stats}",
									"pchisq"
								],
								[
									"ksmooth\t{stats}",
									"ksmooth"
								],
								[
									"symnum\t{stats}",
									"symnum"
								],
								[
									"smooth\t{stats}",
									"smooth"
								],
								[
									"quasipoisson\t{stats}",
									"quasipoisson"
								],
								[
									"ppr\t{stats}",
									"ppr"
								],
								[
									"spec.ar\t{stats}",
									"spec.ar"
								],
								[
									"pnbinom\t{stats}",
									"pnbinom"
								],
								[
									"coefficients\t{stats}",
									"coefficients"
								],
								[
									"model.offset\t{stats}",
									"model.offset"
								],
								[
									"dbeta\t{stats}",
									"dbeta"
								],
								[
									"SSasympOff\t{stats}",
									"SSasympOff"
								],
								[
									"pbirthday\t{stats}",
									"pbirthday"
								],
								[
									"replications\t{stats}",
									"replications"
								],
								[
									"ar.ols\t{stats}",
									"ar.ols"
								],
								[
									"rhyper\t{stats}",
									"rhyper"
								],
								[
									"spectrum\t{stats}",
									"spectrum"
								],
								[
									"lm\t{stats}",
									"lm"
								],
								[
									"expand.model.frame\t{stats}",
									"expand.model.frame"
								],
								[
									"kernapply\t{stats}",
									"kernapply"
								],
								[
									"bw.nrd0\t{stats}",
									"bw.nrd0"
								],
								[
									"stl\t{stats}",
									"stl"
								],
								[
									"loess\t{stats}",
									"loess"
								],
								[
									"IQR\t{stats}",
									"IQR"
								],
								[
									"qgeom\t{stats}",
									"qgeom"
								],
								[
									"contr.helmert\t{stats}",
									"contr.helmert"
								],
								[
									"na.pass\t{stats}",
									"na.pass"
								],
								[
									"toeplitz\t{stats}",
									"toeplitz"
								],
								[
									"pairwise.t.test\t{stats}",
									"pairwise.t.test"
								],
								[
									"dist\t{stats}",
									"dist"
								],
								[
									".getXlevels\t{stats}",
									".getXlevels"
								],
								[
									"NLSstClosestX\t{stats}",
									"NLSstClosestX"
								],
								[
									"getInitial\t{stats}",
									"getInitial"
								],
								[
									"sigma\t{stats}",
									"sigma"
								],
								[
									"qchisq\t{stats}",
									"qchisq"
								],
								[
									"contr.poly\t{stats}",
									"contr.poly"
								],
								[
									"dchisq\t{stats}",
									"dchisq"
								],
								[
									"spline\t{stats}",
									"spline"
								],
								[
									"qunif\t{stats}",
									"qunif"
								],
								[
									"confint\t{stats}",
									"confint"
								],
								[
									"pairwise.table\t{stats}",
									"pairwise.table"
								],
								[
									"SSasympOrig\t{stats}",
									"SSasympOrig"
								],
								[
									"pexp\t{stats}",
									"pexp"
								],
								[
									"plot.spec.phase\t{stats}",
									"plot.spec.phase"
								],
								[
									"density.default\t{stats}",
									"density.default"
								],
								[
									"medpolish\t{stats}",
									"medpolish"
								],
								[
									"ptukey\t{stats}",
									"ptukey"
								],
								[
									"cancor\t{stats}",
									"cancor"
								],
								[
									"Box.test\t{stats}",
									"Box.test"
								],
								[
									"TukeyHSD\t{stats}",
									"TukeyHSD"
								],
								[
									"rnorm\t{stats}",
									"rnorm"
								],
								[
									"var.test\t{stats}",
									"var.test"
								],
								[
									"poisson\t{stats}",
									"poisson"
								],
								[
									"bartlett.test\t{stats}",
									"bartlett.test"
								],
								[
									"summary.stepfun\t{stats}",
									"summary.stepfun"
								],
								[
									"na.fail\t{stats}",
									"na.fail"
								],
								[
									"model.frame\t{stats}",
									"model.frame"
								],
								[
									"covratio\t{stats}",
									"covratio"
								],
								[
									"contrasts\t{stats}",
									"contrasts"
								],
								[
									"ar.burg\t{stats}",
									"ar.burg"
								],
								[
									"residuals.lm\t{stats}",
									"residuals.lm"
								],
								[
									"df.residual\t{stats}",
									"df.residual"
								],
								[
									"ts.intersect\t{stats}",
									"ts.intersect"
								],
								[
									"power\t{stats}",
									"power"
								],
								[
									"SSlogis\t{stats}",
									"SSlogis"
								],
								[
									"glm\t{stats}",
									"glm"
								],
								[
									"rchisq\t{stats}",
									"rchisq"
								],
								[
									"getCall\t{stats}",
									"getCall"
								],
								[
									"model.matrix.lm\t{stats}",
									"model.matrix.lm"
								],
								[
									"chisq.test\t{stats}",
									"chisq.test"
								],
								[
									"coef\t{stats}",
									"coef"
								],
								[
									"step\t{stats}",
									"step"
								],
								[
									"ppoints\t{stats}",
									"ppoints"
								],
								[
									"vcov\t{stats}",
									"vcov"
								],
								[
									".preformat.ts\t{stats}",
									".preformat.ts"
								],
								[
									"qqplot\t{stats}",
									"qqplot"
								],
								[
									"DF2formula\t{stats}",
									"DF2formula"
								],
								[
									"update.default\t{stats}",
									"update.default"
								],
								[
									"qtukey\t{stats}",
									"qtukey"
								],
								[
									"quade.test\t{stats}",
									"quade.test"
								],
								[
									"qpois\t{stats}",
									"qpois"
								],
								[
									"df.kernel\t{stats}",
									"df.kernel"
								],
								[
									"influence\t{stats}",
									"influence"
								],
								[
									"qsmirnov\t{stats}",
									"qsmirnov"
								],
								[
									"cutree\t{stats}",
									"cutree"
								],
								[
									"poisson.test\t{stats}",
									"poisson.test"
								],
								[
									"pf\t{stats}",
									"pf"
								],
								[
									"case.names\t{stats}",
									"case.names"
								],
								[
									"frequency\t{stats}",
									"frequency"
								],
								[
									"tsdiag\t{stats}",
									"tsdiag"
								],
								[
									"qweibull\t{stats}",
									"qweibull"
								],
								[
									"NLSstLfAsymptote\t{stats}",
									"NLSstLfAsymptote"
								],
								[
									"kmeans\t{stats}",
									"kmeans"
								],
								[
									"weighted.residuals\t{stats}",
									"weighted.residuals"
								],
								[
									"mauchly.test\t{stats}",
									"mauchly.test"
								],
								[
									"napredict\t{stats}",
									"napredict"
								],
								[
									"qexp\t{stats}",
									"qexp"
								],
								[
									"deriv\t{stats}",
									"deriv"
								],
								[
									"var\t{stats}",
									"var"
								],
								[
									"aggregate.ts\t{stats}",
									"aggregate.ts"
								],
								[
									"rwilcox\t{stats}",
									"rwilcox"
								],
								[
									"SSbiexp\t{stats}",
									"SSbiexp"
								],
								[
									"pt\t{stats}",
									"pt"
								],
								[
									"rsmirnov\t{stats}",
									"rsmirnov"
								],
								[
									"qf\t{stats}",
									"qf"
								],
								[
									"xtabs\t{stats}",
									"xtabs"
								],
								[
									"kruskal.test\t{stats}",
									"kruskal.test"
								],
								[
									"median\t{stats}",
									"median"
								],
								[
									"as.hclust\t{stats}",
									"as.hclust"
								],
								[
									"termplot\t{stats}",
									"termplot"
								],
								[
									"rweibull\t{stats}",
									"rweibull"
								],
								[
									"resid\t{stats}",
									"resid"
								],
								[
									"pgeom\t{stats}",
									"pgeom"
								],
								[
									"qnbinom\t{stats}",
									"qnbinom"
								],
								[
									"se.contrast\t{stats}",
									"se.contrast"
								],
								[
									"summary.manova\t{stats}",
									"summary.manova"
								],
								[
									"prcomp\t{stats}",
									"prcomp"
								],
								[
									"preplot\t{stats}",
									"preplot"
								],
								[
									"plot.ecdf\t{stats}",
									"plot.ecdf"
								],
								[
									"arima.sim\t{stats}",
									"arima.sim"
								],
								[
									"lm.wfit\t{stats}",
									"lm.wfit"
								],
								[
									"ccf\t{stats}",
									"ccf"
								],
								[
									"is.leaf\t{stats}",
									"is.leaf"
								],
								[
									"na.action\t{stats}",
									"na.action"
								],
								[
									"screeplot\t{stats}",
									"screeplot"
								],
								[
									"approxfun\t{stats}",
									"approxfun"
								],
								[
									"NLSstAsymptotic\t{stats}",
									"NLSstAsymptotic"
								],
								[
									"order.dendrogram\t{stats}",
									"order.dendrogram"
								],
								[
									"cycle\t{stats}",
									"cycle"
								],
								[
									"qt\t{stats}",
									"qt"
								],
								[
									"rf\t{stats}",
									"rf"
								],
								[
									"punif\t{stats}",
									"punif"
								],
								[
									"quasi\t{stats}",
									"quasi"
								],
								[
									"ts.plot\t{stats}",
									"ts.plot"
								],
								[
									"cov.wt\t{stats}",
									"cov.wt"
								],
								[
									"mood.test\t{stats}",
									"mood.test"
								],
								[
									"PP.test\t{stats}",
									"PP.test"
								],
								[
									"is.empty.model\t{stats}",
									"is.empty.model"
								],
								[
									"loess.control\t{stats}",
									"loess.control"
								],
								[
									"decompose\t{stats}",
									"decompose"
								],
								[
									"aggregate\t{stats}",
									"aggregate"
								],
								[
									"BIC\t{stats}",
									"BIC"
								],
								[
									"reshape\t{stats}",
									"reshape"
								],
								[
									"makeARIMA\t{stats}",
									"makeARIMA"
								],
								[
									"ARMAtoMA\t{stats}",
									"ARMAtoMA"
								],
								[
									"weighted.mean\t{stats}",
									"weighted.mean"
								],
								[
									"pbinom\t{stats}",
									"pbinom"
								],
								[
									"selfStart\t{stats}",
									"selfStart"
								],
								[
									"SSgompertz\t{stats}",
									"SSgompertz"
								],
								[
									"qnorm\t{stats}",
									"qnorm"
								],
								[
									"inverse.gaussian\t{stats}",
									"inverse.gaussian"
								],
								[
									"na.omit\t{stats}",
									"na.omit"
								],
								[
									"sd\t{stats}",
									"sd"
								],
								[
									"rt\t{stats}",
									"rt"
								],
								[
									"fft\t{stats}",
									"fft"
								],
								[
									"dcauchy\t{stats}",
									"dcauchy"
								],
								[
									"fivenum\t{stats}",
									"fivenum"
								],
								[
									"toeplitz2\t{stats}",
									"toeplitz2"
								],
								[
									"relevel\t{stats}",
									"relevel"
								],
								[
									"summary.glm\t{stats}",
									"summary.glm"
								],
								[
									"rexp\t{stats}",
									"rexp"
								],
								[
									"monthplot\t{stats}",
									"monthplot"
								],
								[
									"dfbeta\t{stats}",
									"dfbeta"
								],
								[
									"diffinv\t{stats}",
									"diffinv"
								],
								[
									"nobs\t{stats}",
									"nobs"
								],
								[
									"SSmicmen\t{stats}",
									"SSmicmen"
								],
								[
									"is.ts\t{stats}",
									"is.ts"
								],
								[
									"dummy.coef.lm\t{stats}",
									"dummy.coef.lm"
								],
								[
									"hatvalues\t{stats}",
									"hatvalues"
								],
								[
									"variable.names\t{stats}",
									"variable.names"
								],
								[
									"Pair\t{stats}",
									"Pair"
								],
								[
									"model.frame.default\t{stats}",
									"model.frame.default"
								],
								[
									"anova\t{stats}",
									"anova"
								],
								[
									"simulate\t{stats}",
									"simulate"
								],
								[
									"dffits\t{stats}",
									"dffits"
								],
								[
									"model.matrix.default\t{stats}",
									"model.matrix.default"
								],
								[
									"contr.SAS\t{stats}",
									"contr.SAS"
								],
								[
									"contr.treatment\t{stats}",
									"contr.treatment"
								],
								[
									"predict.lm\t{stats}",
									"predict.lm"
								],
								[
									"prop.trend.test\t{stats}",
									"prop.trend.test"
								],
								[
									"as.dendrogram\t{stats}",
									"as.dendrogram"
								],
								[
									"ppois\t{stats}",
									"ppois"
								],
								[
									"pcauchy\t{stats}",
									"pcauchy"
								],
								[
									"smoothEnds\t{stats}",
									"smoothEnds"
								],
								[
									"qbinom\t{stats}",
									"qbinom"
								],
								[
									"hat\t{stats}",
									"hat"
								],
								[
									"p.adjust\t{stats}",
									"p.adjust"
								],
								[
									".MFclass\t{stats}",
									".MFclass"
								],
								[
									"dbinom\t{stats}",
									"dbinom"
								],
								[
									"terms.formula\t{stats}",
									"terms.formula"
								],
								[
									"spec.taper\t{stats}",
									"spec.taper"
								],
								[
									"HoltWinters\t{stats}",
									"HoltWinters"
								],
								[
									"ts\t{stats}",
									"ts"
								],
								[
									"na.exclude\t{stats}",
									"na.exclude"
								],
								[
									"dsignrank\t{stats}",
									"dsignrank"
								],
								[
									"is.tskernel\t{stats}",
									"is.tskernel"
								],
								[
									"fitted.values\t{stats}",
									"fitted.values"
								],
								[
									"qsignrank\t{stats}",
									"qsignrank"
								],
								[
									"integrate\t{stats}",
									"integrate"
								],
								[
									"optimise\t{stats}",
									"optimise"
								],
								[
									"binomial\t{stats}",
									"binomial"
								],
								[
									"KalmanSmooth\t{stats}",
									"KalmanSmooth"
								],
								[
									".vcov.aliased\t{stats}",
									".vcov.aliased"
								],
								[
									"deltat\t{stats}",
									"deltat"
								],
								[
									"p.adjust.methods\t{stats}",
									"p.adjust.methods"
								],
								[
									"SSD\t{stats}",
									"SSD"
								],
								[
									"summary.lm\t{stats}",
									"summary.lm"
								],
								[
									"smooth.spline\t{stats}",
									"smooth.spline"
								],
								[
									"rstudent\t{stats}",
									"rstudent"
								],
								[
									"hclust\t{stats}",
									"hclust"
								],
								[
									"density\t{stats}",
									"density"
								],
								[
									"dgeom\t{stats}",
									"dgeom"
								],
								[
									"terms\t{stats}",
									"terms"
								],
								[
									"fisher.test\t{stats}",
									"fisher.test"
								],
								[
									"rbinom\t{stats}",
									"rbinom"
								],
								[
									"formula\t{stats}",
									"formula"
								],
								[
									"nls.control\t{stats}",
									"nls.control"
								],
								[
									"isoreg\t{stats}",
									"isoreg"
								],
								[
									"contr.sum\t{stats}",
									"contr.sum"
								],
								[
									"uniroot\t{stats}",
									"uniroot"
								],
								[
									"quasibinomial\t{stats}",
									"quasibinomial"
								],
								[
									"dunif\t{stats}",
									"dunif"
								],
								[
									"influence.measures\t{stats}",
									"influence.measures"
								],
								[
									"na.contiguous\t{stats}",
									"na.contiguous"
								],
								[
									"dfbetas\t{stats}",
									"dfbetas"
								],
								[
									"pairwise.prop.test\t{stats}",
									"pairwise.prop.test"
								],
								[
									"rnbinom\t{stats}",
									"rnbinom"
								],
								[
									"pnorm\t{stats}",
									"pnorm"
								],
								[
									"rbeta\t{stats}",
									"rbeta"
								],
								[
									"cpgram\t{stats}",
									"cpgram"
								],
								[
									"knots\t{stats}",
									"knots"
								],
								[
									"biplot\t{stats}",
									"biplot"
								],
								[
									"runmed\t{stats}",
									"runmed"
								],
								[
									"mad\t{stats}",
									"mad"
								],
								[
									"delete.response\t{stats}",
									"delete.response"
								],
								[
									"plogis\t{stats}",
									"plogis"
								],
								[
									"read.ftable\t{stats}",
									"read.ftable"
								],
								[
									"aov\t{stats}",
									"aov"
								],
								[
									"update\t{stats}",
									"update"
								],
								[
									"StructTS\t{stats}",
									"StructTS"
								],
								[
									"polypath\t{graphics}",
									"polypath"
								],
								[
									"sunflowerplot\t{graphics}",
									"sunflowerplot"
								],
								[
									"plot.new\t{graphics}",
									"plot.new"
								],
								[
									"layout.show\t{graphics}",
									"layout.show"
								],
								[
									"matplot\t{graphics}",
									"matplot"
								],
								[
									"boxplot\t{graphics}",
									"boxplot"
								],
								[
									"panel.smooth\t{graphics}",
									"panel.smooth"
								],
								[
									"box\t{graphics}",
									"box"
								],
								[
									"lcm\t{graphics}",
									"lcm"
								],
								[
									"locator\t{graphics}",
									"locator"
								],
								[
									"plot.design\t{graphics}",
									"plot.design"
								],
								[
									"barplot.default\t{graphics}",
									"barplot.default"
								],
								[
									"axis.POSIXct\t{graphics}",
									"axis.POSIXct"
								],
								[
									"curve\t{graphics}",
									"curve"
								],
								[
									"matpoints\t{graphics}",
									"matpoints"
								],
								[
									"plot.default\t{graphics}",
									"plot.default"
								],
								[
									"pairs.default\t{graphics}",
									"pairs.default"
								],
								[
									"coplot\t{graphics}",
									"coplot"
								],
								[
									"par\t{graphics}",
									"par"
								],
								[
									"co.intervals\t{graphics}",
									"co.intervals"
								],
								[
									"hist.default\t{graphics}",
									"hist.default"
								],
								[
									"xyinch\t{graphics}",
									"xyinch"
								],
								[
									"mtext\t{graphics}",
									"mtext"
								],
								[
									"frame\t{graphics}",
									"frame"
								],
								[
									"screen\t{graphics}",
									"screen"
								],
								[
									"image.default\t{graphics}",
									"image.default"
								],
								[
									"boxplot.default\t{graphics}",
									"boxplot.default"
								],
								[
									"stem\t{graphics}",
									"stem"
								],
								[
									"polygon\t{graphics}",
									"polygon"
								],
								[
									"stars\t{graphics}",
									"stars"
								],
								[
									"lines\t{graphics}",
									"lines"
								],
								[
									"symbols\t{graphics}",
									"symbols"
								],
								[
									"pairs\t{graphics}",
									"pairs"
								],
								[
									"points\t{graphics}",
									"points"
								],
								[
									"grconvertX\t{graphics}",
									"grconvertX"
								],
								[
									"assocplot\t{graphics}",
									"assocplot"
								],
								[
									"spineplot\t{graphics}",
									"spineplot"
								],
								[
									"grconvertY\t{graphics}",
									"grconvertY"
								],
								[
									"title\t{graphics}",
									"title"
								],
								[
									"barplot\t{graphics}",
									"barplot"
								],
								[
									"persp\t{graphics}",
									"persp"
								],
								[
									"legend\t{graphics}",
									"legend"
								],
								[
									"identify\t{graphics}",
									"identify"
								],
								[
									"image\t{graphics}",
									"image"
								],
								[
									"filled.contour\t{graphics}",
									"filled.contour"
								],
								[
									"lines.default\t{graphics}",
									"lines.default"
								],
								[
									"hist\t{graphics}",
									"hist"
								],
								[
									"stripchart\t{graphics}",
									"stripchart"
								],
								[
									"contour\t{graphics}",
									"contour"
								],
								[
									"plot.function\t{graphics}",
									"plot.function"
								],
								[
									"mosaicplot\t{graphics}",
									"mosaicplot"
								],
								[
									"fourfoldplot\t{graphics}",
									"fourfoldplot"
								],
								[
									"split.screen\t{graphics}",
									"split.screen"
								],
								[
									"smoothScatter\t{graphics}",
									"smoothScatter"
								],
								[
									"matlines\t{graphics}",
									"matlines"
								],
								[
									"axTicks\t{graphics}",
									"axTicks"
								],
								[
									"arrows\t{graphics}",
									"arrows"
								],
								[
									"text.default\t{graphics}",
									"text.default"
								],
								[
									"points.default\t{graphics}",
									"points.default"
								],
								[
									"xinch\t{graphics}",
									"xinch"
								],
								[
									"dotchart\t{graphics}",
									"dotchart"
								],
								[
									"strheight\t{graphics}",
									"strheight"
								],
								[
									"rect\t{graphics}",
									"rect"
								],
								[
									"grid\t{graphics}",
									"grid"
								],
								[
									".filled.contour\t{graphics}",
									".filled.contour"
								],
								[
									"close.screen\t{graphics}",
									"close.screen"
								],
								[
									"axis\t{graphics}",
									"axis"
								],
								[
									"layout\t{graphics}",
									"layout"
								],
								[
									"contour.default\t{graphics}",
									"contour.default"
								],
								[
									"cdplot\t{graphics}",
									"cdplot"
								],
								[
									"pie\t{graphics}",
									"pie"
								],
								[
									"xspline\t{graphics}",
									"xspline"
								],
								[
									"text\t{graphics}",
									"text"
								],
								[
									"strwidth\t{graphics}",
									"strwidth"
								],
								[
									"axis.Date\t{graphics}",
									"axis.Date"
								],
								[
									"boxplot.matrix\t{graphics}",
									"boxplot.matrix"
								],
								[
									"bxp\t{graphics}",
									"bxp"
								],
								[
									"abline\t{graphics}",
									"abline"
								],
								[
									"plot.xy\t{graphics}",
									"plot.xy"
								],
								[
									"rasterImage\t{graphics}",
									"rasterImage"
								],
								[
									"segments\t{graphics}",
									"segments"
								],
								[
									"yinch\t{graphics}",
									"yinch"
								],
								[
									"plot\t{graphics}",
									"plot"
								],
								[
									"plot.window\t{graphics}",
									"plot.window"
								],
								[
									"clip\t{graphics}",
									"clip"
								],
								[
									"erase.screen\t{graphics}",
									"erase.screen"
								],
								[
									"rug\t{graphics}",
									"rug"
								],
								[
									"Axis\t{graphics}",
									"Axis"
								],
								[
									".__C__signature\t{methods}",
									".__C__signature"
								],
								[
									".ShortPrimitiveSkeletons\t{methods}",
									".ShortPrimitiveSkeletons"
								],
								[
									"showExtends\t{methods}",
									"showExtends"
								],
								[
									".__C__packageInfo\t{methods}",
									".__C__packageInfo"
								],
								[
									".__C__MethodSelectionReport\t{methods}",
									".__C__MethodSelectionReport"
								],
								[
									".__C__uninitializedField\t{methods}",
									".__C__uninitializedField"
								],
								[
									"extends\t{methods}",
									"extends"
								],
								[
									".__C__ordered\t{methods}",
									".__C__ordered"
								],
								[
									".__C__oldClass\t{methods}",
									".__C__oldClass"
								],
								[
									"addNextMethod\t{methods}",
									"addNextMethod"
								],
								[
									".__C__groupGenericFunction\t{methods}",
									".__C__groupGenericFunction"
								],
								[
									"getGenerics\t{methods}",
									"getGenerics"
								],
								[
									".__C__standardGeneric\t{methods}",
									".__C__standardGeneric"
								],
								[
									".__C__nonstandardGroupGenericFunction\t{methods}",
									".__C__nonstandardGroupGenericFunction"
								],
								[
									"makeExtends\t{methods}",
									"makeExtends"
								],
								[
									".__C__S3\t{methods}",
									".__C__S3"
								],
								[
									".__C__array\t{methods}",
									".__C__array"
								],
								[
									".__C__S4\t{methods}",
									".__C__S4"
								],
								[
									".EmptyPrimitiveSkeletons\t{methods}",
									".EmptyPrimitiveSkeletons"
								],
								[
									".__C__SuperClassMethod\t{methods}",
									".__C__SuperClassMethod"
								],
								[
									"showMlist\t{methods}",
									"showMlist"
								],
								[
									"setAs\t{methods}",
									"setAs"
								],
								[
									".__C__aov\t{methods}",
									".__C__aov"
								],
								[
									"resetClass\t{methods}",
									"resetClass"
								],
								[
									"assignMethodsMetaData\t{methods}",
									"assignMethodsMetaData"
								],
								[
									".__C__integrate\t{methods}",
									".__C__integrate"
								],
								[
									"getDataPart\t{methods}",
									"getDataPart"
								],
								[
									".__C__listOfMethods\t{methods}",
									".__C__listOfMethods"
								],
								[
									".__C__ClassUnionRepresentation\t{methods}",
									".__C__ClassUnionRepresentation"
								],
								[
									"findMethodSignatures\t{methods}",
									"findMethodSignatures"
								],
								[
									"getGroupMembers\t{methods}",
									"getGroupMembers"
								],
								[
									"signature\t{methods}",
									"signature"
								],
								[
									"setReplaceMethod\t{methods}",
									"setReplaceMethod"
								],
								[
									"removeClass\t{methods}",
									"removeClass"
								],
								[
									"implicitGeneric\t{methods}",
									"implicitGeneric"
								],
								[
									".OldClassesList\t{methods}",
									".OldClassesList"
								],
								[
									".__C__refObject\t{methods}",
									".__C__refObject"
								],
								[
									"cacheMetaData\t{methods}",
									"cacheMetaData"
								],
								[
									"el\t{methods}",
									"el"
								],
								[
									"callGeneric\t{methods}",
									"callGeneric"
								],
								[
									"showClass\t{methods}",
									"showClass"
								],
								[
									"Complex\t{methods}",
									"Complex"
								],
								[
									".__C__.Other\t{methods}",
									".__C__.Other"
								],
								[
									".__C__classPrototypeDef\t{methods}",
									".__C__classPrototypeDef"
								],
								[
									".__C__ts\t{methods}",
									".__C__ts"
								],
								[
									"evalSource\t{methods}",
									"evalSource"
								],
								[
									"kronecker\t{methods}",
									"kronecker"
								],
								[
									"resetGeneric\t{methods}",
									"resetGeneric"
								],
								[
									"possibleExtends\t{methods}",
									"possibleExtends"
								],
								[
									".__C__table\t{methods}",
									".__C__table"
								],
								[
									"missingArg\t{methods}",
									"missingArg"
								],
								[
									"Quote\t{methods}",
									"Quote"
								],
								[
									"registerImplicitGenerics\t{methods}",
									"registerImplicitGenerics"
								],
								[
									".__C__double\t{methods}",
									".__C__double"
								],
								[
									"isClassDef\t{methods}",
									"isClassDef"
								],
								[
									"initRefFields\t{methods}",
									"initRefFields"
								],
								[
									".__C__environment\t{methods}",
									".__C__environment"
								],
								[
									"insertMethod\t{methods}",
									"insertMethod"
								],
								[
									"findFunction\t{methods}",
									"findFunction"
								],
								[
									"externalRefMethod\t{methods}",
									"externalRefMethod"
								],
								[
									"fixPre1.8\t{methods}",
									"fixPre1.8"
								],
								[
									"checkAtAssignment\t{methods}",
									"checkAtAssignment"
								],
								[
									".__C__Date\t{methods}",
									".__C__Date"
								],
								[
									"finalDefaultMethod\t{methods}",
									"finalDefaultMethod"
								],
								[
									".__C__character\t{methods}",
									".__C__character"
								],
								[
									"isClass\t{methods}",
									"isClass"
								],
								[
									"completeClassDefinition\t{methods}",
									"completeClassDefinition"
								],
								[
									"callNextMethod\t{methods}",
									"callNextMethod"
								],
								[
									"isVirtualClass\t{methods}",
									"isVirtualClass"
								],
								[
									"slotNames\t{methods}",
									"slotNames"
								],
								[
									"getSlots\t{methods}",
									"getSlots"
								],
								[
									".__C__LinearMethodsList\t{methods}",
									".__C__LinearMethodsList"
								],
								[
									"selectSuperClasses\t{methods}",
									"selectSuperClasses"
								],
								[
									"removeMethods\t{methods}",
									"removeMethods"
								],
								[
									".classEnv\t{methods}",
									".classEnv"
								],
								[
									".__C__structure\t{methods}",
									".__C__structure"
								],
								[
									"evalOnLoad\t{methods}",
									"evalOnLoad"
								],
								[
									"cbind2\t{methods}",
									"cbind2"
								],
								[
									".__C__lm\t{methods}",
									".__C__lm"
								],
								[
									".__C__dump.frames\t{methods}",
									".__C__dump.frames"
								],
								[
									"setClassUnion\t{methods}",
									"setClassUnion"
								],
								[
									".__C__density\t{methods}",
									".__C__density"
								],
								[
									".hasSlot\t{methods}",
									".hasSlot"
								],
								[
									"initialize\t{methods}",
									"initialize"
								],
								[
									"Summary\t{methods}",
									"Summary"
								],
								[
									"representation\t{methods}",
									"representation"
								],
								[
									"getClass\t{methods}",
									"getClass"
								],
								[
									"method.skeleton\t{methods}",
									"method.skeleton"
								],
								[
									".__C__vector\t{methods}",
									".__C__vector"
								],
								[
									"setRefClass\t{methods}",
									"setRefClass"
								],
								[
									"Math2\t{methods}",
									"Math2"
								],
								[
									"getMethods\t{methods}",
									"getMethods"
								],
								[
									".__C__repeat\t{methods}",
									".__C__repeat"
								],
								[
									".__C__MethodsList\t{methods}",
									".__C__MethodsList"
								],
								[
									"Logic\t{methods}",
									"Logic"
								],
								[
									"matchSignature\t{methods}",
									"matchSignature"
								],
								[
									".__C__className\t{methods}",
									".__C__className"
								],
								[
									"methodsPackageMetaName\t{methods}",
									"methodsPackageMetaName"
								],
								[
									"defaultDumpName\t{methods}",
									"defaultDumpName"
								],
								[
									".__C__name\t{methods}",
									".__C__name"
								],
								[
									"getGroup\t{methods}",
									"getGroup"
								],
								[
									".__C__ObjectsWithPackage\t{methods}",
									".__C__ObjectsWithPackage"
								],
								[
									".__C__glm.null\t{methods}",
									".__C__glm.null"
								],
								[
									"substituteDirect\t{methods}",
									"substituteDirect"
								],
								[
									"packageSlot\t{methods}",
									"packageSlot"
								],
								[
									".__C__defaultBindingFunction\t{methods}",
									".__C__defaultBindingFunction"
								],
								[
									"removeMethod\t{methods}",
									"removeMethod"
								],
								[
									".__C__special\t{methods}",
									".__C__special"
								],
								[
									".__C__SealedMethodDefinition\t{methods}",
									".__C__SealedMethodDefinition"
								],
								[
									"MethodsListSelect\t{methods}",
									"MethodsListSelect"
								],
								[
									"S3Part\t{methods}",
									"S3Part"
								],
								[
									".__C__list\t{methods}",
									".__C__list"
								],
								[
									".__C__NULL\t{methods}",
									".__C__NULL"
								],
								[
									"is\t{methods}",
									"is"
								],
								[
									"checkSlotAssignment\t{methods}",
									"checkSlotAssignment"
								],
								[
									"classMetaName\t{methods}",
									"classMetaName"
								],
								[
									"slotsFromS3\t{methods}",
									"slotsFromS3"
								],
								[
									"promptMethods\t{methods}",
									"promptMethods"
								],
								[
									"insertClassMethods\t{methods}",
									"insertClassMethods"
								],
								[
									"isXS3Class\t{methods}",
									"isXS3Class"
								],
								[
									"isRematched\t{methods}",
									"isRematched"
								],
								[
									".__C__.environment\t{methods}",
									".__C__.environment"
								],
								[
									".selectSuperClasses\t{methods}",
									".selectSuperClasses"
								],
								[
									".__C__genericFunctionWithTrace\t{methods}",
									".__C__genericFunctionWithTrace"
								],
								[
									".__C__anova\t{methods}",
									".__C__anova"
								],
								[
									".__C__socket\t{methods}",
									".__C__socket"
								],
								[
									"emptyMethodsList\t{methods}",
									"emptyMethodsList"
								],
								[
									"listFromMethods\t{methods}",
									"listFromMethods"
								],
								[
									"isGeneric\t{methods}",
									"isGeneric"
								],
								[
									".__C__refGeneratorSlot\t{methods}",
									".__C__refGeneratorSlot"
								],
								[
									".__C__integer\t{methods}",
									".__C__integer"
								],
								[
									"show\t{methods}",
									"show"
								],
								[
									"metaNameUndo\t{methods}",
									"metaNameUndo"
								],
								[
									".untracedFunction\t{methods}",
									".untracedFunction"
								],
								[
									"getMethodsForDispatch\t{methods}",
									"getMethodsForDispatch"
								],
								[
									".__C__packageIQR\t{methods}",
									".__C__packageIQR"
								],
								[
									".__C__envRefClass\t{methods}",
									".__C__envRefClass"
								],
								[
									"Math\t{methods}",
									"Math"
								],
								[
									"makePrototypeFromClassDef\t{methods}",
									"makePrototypeFromClassDef"
								],
								[
									"slot\t{methods}",
									"slot"
								],
								[
									".__C__complex\t{methods}",
									".__C__complex"
								],
								[
									"reconcilePropertiesAndPrototype\t{methods}",
									"reconcilePropertiesAndPrototype"
								],
								[
									"doPrimitiveMethod\t{methods}",
									"doPrimitiveMethod"
								],
								[
									"getValidity\t{methods}",
									"getValidity"
								],
								[
									".__C__classRepresentation\t{methods}",
									".__C__classRepresentation"
								],
								[
									"SignatureMethod\t{methods}",
									"SignatureMethod"
								],
								[
									".__C__libraryIQR\t{methods}",
									".__C__libraryIQR"
								],
								[
									"isSealedMethod\t{methods}",
									"isSealedMethod"
								],
								[
									"getPackageName\t{methods}",
									"getPackageName"
								],
								[
									".__C__OptionalFunction\t{methods}",
									".__C__OptionalFunction"
								],
								[
									"setIs\t{methods}",
									"setIs"
								],
								[
									"balanceMethodsList\t{methods}",
									"balanceMethodsList"
								],
								[
									".__C__missing\t{methods}",
									".__C__missing"
								],
								[
									"setLoadActions\t{methods}",
									"setLoadActions"
								],
								[
									"setDataPart\t{methods}",
									"setDataPart"
								],
								[
									".__C__refMethodDef\t{methods}",
									".__C__refMethodDef"
								],
								[
									"setGroupGeneric\t{methods}",
									"setGroupGeneric"
								],
								[
									".__C__genericFunction\t{methods}",
									".__C__genericFunction"
								],
								[
									"S3Class\t{methods}",
									"S3Class"
								],
								[
									"findUnique\t{methods}",
									"findUnique"
								],
								[
									".__C__classGeneratorFunction\t{methods}",
									".__C__classGeneratorFunction"
								],
								[
									"dumpMethods\t{methods}",
									"dumpMethods"
								],
								[
									".__C__raw\t{methods}",
									".__C__raw"
								],
								[
									".__C__mlm\t{methods}",
									".__C__mlm"
								],
								[
									"sigToEnv\t{methods}",
									"sigToEnv"
								],
								[
									"setGenericImplicit\t{methods}",
									"setGenericImplicit"
								],
								[
									".__C__POSIXct\t{methods}",
									".__C__POSIXct"
								],
								[
									"sealClass\t{methods}",
									"sealClass"
								],
								[
									".__C__groupGenericFunctionWithTrace\t{methods}",
									".__C__groupGenericFunctionWithTrace"
								],
								[
									"hasArg\t{methods}",
									"hasArg"
								],
								[
									"makeStandardGeneric\t{methods}",
									"makeStandardGeneric"
								],
								[
									"selectMethod\t{methods}",
									"selectMethod"
								],
								[
									"loadMethod\t{methods}",
									"loadMethod"
								],
								[
									"getLoadActions\t{methods}",
									"getLoadActions"
								],
								[
									"prohibitGeneric\t{methods}",
									"prohibitGeneric"
								],
								[
									"substituteFunctionArgs\t{methods}",
									"substituteFunctionArgs"
								],
								[
									"completeExtends\t{methods}",
									"completeExtends"
								],
								[
									"assignClassDef\t{methods}",
									"assignClassDef"
								],
								[
									"methodSignatureMatrix\t{methods}",
									"methodSignatureMatrix"
								],
								[
									"isGrammarSymbol\t{methods}",
									"isGrammarSymbol"
								],
								[
									"prototype\t{methods}",
									"prototype"
								],
								[
									"requireMethods\t{methods}",
									"requireMethods"
								],
								[
									".__C__data.frameRowLabels\t{methods}",
									".__C__data.frameRowLabels"
								],
								[
									".__C__activeBindingFunction\t{methods}",
									".__C__activeBindingFunction"
								],
								[
									".__C__externalptr\t{methods}",
									".__C__externalptr"
								],
								[
									".__C__.name\t{methods}",
									".__C__.name"
								],
								[
									"setOldClass\t{methods}",
									"setOldClass"
								],
								[
									"setPrimitiveMethods\t{methods}",
									"setPrimitiveMethods"
								],
								[
									".__C__recordedplot\t{methods}",
									".__C__recordedplot"
								],
								[
									"isGroup\t{methods}",
									"isGroup"
								],
								[
									"getAllSuperClasses\t{methods}",
									"getAllSuperClasses"
								],
								[
									".__C__localRefClass\t{methods}",
									".__C__localRefClass"
								],
								[
									"findMethods\t{methods}",
									"findMethods"
								],
								[
									"rematchDefinition\t{methods}",
									"rematchDefinition"
								],
								[
									"MethodAddCoerce\t{methods}",
									"MethodAddCoerce"
								],
								[
									".__C__POSIXt\t{methods}",
									".__C__POSIXt"
								],
								[
									".__C__summary.table\t{methods}",
									".__C__summary.table"
								],
								[
									"hasMethod\t{methods}",
									"hasMethod"
								],
								[
									".__C__language\t{methods}",
									".__C__language"
								],
								[
									".__C__refClass\t{methods}",
									".__C__refClass"
								],
								[
									"evalqOnLoad\t{methods}",
									"evalqOnLoad"
								],
								[
									"insertSource\t{methods}",
									"insertSource"
								],
								[
									"hasLoadAction\t{methods}",
									"hasLoadAction"
								],
								[
									".__C__numeric\t{methods}",
									".__C__numeric"
								],
								[
									".__C__derivedDefaultMethodWithTrace\t{methods}",
									".__C__derivedDefaultMethodWithTrace"
								],
								[
									".__C__externalRefMethod\t{methods}",
									".__C__externalRefMethod"
								],
								[
									"validSlotNames\t{methods}",
									"validSlotNames"
								],
								[
									"multipleClasses\t{methods}",
									"multipleClasses"
								],
								[
									"empty.dump\t{methods}",
									"empty.dump"
								],
								[
									"setPackageName\t{methods}",
									"setPackageName"
								],
								[
									".__C__MethodDefinitionWithTrace\t{methods}",
									".__C__MethodDefinitionWithTrace"
								],
								[
									".__C__maov\t{methods}",
									".__C__maov"
								],
								[
									".__C__standardGenericWithTrace\t{methods}",
									".__C__standardGenericWithTrace"
								],
								[
									"getClassDef\t{methods}",
									"getClassDef"
								],
								[
									"newEmptyObject\t{methods}",
									"newEmptyObject"
								],
								[
									"formalArgs\t{methods}",
									"formalArgs"
								],
								[
									"Arith\t{methods}",
									"Arith"
								],
								[
									"mergeMethods\t{methods}",
									"mergeMethods"
								],
								[
									"MethodsList\t{methods}",
									"MethodsList"
								],
								[
									"getRefClass\t{methods}",
									"getRefClass"
								],
								[
									"inheritedSlotNames\t{methods}",
									"inheritedSlotNames"
								],
								[
									".__C__.NULL\t{methods}",
									".__C__.NULL"
								],
								[
									".__C__PossibleMethod\t{methods}",
									".__C__PossibleMethod"
								],
								[
									"classesToAM\t{methods}",
									"classesToAM"
								],
								[
									".__C__functionWithTrace\t{methods}",
									".__C__functionWithTrace"
								],
								[
									"asMethodDefinition\t{methods}",
									"asMethodDefinition"
								],
								[
									".__C__factor\t{methods}",
									".__C__factor"
								],
								[
									".__C__sourceEnvironment\t{methods}",
									".__C__sourceEnvironment"
								],
								[
									"languageEl\t{methods}",
									"languageEl"
								],
								[
									"Ops\t{methods}",
									"Ops"
								],
								[
									"getMethod\t{methods}",
									"getMethod"
								],
								[
									".__C__MethodDefinition\t{methods}",
									".__C__MethodDefinition"
								],
								[
									"listFromMlist\t{methods}",
									"listFromMlist"
								],
								[
									"allNames\t{methods}",
									"allNames"
								],
								[
									".__C__mts\t{methods}",
									".__C__mts"
								],
								[
									".__C__mtable\t{methods}",
									".__C__mtable"
								],
								[
									"completeSubclasses\t{methods}",
									"completeSubclasses"
								],
								[
									"cacheGenericsMetaData\t{methods}",
									"cacheGenericsMetaData"
								],
								[
									".__C__data.frame\t{methods}",
									".__C__data.frame"
								],
								[
									"tryNew\t{methods}",
									"tryNew"
								],
								[
									"findClass\t{methods}",
									"findClass"
								],
								[
									"cacheMethod\t{methods}",
									"cacheMethod"
								],
								[
									"showDefault\t{methods}",
									"showDefault"
								],
								[
									"Compare\t{methods}",
									"Compare"
								],
								[
									"new\t{methods}",
									"new"
								],
								[
									".__C__if\t{methods}",
									".__C__if"
								],
								[
									".__C__EmptyMethodsList\t{methods}",
									".__C__EmptyMethodsList"
								],
								[
									"makeClassRepresentation\t{methods}",
									"makeClassRepresentation"
								],
								[
									"promptClass\t{methods}",
									"promptClass"
								],
								[
									".__C__optionalMethod\t{methods}",
									".__C__optionalMethod"
								],
								[
									"newClassRepresentation\t{methods}",
									"newClassRepresentation"
								],
								[
									".S4methods\t{methods}",
									".S4methods"
								],
								[
									".__C__ANY\t{methods}",
									".__C__ANY"
								],
								[
									"testVirtual\t{methods}",
									"testVirtual"
								],
								[
									".__C__refClassRepresentation\t{methods}",
									".__C__refClassRepresentation"
								],
								[
									".__C__conditionalExtension\t{methods}",
									".__C__conditionalExtension"
								],
								[
									"linearizeMlist\t{methods}",
									"linearizeMlist"
								],
								[
									"removeGeneric\t{methods}",
									"removeGeneric"
								],
								[
									"canCoerce\t{methods}",
									"canCoerce"
								],
								[
									".__C__traceable\t{methods}",
									".__C__traceable"
								],
								[
									".__C__MethodWithNextWithTrace\t{methods}",
									".__C__MethodWithNextWithTrace"
								],
								[
									"rbind2\t{methods}",
									"rbind2"
								],
								[
									".__C__anova.glm.null\t{methods}",
									".__C__anova.glm.null"
								],
								[
									".__C__.externalptr\t{methods}",
									".__C__.externalptr"
								],
								[
									".__C__matrix\t{methods}",
									".__C__matrix"
								],
								[
									"setValidity\t{methods}",
									"setValidity"
								],
								[
									"functionBody\t{methods}",
									"functionBody"
								],
								[
									".__C__hsearch\t{methods}",
									".__C__hsearch"
								],
								[
									".__C__function\t{methods}",
									".__C__function"
								],
								[
									"getGeneric\t{methods}",
									"getGeneric"
								],
								[
									".__C__POSIXlt\t{methods}",
									".__C__POSIXlt"
								],
								[
									"dumpMethod\t{methods}",
									"dumpMethod"
								],
								[
									"elNamed\t{methods}",
									"elNamed"
								],
								[
									".__C__logical\t{methods}",
									".__C__logical"
								],
								[
									".__C__nonstandardGenericWithTrace\t{methods}",
									".__C__nonstandardGenericWithTrace"
								],
								[
									".__C__summaryDefault\t{methods}",
									".__C__summaryDefault"
								],
								[
									".__C__derivedDefaultMethod\t{methods}",
									".__C__derivedDefaultMethod"
								],
								[
									".__C__nonstandardGeneric\t{methods}",
									".__C__nonstandardGeneric"
								],
								[
									".doTracePrint\t{methods}",
									".doTracePrint"
								],
								[
									".__C__glm\t{methods}",
									".__C__glm"
								],
								[
									".__C__nonstandardGenericFunction\t{methods}",
									".__C__nonstandardGenericFunction"
								],
								[
									".__C__refObjectGenerator\t{methods}",
									".__C__refObjectGenerator"
								],
								[
									".__C__builtin\t{methods}",
									".__C__builtin"
								],
								[
									"setClass\t{methods}",
									"setClass"
								],
								[
									".__C__for\t{methods}",
									".__C__for"
								],
								[
									"isSealedClass\t{methods}",
									"isSealedClass"
								],
								[
									"generic.skeleton\t{methods}",
									"generic.skeleton"
								],
								[
									".__C__internalDispatchMethod\t{methods}",
									".__C__internalDispatchMethod"
								],
								[
									".__C__anova.glm\t{methods}",
									".__C__anova.glm"
								],
								[
									"makeGeneric\t{methods}",
									"makeGeneric"
								],
								[
									"setMethod\t{methods}",
									"setMethod"
								],
								[
									"isClassUnion\t{methods}",
									"isClassUnion"
								],
								[
									"coerce\t{methods}",
									"coerce"
								],
								[
									"initFieldArgs\t{methods}",
									"initFieldArgs"
								],
								[
									".valueClassTest\t{methods}",
									".valueClassTest"
								],
								[
									"validObject\t{methods}",
									"validObject"
								],
								[
									"getClasses\t{methods}",
									"getClasses"
								],
								[
									"setGeneric\t{methods}",
									"setGeneric"
								],
								[
									"unRematchDefinition\t{methods}",
									"unRematchDefinition"
								],
								[
									".__C__nonStructure\t{methods}",
									".__C__nonStructure"
								],
								[
									"hasMethods\t{methods}",
									"hasMethods"
								],
								[
									".__C__call\t{methods}",
									".__C__call"
								],
								[
									"existsFunction\t{methods}",
									"existsFunction"
								],
								[
									"classLabel\t{methods}",
									"classLabel"
								],
								[
									"defaultPrototype\t{methods}",
									"defaultPrototype"
								],
								[
									".__C__MethodWithNext\t{methods}",
									".__C__MethodWithNext"
								],
								[
									".__C__rle\t{methods}",
									".__C__rle"
								],
								[
									"showMethods\t{methods}",
									"showMethods"
								],
								[
									".__C__logLik\t{methods}",
									".__C__logLik"
								],
								[
									".__C__namedList\t{methods}",
									".__C__namedList"
								],
								[
									".__C__formula\t{methods}",
									".__C__formula"
								],
								[
									"findMethod\t{methods}",
									"findMethod"
								],
								[
									"testInheritedMethods\t{methods}",
									"testInheritedMethods"
								],
								[
									"as\t{methods}",
									"as"
								],
								[
									"conformMethod\t{methods}",
									"conformMethod"
								],
								[
									"makeMethodsList\t{methods}",
									"makeMethodsList"
								],
								[
									"newBasic\t{methods}",
									"newBasic"
								],
								[
									".__C__while\t{methods}",
									".__C__while"
								],
								[
									".slotNames\t{methods}",
									".slotNames"
								],
								[
									"className\t{methods}",
									"className"
								],
								[
									".__C__expression\t{methods}",
									".__C__expression"
								],
								[
									".__C__refMethodDefWithTrace\t{methods}",
									".__C__refMethodDefWithTrace"
								],
								[
									"setLoadAction\t{methods}",
									"setLoadAction"
								],
								[
									".__C__VIRTUAL\t{methods}",
									".__C__VIRTUAL"
								],
								[
									"superClassDepth\t{methods}",
									"superClassDepth"
								],
								[
									".__C__SClassExtension\t{methods}",
									".__C__SClassExtension"
								],
								[
									"existsMethod\t{methods}",
									"existsMethod"
								],
								[
									"getFunction\t{methods}",
									"getFunction"
								],
								[
									"getMethodsMetaData\t{methods}",
									"getMethodsMetaData"
								],
								[
									"write.socket\t{utils}",
									"write.socket"
								],
								[
									"fixInNamespace\t{utils}",
									"fixInNamespace"
								],
								[
									"changedFiles\t{utils}",
									"changedFiles"
								],
								[
									"history\t{utils}",
									"history"
								],
								[
									"SweaveHooks\t{utils}",
									"SweaveHooks"
								],
								[
									"packageDate\t{utils}",
									"packageDate"
								],
								[
									"installed.packages\t{utils}",
									"installed.packages"
								],
								[
									"citEntry\t{utils}",
									"citEntry"
								],
								[
									"as.roman\t{utils}",
									"as.roman"
								],
								[
									".romans\t{utils}",
									".romans"
								],
								[
									"suppressForeignCheck\t{utils}",
									"suppressForeignCheck"
								],
								[
									"aregexec\t{utils}",
									"aregexec"
								],
								[
									"txtProgressBar\t{utils}",
									"txtProgressBar"
								],
								[
									"strcapture\t{utils}",
									"strcapture"
								],
								[
									"xemacs\t{utils}",
									"xemacs"
								],
								[
									"rtags\t{utils}",
									"rtags"
								],
								[
									"as.person\t{utils}",
									"as.person"
								],
								[
									"maintainer\t{utils}",
									"maintainer"
								],
								[
									"aspell\t{utils}",
									"aspell"
								],
								[
									"bug.report\t{utils}",
									"bug.report"
								],
								[
									"capture.output\t{utils}",
									"capture.output"
								],
								[
									"remhash\t{utils}",
									"remhash"
								],
								[
									"assignInMyNamespace\t{utils}",
									"assignInMyNamespace"
								],
								[
									"aspell_package_vignettes\t{utils}",
									"aspell_package_vignettes"
								],
								[
									"memory.limit\t{utils}",
									"memory.limit"
								],
								[
									"person\t{utils}",
									"person"
								],
								[
									"ls.str\t{utils}",
									"ls.str"
								],
								[
									"read.delim2\t{utils}",
									"read.delim2"
								],
								[
									"RweaveLatexWritedoc\t{utils}",
									"RweaveLatexWritedoc"
								],
								[
									"hasName\t{utils}",
									"hasName"
								],
								[
									"getTxtProgressBar\t{utils}",
									"getTxtProgressBar"
								],
								[
									"news\t{utils}",
									"news"
								],
								[
									"typhash\t{utils}",
									"typhash"
								],
								[
									"read.csv\t{utils}",
									"read.csv"
								],
								[
									"RSiteSearch\t{utils}",
									"RSiteSearch"
								],
								[
									"debugger\t{utils}",
									"debugger"
								],
								[
									"demo\t{utils}",
									"demo"
								],
								[
									"isS3stdGeneric\t{utils}",
									"isS3stdGeneric"
								],
								[
									"Sweave\t{utils}",
									"Sweave"
								],
								[
									"nsl\t{utils}",
									"nsl"
								],
								[
									"modifyList\t{utils}",
									"modifyList"
								],
								[
									"promptData\t{utils}",
									"promptData"
								],
								[
									"help.request\t{utils}",
									"help.request"
								],
								[
									"alarm\t{utils}",
									"alarm"
								],
								[
									".DollarNames\t{utils}",
									".DollarNames"
								],
								[
									"promptImport\t{utils}",
									"promptImport"
								],
								[
									"close.socket\t{utils}",
									"close.socket"
								],
								[
									"read.csv2\t{utils}",
									"read.csv2"
								],
								[
									"zip\t{utils}",
									"zip"
								],
								[
									"hsearch_db_concepts\t{utils}",
									"hsearch_db_concepts"
								],
								[
									"assignInNamespace\t{utils}",
									"assignInNamespace"
								],
								[
									"askYesNo\t{utils}",
									"askYesNo"
								],
								[
									"read.delim\t{utils}",
									"read.delim"
								],
								[
									"limitedLabels\t{utils}",
									"limitedLabels"
								],
								[
									"is.relistable\t{utils}",
									"is.relistable"
								],
								[
									"toLatex\t{utils}",
									"toLatex"
								],
								[
									"citFooter\t{utils}",
									"citFooter"
								],
								[
									"head.matrix\t{utils}",
									"head.matrix"
								],
								[
									"View\t{utils}",
									"View"
								],
								[
									"findMatches\t{utils}",
									"findMatches"
								],
								[
									"create.post\t{utils}",
									"create.post"
								],
								[
									"globalVariables\t{utils}",
									"globalVariables"
								],
								[
									"vi\t{utils}",
									"vi"
								],
								[
									"bibentry\t{utils}",
									"bibentry"
								],
								[
									"checkCRAN\t{utils}",
									"checkCRAN"
								],
								[
									"Stangle\t{utils}",
									"Stangle"
								],
								[
									"methods\t{utils}",
									"methods"
								],
								[
									"sethash\t{utils}",
									"sethash"
								],
								[
									"type.convert\t{utils}",
									"type.convert"
								],
								[
									"findLineNum\t{utils}",
									"findLineNum"
								],
								[
									"menu\t{utils}",
									"menu"
								],
								[
									"aspell_package_C_files\t{utils}",
									"aspell_package_C_files"
								],
								[
									"old.packages\t{utils}",
									"old.packages"
								],
								[
									"hsearch_db_keywords\t{utils}",
									"hsearch_db_keywords"
								],
								[
									"RShowDoc\t{utils}",
									"RShowDoc"
								],
								[
									"browseURL\t{utils}",
									"browseURL"
								],
								[
									"debugcall\t{utils}",
									"debugcall"
								],
								[
									"is.hashtab\t{utils}",
									"is.hashtab"
								],
								[
									"gethash\t{utils}",
									"gethash"
								],
								[
									"setTxtProgressBar\t{utils}",
									"setTxtProgressBar"
								],
								[
									"tail\t{utils}",
									"tail"
								],
								[
									"emacs\t{utils}",
									"emacs"
								],
								[
									"object.size\t{utils}",
									"object.size"
								],
								[
									"RweaveTryStop\t{utils}",
									"RweaveTryStop"
								],
								[
									"undebugcall\t{utils}",
									"undebugcall"
								],
								[
									"download.file\t{utils}",
									"download.file"
								],
								[
									"loadhistory\t{utils}",
									"loadhistory"
								],
								[
									"RweaveChunkPrefix\t{utils}",
									"RweaveChunkPrefix"
								],
								[
									"summaryRprof\t{utils}",
									"summaryRprof"
								],
								[
									"make.socket\t{utils}",
									"make.socket"
								],
								[
									"xedit\t{utils}",
									"xedit"
								],
								[
									"data\t{utils}",
									"data"
								],
								[
									"charClass\t{utils}",
									"charClass"
								],
								[
									"RtangleSetup\t{utils}",
									"RtangleSetup"
								],
								[
									"browseEnv\t{utils}",
									"browseEnv"
								],
								[
									"update.packages\t{utils}",
									"update.packages"
								],
								[
									"untar\t{utils}",
									"untar"
								],
								[
									"tail.matrix\t{utils}",
									"tail.matrix"
								],
								[
									"getS3method\t{utils}",
									"getS3method"
								],
								[
									"write.table\t{utils}",
									"write.table"
								],
								[
									"strOptions\t{utils}",
									"strOptions"
								],
								[
									"rc.status\t{utils}",
									"rc.status"
								],
								[
									"asDateBuilt\t{utils}",
									"asDateBuilt"
								],
								[
									"Rprofmem\t{utils}",
									"Rprofmem"
								],
								[
									"apropos\t{utils}",
									"apropos"
								],
								[
									"getSrcDirectory\t{utils}",
									"getSrcDirectory"
								],
								[
									"as.relistable\t{utils}",
									"as.relistable"
								],
								[
									"SweaveSyntaxNoweb\t{utils}",
									"SweaveSyntaxNoweb"
								],
								[
									"SweaveSyntaxLatex\t{utils}",
									"SweaveSyntaxLatex"
								],
								[
									"citeNatbib\t{utils}",
									"citeNatbib"
								],
								[
									"read.fwf\t{utils}",
									"read.fwf"
								],
								[
									"de.setup\t{utils}",
									"de.setup"
								],
								[
									"removeSource\t{utils}",
									"removeSource"
								],
								[
									"data.entry\t{utils}",
									"data.entry"
								],
								[
									"packageVersion\t{utils}",
									"packageVersion"
								],
								[
									"as.personList\t{utils}",
									"as.personList"
								],
								[
									"citation\t{utils}",
									"citation"
								],
								[
									"citHeader\t{utils}",
									"citHeader"
								],
								[
									"read.fortran\t{utils}",
									"read.fortran"
								],
								[
									"findCRANmirror\t{utils}",
									"findCRANmirror"
								],
								[
									"aspell_package_R_files\t{utils}",
									"aspell_package_R_files"
								],
								[
									"RtangleFinish\t{utils}",
									"RtangleFinish"
								],
								[
									"hashtab\t{utils}",
									"hashtab"
								],
								[
									"rc.getOption\t{utils}",
									"rc.getOption"
								],
								[
									"RtangleWritedoc\t{utils}",
									"RtangleWritedoc"
								],
								[
									"readCitationFile\t{utils}",
									"readCitationFile"
								],
								[
									"stack\t{utils}",
									"stack"
								],
								[
									"package.skeleton\t{utils}",
									"package.skeleton"
								],
								[
									"memory.size\t{utils}",
									"memory.size"
								],
								[
									"de.ncols\t{utils}",
									"de.ncols"
								],
								[
									"file.edit\t{utils}",
									"file.edit"
								],
								[
									"sessionInfo\t{utils}",
									"sessionInfo"
								],
								[
									"SweaveSyntConv\t{utils}",
									"SweaveSyntConv"
								],
								[
									"RweaveLatex\t{utils}",
									"RweaveLatex"
								],
								[
									"help\t{utils}",
									"help"
								],
								[
									"prompt\t{utils}",
									"prompt"
								],
								[
									"getParseText\t{utils}",
									"getParseText"
								],
								[
									"osVersion\t{utils}",
									"osVersion"
								],
								[
									".AtNames\t{utils}",
									".AtNames"
								],
								[
									"url.show\t{utils}",
									"url.show"
								],
								[
									"getCRANmirrors\t{utils}",
									"getCRANmirrors"
								],
								[
									"head\t{utils}",
									"head"
								],
								[
									"localeToCharset\t{utils}",
									"localeToCharset"
								],
								[
									"Rprof\t{utils}",
									"Rprof"
								],
								[
									"getParseData\t{utils}",
									"getParseData"
								],
								[
									"RweaveLatexSetup\t{utils}",
									"RweaveLatexSetup"
								],
								[
									"formatOL\t{utils}",
									"formatOL"
								],
								[
									"dump.frames\t{utils}",
									"dump.frames"
								],
								[
									"read.table\t{utils}",
									"read.table"
								],
								[
									"URLdecode\t{utils}",
									"URLdecode"
								],
								[
									"numhash\t{utils}",
									"numhash"
								],
								[
									"isS3method\t{utils}",
									"isS3method"
								],
								[
									"compareVersion\t{utils}",
									"compareVersion"
								],
								[
									"count.fields\t{utils}",
									"count.fields"
								],
								[
									"tar\t{utils}",
									"tar"
								],
								[
									"setRepositories\t{utils}",
									"setRepositories"
								],
								[
									"edit\t{utils}",
									"edit"
								],
								[
									"mirror2html\t{utils}",
									"mirror2html"
								],
								[
									"relist\t{utils}",
									"relist"
								],
								[
									"chooseBioCmirror\t{utils}",
									"chooseBioCmirror"
								],
								[
									"available.packages\t{utils}",
									"available.packages"
								],
								[
									"aspell_write_personal_dictionary_file\t{utils}",
									"aspell_write_personal_dictionary_file"
								],
								[
									"getAnywhere\t{utils}",
									"getAnywhere"
								],
								[
									"hsearch_db\t{utils}",
									"hsearch_db"
								],
								[
									"personList\t{utils}",
									"personList"
								],
								[
									"fileSnapshot\t{utils}",
									"fileSnapshot"
								],
								[
									"combn\t{utils}",
									"combn"
								],
								[
									"packageStatus\t{utils}",
									"packageStatus"
								],
								[
									"read.socket\t{utils}",
									"read.socket"
								],
								[
									"find\t{utils}",
									"find"
								],
								[
									"RweaveLatexOptions\t{utils}",
									"RweaveLatexOptions"
								],
								[
									"page\t{utils}",
									"page"
								],
								[
									"write.csv\t{utils}",
									"write.csv"
								],
								[
									"dataentry\t{utils}",
									"dataentry"
								],
								[
									"getSrcFilename\t{utils}",
									"getSrcFilename"
								],
								[
									"packageDescription\t{utils}",
									"packageDescription"
								],
								[
									"file_test\t{utils}",
									"file_test"
								],
								[
									"toBibtex\t{utils}",
									"toBibtex"
								],
								[
									"browseVignettes\t{utils}",
									"browseVignettes"
								],
								[
									"setBreakpoint\t{utils}",
									"setBreakpoint"
								],
								[
									"download.packages\t{utils}",
									"download.packages"
								],
								[
									"remove.packages\t{utils}",
									"remove.packages"
								],
								[
									"RweaveLatexFinish\t{utils}",
									"RweaveLatexFinish"
								],
								[
									"chooseCRANmirror\t{utils}",
									"chooseCRANmirror"
								],
								[
									"upgrade\t{utils}",
									"upgrade"
								],
								[
									"de\t{utils}",
									"de"
								],
								[
									".RtangleCodeLabel\t{utils}",
									".RtangleCodeLabel"
								],
								[
									"formatUL\t{utils}",
									"formatUL"
								],
								[
									"de.restore\t{utils}",
									"de.restore"
								],
								[
									"promptPackage\t{utils}",
									"promptPackage"
								],
								[
									"write.csv2\t{utils}",
									"write.csv2"
								],
								[
									"Rtangle\t{utils}",
									"Rtangle"
								],
								[
									"packageName\t{utils}",
									"packageName"
								],
								[
									"glob2rx\t{utils}",
									"glob2rx"
								],
								[
									"unstack\t{utils}",
									"unstack"
								],
								[
									"read.DIF\t{utils}",
									"read.DIF"
								],
								[
									"savehistory\t{utils}",
									"savehistory"
								],
								[
									"vignette\t{utils}",
									"vignette"
								],
								[
									"install.packages\t{utils}",
									"install.packages"
								],
								[
									".S3methods\t{utils}",
									".S3methods"
								],
								[
									"argsAnywhere\t{utils}",
									"argsAnywhere"
								],
								[
									"help.search\t{utils}",
									"help.search"
								],
								[
									"getSrcref\t{utils}",
									"getSrcref"
								],
								[
									"makeRweaveLatexCodeRunner\t{utils}",
									"makeRweaveLatexCodeRunner"
								],
								[
									"RweaveEvalWithOpt\t{utils}",
									"RweaveEvalWithOpt"
								],
								[
									"lsf.str\t{utils}",
									"lsf.str"
								],
								[
									"select.list\t{utils}",
									"select.list"
								],
								[
									"cite\t{utils}",
									"cite"
								],
								[
									"recover\t{utils}",
									"recover"
								],
								[
									"fix\t{utils}",
									"fix"
								],
								[
									"new.packages\t{utils}",
									"new.packages"
								],
								[
									"aspell_package_Rd_files\t{utils}",
									"aspell_package_Rd_files"
								],
								[
									"str\t{utils}",
									"str"
								],
								[
									"RtangleRuncode\t{utils}",
									"RtangleRuncode"
								],
								[
									"process.events\t{utils}",
									"process.events"
								],
								[
									"example\t{utils}",
									"example"
								],
								[
									"warnErrList\t{utils}",
									"warnErrList"
								],
								[
									"getSrcLocation\t{utils}",
									"getSrcLocation"
								],
								[
									"flush.console\t{utils}",
									"flush.console"
								],
								[
									"maphash\t{utils}",
									"maphash"
								],
								[
									"timestamp\t{utils}",
									"timestamp"
								],
								[
									"make.packages.html\t{utils}",
									"make.packages.html"
								],
								[
									"rc.options\t{utils}",
									"rc.options"
								],
								[
									"getFromNamespace\t{utils}",
									"getFromNamespace"
								],
								[
									"clrhash\t{utils}",
									"clrhash"
								],
								[
									"adist\t{utils}",
									"adist"
								],
								[
									"contrib.url\t{utils}",
									"contrib.url"
								],
								[
									"URLencode\t{utils}",
									"URLencode"
								],
								[
									"rc.settings\t{utils}",
									"rc.settings"
								],
								[
									"help.start\t{utils}",
									"help.start"
								],
								[
									"unzip\t{utils}",
									"unzip"
								],
								[
									"pico\t{utils}",
									"pico"
								],
								[
									"-\t{base}",
									"-"
								],
								[
									"as.matrix.data.frame\t{base}",
									"as.matrix.data.frame"
								],
								[
									"F\t{base}",
									"F"
								],
								[
									"I\t{base}",
									"I"
								],
								[
									"registerS3methods\t{base}",
									"registerS3methods"
								],
								[
									"as.POSIXct.Date\t{base}",
									"as.POSIXct.Date"
								],
								[
									"T\t{base}",
									"T"
								],
								[
									"c\t{base}",
									"c"
								],
								[
									"q\t{base}",
									"q"
								],
								[
									"t\t{base}",
									"t"
								],
								[
									"array2DF\t{base}",
									"array2DF"
								],
								[
									"qr.solve\t{base}",
									"qr.solve"
								],
								[
									"str2expression\t{base}",
									"str2expression"
								],
								[
									"dynGet\t{base}",
									"dynGet"
								],
								[
									"as.single\t{base}",
									"as.single"
								],
								[
									"interaction\t{base}",
									"interaction"
								],
								[
									"as.POSIXlt.default\t{base}",
									"as.POSIXlt.default"
								],
								[
									"gamma\t{base}",
									"gamma"
								],
								[
									"as.package_version\t{base}",
									"as.package_version"
								],
								[
									".GlobalEnv\t{base}",
									".GlobalEnv"
								],
								[
									"getNativeSymbolInfo\t{base}",
									"getNativeSymbolInfo"
								],
								[
									"print.srcfile\t{base}",
									"print.srcfile"
								],
								[
									"packageHasNamespace\t{base}",
									"packageHasNamespace"
								],
								[
									".handleSimpleError\t{base}",
									".handleSimpleError"
								],
								[
									"xtfrm.AsIs\t{base}",
									"xtfrm.AsIs"
								],
								[
									"file.choose\t{base}",
									"file.choose"
								],
								[
									"summary.connection\t{base}",
									"summary.connection"
								],
								[
									".C\t{base}",
									".C"
								],
								[
									"subset.default\t{base}",
									"subset.default"
								],
								[
									"warningCondition\t{base}",
									"warningCondition"
								],
								[
									"utf8ToInt\t{base}",
									"utf8ToInt"
								],
								[
									"baseenv\t{base}",
									"baseenv"
								],
								[
									".set_row_names\t{base}",
									".set_row_names"
								],
								[
									"Ops.POSIXt\t{base}",
									"Ops.POSIXt"
								],
								[
									"quote\t{base}",
									"quote"
								],
								[
									"inverse.rle\t{base}",
									"inverse.rle"
								],
								[
									"memory.profile\t{base}",
									"memory.profile"
								],
								[
									"split.POSIXct\t{base}",
									"split.POSIXct"
								],
								[
									"unique.numeric_version\t{base}",
									"unique.numeric_version"
								],
								[
									"infoRDS\t{base}",
									"infoRDS"
								],
								[
									"length.POSIXlt\t{base}",
									"length.POSIXlt"
								],
								[
									"getOption\t{base}",
									"getOption"
								],
								[
									"Im\t{base}",
									"Im"
								],
								[
									"qr.Q\t{base}",
									"qr.Q"
								],
								[
									"qr.R\t{base}",
									"qr.R"
								],
								[
									"rapply\t{base}",
									"rapply"
								],
								[
									"qr.X\t{base}",
									"qr.X"
								],
								[
									"library.dynam\t{base}",
									"library.dynam"
								],
								[
									"evalq\t{base}",
									"evalq"
								],
								[
									"units.difftime\t{base}",
									"units.difftime"
								],
								[
									"Re\t{base}",
									"Re"
								],
								[
									"package_version\t{base}",
									"package_version"
								],
								[
									"is.name\t{base}",
									"is.name"
								],
								[
									"as.data.frame.matrix\t{base}",
									"as.data.frame.matrix"
								],
								[
									".NotYetImplemented\t{base}",
									".NotYetImplemented"
								],
								[
									"LETTERS\t{base}",
									"LETTERS"
								],
								[
									"unique.array\t{base}",
									"unique.array"
								],
								[
									".LC.categories\t{base}",
									".LC.categories"
								],
								[
									"dimnames.data.frame\t{base}",
									"dimnames.data.frame"
								],
								[
									"require\t{base}",
									"require"
								],
								[
									"parse\t{base}",
									"parse"
								],
								[
									"by\t{base}",
									"by"
								],
								[
									"gc\t{base}",
									"gc"
								],
								[
									"gl\t{base}",
									"gl"
								],
								[
									"if\t{base}",
									"if"
								],
								[
									"ls\t{base}",
									"ls"
								],
								[
									"unique.warnings\t{base}",
									"unique.warnings"
								],
								[
									"pi\t{base}",
									"pi"
								],
								[
									"gzcon\t{base}",
									"gzcon"
								],
								[
									"qr\t{base}",
									"qr"
								],
								[
									"lapply\t{base}",
									"lapply"
								],
								[
									"rm\t{base}",
									"rm"
								],
								[
									"paste\t{base}",
									"paste"
								],
								[
									"match\t{base}",
									"match"
								],
								[
									"order\t{base}",
									"order"
								],
								[
									"xpdrows.data.frame\t{base}",
									"xpdrows.data.frame"
								],
								[
									"rank\t{base}",
									"rank"
								],
								[
									"seq.default\t{base}",
									"seq.default"
								],
								[
									"startsWith\t{base}",
									"startsWith"
								],
								[
									".noGenerics\t{base}",
									".noGenerics"
								],
								[
									"aperm.default\t{base}",
									"aperm.default"
								],
								[
									"kronecker\t{base}",
									"kronecker"
								],
								[
									"traceback\t{base}",
									"traceback"
								],
								[
									"as.character.hexmode\t{base}",
									"as.character.hexmode"
								],
								[
									"simpleError\t{base}",
									"simpleError"
								],
								[
									"warnings\t{base}",
									"warnings"
								],
								[
									"as.Date.POSIXct\t{base}",
									"as.Date.POSIXct"
								],
								[
									"kappa.qr\t{base}",
									"kappa.qr"
								],
								[
									"isNamespace\t{base}",
									"isNamespace"
								],
								[
									"is.finite.POSIXlt\t{base}",
									"is.finite.POSIXlt"
								],
								[
									"colMeans\t{base}",
									"colMeans"
								],
								[
									"as.Date.POSIXlt\t{base}",
									"as.Date.POSIXlt"
								],
								[
									"asNamespace\t{base}",
									"asNamespace"
								],
								[
									"xtfrm.difftime\t{base}",
									"xtfrm.difftime"
								],
								[
									"quit\t{base}",
									"quit"
								],
								[
									"kappa.lm\t{base}",
									"kappa.lm"
								],
								[
									"setSessionTimeLimit\t{base}",
									"setSessionTimeLimit"
								],
								[
									"find.package\t{base}",
									"find.package"
								],
								[
									"weekdays.POSIXt\t{base}",
									"weekdays.POSIXt"
								],
								[
									"eval\t{base}",
									"eval"
								],
								[
									"c.numeric_version\t{base}",
									"c.numeric_version"
								],
								[
									"deparse1\t{base}",
									"deparse1"
								],
								[
									"split.Date\t{base}",
									"split.Date"
								],
								[
									"readChar\t{base}",
									"readChar"
								],
								[
									"autoloader\t{base}",
									"autoloader"
								],
								[
									"untracemem\t{base}",
									"untracemem"
								],
								[
									"Encoding\t{base}",
									"Encoding"
								],
								[
									"debuggingState\t{base}",
									"debuggingState"
								],
								[
									"do.call\t{base}",
									"do.call"
								],
								[
									".cache_class\t{base}",
									".cache_class"
								],
								[
									".getRequiredPackages2\t{base}",
									".getRequiredPackages2"
								],
								[
									"chooseOpsMethod.default\t{base}",
									"chooseOpsMethod.default"
								],
								[
									"levels.default\t{base}",
									"levels.default"
								],
								[
									"computeRestarts\t{base}",
									"computeRestarts"
								],
								[
									"readBin\t{base}",
									"readBin"
								],
								[
									"as.double.difftime\t{base}",
									"as.double.difftime"
								],
								[
									"sys.call\t{base}",
									"sys.call"
								],
								[
									"path.expand\t{base}",
									"path.expand"
								],
								[
									"fifo\t{base}",
									"fifo"
								],
								[
									"substitute\t{base}",
									"substitute"
								],
								[
									"data.matrix\t{base}",
									"data.matrix"
								],
								[
									"all.equal.formula\t{base}",
									"all.equal.formula"
								],
								[
									"as.logical.factor\t{base}",
									"as.logical.factor"
								],
								[
									"file\t{base}",
									"file"
								],
								[
									"srcfilealias\t{base}",
									"srcfilealias"
								],
								[
									"determinant\t{base}",
									"determinant"
								],
								[
									"print.noquote\t{base}",
									"print.noquote"
								],
								[
									"by.default\t{base}",
									"by.default"
								],
								[
									"Ops.ordered\t{base}",
									"Ops.ordered"
								],
								[
									"getNamespace\t{base}",
									"getNamespace"
								],
								[
									"as.POSIXct.default\t{base}",
									"as.POSIXct.default"
								],
								[
									"conditionMessage.condition\t{base}",
									"conditionMessage.condition"
								],
								[
									".OptRequireMethods\t{base}",
									".OptRequireMethods"
								],
								[
									"mean.POSIXct\t{base}",
									"mean.POSIXct"
								],
								[
									"as.POSIXct.POSIXlt\t{base}",
									"as.POSIXct.POSIXlt"
								],
								[
									"mean.POSIXlt\t{base}",
									"mean.POSIXlt"
								],
								[
									"as.character.octmode\t{base}",
									"as.character.octmode"
								],
								[
									".makeMessage\t{base}",
									".makeMessage"
								],
								[
									"browserSetDebug\t{base}",
									"browserSetDebug"
								],
								[
									"parent.env\t{base}",
									"parent.env"
								],
								[
									"print.listof\t{base}",
									"print.listof"
								],
								[
									"close.srcfile\t{base}",
									"close.srcfile"
								],
								[
									"anyNA.numeric_version\t{base}",
									"anyNA.numeric_version"
								],
								[
									"chooseOpsMethod\t{base}",
									"chooseOpsMethod"
								],
								[
									"socketAccept\t{base}",
									"socketAccept"
								],
								[
									"transform.data.frame\t{base}",
									"transform.data.frame"
								],
								[
									"interactive\t{base}",
									"interactive"
								],
								[
									"unname\t{base}",
									"unname"
								],
								[
									"remove\t{base}",
									"remove"
								],
								[
									"sample\t{base}",
									"sample"
								],
								[
									"getNamespaceVersion\t{base}",
									"getNamespaceVersion"
								],
								[
									"removeTaskCallback\t{base}",
									"removeTaskCallback"
								],
								[
									"scale\t{base}",
									"scale"
								],
								[
									"is.data.frame\t{base}",
									"is.data.frame"
								],
								[
									"textConnectionValue\t{base}",
									"textConnectionValue"
								],
								[
									"transform\t{base}",
									"transform"
								],
								[
									"lchoose\t{base}",
									"lchoose"
								],
								[
									"format.POSIXct\t{base}",
									"format.POSIXct"
								],
								[
									"is.call\t{base}",
									"is.call"
								],
								[
									".packages\t{base}",
									".packages"
								],
								[
									"row.names\t{base}",
									"row.names"
								],
								[
									"str2lang\t{base}",
									"str2lang"
								],
								[
									"print.factor\t{base}",
									"print.factor"
								],
								[
									"format.POSIXlt\t{base}",
									"format.POSIXlt"
								],
								[
									"switch\t{base}",
									"switch"
								],
								[
									"getElement\t{base}",
									"getElement"
								],
								[
									".amatch_costs\t{base}",
									".amatch_costs"
								],
								[
									"lengths\t{base}",
									"lengths"
								],
								[
									"save\t{base}",
									"save"
								],
								[
									"function\t{base}",
									"function"
								],
								[
									"is.single\t{base}",
									"is.single"
								],
								[
									"default.stringsAsFactors\t{base}",
									"default.stringsAsFactors"
								],
								[
									"pmatch\t{base}",
									"pmatch"
								],
								[
									"withRestarts\t{base}",
									"withRestarts"
								],
								[
									"scan\t{base}",
									"scan"
								],
								[
									"is.null\t{base}",
									"is.null"
								],
								[
									"sink.number\t{base}",
									"sink.number"
								],
								[
									"pretty\t{base}",
									"pretty"
								],
								[
									"Summary.Date\t{base}",
									"Summary.Date"
								],
								[
									"library.dynam.unload\t{base}",
									"library.dynam.unload"
								],
								[
									"letters\t{base}",
									"letters"
								],
								[
									"diff.difftime\t{base}",
									"diff.difftime"
								],
								[
									"browserCondition\t{base}",
									"browserCondition"
								],
								[
									"dir.exists\t{base}",
									"dir.exists"
								],
								[
									"print.srcref\t{base}",
									"print.srcref"
								],
								[
									"arrayInd\t{base}",
									"arrayInd"
								],
								[
									"casefold\t{base}",
									"casefold"
								],
								[
									"anyNA\t{base}",
									"anyNA"
								],
								[
									"suppressWarnings\t{base}",
									"suppressWarnings"
								],
								[
									"seek\t{base}",
									"seek"
								],
								[
									"is.language\t{base}",
									"is.language"
								],
								[
									"xtfrm.numeric_version\t{base}",
									"xtfrm.numeric_version"
								],
								[
									"get0\t{base}",
									"get0"
								],
								[
									"as.vector\t{base}",
									"as.vector"
								],
								[
									"strftime\t{base}",
									"strftime"
								],
								[
									"readRDS\t{base}",
									"readRDS"
								],
								[
									"is.pairlist\t{base}",
									"is.pairlist"
								],
								[
									"chartr\t{base}",
									"chartr"
								],
								[
									"rep.Date\t{base}",
									"rep.Date"
								],
								[
									"isFALSE\t{base}",
									"isFALSE"
								],
								[
									"as.pairlist\t{base}",
									"as.pairlist"
								],
								[
									"as.octmode\t{base}",
									"as.octmode"
								],
								[
									"is.na.numeric_version\t{base}",
									"is.na.numeric_version"
								],
								[
									"length\t{base}",
									"length"
								],
								[
									"formals\t{base}",
									"formals"
								],
								[
									"rawConnectionValue\t{base}",
									"rawConnectionValue"
								],
								[
									"Math.POSIXt\t{base}",
									"Math.POSIXt"
								],
								[
									"Sys.chmod\t{base}",
									"Sys.chmod"
								],
								[
									"formatC\t{base}",
									"formatC"
								],
								[
									"sign\t{base}",
									"sign"
								],
								[
									"sinh\t{base}",
									"sinh"
								],
								[
									"sink\t{base}",
									"sink"
								],
								[
									"solve\t{base}",
									"solve"
								],
								[
									".External.graphics\t{base}",
									".External.graphics"
								],
								[
									"as.data.frame.default\t{base}",
									"as.data.frame.default"
								],
								[
									"is.numeric.Date\t{base}",
									"is.numeric.Date"
								],
								[
									"all.equal.character\t{base}",
									"all.equal.character"
								],
								[
									"unsplit\t{base}",
									"unsplit"
								],
								[
									"as.hexmode\t{base}",
									"as.hexmode"
								],
								[
									"globalenv\t{base}",
									"globalenv"
								],
								[
									"list.files\t{base}",
									"list.files"
								],
								[
									"loadingNamespaceInfo\t{base}",
									"loadingNamespaceInfo"
								],
								[
									"packageEvent\t{base}",
									"packageEvent"
								],
								[
									"make.unique\t{base}",
									"make.unique"
								],
								[
									".decode_numeric_version\t{base}",
									".decode_numeric_version"
								],
								[
									"logical\t{base}",
									"logical"
								],
								[
									"as.vector.factor\t{base}",
									"as.vector.factor"
								],
								[
									"noquote\t{base}",
									"noquote"
								],
								[
									"as.qr\t{base}",
									"as.qr"
								],
								[
									"suppressPackageStartupMessages\t{base}",
									"suppressPackageStartupMessages"
								],
								[
									"as.null.default\t{base}",
									"as.null.default"
								],
								[
									"c.difftime\t{base}",
									"c.difftime"
								],
								[
									"as.data.frame.data.frame\t{base}",
									"as.data.frame.data.frame"
								],
								[
									"summary.warnings\t{base}",
									"summary.warnings"
								],
								[
									"file.show\t{base}",
									"file.show"
								],
								[
									"bindingIsLocked\t{base}",
									"bindingIsLocked"
								],
								[
									".maskedMsg\t{base}",
									".maskedMsg"
								],
								[
									".colSums\t{base}",
									".colSums"
								],
								[
									"acosh\t{base}",
									"acosh"
								],
								[
									"bzfile\t{base}",
									"bzfile"
								],
								[
									"intersect\t{base}",
									"intersect"
								],
								[
									"by.data.frame\t{base}",
									"by.data.frame"
								],
								[
									"summary.srcref\t{base}",
									"summary.srcref"
								],
								[
									"withAutoprint\t{base}",
									"withAutoprint"
								],
								[
									"as.table.default\t{base}",
									"as.table.default"
								],
								[
									"kappa.default\t{base}",
									"kappa.default"
								],
								[
									"as.list.Date\t{base}",
									"as.list.Date"
								],
								[
									".Primitive\t{base}",
									".Primitive"
								],
								[
									"getDLLRegisteredRoutines.character\t{base}",
									"getDLLRegisteredRoutines.character"
								],
								[
									"gctorture2\t{base}",
									"gctorture2"
								],
								[
									"Conj\t{base}",
									"Conj"
								],
								[
									"normalizePath\t{base}",
									"normalizePath"
								],
								[
									"sort\t{base}",
									"sort"
								],
								[
									"addNA\t{base}",
									"addNA"
								],
								[
									"is.matrix\t{base}",
									"is.matrix"
								],
								[
									"writeLines\t{base}",
									"writeLines"
								],
								[
									"colSums\t{base}",
									"colSums"
								],
								[
									"saveRDS\t{base}",
									"saveRDS"
								],
								[
									"suppressMessages\t{base}",
									"suppressMessages"
								],
								[
									"print.data.frame\t{base}",
									"print.data.frame"
								],
								[
									"undebug\t{base}",
									"undebug"
								],
								[
									"tanh\t{base}",
									"tanh"
								],
								[
									"is.loaded\t{base}",
									"is.loaded"
								],
								[
									"curlGetHeaders\t{base}",
									"curlGetHeaders"
								],
								[
									"sqrt\t{base}",
									"sqrt"
								],
								[
									"sample.int\t{base}",
									"sample.int"
								],
								[
									"grep\t{base}",
									"grep"
								],
								[
									"xtfrm.POSIXct\t{base}",
									"xtfrm.POSIXct"
								],
								[
									"is.logical\t{base}",
									"is.logical"
								],
								[
									"print.proc_time\t{base}",
									"print.proc_time"
								],
								[
									"Sys.readlink\t{base}",
									"Sys.readlink"
								],
								[
									"strsplit\t{base}",
									"strsplit"
								],
								[
									"xtfrm.POSIXlt\t{base}",
									"xtfrm.POSIXlt"
								],
								[
									"Cstack_info\t{base}",
									"Cstack_info"
								],
								[
									"dir.create\t{base}",
									"dir.create"
								],
								[
									"nlevels\t{base}",
									"nlevels"
								],
								[
									"aperm\t{base}",
									"aperm"
								],
								[
									"xtfrm\t{base}",
									"xtfrm"
								],
								[
									"Summary.data.frame\t{base}",
									"Summary.data.frame"
								],
								[
									"gsub\t{base}",
									"gsub"
								],
								[
									"merge.data.frame\t{base}",
									"merge.data.frame"
								],
								[
									"as.vector.POSIXlt\t{base}",
									"as.vector.POSIXlt"
								],
								[
									".S3PrimitiveGenerics\t{base}",
									".S3PrimitiveGenerics"
								],
								[
									"stop\t{base}",
									"stop"
								],
								[
									"sort.list\t{base}",
									"sort.list"
								],
								[
									"unloadNamespace\t{base}",
									"unloadNamespace"
								],
								[
									"grouping\t{base}",
									"grouping"
								],
								[
									"seek.connection\t{base}",
									"seek.connection"
								],
								[
									"as.matrix.default\t{base}",
									"as.matrix.default"
								],
								[
									"as.POSIXlt.numeric\t{base}",
									"as.POSIXlt.numeric"
								],
								[
									"eval.parent\t{base}",
									"eval.parent"
								],
								[
									"diff.POSIXt\t{base}",
									"diff.POSIXt"
								],
								[
									"pushBack\t{base}",
									"pushBack"
								],
								[
									"transform.default\t{base}",
									"transform.default"
								],
								[
									"srcfilecopy\t{base}",
									"srcfilecopy"
								],
								[
									"qr.coef\t{base}",
									"qr.coef"
								],
								[
									"restartFormals\t{base}",
									"restartFormals"
								],
								[
									"print.rle\t{base}",
									"print.rle"
								],
								[
									"format.octmode\t{base}",
									"format.octmode"
								],
								[
									"diff.Date\t{base}",
									"diff.Date"
								],
								[
									"conditionCall.condition\t{base}",
									"conditionCall.condition"
								],
								[
									"as.matrix\t{base}",
									"as.matrix"
								],
								[
									"enc2utf8\t{base}",
									"enc2utf8"
								],
								[
									"sys.function\t{base}",
									"sys.function"
								],
								[
									"print.DLLInfo\t{base}",
									"print.DLLInfo"
								],
								[
									"UseMethod\t{base}",
									"UseMethod"
								],
								[
									"write.dcf\t{base}",
									"write.dcf"
								],
								[
									"split\t{base}",
									"split"
								],
								[
									"match.call\t{base}",
									"match.call"
								],
								[
									"is.numeric.POSIXt\t{base}",
									"is.numeric.POSIXt"
								],
								[
									"sys.calls\t{base}",
									"sys.calls"
								],
								[
									".AutoloadEnv\t{base}",
									".AutoloadEnv"
								],
								[
									"format.numeric_version\t{base}",
									"format.numeric_version"
								],
								[
									"char.expand\t{base}",
									"char.expand"
								],
								[
									"signif\t{base}",
									"signif"
								],
								[
									"file.link\t{base}",
									"file.link"
								],
								[
									".Devices\t{base}",
									".Devices"
								],
								[
									"diff.default\t{base}",
									"diff.default"
								],
								[
									"dyn.load\t{base}",
									"dyn.load"
								],
								[
									".userHooksEnv\t{base}",
									".userHooksEnv"
								],
								[
									"anyNA.POSIXlt\t{base}",
									"anyNA.POSIXlt"
								],
								[
									".subset\t{base}",
									".subset"
								],
								[
									"expm1\t{base}",
									"expm1"
								],
								[
									"is.vector\t{base}",
									"is.vector"
								],
								[
									"apply\t{base}",
									"apply"
								],
								[
									"iconvlist\t{base}",
									"iconvlist"
								],
								[
									"chkDots\t{base}",
									"chkDots"
								],
								[
									".gt\t{base}",
									".gt"
								],
								[
									"is.na.data.frame\t{base}",
									"is.na.data.frame"
								],
								[
									"library\t{base}",
									"library"
								],
								[
									"julian.POSIXt\t{base}",
									"julian.POSIXt"
								],
								[
									"path.package\t{base}",
									"path.package"
								],
								[
									"as.data.frame.vector\t{base}",
									"as.data.frame.vector"
								],
								[
									"proc.time\t{base}",
									"proc.time"
								],
								[
									"table\t{base}",
									"table"
								],
								[
									"enc2native\t{base}",
									"enc2native"
								],
								[
									"as.data.frame.table\t{base}",
									"as.data.frame.table"
								],
								[
									"debug\t{base}",
									"debug"
								],
								[
									"OlsonNames\t{base}",
									"OlsonNames"
								],
								[
									"marginSums\t{base}",
									"marginSums"
								],
								[
									".Library\t{base}",
									".Library"
								],
								[
									"isOpen\t{base}",
									"isOpen"
								],
								[
									"grepRaw\t{base}",
									"grepRaw"
								],
								[
									"nullfile\t{base}",
									"nullfile"
								],
								[
									"rowsum\t{base}",
									"rowsum"
								],
								[
									"as.list.data.frame\t{base}",
									"as.list.data.frame"
								],
								[
									"as.list\t{base}",
									"as.list"
								],
								[
									"topenv\t{base}",
									"topenv"
								],
								[
									"system.file\t{base}",
									"system.file"
								],
								[
									"repeat\t{base}",
									"repeat"
								],
								[
									"as.character.factor\t{base}",
									"as.character.factor"
								],
								[
									"print.table\t{base}",
									"print.table"
								],
								[
									"lockEnvironment\t{base}",
									"lockEnvironment"
								],
								[
									"xtfrm.default\t{base}",
									"xtfrm.default"
								],
								[
									"all.vars\t{base}",
									"all.vars"
								],
								[
									"format.default\t{base}",
									"format.default"
								],
								[
									"choose\t{base}",
									"choose"
								],
								[
									"as.expression.default\t{base}",
									"as.expression.default"
								],
								[
									"bitwAnd\t{base}",
									"bitwAnd"
								],
								[
									"mem.maxVSize\t{base}",
									"mem.maxVSize"
								],
								[
									"tabulate\t{base}",
									"tabulate"
								],
								[
									"cut.POSIXt\t{base}",
									"cut.POSIXt"
								],
								[
									"as.POSIXlt.Date\t{base}",
									"as.POSIXlt.Date"
								],
								[
									"c.noquote\t{base}",
									"c.noquote"
								],
								[
									"file.size\t{base}",
									"file.size"
								],
								[
									"makeActiveBinding\t{base}",
									"makeActiveBinding"
								],
								[
									"c.Date\t{base}",
									"c.Date"
								],
								[
									"findInterval\t{base}",
									"findInterval"
								],
								[
									"all.equal.raw\t{base}",
									"all.equal.raw"
								],
								[
									"parseNamespaceFile\t{base}",
									"parseNamespaceFile"
								],
								[
									"icuSetCollate\t{base}",
									"icuSetCollate"
								],
								[
									"print.numeric_version\t{base}",
									"print.numeric_version"
								],
								[
									"sequence.default\t{base}",
									"sequence.default"
								],
								[
									"Sys.localeconv\t{base}",
									"Sys.localeconv"
								],
								[
									"conditionCall\t{base}",
									"conditionCall"
								],
								[
									"margin.table\t{base}",
									"margin.table"
								],
								[
									"sprintf\t{base}",
									"sprintf"
								],
								[
									"duplicated.matrix\t{base}",
									"duplicated.matrix"
								],
								[
									".ArgsEnv\t{base}",
									".ArgsEnv"
								],
								[
									"cbind.data.frame\t{base}",
									"cbind.data.frame"
								],
								[
									"read.dcf\t{base}",
									"read.dcf"
								],
								[
									"names\t{base}",
									"names"
								],
								[
									"append\t{base}",
									"append"
								],
								[
									"rowsum.data.frame\t{base}",
									"rowsum.data.frame"
								],
								[
									"mat.or.vec\t{base}",
									"mat.or.vec"
								],
								[
									"as.POSIXlt.POSIXct\t{base}",
									"as.POSIXlt.POSIXct"
								],
								[
									"R.version.string\t{base}",
									"R.version.string"
								],
								[
									"tanpi\t{base}",
									"tanpi"
								],
								[
									"namespaceExport\t{base}",
									"namespaceExport"
								],
								[
									"Summary.numeric_version\t{base}",
									"Summary.numeric_version"
								],
								[
									"prmatrix\t{base}",
									"prmatrix"
								],
								[
									"as.single.default\t{base}",
									"as.single.default"
								],
								[
									"expand.grid\t{base}",
									"expand.grid"
								],
								[
									"vapply\t{base}",
									"vapply"
								],
								[
									"dimnames\t{base}",
									"dimnames"
								],
								[
									"nameOfClass\t{base}",
									"nameOfClass"
								],
								[
									".popath\t{base}",
									".popath"
								],
								[
									"kappa\t{base}",
									"kappa"
								],
								[
									"identical\t{base}",
									"identical"
								],
								[
									"chol.default\t{base}",
									"chol.default"
								],
								[
									"sapply\t{base}",
									"sapply"
								],
								[
									".format.zeros\t{base}",
									".format.zeros"
								],
								[
									"gctorture\t{base}",
									"gctorture"
								],
								[
									"missing\t{base}",
									"missing"
								],
								[
									"abbreviate\t{base}",
									"abbreviate"
								],
								[
									"showConnections\t{base}",
									"showConnections"
								],
								[
									"merge\t{base}",
									"merge"
								],
								[
									"nargs\t{base}",
									"nargs"
								],
								[
									"proportions\t{base}",
									"proportions"
								],
								[
									"is.R\t{base}",
									"is.R"
								],
								[
									"Sys.sleep\t{base}",
									"Sys.sleep"
								],
								[
									"reg.finalizer\t{base}",
									"reg.finalizer"
								],
								[
									"isdebugged\t{base}",
									"isdebugged"
								],
								[
									".C_R_getTaskCallbackNames\t{base}",
									".C_R_getTaskCallbackNames"
								],
								[
									"anyDuplicated.default\t{base}",
									"anyDuplicated.default"
								],
								[
									"mapply\t{base}",
									"mapply"
								],
								[
									"asplit\t{base}",
									"asplit"
								],
								[
									"rep.factor\t{base}",
									"rep.factor"
								],
								[
									"zapsmall\t{base}",
									"zapsmall"
								],
								[
									"outer\t{base}",
									"outer"
								],
								[
									"print.function\t{base}",
									"print.function"
								],
								[
									"qr.default\t{base}",
									"qr.default"
								],
								[
									"backsolve\t{base}",
									"backsolve"
								],
								[
									"ISOdate\t{base}",
									"ISOdate"
								],
								[
									"duplicated.array\t{base}",
									"duplicated.array"
								],
								[
									"isS4\t{base}",
									"isS4"
								],
								[
									"isBaseNamespace\t{base}",
									"isBaseNamespace"
								],
								[
									"errorCondition\t{base}",
									"errorCondition"
								],
								[
									".detach\t{base}",
									".detach"
								],
								[
									"Arg\t{base}",
									"Arg"
								],
								[
									"file.mtime\t{base}",
									"file.mtime"
								],
								[
									"setwd\t{base}",
									"setwd"
								],
								[
									".kappa_tri\t{base}",
									".kappa_tri"
								],
								[
									"bitwNot\t{base}",
									"bitwNot"
								],
								[
									".getRequiredPackages\t{base}",
									".getRequiredPackages"
								],
								[
									"getwd\t{base}",
									"getwd"
								],
								[
									"list2env\t{base}",
									"list2env"
								],
								[
									"set.seed\t{base}",
									"set.seed"
								],
								[
									".doWrap\t{base}",
									".doWrap"
								],
								[
									"R_compiled_by\t{base}",
									"R_compiled_by"
								],
								[
									"is.primitive\t{base}",
									"is.primitive"
								],
								[
									"grepl\t{base}",
									"grepl"
								],
								[
									"Ops.data.frame\t{base}",
									"Ops.data.frame"
								],
								[
									"format.difftime\t{base}",
									"format.difftime"
								],
								[
									"trigamma\t{base}",
									"trigamma"
								],
								[
									"as.list.difftime\t{base}",
									"as.list.difftime"
								],
								[
									"character\t{base}",
									"character"
								],
								[
									".col\t{base}",
									".col"
								],
								[
									".POSIXct\t{base}",
									".POSIXct"
								],
								[
									"returnValue\t{base}",
									"returnValue"
								],
								[
									".POSIXlt\t{base}",
									".POSIXlt"
								],
								[
									"xtfrm.data.frame\t{base}",
									"xtfrm.data.frame"
								],
								[
									"Math.difftime\t{base}",
									"Math.difftime"
								],
								[
									"version\t{base}",
									"version"
								],
								[
									".F_dchdc\t{base}",
									".F_dchdc"
								],
								[
									"jitter\t{base}",
									"jitter"
								],
								[
									"isNamespaceLoaded\t{base}",
									"isNamespaceLoaded"
								],
								[
									"print.warnings\t{base}",
									"print.warnings"
								],
								[
									"simpleWarning\t{base}",
									"simpleWarning"
								],
								[
									"double\t{base}",
									"double"
								],
								[
									"as.expression\t{base}",
									"as.expression"
								],
								[
									"summary.srcfile\t{base}",
									"summary.srcfile"
								],
								[
									"summary.data.frame\t{base}",
									"summary.data.frame"
								],
								[
									"c.factor\t{base}",
									"c.factor"
								],
								[
									"debugonce\t{base}",
									"debugonce"
								],
								[
									"print\t{base}",
									"print"
								],
								[
									".isMethodsDispatchOn\t{base}",
									".isMethodsDispatchOn"
								],
								[
									"gregexec\t{base}",
									"gregexec"
								],
								[
									"forceAndCall\t{base}",
									"forceAndCall"
								],
								[
									"close.srcfilealias\t{base}",
									"close.srcfilealias"
								],
								[
									".gtn\t{base}",
									".gtn"
								],
								[
									".mergeExportMethods\t{base}",
									".mergeExportMethods"
								],
								[
									".primTrace\t{base}",
									".primTrace"
								],
								[
									"seq.int\t{base}",
									"seq.int"
								],
								[
									"gregexpr\t{base}",
									"gregexpr"
								],
								[
									"namespaceImportClasses\t{base}",
									"namespaceImportClasses"
								],
								[
									"contributors\t{base}",
									"contributors"
								],
								[
									"unix.time\t{base}",
									"unix.time"
								],
								[
									"ngettext\t{base}",
									"ngettext"
								],
								[
									"print.Dlist\t{base}",
									"print.Dlist"
								],
								[
									"Find\t{base}",
									"Find"
								],
								[
									"all.equal.envRefClass\t{base}",
									"all.equal.envRefClass"
								],
								[
									"as.name\t{base}",
									"as.name"
								],
								[
									"gettext\t{base}",
									"gettext"
								],
								[
									"rawToChar\t{base}",
									"rawToChar"
								],
								[
									"anyDuplicated.array\t{base}",
									"anyDuplicated.array"
								],
								[
									"unique.POSIXlt\t{base}",
									"unique.POSIXlt"
								],
								[
									"as.list.POSIXct\t{base}",
									"as.list.POSIXct"
								],
								[
									"as.data.frame.character\t{base}",
									"as.data.frame.character"
								],
								[
									"importIntoEnv\t{base}",
									"importIntoEnv"
								],
								[
									"as.list.POSIXlt\t{base}",
									"as.list.POSIXlt"
								],
								[
									"isIncomplete\t{base}",
									"isIncomplete"
								],
								[
									"qr.qy\t{base}",
									"qr.qy"
								],
								[
									"bitwXor\t{base}",
									"bitwXor"
								],
								[
									"format.factor\t{base}",
									"format.factor"
								],
								[
									"Map\t{base}",
									"Map"
								],
								[
									"getTaskCallbackNames\t{base}",
									"getTaskCallbackNames"
								],
								[
									"data.frame\t{base}",
									"data.frame"
								],
								[
									"Mod\t{base}",
									"Mod"
								],
								[
									"sQuote\t{base}",
									"sQuote"
								],
								[
									"regexec\t{base}",
									"regexec"
								],
								[
									"-.Date\t{base}",
									"-.Date"
								],
								[
									"regexpr\t{base}",
									"regexpr"
								],
								[
									"packageNotFoundError\t{base}",
									"packageNotFoundError"
								],
								[
									"sys.nframe\t{base}",
									"sys.nframe"
								],
								[
									"as.table\t{base}",
									"as.table"
								],
								[
									"sys.load.image\t{base}",
									"sys.load.image"
								],
								[
									"source\t{base}",
									"source"
								],
								[
									"objects\t{base}",
									"objects"
								],
								[
									"is.table\t{base}",
									"is.table"
								],
								[
									"sys.status\t{base}",
									"sys.status"
								],
								[
									"array\t{base}",
									"array"
								],
								[
									"search\t{base}",
									"search"
								],
								[
									"is.infinite\t{base}",
									"is.infinite"
								],
								[
									"Sys.setLanguage\t{base}",
									"Sys.setLanguage"
								],
								[
									".Machine\t{base}",
									".Machine"
								],
								[
									"weekdays.Date\t{base}",
									"weekdays.Date"
								],
								[
									"rownames\t{base}",
									"rownames"
								],
								[
									"readRenviron\t{base}",
									"readRenviron"
								],
								[
									"textConnection\t{base}",
									"textConnection"
								],
								[
									".rowMeans\t{base}",
									".rowMeans"
								],
								[
									"getSrcLines\t{base}",
									"getSrcLines"
								],
								[
									".Call\t{base}",
									".Call"
								],
								[
									"unclass\t{base}",
									"unclass"
								],
								[
									".expand_R_libs_env_var\t{base}",
									".expand_R_libs_env_var"
								],
								[
									"gc.time\t{base}",
									"gc.time"
								],
								[
									"cummax\t{base}",
									"cummax"
								],
								[
									"gcinfo\t{base}",
									"gcinfo"
								],
								[
									"cummin\t{base}",
									"cummin"
								],
								[
									".mergeImportMethods\t{base}",
									".mergeImportMethods"
								],
								[
									".subset2\t{base}",
									".subset2"
								],
								[
									"addTaskCallback\t{base}",
									"addTaskCallback"
								],
								[
									"file.mode\t{base}",
									"file.mode"
								],
								[
									".knownS3Generics\t{base}",
									".knownS3Generics"
								],
								[
									"unlockBinding\t{base}",
									"unlockBinding"
								],
								[
									"solve.qr\t{base}",
									"solve.qr"
								],
								[
									".deparseOpts\t{base}",
									".deparseOpts"
								],
								[
									"file.info\t{base}",
									"file.info"
								],
								[
									".row\t{base}",
									".row"
								],
								[
									"round.POSIXt\t{base}",
									"round.POSIXt"
								],
								[
									"duplicated.POSIXlt\t{base}",
									"duplicated.POSIXlt"
								],
								[
									"attachNamespace\t{base}",
									"attachNamespace"
								],
								[
									"dQuote\t{base}",
									"dQuote"
								],
								[
									"bquote\t{base}",
									"bquote"
								],
								[
									"builtins\t{base}",
									"builtins"
								],
								[
									".standard_regexps\t{base}",
									".standard_regexps"
								],
								[
									"format.summaryDefault\t{base}",
									"format.summaryDefault"
								],
								[
									"xzfile\t{base}",
									"xzfile"
								],
								[
									"cut.Date\t{base}",
									"cut.Date"
								],
								[
									"nchar\t{base}",
									"nchar"
								],
								[
									"simplify2array\t{base}",
									"simplify2array"
								],
								[
									"writeChar\t{base}",
									"writeChar"
								],
								[
									"La_library\t{base}",
									"La_library"
								],
								[
									"strptime\t{base}",
									"strptime"
								],
								[
									"serverSocket\t{base}",
									"serverSocket"
								],
								[
									"all.equal.numeric\t{base}",
									"all.equal.numeric"
								],
								[
									"readline\t{base}",
									"readline"
								],
								[
									"duplicated.data.frame\t{base}",
									"duplicated.data.frame"
								],
								[
									".__H__.rbind\t{base}",
									".__H__.rbind"
								],
								[
									"registerS3method\t{base}",
									"registerS3method"
								],
								[
									"as.list.default\t{base}",
									"as.list.default"
								],
								[
									"setNamespaceInfo\t{base}",
									"setNamespaceInfo"
								],
								[
									"seq.Date\t{base}",
									"seq.Date"
								],
								[
									"getNamespaceInfo\t{base}",
									"getNamespaceInfo"
								],
								[
									"asinh\t{base}",
									"asinh"
								],
								[
									"sys.on.exit\t{base}",
									"sys.on.exit"
								],
								[
									"anyNA.data.frame\t{base}",
									"anyNA.data.frame"
								],
								[
									"namespaceImportMethods\t{base}",
									"namespaceImportMethods"
								],
								[
									"sort.int\t{base}",
									"sort.int"
								],
								[
									"cumsum\t{base}",
									"cumsum"
								],
								[
									"environmentName\t{base}",
									"environmentName"
								],
								[
									"as.list.environment\t{base}",
									"as.list.environment"
								],
								[
									"restartDescription\t{base}",
									"restartDescription"
								],
								[
									".signalSimpleWarning\t{base}",
									".signalSimpleWarning"
								],
								[
									"autoload\t{base}",
									"autoload"
								],
								[
									"format.pval\t{base}",
									"format.pval"
								],
								[
									"as.data.frame\t{base}",
									"as.data.frame"
								],
								[
									"as.call\t{base}",
									"as.call"
								],
								[
									"with\t{base}",
									"with"
								],
								[
									"round.Date\t{base}",
									"round.Date"
								],
								[
									"emptyenv\t{base}",
									"emptyenv"
								],
								[
									"as.list.function\t{base}",
									"as.list.function"
								],
								[
									"agrepl\t{base}",
									"agrepl"
								],
								[
									"seq_len\t{base}",
									"seq_len"
								],
								[
									"rowsum.default\t{base}",
									"rowsum.default"
								],
								[
									"months.POSIXt\t{base}",
									"months.POSIXt"
								],
								[
									"besselI\t{base}",
									"besselI"
								],
								[
									"besselJ\t{base}",
									"besselJ"
								],
								[
									"besselK\t{base}",
									"besselK"
								],
								[
									"besselY\t{base}",
									"besselY"
								],
								[
									"numeric\t{base}",
									"numeric"
								],
								[
									"withCallingHandlers\t{base}",
									"withCallingHandlers"
								],
								[
									"open.srcfilecopy\t{base}",
									"open.srcfilecopy"
								],
								[
									"weekdays\t{base}",
									"weekdays"
								],
								[
									"formatDL\t{base}",
									"formatDL"
								],
								[
									"qr.fitted\t{base}",
									"qr.fitted"
								],
								[
									"system2\t{base}",
									"system2"
								],
								[
									".External2\t{base}",
									".External2"
								],
								[
									"as.factor\t{base}",
									"as.factor"
								],
								[
									"data.class\t{base}",
									"data.class"
								],
								[
									"is.symbol\t{base}",
									"is.symbol"
								],
								[
									"memCompress\t{base}",
									"memCompress"
								],
								[
									"simpleMessage\t{base}",
									"simpleMessage"
								],
								[
									"La_version\t{base}",
									"La_version"
								],
								[
									"as.difftime\t{base}",
									"as.difftime"
								],
								[
									"make.names\t{base}",
									"make.names"
								],
								[
									"as.null\t{base}",
									"as.null"
								],
								[
									"storage.mode\t{base}",
									"storage.mode"
								],
								[
									"getExportedValue\t{base}",
									"getExportedValue"
								],
								[
									"mean.Date\t{base}",
									"mean.Date"
								],
								[
									"atan2\t{base}",
									"atan2"
								],
								[
									"requireNamespace\t{base}",
									"requireNamespace"
								],
								[
									"atanh\t{base}",
									"atanh"
								],
								[
									"is.nan\t{base}",
									"is.nan"
								],
								[
									"class\t{base}",
									"class"
								],
								[
									"agrep\t{base}",
									"agrep"
								],
								[
									"which.min\t{base}",
									"which.min"
								],
								[
									"as.Date.default\t{base}",
									"as.Date.default"
								],
								[
									"Sys.glob\t{base}",
									"Sys.glob"
								],
								[
									"Sys.getpid\t{base}",
									"Sys.getpid"
								],
								[
									"which.max\t{base}",
									"which.max"
								],
								[
									"pretty.default\t{base}",
									"pretty.default"
								],
								[
									"on.exit\t{base}",
									"on.exit"
								],
								[
									".pretty\t{base}",
									".pretty"
								],
								[
									"tcrossprod\t{base}",
									"tcrossprod"
								],
								[
									".Date\t{base}",
									".Date"
								],
								[
									"crossprod\t{base}",
									"crossprod"
								],
								[
									"anyDuplicated.data.frame\t{base}",
									"anyDuplicated.data.frame"
								],
								[
									"abs\t{base}",
									"abs"
								],
								[
									"months.Date\t{base}",
									"months.Date"
								],
								[
									"-.POSIXt\t{base}",
									"-.POSIXt"
								],
								[
									"stdin\t{base}",
									"stdin"
								],
								[
									"all\t{base}",
									"all"
								],
								[
									"as.numeric\t{base}",
									"as.numeric"
								],
								[
									"any\t{base}",
									"any"
								],
								[
									"isTRUE\t{base}",
									"isTRUE"
								],
								[
									"charToRaw\t{base}",
									"charToRaw"
								],
								[
									"Sys.time\t{base}",
									"Sys.time"
								],
								[
									"as.Date.numeric\t{base}",
									"as.Date.numeric"
								],
								[
									"environment\t{base}",
									"environment"
								],
								[
									"cat\t{base}",
									"cat"
								],
								[
									"is.raw\t{base}",
									"is.raw"
								],
								[
									"mean.difftime\t{base}",
									"mean.difftime"
								],
								[
									"readLines\t{base}",
									"readLines"
								],
								[
									".rowSums\t{base}",
									".rowSums"
								],
								[
									"charmatch\t{base}",
									"charmatch"
								],
								[
									"col\t{base}",
									"col"
								],
								[
									"cos\t{base}",
									"cos"
								],
								[
									"mtfrm\t{base}",
									"mtfrm"
								],
								[
									"Sys.Date\t{base}",
									"Sys.Date"
								],
								[
									"det\t{base}",
									"det"
								],
								[
									"cut\t{base}",
									"cut"
								],
								[
									"dim\t{base}",
									"dim"
								],
								[
									"dir\t{base}",
									"dir"
								],
								[
									"as.data.frame.raw\t{base}",
									"as.data.frame.raw"
								],
								[
									"as.symbol\t{base}",
									"as.symbol"
								],
								[
									"as.data.frame.AsIs\t{base}",
									"as.data.frame.AsIs"
								],
								[
									"summary.factor\t{base}",
									"summary.factor"
								],
								[
									"anyDuplicated.matrix\t{base}",
									"anyDuplicated.matrix"
								],
								[
									"getDLLRegisteredRoutines.DLLInfo\t{base}",
									"getDLLRegisteredRoutines.DLLInfo"
								],
								[
									"exp\t{base}",
									"exp"
								],
								[
									"print.Date\t{base}",
									"print.Date"
								],
								[
									"split.data.frame\t{base}",
									"split.data.frame"
								],
								[
									"for\t{base}",
									"for"
								],
								[
									"rowSums\t{base}",
									"rowSums"
								],
								[
									"rawShift\t{base}",
									"rawShift"
								],
								[
									"get\t{base}",
									"get"
								],
								[
									"open.srcfilealias\t{base}",
									"open.srcfilealias"
								],
								[
									"as.list.numeric_version\t{base}",
									"as.list.numeric_version"
								],
								[
									"identity\t{base}",
									"identity"
								],
								[
									"Summary.factor\t{base}",
									"Summary.factor"
								],
								[
									"print.summaryDefault\t{base}",
									"print.summaryDefault"
								],
								[
									"toString.default\t{base}",
									"toString.default"
								],
								[
									"pushBackLength\t{base}",
									"pushBackLength"
								],
								[
									"extSoftVersion\t{base}",
									"extSoftVersion"
								],
								[
									"serialize\t{base}",
									"serialize"
								],
								[
									"is.complex\t{base}",
									"is.complex"
								],
								[
									"loadNamespace\t{base}",
									"loadNamespace"
								],
								[
									"all.equal.default\t{base}",
									"all.equal.default"
								],
								[
									"print.condition\t{base}",
									"print.condition"
								],
								[
									"RNGkind\t{base}",
									"RNGkind"
								],
								[
									"summary.table\t{base}",
									"summary.table"
								],
								[
									"nameOfClass.default\t{base}",
									"nameOfClass.default"
								],
								[
									"list\t{base}",
									"list"
								],
								[
									"isa\t{base}",
									"isa"
								],
								[
									"print.difftime\t{base}",
									"print.difftime"
								],
								[
									"as.character.error\t{base}",
									"as.character.error"
								],
								[
									"strtrim\t{base}",
									"strtrim"
								],
								[
									"licence\t{base}",
									"licence"
								],
								[
									"summary\t{base}",
									"summary"
								],
								[
									"row.names.data.frame\t{base}",
									"row.names.data.frame"
								],
								[
									"packageStartupMessage\t{base}",
									"packageStartupMessage"
								],
								[
									"print.summary.warnings\t{base}",
									"print.summary.warnings"
								],
								[
									"pmax.int\t{base}",
									"pmax.int"
								],
								[
									"julian.Date\t{base}",
									"julian.Date"
								],
								[
									"license\t{base}",
									"license"
								],
								[
									"sys.save.image\t{base}",
									"sys.save.image"
								],
								[
									"lazyLoadDBexec\t{base}",
									"lazyLoadDBexec"
								],
								[
									"max.col\t{base}",
									"max.col"
								],
								[
									"invisible\t{base}",
									"invisible"
								],
								[
									"open.srcfile\t{base}",
									"open.srcfile"
								],
								[
									"searchpaths\t{base}",
									"searchpaths"
								],
								[
									".formula2varlist\t{base}",
									".formula2varlist"
								],
								[
									"namespaceImportFrom\t{base}",
									"namespaceImportFrom"
								],
								[
									"sys.frames\t{base}",
									"sys.frames"
								],
								[
									"Recall\t{base}",
									"Recall"
								],
								[
									".difftime\t{base}",
									".difftime"
								],
								[
									"log\t{base}",
									"log"
								],
								[
									"numToBits\t{base}",
									"numToBits"
								],
								[
									"rawToBits\t{base}",
									"rawToBits"
								],
								[
									"max\t{base}",
									"max"
								],
								[
									"floor\t{base}",
									"floor"
								],
								[
									"Ops.numeric_version\t{base}",
									"Ops.numeric_version"
								],
								[
									"close\t{base}",
									"close"
								],
								[
									"Math.Date\t{base}",
									"Math.Date"
								],
								[
									"Math.data.frame\t{base}",
									"Math.data.frame"
								],
								[
									"min\t{base}",
									"min"
								],
								[
									"as.array\t{base}",
									"as.array"
								],
								[
									"assign\t{base}",
									"assign"
								],
								[
									"taskCallbackManager\t{base}",
									"taskCallbackManager"
								],
								[
									"gettextf\t{base}",
									"gettextf"
								],
								[
									".NotYetUsed\t{base}",
									".NotYetUsed"
								],
								[
									"setHook\t{base}",
									"setHook"
								],
								[
									"load\t{base}",
									"load"
								],
								[
									"socketTimeout\t{base}",
									"socketTimeout"
								],
								[
									"Negate\t{base}",
									"Negate"
								],
								[
									"unique.matrix\t{base}",
									"unique.matrix"
								],
								[
									"log2\t{base}",
									"log2"
								],
								[
									"as.character.POSIXt\t{base}",
									"as.character.POSIXt"
								],
								[
									"untrace\t{base}",
									"untrace"
								],
								[
									"logb\t{base}",
									"logb"
								],
								[
									"is.array\t{base}",
									"is.array"
								],
								[
									"droplevels.factor\t{base}",
									"droplevels.factor"
								],
								[
									"R.version\t{base}",
									"R.version"
								],
								[
									"R.Version\t{base}",
									"R.Version"
								],
								[
									"within.list\t{base}",
									"within.list"
								],
								[
									"inherits\t{base}",
									"inherits"
								],
								[
									"Sys.setenv\t{base}",
									"Sys.setenv"
								],
								[
									"comment\t{base}",
									"comment"
								],
								[
									"as.vector.data.frame\t{base}",
									"as.vector.data.frame"
								],
								[
									"print.DLLInfoList\t{base}",
									"print.DLLInfoList"
								],
								[
									"vector\t{base}",
									"vector"
								],
								[
									"system\t{base}",
									"system"
								],
								[
									".First.sys\t{base}",
									".First.sys"
								],
								[
									"save.image\t{base}",
									"save.image"
								],
								[
									"as.array.default\t{base}",
									"as.array.default"
								],
								[
									"format.info\t{base}",
									"format.info"
								],
								[
									".F_dqrqy\t{base}",
									".F_dqrqy"
								],
								[
									"Sys.setFileTime\t{base}",
									"Sys.setFileTime"
								],
								[
									".F_dqrxb\t{base}",
									".F_dqrxb"
								],
								[
									"setequal\t{base}",
									"setequal"
								],
								[
									"raw\t{base}",
									"raw"
								],
								[
									"typeof\t{base}",
									"typeof"
								],
								[
									"rep\t{base}",
									"rep"
								],
								[
									"rev\t{base}",
									"rev"
								],
								[
									"paste0\t{base}",
									"paste0"
								],
								[
									"rle\t{base}",
									"rle"
								],
								[
									"conditionMessage\t{base}",
									"conditionMessage"
								],
								[
									".F_dqrcf\t{base}",
									".F_dqrcf"
								],
								[
									"row\t{base}",
									"row"
								],
								[
									"stderr\t{base}",
									"stderr"
								],
								[
									".Last.value\t{base}",
									".Last.value"
								],
								[
									"seq\t{base}",
									"seq"
								],
								[
									"flush\t{base}",
									"flush"
								],
								[
									"sin\t{base}",
									"sin"
								],
								[
									"intToUtf8\t{base}",
									"intToUtf8"
								],
								[
									"acos\t{base}",
									"acos"
								],
								[
									"globalCallingHandlers\t{base}",
									"globalCallingHandlers"
								],
								[
									"within\t{base}",
									"within"
								],
								[
									"tan\t{base}",
									"tan"
								],
								[
									"as.matrix.noquote\t{base}",
									"as.matrix.noquote"
								],
								[
									"libcurlVersion\t{base}",
									"libcurlVersion"
								],
								[
									"sub\t{base}",
									"sub"
								],
								[
									"sum\t{base}",
									"sum"
								],
								[
									"svd\t{base}",
									"svd"
								],
								[
									"upper.tri\t{base}",
									"upper.tri"
								],
								[
									"isSymmetric.matrix\t{base}",
									"isSymmetric.matrix"
								],
								[
									"is.factor\t{base}",
									"is.factor"
								],
								[
									"mean\t{base}",
									"mean"
								],
								[
									"try\t{base}",
									"try"
								],
								[
									"rev.default\t{base}",
									"rev.default"
								],
								[
									"is.character\t{base}",
									"is.character"
								],
								[
									"Sys.getenv\t{base}",
									"Sys.getenv"
								],
								[
									"unz\t{base}",
									"unz"
								],
								[
									"as.data.frame.factor\t{base}",
									"as.data.frame.factor"
								],
								[
									"url\t{base}",
									"url"
								],
								[
									"Ops.Date\t{base}",
									"Ops.Date"
								],
								[
									"as.environment\t{base}",
									"as.environment"
								],
								[
									"mget\t{base}",
									"mget"
								],
								[
									"print.eigen\t{base}",
									"print.eigen"
								],
								[
									"invokeRestartInteractively\t{base}",
									"invokeRestartInteractively"
								],
								[
									"getNamespaceExports\t{base}",
									"getNamespaceExports"
								],
								[
									"subset.matrix\t{base}",
									"subset.matrix"
								],
								[
									"forwardsolve\t{base}",
									"forwardsolve"
								],
								[
									"solve.default\t{base}",
									"solve.default"
								],
								[
									"icuGetCollate\t{base}",
									"icuGetCollate"
								],
								[
									"dirname\t{base}",
									"dirname"
								],
								[
									"as.data.frame.model.matrix\t{base}",
									"as.data.frame.model.matrix"
								],
								[
									"Sys.info\t{base}",
									"Sys.info"
								],
								[
									"as.Date.character\t{base}",
									"as.Date.character"
								],
								[
									".encode_numeric_version\t{base}",
									".encode_numeric_version"
								],
								[
									"xor\t{base}",
									"xor"
								],
								[
									"quarters.POSIXt\t{base}",
									"quarters.POSIXt"
								],
								[
									"allowInterrupts\t{base}",
									"allowInterrupts"
								],
								[
									"julian\t{base}",
									"julian"
								],
								[
									"intToBits\t{base}",
									"intToBits"
								],
								[
									"validUTF8\t{base}",
									"validUTF8"
								],
								[
									"capabilities\t{base}",
									"capabilities"
								],
								[
									"print.simple.list\t{base}",
									"print.simple.list"
								],
								[
									"namespaceImport\t{base}",
									"namespaceImport"
								],
								[
									"geterrmessage\t{base}",
									"geterrmessage"
								],
								[
									"delayedAssign\t{base}",
									"delayedAssign"
								],
								[
									"print.DLLRegisteredRoutines\t{base}",
									"print.DLLRegisteredRoutines"
								],
								[
									"Sys.setlocale\t{base}",
									"Sys.setlocale"
								],
								[
									"difftime\t{base}",
									"difftime"
								],
								[
									"..getNamespace\t{base}",
									"..getNamespace"
								],
								[
									"range\t{base}",
									"range"
								],
								[
									"unique.data.frame\t{base}",
									"unique.data.frame"
								],
								[
									"deparse\t{base}",
									"deparse"
								],
								[
									"pairlist\t{base}",
									"pairlist"
								],
								[
									"sinpi\t{base}",
									"sinpi"
								],
								[
									"summary.POSIXct\t{base}",
									"summary.POSIXct"
								],
								[
									"print.NativeRoutineList\t{base}",
									"print.NativeRoutineList"
								],
								[
									"psigamma\t{base}",
									"psigamma"
								],
								[
									"file.access\t{base}",
									"file.access"
								],
								[
									"is.environment\t{base}",
									"is.environment"
								],
								[
									"Math.factor\t{base}",
									"Math.factor"
								],
								[
									"getRversion\t{base}",
									"getRversion"
								],
								[
									"droplevels\t{base}",
									"droplevels"
								],
								[
									"determinant.matrix\t{base}",
									"determinant.matrix"
								],
								[
									"stdout\t{base}",
									"stdout"
								],
								[
									"summary.POSIXlt\t{base}",
									"summary.POSIXlt"
								],
								[
									"suspendInterrupts\t{base}",
									"suspendInterrupts"
								],
								[
									"tapply\t{base}",
									"tapply"
								],
								[
									".F_dqrqty\t{base}",
									".F_dqrqty"
								],
								[
									"trace\t{base}",
									"trace"
								],
								[
									"callCC\t{base}",
									"callCC"
								],
								[
									".getNamespace\t{base}",
									".getNamespace"
								],
								[
									"as.matrix.POSIXlt\t{base}",
									"as.matrix.POSIXlt"
								],
								[
									"rowMeans\t{base}",
									"rowMeans"
								],
								[
									".isOpen\t{base}",
									".isOpen"
								],
								[
									"format.packageInfo\t{base}",
									"format.packageInfo"
								],
								[
									".F_dqrrsd\t{base}",
									".F_dqrrsd"
								],
								[
									"print.default\t{base}",
									"print.default"
								],
								[
									"shQuote\t{base}",
									"shQuote"
								],
								[
									"cut.default\t{base}",
									"cut.default"
								],
								[
									"range.default\t{base}",
									"range.default"
								],
								[
									"structure\t{base}",
									"structure"
								],
								[
									"mode\t{base}",
									"mode"
								],
								[
									"Ops.difftime\t{base}",
									"Ops.difftime"
								],
								[
									"attributes\t{base}",
									"attributes"
								],
								[
									"as.POSIXct\t{base}",
									"as.POSIXct"
								],
								[
									"all.names\t{base}",
									"all.names"
								],
								[
									"as.character\t{base}",
									"as.character"
								],
								[
									"as.POSIXlt\t{base}",
									"as.POSIXlt"
								],
								[
									"sort.default\t{base}",
									"sort.default"
								],
								[
									"simpleCondition\t{base}",
									"simpleCondition"
								],
								[
									"within.data.frame\t{base}",
									"within.data.frame"
								],
								[
									"endsWith\t{base}",
									"endsWith"
								],
								[
									"print.connection\t{base}",
									"print.connection"
								],
								[
									"split.default\t{base}",
									"split.default"
								],
								[
									"asS3\t{base}",
									"asS3"
								],
								[
									"asS4\t{base}",
									"asS4"
								],
								[
									"with.default\t{base}",
									"with.default"
								],
								[
									"balancePOSIXlt\t{base}",
									"balancePOSIXlt"
								],
								[
									"args\t{base}",
									"args"
								],
								[
									"break\t{base}",
									"break"
								],
								[
									"R_system_version\t{base}",
									"R_system_version"
								],
								[
									"matrix\t{base}",
									"matrix"
								],
								[
									"is.na.POSIXlt\t{base}",
									"is.na.POSIXlt"
								],
								[
									"basename\t{base}",
									"basename"
								],
								[
									"lbeta\t{base}",
									"lbeta"
								],
								[
									"asin\t{base}",
									"asin"
								],
								[
									"summary.default\t{base}",
									"summary.default"
								],
								[
									"file.append\t{base}",
									"file.append"
								],
								[
									"srcfile\t{base}",
									"srcfile"
								],
								[
									"Sys.which\t{base}",
									"Sys.which"
								],
								[
									"ncol\t{base}",
									"ncol"
								],
								[
									"return\t{base}",
									"return"
								],
								[
									"atan\t{base}",
									"atan"
								],
								[
									"eapply\t{base}",
									"eapply"
								],
								[
									"rep.POSIXct\t{base}",
									"rep.POSIXct"
								],
								[
									"rep.POSIXlt\t{base}",
									"rep.POSIXlt"
								],
								[
									"socketConnection\t{base}",
									"socketConnection"
								],
								[
									"format.Date\t{base}",
									"format.Date"
								],
								[
									"getConnection\t{base}",
									"getConnection"
								],
								[
									"tryCatch\t{base}",
									"tryCatch"
								],
								[
									"attr\t{base}",
									"attr"
								],
								[
									"tracemem\t{base}",
									"tracemem"
								],
								[
									"as.data.frame.ordered\t{base}",
									"as.data.frame.ordered"
								],
								[
									"format.hexmode\t{base}",
									"format.hexmode"
								],
								[
									"beta\t{base}",
									"beta"
								],
								[
									"seq.POSIXt\t{base}",
									"seq.POSIXt"
								],
								[
									"summary.Date\t{base}",
									"summary.Date"
								],
								[
									"next\t{base}",
									"next"
								],
								[
									"Sys.getlocale\t{base}",
									"Sys.getlocale"
								],
								[
									"lower.tri\t{base}",
									"lower.tri"
								],
								[
									"rbind\t{base}",
									"rbind"
								],
								[
									"union\t{base}",
									"union"
								],
								[
									"write\t{base}",
									"write"
								],
								[
									"units\t{base}",
									"units"
								],
								[
									"cbind\t{base}",
									"cbind"
								],
								[
									"dim.data.frame\t{base}",
									"dim.data.frame"
								],
								[
									"t.data.frame\t{base}",
									"t.data.frame"
								],
								[
									"month.abb\t{base}",
									"month.abb"
								],
								[
									"Sys.unsetenv\t{base}",
									"Sys.unsetenv"
								],
								[
									"dyn.unload\t{base}",
									"dyn.unload"
								],
								[
									"scale.default\t{base}",
									"scale.default"
								],
								[
									"invokeRestart\t{base}",
									"invokeRestart"
								],
								[
									"as.data.frame.integer\t{base}",
									"as.data.frame.integer"
								],
								[
									"all.equal.language\t{base}",
									"all.equal.language"
								],
								[
									"bitwOr\t{base}",
									"bitwOr"
								],
								[
									".Library.site\t{base}",
									".Library.site"
								],
								[
									".packageStartupMessage\t{base}",
									".packageStartupMessage"
								],
								[
									"close.connection\t{base}",
									"close.connection"
								],
								[
									"trimws\t{base}",
									"trimws"
								],
								[
									".Call.graphics\t{base}",
									".Call.graphics"
								],
								[
									".C_R_addTaskCallback\t{base}",
									".C_R_addTaskCallback"
								],
								[
									"unserialize\t{base}",
									"unserialize"
								],
								[
									".amatch_bounds\t{base}",
									".amatch_bounds"
								],
								[
									".S3_methods_table\t{base}",
									".S3_methods_table"
								],
								[
									".row_names_info\t{base}",
									".row_names_info"
								],
								[
									"standardGeneric\t{base}",
									"standardGeneric"
								],
								[
									".F_dqrdc2\t{base}",
									".F_dqrdc2"
								],
								[
									"is.nan.POSIXlt\t{base}",
									"is.nan.POSIXlt"
								],
								[
									"as.data.frame.Date\t{base}",
									"as.data.frame.Date"
								],
								[
									"R.home\t{base}",
									"R.home"
								],
								[
									"unique.default\t{base}",
									"unique.default"
								],
								[
									"sys.frame\t{base}",
									"sys.frame"
								],
								[
									"sys.source\t{base}",
									"sys.source"
								],
								[
									"as.double.POSIXlt\t{base}",
									"as.double.POSIXlt"
								],
								[
									"clearPushBack\t{base}",
									"clearPushBack"
								],
								[
									".leap.seconds\t{base}",
									".leap.seconds"
								],
								[
									".mapply\t{base}",
									".mapply"
								],
								[
									"bindtextdomain\t{base}",
									"bindtextdomain"
								],
								[
									"lgamma\t{base}",
									"lgamma"
								],
								[
									"aperm.table\t{base}",
									"aperm.table"
								],
								[
									"getLoadedDLLs\t{base}",
									"getLoadedDLLs"
								],
								[
									"subset.data.frame\t{base}",
									"subset.data.frame"
								],
								[
									"as.Date.factor\t{base}",
									"as.Date.factor"
								],
								[
									"format.libraryIQR\t{base}",
									"format.libraryIQR"
								],
								[
									"unique\t{base}",
									"unique"
								],
								[
									"as.data.frame.difftime\t{base}",
									"as.data.frame.difftime"
								],
								[
									"merge.default\t{base}",
									"merge.default"
								],
								[
									"ifelse\t{base}",
									"ifelse"
								],
								[
									"is.atomic\t{base}",
									"is.atomic"
								],
								[
									"sys.parents\t{base}",
									"sys.parents"
								],
								[
									"body\t{base}",
									"body"
								],
								[
									"as.character.default\t{base}",
									"as.character.default"
								],
								[
									"rep.int\t{base}",
									"rep.int"
								],
								[
									"as.data.frame.array\t{base}",
									"as.data.frame.array"
								],
								[
									"xtfrm.Date\t{base}",
									"xtfrm.Date"
								],
								[
									"norm\t{base}",
									"norm"
								],
								[
									"as.list.factor\t{base}",
									"as.list.factor"
								],
								[
									"retracemem\t{base}",
									"retracemem"
								],
								[
									"local\t{base}",
									"local"
								],
								[
									"expression\t{base}",
									"expression"
								],
								[
									"Reduce\t{base}",
									"Reduce"
								],
								[
									"signalCondition\t{base}",
									"signalCondition"
								],
								[
									"validEnc\t{base}",
									"validEnc"
								],
								[
									"log10\t{base}",
									"log10"
								],
								[
									"isSymmetric\t{base}",
									"isSymmetric"
								],
								[
									"log1p\t{base}",
									"log1p"
								],
								[
									"is.expression\t{base}",
									"is.expression"
								],
								[
									"tryInvokeRestart\t{base}",
									"tryInvokeRestart"
								],
								[
									"is.unsorted\t{base}",
									"is.unsorted"
								],
								[
									"droplevels.data.frame\t{base}",
									"droplevels.data.frame"
								],
								[
									"sys.parent\t{base}",
									"sys.parent"
								],
								[
									"call\t{base}",
									"call"
								],
								[
									"is.object\t{base}",
									"is.object"
								],
								[
									"pos.to.env\t{base}",
									"pos.to.env"
								],
								[
									"as.POSIXlt.character\t{base}",
									"as.POSIXlt.character"
								],
								[
									"sweep\t{base}",
									"sweep"
								],
								[
									".C_R_removeTaskCallback\t{base}",
									".C_R_removeTaskCallback"
								],
								[
									".libPaths\t{base}",
									".libPaths"
								],
								[
									".getNamespaceInfo\t{base}",
									".getNamespaceInfo"
								],
								[
									"trunc.POSIXt\t{base}",
									"trunc.POSIXt"
								],
								[
									"encodeString\t{base}",
									"encodeString"
								],
								[
									"trunc\t{base}",
									"trunc"
								],
								[
									"system.time\t{base}",
									"system.time"
								],
								[
									"all.equal.POSIXt\t{base}",
									"all.equal.POSIXt"
								],
								[
									"bitwShiftR\t{base}",
									"bitwShiftR"
								],
								[
									"nrow\t{base}",
									"nrow"
								],
								[
									"bitwShiftL\t{base}",
									"bitwShiftL"
								],
								[
									"print.restart\t{base}",
									"print.restart"
								],
								[
									"RNGversion\t{base}",
									"RNGversion"
								],
								[
									"sort.POSIXlt\t{base}",
									"sort.POSIXlt"
								],
								[
									"print.POSIXct\t{base}",
									"print.POSIXct"
								],
								[
									".S3method\t{base}",
									".S3method"
								],
								[
									"print.POSIXlt\t{base}",
									"print.POSIXlt"
								],
								[
									"withVisible\t{base}",
									"withVisible"
								],
								[
									"file.create\t{base}",
									"file.create"
								],
								[
									"getHook\t{base}",
									"getHook"
								],
								[
									"as.data.frame.list\t{base}",
									"as.data.frame.list"
								],
								[
									"row.names.default\t{base}",
									"row.names.default"
								],
								[
									"print.AsIs\t{base}",
									"print.AsIs"
								],
								[
									"Filter\t{base}",
									"Filter"
								],
								[
									"options\t{base}",
									"options"
								],
								[
									"single\t{base}",
									"single"
								],
								[
									"attr.all.equal\t{base}",
									"attr.all.equal"
								],
								[
									".primUntrace\t{base}",
									".primUntrace"
								],
								[
									"factorial\t{base}",
									"factorial"
								],
								[
									"lfactorial\t{base}",
									"lfactorial"
								],
								[
									"colnames\t{base}",
									"colnames"
								],
								[
									"dontCheck\t{base}",
									"dontCheck"
								],
								[
									".Options\t{base}",
									".Options"
								],
								[
									"all.equal.list\t{base}",
									"all.equal.list"
								],
								[
									"levels\t{base}",
									"levels"
								],
								[
									".colMeans\t{base}",
									".colMeans"
								],
								[
									"labels\t{base}",
									"labels"
								],
								[
									".dynLibs\t{base}",
									".dynLibs"
								],
								[
									"isatty\t{base}",
									"isatty"
								],
								[
									"file.remove\t{base}",
									"file.remove"
								],
								[
									"ordered\t{base}",
									"ordered"
								],
								[
									"...length\t{base}",
									"...length"
								],
								[
									"exists\t{base}",
									"exists"
								],
								[
									"prettyNum\t{base}",
									"prettyNum"
								],
								[
									"isRestart\t{base}",
									"isRestart"
								],
								[
									"setTimeLimit\t{base}",
									"setTimeLimit"
								],
								[
									"names.POSIXlt\t{base}",
									"names.POSIXlt"
								],
								[
									".__H__.cbind\t{base}",
									".__H__.cbind"
								],
								[
									"list.dirs\t{base}",
									"list.dirs"
								],
								[
									"truncate\t{base}",
									"truncate"
								],
								[
									"quarters\t{base}",
									"quarters"
								],
								[
									".External\t{base}",
									".External"
								],
								[
									"xtfrm.factor\t{base}",
									"xtfrm.factor"
								],
								[
									"oldClass\t{base}",
									"oldClass"
								],
								[
									"as.function.default\t{base}",
									"as.function.default"
								],
								[
									"chol\t{base}",
									"chol"
								],
								[
									"file.rename\t{base}",
									"file.rename"
								],
								[
									"loadedNamespaces\t{base}",
									"loadedNamespaces"
								],
								[
									"all.equal.factor\t{base}",
									"all.equal.factor"
								],
								[
									".BaseNamespaceEnv\t{base}",
									".BaseNamespaceEnv"
								],
								[
									"truncate.connection\t{base}",
									"truncate.connection"
								],
								[
									"is.finite\t{base}",
									"is.finite"
								],
								[
									"as.data.frame.numeric\t{base}",
									"as.data.frame.numeric"
								],
								[
									"labels.default\t{base}",
									"labels.default"
								],
								[
									"strwrap\t{base}",
									"strwrap"
								],
								[
									".Internal\t{base}",
									".Internal"
								],
								[
									"tolower\t{base}",
									"tolower"
								],
								[
									"gzfile\t{base}",
									"gzfile"
								],
								[
									".Fortran\t{base}",
									".Fortran"
								],
								[
									"as.character.numeric_version\t{base}",
									"as.character.numeric_version"
								],
								[
									"env.profile\t{base}",
									"env.profile"
								],
								[
									"is.na\t{base}",
									"is.na"
								],
								[
									"Summary.POSIXct\t{base}",
									"Summary.POSIXct"
								],
								[
									"open.connection\t{base}",
									"open.connection"
								],
								[
									"is.qr\t{base}",
									"is.qr"
								],
								[
									"list2DF\t{base}",
									"list2DF"
								],
								[
									"duplicated\t{base}",
									"duplicated"
								],
								[
									"writeBin\t{base}",
									"writeBin"
								],
								[
									"flush.connection\t{base}",
									"flush.connection"
								],
								[
									"rcond\t{base}",
									"rcond"
								],
								[
									"is.ordered\t{base}",
									"is.ordered"
								],
								[
									"isSeekable\t{base}",
									"isSeekable"
								],
								[
									"as.ordered\t{base}",
									"as.ordered"
								],
								[
									"iconv\t{base}",
									"iconv"
								],
								[
									"tempdir\t{base}",
									"tempdir"
								],
								[
									"Summary.POSIXlt\t{base}",
									"Summary.POSIXlt"
								],
								[
									"is.numeric.difftime\t{base}",
									"is.numeric.difftime"
								],
								[
									"print.octmode\t{base}",
									"print.octmode"
								],
								[
									"summary.proc_time\t{base}",
									"summary.proc_time"
								],
								[
									"chol2inv\t{base}",
									"chol2inv"
								],
								[
									"as.character.Date\t{base}",
									"as.character.Date"
								],
								[
									".sys.timezone\t{base}",
									".sys.timezone"
								],
								[
									"Sys.timezone\t{base}",
									"Sys.timezone"
								],
								[
									"quarters.Date\t{base}",
									"quarters.Date"
								],
								[
									"stopifnot\t{base}",
									"stopifnot"
								],
								[
									"as.data.frame.complex\t{base}",
									"as.data.frame.complex"
								],
								[
									"all.equal.function\t{base}",
									"all.equal.function"
								],
								[
									"packBits\t{base}",
									"packBits"
								],
								[
									"c.POSIXct\t{base}",
									"c.POSIXct"
								],
								[
									"rep.difftime\t{base}",
									"rep.difftime"
								],
								[
									"strrep\t{base}",
									"strrep"
								],
								[
									"force\t{base}",
									"force"
								],
								[
									"c.POSIXlt\t{base}",
									"c.POSIXlt"
								],
								[
									"mem.maxNSize\t{base}",
									"mem.maxNSize"
								],
								[
									"format\t{base}",
									"format"
								],
								[
									"NextMethod\t{base}",
									"NextMethod"
								],
								[
									"..deparseOpts\t{base}",
									"..deparseOpts"
								],
								[
									".TAOCP1997init\t{base}",
									".TAOCP1997init"
								],
								[
									"Vectorize\t{base}",
									"Vectorize"
								],
								[
									"getNamespaceUsers\t{base}",
									"getNamespaceUsers"
								],
								[
									"cosh\t{base}",
									"cosh"
								],
								[
									"open\t{base}",
									"open"
								],
								[
									"qr.qty\t{base}",
									"qr.qty"
								],
								[
									"subset\t{base}",
									"subset"
								],
								[
									"print.summary.table\t{base}",
									"print.summary.table"
								],
								[
									"is.infinite.POSIXlt\t{base}",
									"is.infinite.POSIXlt"
								],
								[
									"substr\t{base}",
									"substr"
								],
								[
									"cospi\t{base}",
									"cospi"
								],
								[
									"c.warnings\t{base}",
									"c.warnings"
								],
								[
									"print.packageInfo\t{base}",
									"print.packageInfo"
								],
								[
									"NCOL\t{base}",
									"NCOL"
								],
								[
									"is.numeric\t{base}",
									"is.numeric"
								],
								[
									"strtoi\t{base}",
									"strtoi"
								],
								[
									".GenericArgsEnv\t{base}",
									".GenericArgsEnv"
								],
								[
									"rep_len\t{base}",
									"rep_len"
								],
								[
									".make_numeric_version\t{base}",
									".make_numeric_version"
								],
								[
									"date\t{base}",
									"date"
								],
								[
									"closeAllConnections\t{base}",
									"closeAllConnections"
								],
								[
									"as.logical\t{base}",
									"as.logical"
								],
								[
									"getDLLRegisteredRoutines\t{base}",
									"getDLLRegisteredRoutines"
								],
								[
									"round\t{base}",
									"round"
								],
								[
									"file.exists\t{base}",
									"file.exists"
								],
								[
									".F_dtrco\t{base}",
									".F_dtrco"
								],
								[
									"polyroot\t{base}",
									"polyroot"
								],
								[
									".kronecker\t{base}",
									".kronecker"
								],
								[
									".traceback\t{base}",
									".traceback"
								],
								[
									"browser\t{base}",
									"browser"
								],
								[
									"conflictRules\t{base}",
									"conflictRules"
								],
								[
									"is.double\t{base}",
									"is.double"
								],
								[
									"months\t{base}",
									"months"
								],
								[
									"toupper\t{base}",
									"toupper"
								],
								[
									"duplicated.default\t{base}",
									"duplicated.default"
								],
								[
									".bincode\t{base}",
									".bincode"
								],
								[
									"qr.resid\t{base}",
									"qr.resid"
								],
								[
									"toString\t{base}",
									"toString"
								],
								[
									"socketSelect\t{base}",
									"socketSelect"
								],
								[
									".class2\t{base}",
									".class2"
								],
								[
									"print.libraryIQR\t{base}",
									"print.libraryIQR"
								],
								[
									"prop.table\t{base}",
									"prop.table"
								],
								[
									"new.env\t{base}",
									"new.env"
								],
								[
									"which\t{base}",
									"which"
								],
								[
									"duplicated.numeric_version\t{base}",
									"duplicated.numeric_version"
								],
								[
									"while\t{base}",
									"while"
								],
								[
									"is.element\t{base}",
									"is.element"
								],
								[
									"as.raw\t{base}",
									"as.raw"
								],
								[
									"nzchar\t{base}",
									"nzchar"
								],
								[
									"replace\t{base}",
									"replace"
								],
								[
									"complex\t{base}",
									"complex"
								],
								[
									"dget\t{base}",
									"dget"
								],
								[
									"environmentIsLocked\t{base}",
									"environmentIsLocked"
								],
								[
									".Deprecated\t{base}",
									".Deprecated"
								],
								[
									"alist\t{base}",
									"alist"
								],
								[
									"is.list\t{base}",
									"is.list"
								],
								[
									"Ops.factor\t{base}",
									"Ops.factor"
								],
								[
									"setdiff\t{base}",
									"setdiff"
								],
								[
									"pmin.int\t{base}",
									"pmin.int"
								],
								[
									"slice.index\t{base}",
									"slice.index"
								],
								[
									"getAllConnections\t{base}",
									"getAllConnections"
								],
								[
									"duplicated.warnings\t{base}",
									"duplicated.warnings"
								],
								[
									"numeric_version\t{base}",
									"numeric_version"
								],
								[
									"ceiling\t{base}",
									"ceiling"
								],
								[
									"diag\t{base}",
									"diag"
								],
								[
									"as.complex\t{base}",
									"as.complex"
								],
								[
									"sequence\t{base}",
									"sequence"
								],
								[
									".check_tzones\t{base}",
									".check_tzones"
								],
								[
									"diff\t{base}",
									"diff"
								],
								[
									".doSortWrap\t{base}",
									".doSortWrap"
								],
								[
									"anyDuplicated\t{base}",
									"anyDuplicated"
								],
								[
									"all.equal.environment\t{base}",
									"all.equal.environment"
								],
								[
									"pipe\t{base}",
									"pipe"
								],
								[
									"ISOdatetime\t{base}",
									"ISOdatetime"
								],
								[
									"replicate\t{base}",
									"replicate"
								],
								[
									"rbind.data.frame\t{base}",
									"rbind.data.frame"
								],
								[
									"lazyLoadDBfetch\t{base}",
									"lazyLoadDBfetch"
								],
								[
									"conflicts\t{base}",
									"conflicts"
								],
								[
									".rmpkg\t{base}",
									".rmpkg"
								],
								[
									"as.Date\t{base}",
									"as.Date"
								],
								[
									"as.data.frame.numeric_version\t{base}",
									"as.data.frame.numeric_version"
								],
								[
									"mean.default\t{base}",
									"mean.default"
								],
								[
									"cumprod\t{base}",
									"cumprod"
								],
								[
									"as.double\t{base}",
									"as.double"
								],
								[
									"as.data.frame.logical\t{base}",
									"as.data.frame.logical"
								],
								[
									"as.data.frame.POSIXct\t{base}",
									"as.data.frame.POSIXct"
								],
								[
									"findRestart\t{base}",
									"findRestart"
								],
								[
									"as.data.frame.POSIXlt\t{base}",
									"as.data.frame.POSIXlt"
								],
								[
									"as.data.frame.ts\t{base}",
									"as.data.frame.ts"
								],
								[
									"findPackageEnv\t{base}",
									"findPackageEnv"
								],
								[
									"plot\t{base}",
									"plot"
								],
								[
									"pmax\t{base}",
									"pmax"
								],
								[
									"getNamespaceImports\t{base}",
									"getNamespaceImports"
								],
								[
									"as.numeric_version\t{base}",
									"as.numeric_version"
								],
								[
									"pmin\t{base}",
									"pmin"
								],
								[
									"as.character.srcref\t{base}",
									"as.character.srcref"
								],
								[
									"trunc.Date\t{base}",
									"trunc.Date"
								],
								[
									"print.hexmode\t{base}",
									"print.hexmode"
								],
								[
									"provideDimnames\t{base}",
									"provideDimnames"
								],
								[
									"match.arg\t{base}",
									"match.arg"
								],
								[
									"enquote\t{base}",
									"enquote"
								],
								[
									"file.path\t{base}",
									"file.path"
								],
								[
									"as.character.condition\t{base}",
									"as.character.condition"
								],
								[
									".Platform\t{base}",
									".Platform"
								],
								[
									"memDecompress\t{base}",
									"memDecompress"
								],
								[
									"activeBindingFunction\t{base}",
									"activeBindingFunction"
								],
								[
									"format.data.frame\t{base}",
									"format.data.frame"
								],
								[
									"unCfillPOSIXlt\t{base}",
									"unCfillPOSIXlt"
								],
								[
									"lazyLoad\t{base}",
									"lazyLoad"
								],
								[
									"srcref\t{base}",
									"srcref"
								],
								[
									"as.POSIXlt.factor\t{base}",
									"as.POSIXlt.factor"
								],
								[
									"t.default\t{base}",
									"t.default"
								],
								[
									"warning\t{base}",
									"warning"
								],
								[
									".__S3MethodsTable__.\t{base}",
									".__S3MethodsTable__."
								],
								[
									"substring\t{base}",
									"substring"
								],
								[
									"commandArgs\t{base}",
									"commandArgs"
								],
								[
									"file.symlink\t{base}",
									"file.symlink"
								],
								[
									"getCallingDLLe\t{base}",
									"getCallingDLLe"
								],
								[
									"Summary.difftime\t{base}",
									"Summary.difftime"
								],
								[
									"NROW\t{base}",
									"NROW"
								],
								[
									"match.fun\t{base}",
									"match.fun"
								],
								[
									"dput\t{base}",
									"dput"
								],
								[
									"tempfile\t{base}",
									"tempfile"
								],
								[
									"...elt\t{base}",
									"...elt"
								],
								[
									"print.by\t{base}",
									"print.by"
								],
								[
									"summary.matrix\t{base}",
									"summary.matrix"
								],
								[
									"...names\t{base}",
									"...names"
								],
								[
									"Summary.ordered\t{base}",
									"Summary.ordered"
								],
								[
									".Script\t{base}",
									".Script"
								],
								[
									"La.svd\t{base}",
									"La.svd"
								],
								[
									"rawConnection\t{base}",
									"rawConnection"
								],
								[
									"format.AsIs\t{base}",
									"format.AsIs"
								],
								[
									"is.integer\t{base}",
									"is.integer"
								],
								[
									"prod\t{base}",
									"prod"
								],
								[
									"as.integer\t{base}",
									"as.integer"
								],
								[
									"drop\t{base}",
									"drop"
								],
								[
									"Sys.umask\t{base}",
									"Sys.umask"
								],
								[
									".doTrace\t{base}",
									".doTrace"
								],
								[
									"browserText\t{base}",
									"browserText"
								],
								[
									"is.package_version\t{base}",
									"is.package_version"
								],
								[
									"bindingIsActive\t{base}",
									"bindingIsActive"
								],
								[
									"file.copy\t{base}",
									"file.copy"
								],
								[
									"eigen\t{base}",
									"eigen"
								],
								[
									"is.function\t{base}",
									"is.function"
								],
								[
									"month.name\t{base}",
									"month.name"
								],
								[
									"digamma\t{base}",
									"digamma"
								],
								[
									"l10n_info\t{base}",
									"l10n_info"
								],
								[
									"detach\t{base}",
									"detach"
								],
								[
									"as.data.frame.noquote\t{base}",
									"as.data.frame.noquote"
								],
								[
									"integer\t{base}",
									"integer"
								],
								[
									"getCallingDLL\t{base}",
									"getCallingDLL"
								],
								[
									"tracingState\t{base}",
									"tracingState"
								],
								[
									"as.function\t{base}",
									"as.function"
								],
								[
									"attach\t{base}",
									"attach"
								],
								[
									"dump\t{base}",
									"dump"
								],
								[
									"as.POSIXct.numeric\t{base}",
									"as.POSIXct.numeric"
								],
								[
									"is.recursive\t{base}",
									"is.recursive"
								],
								[
									"unlink\t{base}",
									"unlink"
								],
								[
									"seq_along\t{base}",
									"seq_along"
								],
								[
									"pcre_config\t{base}",
									"pcre_config"
								],
								[
									"unlist\t{base}",
									"unlist"
								],
								[
									"all.equal\t{base}",
									"all.equal"
								],
								[
									"regmatches\t{base}",
									"regmatches"
								],
								[
									"is.numeric_version\t{base}",
									"is.numeric_version"
								],
								[
									".Device\t{base}",
									".Device"
								],
								[
									".tryResumeInterrupt\t{base}",
									".tryResumeInterrupt"
								],
								[
									"getNamespaceName\t{base}",
									"getNamespaceName"
								],
								[
									"parent.frame\t{base}",
									"parent.frame"
								],
								[
									"factor\t{base}",
									"factor"
								],
								[
									"mtfrm.default\t{base}",
									"mtfrm.default"
								],
								[
									"message\t{base}",
									"message"
								],
								[
									"lockBinding\t{base}",
									"lockBinding"
								],
								[
									"numToInts\t{base}",
									"numToInts"
								],
								[
									".valid.factor\t{base}",
									".valid.factor"
								],
								[
									"Position\t{base}",
									"Position"
								],
								[
									"rep.numeric_version\t{base}",
									"rep.numeric_version"
								],
								[
									".Defunct\t{base}",
									".Defunct"
								],
								[
									"agricolae\tInstalled Package",
									"agricolae"
								],
								[
									"AlgDesign\tInstalled Package",
									"AlgDesign"
								],
								[
									"algEq\tInstalled Package",
									"algEq"
								],
								[
									"anytime\tInstalled Package",
									"anytime"
								],
								[
									"AsioHeaders\tInstalled Package",
									"AsioHeaders"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"ast2ast\tInstalled Package",
									"ast2ast"
								],
								[
									"BB\tInstalled Package",
									"BB"
								],
								[
									"BBmisc\tInstalled Package",
									"BBmisc"
								],
								[
									"bibtex\tInstalled Package",
									"bibtex"
								],
								[
									"bigD\tInstalled Package",
									"bigD"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"bmp\tInstalled Package",
									"bmp"
								],
								[
									"brew\tInstalled Package",
									"brew"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broman\tInstalled Package",
									"broman"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"ca\tInstalled Package",
									"ca"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"Cairo\tInstalled Package",
									"Cairo"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"car\tInstalled Package",
									"car"
								],
								[
									"carData\tInstalled Package",
									"carData"
								],
								[
									"cellranger\tInstalled Package",
									"cellranger"
								],
								[
									"chromatogram\tInstalled Package",
									"chromatogram"
								],
								[
									"chromatographR\tInstalled Package",
									"chromatographR"
								],
								[
									"chromConverter\tInstalled Package",
									"chromConverter"
								],
								[
									"chromote\tInstalled Package",
									"chromote"
								],
								[
									"cinterpolate\tInstalled Package",
									"cinterpolate"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"clipr\tInstalled Package",
									"clipr"
								],
								[
									"clue\tInstalled Package",
									"clue"
								],
								[
									"collections\tInstalled Package",
									"collections"
								],
								[
									"colorout\tInstalled Package",
									"colorout"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"combinat\tInstalled Package",
									"combinat"
								],
								[
									"COMELN\tInstalled Package",
									"COMELN"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"config\tInstalled Package",
									"config"
								],
								[
									"confintr\tInstalled Package",
									"confintr"
								],
								[
									"corrplot\tInstalled Package",
									"corrplot"
								],
								[
									"cowplot\tInstalled Package",
									"cowplot"
								],
								[
									"CPAT\tInstalled Package",
									"CPAT"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"credentials\tInstalled Package",
									"credentials"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"cyclocomp\tInstalled Package",
									"cyclocomp"
								],
								[
									"dendextend\tInstalled Package",
									"dendextend"
								],
								[
									"Deriv\tInstalled Package",
									"Deriv"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"deSolve\tInstalled Package",
									"deSolve"
								],
								[
									"devtools\tInstalled Package",
									"devtools"
								],
								[
									"dfdr\tInstalled Package",
									"dfdr"
								],
								[
									"dfoptim\tInstalled Package",
									"dfoptim"
								],
								[
									"DiagrammeR\tInstalled Package",
									"DiagrammeR"
								],
								[
									"DiagrammeRsvg\tInstalled Package",
									"DiagrammeRsvg"
								],
								[
									"differential\tInstalled Package",
									"differential"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dlstats\tInstalled Package",
									"dlstats"
								],
								[
									"doParallel\tInstalled Package",
									"doParallel"
								],
								[
									"downlit\tInstalled Package",
									"downlit"
								],
								[
									"downloader\tInstalled Package",
									"downloader"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"drc\tInstalled Package",
									"drc"
								],
								[
									"dsa2a\tInstalled Package",
									"dsa2a"
								],
								[
									"dtw\tInstalled Package",
									"dtw"
								],
								[
									"dtwclust\tInstalled Package",
									"dtwclust"
								],
								[
									"dynamicTreeCut\tInstalled Package",
									"dynamicTreeCut"
								],
								[
									"ellipse\tInstalled Package",
									"ellipse"
								],
								[
									"emmeans\tInstalled Package",
									"emmeans"
								],
								[
									"entab\tInstalled Package",
									"entab"
								],
								[
									"estimability\tInstalled Package",
									"estimability"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"factoextra\tInstalled Package",
									"factoextra"
								],
								[
									"FactoMineR\tInstalled Package",
									"FactoMineR"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastcluster\tInstalled Package",
									"fastcluster"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"ff\tInstalled Package",
									"ff"
								],
								[
									"filelock\tInstalled Package",
									"filelock"
								],
								[
									"flashClust\tInstalled Package",
									"flashClust"
								],
								[
									"flexclust\tInstalled Package",
									"flexclust"
								],
								[
									"flexdashboard\tInstalled Package",
									"flexdashboard"
								],
								[
									"fontawesome\tInstalled Package",
									"fontawesome"
								],
								[
									"forcats\tInstalled Package",
									"forcats"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"future\tInstalled Package",
									"future"
								],
								[
									"future.apply\tInstalled Package",
									"future.apply"
								],
								[
									"gapminder\tInstalled Package",
									"gapminder"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"gert\tInstalled Package",
									"gert"
								],
								[
									"gg3D\tInstalled Package",
									"gg3D"
								],
								[
									"gganimate\tInstalled Package",
									"gganimate"
								],
								[
									"ggdendro\tInstalled Package",
									"ggdendro"
								],
								[
									"ggfortify\tInstalled Package",
									"ggfortify"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"ggpmisc\tInstalled Package",
									"ggpmisc"
								],
								[
									"ggpp\tInstalled Package",
									"ggpp"
								],
								[
									"ggpubr\tInstalled Package",
									"ggpubr"
								],
								[
									"ggrepel\tInstalled Package",
									"ggrepel"
								],
								[
									"ggsci\tInstalled Package",
									"ggsci"
								],
								[
									"ggsignif\tInstalled Package",
									"ggsignif"
								],
								[
									"gifski\tInstalled Package",
									"gifski"
								],
								[
									"glmnet\tInstalled Package",
									"glmnet"
								],
								[
									"globals\tInstalled Package",
									"globals"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"gt\tInstalled Package",
									"gt"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"gtools\tInstalled Package",
									"gtools"
								],
								[
									"hardhat\tInstalled Package",
									"hardhat"
								],
								[
									"haven\tInstalled Package",
									"haven"
								],
								[
									"HDclassif\tInstalled Package",
									"HDclassif"
								],
								[
									"here\tInstalled Package",
									"here"
								],
								[
									"highcharter\tInstalled Package",
									"highcharter"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"hunspell\tInstalled Package",
									"hunspell"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"imager\tInstalled Package",
									"imager"
								],
								[
									"inline\tInstalled Package",
									"inline"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"jose\tInstalled Package",
									"jose"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"juicyjuice\tInstalled Package",
									"juicyjuice"
								],
								[
									"kableExtra\tInstalled Package",
									"kableExtra"
								],
								[
									"katex\tInstalled Package",
									"katex"
								],
								[
									"keras\tInstalled Package",
									"keras"
								],
								[
									"keyring\tInstalled Package",
									"keyring"
								],
								[
									"klaR\tInstalled Package",
									"klaR"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"labelled\tInstalled Package",
									"labelled"
								],
								[
									"languageserver\tInstalled Package",
									"languageserver"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lbfgs\tInstalled Package",
									"lbfgs"
								],
								[
									"lbfgsb3c\tInstalled Package",
									"lbfgsb3c"
								],
								[
									"leaps\tInstalled Package",
									"leaps"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"lintr\tInstalled Package",
									"lintr"
								],
								[
									"lme4\tInstalled Package",
									"lme4"
								],
								[
									"lmodel2\tInstalled Package",
									"lmodel2"
								],
								[
									"lobstr\tInstalled Package",
									"lobstr"
								],
								[
									"luajr\tInstalled Package",
									"luajr"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"marqLevAlg\tInstalled Package",
									"marqLevAlg"
								],
								[
									"MatrixModels\tInstalled Package",
									"MatrixModels"
								],
								[
									"microbenchmark\tInstalled Package",
									"microbenchmark"
								],
								[
									"miniUI\tInstalled Package",
									"miniUI"
								],
								[
									"minpack.lm\tInstalled Package",
									"minpack.lm"
								],
								[
									"minqa\tInstalled Package",
									"minqa"
								],
								[
									"mlr\tInstalled Package",
									"mlr"
								],
								[
									"modeltools\tInstalled Package",
									"modeltools"
								],
								[
									"MTT\tInstalled Package",
									"MTT"
								],
								[
									"multcomp\tInstalled Package",
									"multcomp"
								],
								[
									"multcompView\tInstalled Package",
									"multcompView"
								],
								[
									"mvtnorm\tInstalled Package",
									"mvtnorm"
								],
								[
									"networkD3\tInstalled Package",
									"networkD3"
								],
								[
									"nleqslv\tInstalled Package",
									"nleqslv"
								],
								[
									"nloptr\tInstalled Package",
									"nloptr"
								],
								[
									"numbers\tInstalled Package",
									"numbers"
								],
								[
									"nvimcom\tInstalled Package",
									"nvimcom"
								],
								[
									"odin\tInstalled Package",
									"odin"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"openxlsx\tInstalled Package",
									"openxlsx"
								],
								[
									"optimx\tInstalled Package",
									"optimx"
								],
								[
									"orca\tInstalled Package",
									"orca"
								],
								[
									"packrat\tInstalled Package",
									"packrat"
								],
								[
									"parallelly\tInstalled Package",
									"parallelly"
								],
								[
									"parallelMap\tInstalled Package",
									"parallelMap"
								],
								[
									"ParamHelpers\tInstalled Package",
									"ParamHelpers"
								],
								[
									"paropt\tInstalled Package",
									"paropt"
								],
								[
									"parsedate\tInstalled Package",
									"parsedate"
								],
								[
									"patchwork\tInstalled Package",
									"patchwork"
								],
								[
									"pattern\tInstalled Package",
									"pattern"
								],
								[
									"pbkrtest\tInstalled Package",
									"pbkrtest"
								],
								[
									"pheatmap\tInstalled Package",
									"pheatmap"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgdown\tInstalled Package",
									"pkgdown"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"PKI\tInstalled Package",
									"PKI"
								],
								[
									"plantuml\tInstalled Package",
									"plantuml"
								],
								[
									"platereader\tInstalled Package",
									"platereader"
								],
								[
									"plotly\tInstalled Package",
									"plotly"
								],
								[
									"plotrix\tInstalled Package",
									"plotrix"
								],
								[
									"polynom\tInstalled Package",
									"polynom"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"profvis\tInstalled Package",
									"profvis"
								],
								[
									"pryr\tInstalled Package",
									"pryr"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"ptw\tInstalled Package",
									"ptw"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"pvclust\tInstalled Package",
									"pvclust"
								],
								[
									"quantreg\tInstalled Package",
									"quantreg"
								],
								[
									"quarto\tInstalled Package",
									"quarto"
								],
								[
									"questionr\tInstalled Package",
									"questionr"
								],
								[
									"R.cache\tInstalled Package",
									"R.cache"
								],
								[
									"R.methodsS3\tInstalled Package",
									"R.methodsS3"
								],
								[
									"R.oo\tInstalled Package",
									"R.oo"
								],
								[
									"R.utils\tInstalled Package",
									"R.utils"
								],
								[
									"ragg\tInstalled Package",
									"ragg"
								],
								[
									"rARPACK\tInstalled Package",
									"rARPACK"
								],
								[
									"rbibutils\tInstalled Package",
									"rbibutils"
								],
								[
									"rcmdcheck\tInstalled Package",
									"rcmdcheck"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppArmadillo\tInstalled Package",
									"RcppArmadillo"
								],
								[
									"RcppClock\tInstalled Package",
									"RcppClock"
								],
								[
									"RcppDE\tInstalled Package",
									"RcppDE"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"RcppEnsmallen\tInstalled Package",
									"RcppEnsmallen"
								],
								[
									"RcppParallel\tInstalled Package",
									"RcppParallel"
								],
								[
									"RcppThread\tInstalled Package",
									"RcppThread"
								],
								[
									"RcppTOML\tInstalled Package",
									"RcppTOML"
								],
								[
									"RcppXPtrUtils\tInstalled Package",
									"RcppXPtrUtils"
								],
								[
									"Rdpack\tInstalled Package",
									"Rdpack"
								],
								[
									"reactable\tInstalled Package",
									"reactable"
								],
								[
									"reactR\tInstalled Package",
									"reactR"
								],
								[
									"readbitmap\tInstalled Package",
									"readbitmap"
								],
								[
									"readr\tInstalled Package",
									"readr"
								],
								[
									"readxl\tInstalled Package",
									"readxl"
								],
								[
									"RefManageR\tInstalled Package",
									"RefManageR"
								],
								[
									"rematch\tInstalled Package",
									"rematch"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"renv\tInstalled Package",
									"renv"
								],
								[
									"reticulate\tInstalled Package",
									"reticulate"
								],
								[
									"rhub\tInstalled Package",
									"rhub"
								],
								[
									"ring\tInstalled Package",
									"ring"
								],
								[
									"RInside\tInstalled Package",
									"RInside"
								],
								[
									"rjson\tInstalled Package",
									"rjson"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rlist\tInstalled Package",
									"rlist"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"rootSolve\tInstalled Package",
									"rootSolve"
								],
								[
									"roxygen2\tInstalled Package",
									"roxygen2"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rsconnect\tInstalled Package",
									"rsconnect"
								],
								[
									"rstatix\tInstalled Package",
									"rstatix"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"rsvg\tInstalled Package",
									"rsvg"
								],
								[
									"rversions\tInstalled Package",
									"rversions"
								],
								[
									"rvest\tInstalled Package",
									"rvest"
								],
								[
									"Ryacas\tInstalled Package",
									"Ryacas"
								],
								[
									"sandwich\tInstalled Package",
									"sandwich"
								],
								[
									"sanitizers\tInstalled Package",
									"sanitizers"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"scatterplot3d\tInstalled Package",
									"scatterplot3d"
								],
								[
									"sensitivity\tInstalled Package",
									"sensitivity"
								],
								[
									"serial\tInstalled Package",
									"serial"
								],
								[
									"sessioninfo\tInstalled Package",
									"sessioninfo"
								],
								[
									"shape\tInstalled Package",
									"shape"
								],
								[
									"shinydashboard\tInstalled Package",
									"shinydashboard"
								],
								[
									"shinyjs\tInstalled Package",
									"shinyjs"
								],
								[
									"shinyWidgets\tInstalled Package",
									"shinyWidgets"
								],
								[
									"spelling\tInstalled Package",
									"spelling"
								],
								[
									"splus2R\tInstalled Package",
									"splus2R"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"styler\tInstalled Package",
									"styler"
								],
								[
									"subplex\tInstalled Package",
									"subplex"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"tensorflow\tInstalled Package",
									"tensorflow"
								],
								[
									"test\tInstalled Package",
									"test"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"tfautograph\tInstalled Package",
									"tfautograph"
								],
								[
									"tfdatasets\tInstalled Package",
									"tfdatasets"
								],
								[
									"tfruns\tInstalled Package",
									"tfruns"
								],
								[
									"TH.data\tInstalled Package",
									"TH.data"
								],
								[
									"thermosimfit\tInstalled Package",
									"thermosimfit"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyCpp\tInstalled Package",
									"tidyCpp"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tiff\tInstalled Package",
									"tiff"
								],
								[
									"timechange\tInstalled Package",
									"timechange"
								],
								[
									"tinytest\tInstalled Package",
									"tinytest"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tsf\tInstalled Package",
									"tsf"
								],
								[
									"tweenr\tInstalled Package",
									"tweenr"
								],
								[
									"tzdb\tInstalled Package",
									"tzdb"
								],
								[
									"ucminf\tInstalled Package",
									"ucminf"
								],
								[
									"unix\tInstalled Package",
									"unix"
								],
								[
									"urlchecker\tInstalled Package",
									"urlchecker"
								],
								[
									"usethis\tInstalled Package",
									"usethis"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"uuid\tInstalled Package",
									"uuid"
								],
								[
									"V8\tInstalled Package",
									"V8"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"visNetwork\tInstalled Package",
									"visNetwork"
								],
								[
									"VPdtw\tInstalled Package",
									"VPdtw"
								],
								[
									"vroom\tInstalled Package",
									"vroom"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"webshot\tInstalled Package",
									"webshot"
								],
								[
									"webshot2\tInstalled Package",
									"webshot2"
								],
								[
									"websocket\tInstalled Package",
									"websocket"
								],
								[
									"whisker\tInstalled Package",
									"whisker"
								],
								[
									"whoami\tInstalled Package",
									"whoami"
								],
								[
									"wiesbaden\tInstalled Package",
									"wiesbaden"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"xlsx\tInstalled Package",
									"xlsx"
								],
								[
									"xlsxjars\tInstalled Package",
									"xlsxjars"
								],
								[
									"xmlparsedata\tInstalled Package",
									"xmlparsedata"
								],
								[
									"xopen\tInstalled Package",
									"xopen"
								],
								[
									"xts\tInstalled Package",
									"xts"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"yardstick\tInstalled Package",
									"yardstick"
								],
								[
									"zeallot\tInstalled Package",
									"zeallot"
								],
								[
									"zip\tInstalled Package",
									"zip"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"fontawesome\tInstalled Package",
									"fontawesome"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"jquerylib\tInstalled Package",
									"jquerylib"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"abind\tInstalled Package",
									"abind"
								],
								[
									"acepack\tInstalled Package",
									"acepack"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"assertthat\tInstalled Package",
									"assertthat"
								],
								[
									"backports\tInstalled Package",
									"backports"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bench\tInstalled Package",
									"bench"
								],
								[
									"BH\tInstalled Package",
									"BH"
								],
								[
									"bit\tInstalled Package",
									"bit"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"bitops\tInstalled Package",
									"bitops"
								],
								[
									"blob\tInstalled Package",
									"blob"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"caret\tInstalled Package",
									"caret"
								],
								[
									"caTools\tInstalled Package",
									"caTools"
								],
								[
									"cba\tInstalled Package",
									"cba"
								],
								[
									"checkmate\tInstalled Package",
									"checkmate"
								],
								[
									"chron\tInstalled Package",
									"chron"
								],
								[
									"classInt\tInstalled Package",
									"classInt"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"cliapp\tInstalled Package",
									"cliapp"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"conquer\tInstalled Package",
									"conquer"
								],
								[
									"covr\tInstalled Package",
									"covr"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"crosstalk\tInstalled Package",
									"crosstalk"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"CVST\tInstalled Package",
									"CVST"
								],
								[
									"data.table\tInstalled Package",
									"data.table"
								],
								[
									"DBI\tInstalled Package",
									"DBI"
								],
								[
									"DBItest\tInstalled Package",
									"DBItest"
								],
								[
									"dbplyr\tInstalled Package",
									"dbplyr"
								],
								[
									"ddalpha\tInstalled Package",
									"ddalpha"
								],
								[
									"decor\tInstalled Package",
									"decor"
								],
								[
									"deldir\tInstalled Package",
									"deldir"
								],
								[
									"DEoptimR\tInstalled Package",
									"DEoptimR"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"diffobj\tInstalled Package",
									"diffobj"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dimRed\tInstalled Package",
									"dimRed"
								],
								[
									"doMC\tInstalled Package",
									"doMC"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"DRR\tInstalled Package",
									"DRR"
								],
								[
									"DT\tInstalled Package",
									"DT"
								],
								[
									"dygraphs\tInstalled Package",
									"dygraphs"
								],
								[
									"e1071\tInstalled Package",
									"e1071"
								],
								[
									"earth\tInstalled Package",
									"earth"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastICA\tInstalled Package",
									"fastICA"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"fastmatch\tInstalled Package",
									"fastmatch"
								],
								[
									"filehash\tInstalled Package",
									"filehash"
								],
								[
									"FNN\tInstalled Package",
									"FNN"
								],
								[
									"fontBitstreamVera\tInstalled Package",
									"fontBitstreamVera"
								],
								[
									"fontLiberation\tInstalled Package",
									"fontLiberation"
								],
								[
									"fontquiver\tInstalled Package",
									"fontquiver"
								],
								[
									"foreach\tInstalled Package",
									"foreach"
								],
								[
									"Formula\tInstalled Package",
									"Formula"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"fts\tInstalled Package",
									"fts"
								],
								[
									"furrr\tInstalled Package",
									"furrr"
								],
								[
									"future\tInstalled Package",
									"future"
								],
								[
									"future.apply\tInstalled Package",
									"future.apply"
								],
								[
									"gdata\tInstalled Package",
									"gdata"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"geometry\tInstalled Package",
									"geometry"
								],
								[
									"geosphere\tInstalled Package",
									"geosphere"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"gh\tInstalled Package",
									"gh"
								],
								[
									"gitcreds\tInstalled Package",
									"gitcreds"
								],
								[
									"globals\tInstalled Package",
									"globals"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"goftest\tInstalled Package",
									"goftest"
								],
								[
									"gower\tInstalled Package",
									"gower"
								],
								[
									"gplots\tInstalled Package",
									"gplots"
								],
								[
									"gridExtra\tInstalled Package",
									"gridExtra"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"gtools\tInstalled Package",
									"gtools"
								],
								[
									"hexbin\tInstalled Package",
									"hexbin"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"Hmisc\tInstalled Package",
									"Hmisc"
								],
								[
									"hms\tInstalled Package",
									"hms"
								],
								[
									"htmlTable\tInstalled Package",
									"htmlTable"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"httr\tInstalled Package",
									"httr"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"ini\tInstalled Package",
									"ini"
								],
								[
									"interp\tInstalled Package",
									"interp"
								],
								[
									"ipred\tInstalled Package",
									"ipred"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"iterators\tInstalled Package",
									"iterators"
								],
								[
									"jpeg\tInstalled Package",
									"jpeg"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"kernlab\tInstalled Package",
									"kernlab"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"ks\tInstalled Package",
									"ks"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"latticeExtra\tInstalled Package",
									"latticeExtra"
								],
								[
									"lava\tInstalled Package",
									"lava"
								],
								[
									"lazyeval\tInstalled Package",
									"lazyeval"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"linprog\tInstalled Package",
									"linprog"
								],
								[
									"listenv\tInstalled Package",
									"listenv"
								],
								[
									"littler\tInstalled Package",
									"littler"
								],
								[
									"lme4\tInstalled Package",
									"lme4"
								],
								[
									"lobstr\tInstalled Package",
									"lobstr"
								],
								[
									"logcondens\tInstalled Package",
									"logcondens"
								],
								[
									"lpSolve\tInstalled Package",
									"lpSolve"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"lwgeom\tInstalled Package",
									"lwgeom"
								],
								[
									"magic\tInstalled Package",
									"magic"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"mapproj\tInstalled Package",
									"mapproj"
								],
								[
									"maps\tInstalled Package",
									"maps"
								],
								[
									"maptools\tInstalled Package",
									"maptools"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"MatrixModels\tInstalled Package",
									"MatrixModels"
								],
								[
									"matrixStats\tInstalled Package",
									"matrixStats"
								],
								[
									"mclust\tInstalled Package",
									"mclust"
								],
								[
									"mda\tInstalled Package",
									"mda"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"mets\tInstalled Package",
									"mets"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"minqa\tInstalled Package",
									"minqa"
								],
								[
									"misc3d\tInstalled Package",
									"misc3d"
								],
								[
									"mlbench\tInstalled Package",
									"mlbench"
								],
								[
									"MLmetrics\tInstalled Package",
									"MLmetrics"
								],
								[
									"mockery\tInstalled Package",
									"mockery"
								],
								[
									"mockr\tInstalled Package",
									"mockr"
								],
								[
									"modeldata\tInstalled Package",
									"modeldata"
								],
								[
									"ModelMetrics\tInstalled Package",
									"ModelMetrics"
								],
								[
									"multcomp\tInstalled Package",
									"multcomp"
								],
								[
									"multicool\tInstalled Package",
									"multicool"
								],
								[
									"munsell\tInstalled Package",
									"munsell"
								],
								[
									"mvtnorm\tInstalled Package",
									"mvtnorm"
								],
								[
									"nloptr\tInstalled Package",
									"nloptr"
								],
								[
									"numDeriv\tInstalled Package",
									"numDeriv"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"palmerpenguins\tInstalled Package",
									"palmerpenguins"
								],
								[
									"parallelly\tInstalled Package",
									"parallelly"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgconfig\tInstalled Package",
									"pkgconfig"
								],
								[
									"pkgKitten\tInstalled Package",
									"pkgKitten"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"plogr\tInstalled Package",
									"plogr"
								],
								[
									"plot3D\tInstalled Package",
									"plot3D"
								],
								[
									"plotmo\tInstalled Package",
									"plotmo"
								],
								[
									"plotrix\tInstalled Package",
									"plotrix"
								],
								[
									"pls\tInstalled Package",
									"pls"
								],
								[
									"plyr\tInstalled Package",
									"plyr"
								],
								[
									"png\tInstalled Package",
									"png"
								],
								[
									"polyclip\tInstalled Package",
									"polyclip"
								],
								[
									"pracma\tInstalled Package",
									"pracma"
								],
								[
									"praise\tInstalled Package",
									"praise"
								],
								[
									"prettycode\tInstalled Package",
									"prettycode"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"pROC\tInstalled Package",
									"pROC"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"prodlim\tInstalled Package",
									"prodlim"
								],
								[
									"profmem\tInstalled Package",
									"profmem"
								],
								[
									"progress\tInstalled Package",
									"progress"
								],
								[
									"progressr\tInstalled Package",
									"progressr"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"proxy\tInstalled Package",
									"proxy"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"quadprog\tInstalled Package",
									"quadprog"
								],
								[
									"quantmod\tInstalled Package",
									"quantmod"
								],
								[
									"quantreg\tInstalled Package",
									"quantreg"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"ragg\tInstalled Package",
									"ragg"
								],
								[
									"RANN\tInstalled Package",
									"RANN"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"raster\tInstalled Package",
									"raster"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppArmadillo\tInstalled Package",
									"RcppArmadillo"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"RcppProgress\tInstalled Package",
									"RcppProgress"
								],
								[
									"RcppRoll\tInstalled Package",
									"RcppRoll"
								],
								[
									"recipes\tInstalled Package",
									"recipes"
								],
								[
									"rematch2\tInstalled Package",
									"rematch2"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"reshape2\tInstalled Package",
									"reshape2"
								],
								[
									"rex\tInstalled Package",
									"rex"
								],
								[
									"rgdal\tInstalled Package",
									"rgdal"
								],
								[
									"rgl\tInstalled Package",
									"rgl"
								],
								[
									"rJava\tInstalled Package",
									"rJava"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"RMySQL\tInstalled Package",
									"RMySQL"
								],
								[
									"robustbase\tInstalled Package",
									"robustbase"
								],
								[
									"ROCR\tInstalled Package",
									"ROCR"
								],
								[
									"RPostgreSQL\tInstalled Package",
									"RPostgreSQL"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rsample\tInstalled Package",
									"rsample"
								],
								[
									"RSpectra\tInstalled Package",
									"RSpectra"
								],
								[
									"RSQLite\tInstalled Package",
									"RSQLite"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"RUnit\tInstalled Package",
									"RUnit"
								],
								[
									"s2\tInstalled Package",
									"s2"
								],
								[
									"sandwich\tInstalled Package",
									"sandwich"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"selectr\tInstalled Package",
									"selectr"
								],
								[
									"setRNG\tInstalled Package",
									"setRNG"
								],
								[
									"sf\tInstalled Package",
									"sf"
								],
								[
									"sfsmisc\tInstalled Package",
									"sfsmisc"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"slider\tInstalled Package",
									"slider"
								],
								[
									"sodium\tInstalled Package",
									"sodium"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"sp\tInstalled Package",
									"sp"
								],
								[
									"SparseM\tInstalled Package",
									"SparseM"
								],
								[
									"spatstat\tInstalled Package",
									"spatstat"
								],
								[
									"spatstat.core\tInstalled Package",
									"spatstat.core"
								],
								[
									"spatstat.data\tInstalled Package",
									"spatstat.data"
								],
								[
									"spatstat.geom\tInstalled Package",
									"spatstat.geom"
								],
								[
									"spatstat.linnet\tInstalled Package",
									"spatstat.linnet"
								],
								[
									"spatstat.sparse\tInstalled Package",
									"spatstat.sparse"
								],
								[
									"spatstat.utils\tInstalled Package",
									"spatstat.utils"
								],
								[
									"SQUAREM\tInstalled Package",
									"SQUAREM"
								],
								[
									"statmod\tInstalled Package",
									"statmod"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"svglite\tInstalled Package",
									"svglite"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"systemfonts\tInstalled Package",
									"systemfonts"
								],
								[
									"TeachingDemos\tInstalled Package",
									"TeachingDemos"
								],
								[
									"tensor\tInstalled Package",
									"tensor"
								],
								[
									"terra\tInstalled Package",
									"terra"
								],
								[
									"testit\tInstalled Package",
									"testit"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"textshaping\tInstalled Package",
									"textshaping"
								],
								[
									"TH.data\tInstalled Package",
									"TH.data"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tikzDevice\tInstalled Package",
									"tikzDevice"
								],
								[
									"timeDate\tInstalled Package",
									"timeDate"
								],
								[
									"timereg\tInstalled Package",
									"timereg"
								],
								[
									"timeSeries\tInstalled Package",
									"timeSeries"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tseries\tInstalled Package",
									"tseries"
								],
								[
									"TTR\tInstalled Package",
									"TTR"
								],
								[
									"units\tInstalled Package",
									"units"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"vdiffr\tInstalled Package",
									"vdiffr"
								],
								[
									"viridis\tInstalled Package",
									"viridis"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"warp\tInstalled Package",
									"warp"
								],
								[
									"webfakes\tInstalled Package",
									"webfakes"
								],
								[
									"webutils\tInstalled Package",
									"webutils"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"wk\tInstalled Package",
									"wk"
								],
								[
									"wkutils\tInstalled Package",
									"wkutils"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"XML\tInstalled Package",
									"XML"
								],
								[
									"xml2\tInstalled Package",
									"xml2"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"xts\tInstalled Package",
									"xts"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								],
								[
									"base\tInstalled Package",
									"base"
								],
								[
									"boot\tInstalled Package",
									"boot"
								],
								[
									"class\tInstalled Package",
									"class"
								],
								[
									"cluster\tInstalled Package",
									"cluster"
								],
								[
									"codetools\tInstalled Package",
									"codetools"
								],
								[
									"compiler\tInstalled Package",
									"compiler"
								],
								[
									"datasets\tInstalled Package",
									"datasets"
								],
								[
									"foreign\tInstalled Package",
									"foreign"
								],
								[
									"graphics\tInstalled Package",
									"graphics"
								],
								[
									"grDevices\tInstalled Package",
									"grDevices"
								],
								[
									"grid\tInstalled Package",
									"grid"
								],
								[
									"KernSmooth\tInstalled Package",
									"KernSmooth"
								],
								[
									"lattice\tInstalled Package",
									"lattice"
								],
								[
									"MASS\tInstalled Package",
									"MASS"
								],
								[
									"Matrix\tInstalled Package",
									"Matrix"
								],
								[
									"methods\tInstalled Package",
									"methods"
								],
								[
									"mgcv\tInstalled Package",
									"mgcv"
								],
								[
									"nlme\tInstalled Package",
									"nlme"
								],
								[
									"nnet\tInstalled Package",
									"nnet"
								],
								[
									"parallel\tInstalled Package",
									"parallel"
								],
								[
									"rpart\tInstalled Package",
									"rpart"
								],
								[
									"spatial\tInstalled Package",
									"spatial"
								],
								[
									"splines\tInstalled Package",
									"splines"
								],
								[
									"stats\tInstalled Package",
									"stats"
								],
								[
									"stats4\tInstalled Package",
									"stats4"
								],
								[
									"survival\tInstalled Package",
									"survival"
								],
								[
									"tcltk\tInstalled Package",
									"tcltk"
								],
								[
									"tools\tInstalled Package",
									"tools"
								],
								[
									"utils\tInstalled Package",
									"utils"
								]
							],
							"R-Box.loaded_packages":
							[
								"grDevices",
								"stats",
								"graphics",
								"methods",
								"utils",
								"base"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/R/R.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 900.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "tsf/R/pso.R",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4296,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"R-Box.completions":
							[
								[
									".radialGradientPattern\t{grDevices}",
									".radialGradientPattern"
								],
								[
									"gray.colors\t{grDevices}",
									"gray.colors"
								],
								[
									"rainbow\t{grDevices}",
									"rainbow"
								],
								[
									"check.options\t{grDevices}",
									"check.options"
								],
								[
									"hcl.pals\t{grDevices}",
									"hcl.pals"
								],
								[
									"glyphFontList\t{grDevices}",
									"glyphFontList"
								],
								[
									"embedFonts\t{grDevices}",
									"embedFonts"
								],
								[
									"cairo_ps\t{grDevices}",
									"cairo_ps"
								],
								[
									"colorspaces\t{grDevices}",
									"colorspaces"
								],
								[
									"cairo_pdf\t{grDevices}",
									"cairo_pdf"
								],
								[
									"getGraphicsEventEnv\t{grDevices}",
									"getGraphicsEventEnv"
								],
								[
									".axisPars\t{grDevices}",
									".axisPars"
								],
								[
									"bmp\t{grDevices}",
									"bmp"
								],
								[
									".devUp\t{grDevices}",
									".devUp"
								],
								[
									".mask\t{grDevices}",
									".mask"
								],
								[
									"graphics.off\t{grDevices}",
									"graphics.off"
								],
								[
									"densCols\t{grDevices}",
									"densCols"
								],
								[
									"savePlot\t{grDevices}",
									"savePlot"
								],
								[
									"X11Font\t{grDevices}",
									"X11Font"
								],
								[
									"grey\t{grDevices}",
									"grey"
								],
								[
									".setMask\t{grDevices}",
									".setMask"
								],
								[
									"deviceIsInteractive\t{grDevices}",
									"deviceIsInteractive"
								],
								[
									".opIndex\t{grDevices}",
									".opIndex"
								],
								[
									"quartz.save\t{grDevices}",
									"quartz.save"
								],
								[
									"quartz\t{grDevices}",
									"quartz"
								],
								[
									"xfig\t{grDevices}",
									"xfig"
								],
								[
									"dev.capabilities\t{grDevices}",
									"dev.capabilities"
								],
								[
									"extendrange\t{grDevices}",
									"extendrange"
								],
								[
									"nclass.Sturges\t{grDevices}",
									"nclass.Sturges"
								],
								[
									".defineGroup\t{grDevices}",
									".defineGroup"
								],
								[
									".useGroup\t{grDevices}",
									".useGroup"
								],
								[
									"colors\t{grDevices}",
									"colors"
								],
								[
									"pictex\t{grDevices}",
									"pictex"
								],
								[
									".ruleIndex\t{grDevices}",
									".ruleIndex"
								],
								[
									"dev.set\t{grDevices}",
									"dev.set"
								],
								[
									"trans3d\t{grDevices}",
									"trans3d"
								],
								[
									"recordPlot\t{grDevices}",
									"recordPlot"
								],
								[
									"glyphWidthLeft\t{grDevices}",
									"glyphWidthLeft"
								],
								[
									"hsv\t{grDevices}",
									"hsv"
								],
								[
									"bitmap\t{grDevices}",
									"bitmap"
								],
								[
									"embedGlyphs\t{grDevices}",
									"embedGlyphs"
								],
								[
									"hcl\t{grDevices}",
									"hcl"
								],
								[
									"postscriptFonts\t{grDevices}",
									"postscriptFonts"
								],
								[
									"tiff\t{grDevices}",
									"tiff"
								],
								[
									"X11\t{grDevices}",
									"X11"
								],
								[
									"Hershey\t{grDevices}",
									"Hershey"
								],
								[
									"palette.colors\t{grDevices}",
									"palette.colors"
								],
								[
									"glyphHeight\t{grDevices}",
									"glyphHeight"
								],
								[
									"is.raster\t{grDevices}",
									"is.raster"
								],
								[
									"colorConverter\t{grDevices}",
									"colorConverter"
								],
								[
									"glyphFont\t{grDevices}",
									"glyphFont"
								],
								[
									"dev2bitmap\t{grDevices}",
									"dev2bitmap"
								],
								[
									"dev.next\t{grDevices}",
									"dev.next"
								],
								[
									"dev.interactive\t{grDevices}",
									"dev.interactive"
								],
								[
									"grey.colors\t{grDevices}",
									"grey.colors"
								],
								[
									"dev.copy2pdf\t{grDevices}",
									"dev.copy2pdf"
								],
								[
									"terrain.colors\t{grDevices}",
									"terrain.colors"
								],
								[
									"grSoftVersion\t{grDevices}",
									"grSoftVersion"
								],
								[
									"quartz.options\t{grDevices}",
									"quartz.options"
								],
								[
									".tilingPattern\t{grDevices}",
									".tilingPattern"
								],
								[
									"hcl.colors\t{grDevices}",
									"hcl.colors"
								],
								[
									"glyphAnchor\t{grDevices}",
									"glyphAnchor"
								],
								[
									"nclass.scott\t{grDevices}",
									"nclass.scott"
								],
								[
									"dev.hold\t{grDevices}",
									"dev.hold"
								],
								[
									"glyphWidth\t{grDevices}",
									"glyphWidth"
								],
								[
									"devAskNewPage\t{grDevices}",
									"devAskNewPage"
								],
								[
									"x11\t{grDevices}",
									"x11"
								],
								[
									"as.raster\t{grDevices}",
									"as.raster"
								],
								[
									".clipPath\t{grDevices}",
									".clipPath"
								],
								[
									"rgb2hsv\t{grDevices}",
									"rgb2hsv"
								],
								[
									"setGraphicsEventEnv\t{grDevices}",
									"setGraphicsEventEnv"
								],
								[
									"heat.colors\t{grDevices}",
									"heat.colors"
								],
								[
									"topo.colors\t{grDevices}",
									"topo.colors"
								],
								[
									"blues9\t{grDevices}",
									"blues9"
								],
								[
									"recordGraphics\t{grDevices}",
									"recordGraphics"
								],
								[
									"boxplot.stats\t{grDevices}",
									"boxplot.stats"
								],
								[
									"svg\t{grDevices}",
									"svg"
								],
								[
									"dev.list\t{grDevices}",
									"dev.list"
								],
								[
									"colours\t{grDevices}",
									"colours"
								],
								[
									"convertColor\t{grDevices}",
									"convertColor"
								],
								[
									"dev.copy\t{grDevices}",
									"dev.copy"
								],
								[
									"chull\t{grDevices}",
									"chull"
								],
								[
									"xy.coords\t{grDevices}",
									"xy.coords"
								],
								[
									"dev.capture\t{grDevices}",
									"dev.capture"
								],
								[
									"dev.cur\t{grDevices}",
									"dev.cur"
								],
								[
									"glyphJust\t{grDevices}",
									"glyphJust"
								],
								[
									"setEPS\t{grDevices}",
									"setEPS"
								],
								[
									"cm\t{grDevices}",
									"cm"
								],
								[
									"dev.flush\t{grDevices}",
									"dev.flush"
								],
								[
									"glyphHeightBottom\t{grDevices}",
									"glyphHeightBottom"
								],
								[
									"dev.size\t{grDevices}",
									"dev.size"
								],
								[
									"setPS\t{grDevices}",
									"setPS"
								],
								[
									"cm.colors\t{grDevices}",
									"cm.colors"
								],
								[
									"dev.off\t{grDevices}",
									"dev.off"
								],
								[
									"pdf\t{grDevices}",
									"pdf"
								],
								[
									"gray\t{grDevices}",
									"gray"
								],
								[
									"nclass.FD\t{grDevices}",
									"nclass.FD"
								],
								[
									"ps.options\t{grDevices}",
									"ps.options"
								],
								[
									"as.graphicsAnnot\t{grDevices}",
									"as.graphicsAnnot"
								],
								[
									".setPattern\t{grDevices}",
									".setPattern"
								],
								[
									"X11.options\t{grDevices}",
									"X11.options"
								],
								[
									"palette\t{grDevices}",
									"palette"
								],
								[
									"replayPlot\t{grDevices}",
									"replayPlot"
								],
								[
									"pdfFonts\t{grDevices}",
									"pdfFonts"
								],
								[
									"cairoSymbolFont\t{grDevices}",
									"cairoSymbolFont"
								],
								[
									"dev.new\t{grDevices}",
									"dev.new"
								],
								[
									"pdf.options\t{grDevices}",
									"pdf.options"
								],
								[
									"X11Fonts\t{grDevices}",
									"X11Fonts"
								],
								[
									"axisTicks\t{grDevices}",
									"axisTicks"
								],
								[
									"make.rgb\t{grDevices}",
									"make.rgb"
								],
								[
									".setClipPath\t{grDevices}",
									".setClipPath"
								],
								[
									"n2mfrow\t{grDevices}",
									"n2mfrow"
								],
								[
									"rgb\t{grDevices}",
									"rgb"
								],
								[
									"quartzFont\t{grDevices}",
									"quartzFont"
								],
								[
									"getGraphicsEvent\t{grDevices}",
									"getGraphicsEvent"
								],
								[
									"xyz.coords\t{grDevices}",
									"xyz.coords"
								],
								[
									"xyTable\t{grDevices}",
									"xyTable"
								],
								[
									"CIDFont\t{grDevices}",
									"CIDFont"
								],
								[
									"adjustcolor\t{grDevices}",
									"adjustcolor"
								],
								[
									"col2rgb\t{grDevices}",
									"col2rgb"
								],
								[
									"dev.prev\t{grDevices}",
									"dev.prev"
								],
								[
									"quartzFonts\t{grDevices}",
									"quartzFonts"
								],
								[
									"png\t{grDevices}",
									"png"
								],
								[
									"colorRampPalette\t{grDevices}",
									"colorRampPalette"
								],
								[
									"palette.pals\t{grDevices}",
									"palette.pals"
								],
								[
									"glyphInfo\t{grDevices}",
									"glyphInfo"
								],
								[
									".linearGradientPattern\t{grDevices}",
									".linearGradientPattern"
								],
								[
									"jpeg\t{grDevices}",
									"jpeg"
								],
								[
									"colorRamp\t{grDevices}",
									"colorRamp"
								],
								[
									"setGraphicsEventHandlers\t{grDevices}",
									"setGraphicsEventHandlers"
								],
								[
									"dev.control\t{grDevices}",
									"dev.control"
								],
								[
									"dev.print\t{grDevices}",
									"dev.print"
								],
								[
									"dev.copy2eps\t{grDevices}",
									"dev.copy2eps"
								],
								[
									"Type1Font\t{grDevices}",
									"Type1Font"
								],
								[
									"contourLines\t{grDevices}",
									"contourLines"
								],
								[
									"postscript\t{grDevices}",
									"postscript"
								],
								[
									"asOneSidedFormula\t{stats}",
									"asOneSidedFormula"
								],
								[
									"r2dtable\t{stats}",
									"r2dtable"
								],
								[
									"drop.terms\t{stats}",
									"drop.terms"
								],
								[
									"confint.lm\t{stats}",
									"confint.lm"
								],
								[
									"is.mts\t{stats}",
									"is.mts"
								],
								[
									"nlminb\t{stats}",
									"nlminb"
								],
								[
									"alias\t{stats}",
									"alias"
								],
								[
									"gaussian\t{stats}",
									"gaussian"
								],
								[
									"profile\t{stats}",
									"profile"
								],
								[
									"ls.diag\t{stats}",
									"ls.diag"
								],
								[
									"mahalanobis\t{stats}",
									"mahalanobis"
								],
								[
									"rmultinom\t{stats}",
									"rmultinom"
								],
								[
									"dpois\t{stats}",
									"dpois"
								],
								[
									"numericDeriv\t{stats}",
									"numericDeriv"
								],
								[
									"makepredictcall\t{stats}",
									"makepredictcall"
								],
								[
									"qlogis\t{stats}",
									"qlogis"
								],
								[
									"loadings\t{stats}",
									"loadings"
								],
								[
									"dlogis\t{stats}",
									"dlogis"
								],
								[
									"nlm\t{stats}",
									"nlm"
								],
								[
									"residuals.glm\t{stats}",
									"residuals.glm"
								],
								[
									"qcauchy\t{stats}",
									"qcauchy"
								],
								[
									"nextn\t{stats}",
									"nextn"
								],
								[
									"nls\t{stats}",
									"nls"
								],
								[
									"plot.stepfun\t{stats}",
									"plot.stepfun"
								],
								[
									"arima0.diag\t{stats}",
									"arima0.diag"
								],
								[
									"dummy.coef\t{stats}",
									"dummy.coef"
								],
								[
									"ftable\t{stats}",
									"ftable"
								],
								[
									"as.formula\t{stats}",
									"as.formula"
								],
								[
									"pairwise.wilcox.test\t{stats}",
									"pairwise.wilcox.test"
								],
								[
									"time\t{stats}",
									"time"
								],
								[
									"embed\t{stats}",
									"embed"
								],
								[
									"mantelhaen.test\t{stats}",
									"mantelhaen.test"
								],
								[
									"dwilcox\t{stats}",
									"dwilcox"
								],
								[
									"ar\t{stats}",
									"ar"
								],
								[
									"oneway.test\t{stats}",
									"oneway.test"
								],
								[
									"fligner.test\t{stats}",
									"fligner.test"
								],
								[
									"bw.bcv\t{stats}",
									"bw.bcv"
								],
								[
									"predict.glm\t{stats}",
									"predict.glm"
								],
								[
									"rWishart\t{stats}",
									"rWishart"
								],
								[
									"logLik\t{stats}",
									"logLik"
								],
								[
									"confint.default\t{stats}",
									"confint.default"
								],
								[
									"AIC\t{stats}",
									"AIC"
								],
								[
									"rlogis\t{stats}",
									"rlogis"
								],
								[
									"bw.ucv\t{stats}",
									"bw.ucv"
								],
								[
									"arima\t{stats}",
									"arima"
								],
								[
									"plot.ts\t{stats}",
									"plot.ts"
								],
								[
									"tsp\t{stats}",
									"tsp"
								],
								[
									"model.extract\t{stats}",
									"model.extract"
								],
								[
									"stat.anova\t{stats}",
									"stat.anova"
								],
								[
									"update.formula\t{stats}",
									"update.formula"
								],
								[
									"qbeta\t{stats}",
									"qbeta"
								],
								[
									"bw.SJ\t{stats}",
									"bw.SJ"
								],
								[
									"factanal\t{stats}",
									"factanal"
								],
								[
									"drop.scope\t{stats}",
									"drop.scope"
								],
								[
									"summary.aov\t{stats}",
									"summary.aov"
								],
								[
									"optimHess\t{stats}",
									"optimHess"
								],
								[
									".lm.fit\t{stats}",
									".lm.fit"
								],
								[
									"cooks.distance\t{stats}",
									"cooks.distance"
								],
								[
									"dnorm\t{stats}",
									"dnorm"
								],
								[
									"psmirnov\t{stats}",
									"psmirnov"
								],
								[
									"extractAIC\t{stats}",
									"extractAIC"
								],
								[
									"qbirthday\t{stats}",
									"qbirthday"
								],
								[
									"C\t{stats}",
									"C"
								],
								[
									"sortedXyData\t{stats}",
									"sortedXyData"
								],
								[
									"D\t{stats}",
									"D"
								],
								[
									"lowess\t{stats}",
									"lowess"
								],
								[
									"varimax\t{stats}",
									"varimax"
								],
								[
									"optimize\t{stats}",
									"optimize"
								],
								[
									"manova\t{stats}",
									"manova"
								],
								[
									"deviance\t{stats}",
									"deviance"
								],
								[
									"optim\t{stats}",
									"optim"
								],
								[
									"lag.plot\t{stats}",
									"lag.plot"
								],
								[
									"constrOptim\t{stats}",
									"constrOptim"
								],
								[
									"splinefunH\t{stats}",
									"splinefunH"
								],
								[
									"reformulate\t{stats}",
									"reformulate"
								],
								[
									"pacf\t{stats}",
									"pacf"
								],
								[
									"mcnemar.test\t{stats}",
									"mcnemar.test"
								],
								[
									"df\t{stats}",
									"df"
								],
								[
									"tsSmooth\t{stats}",
									"tsSmooth"
								],
								[
									"make.link\t{stats}",
									"make.link"
								],
								[
									"glm.control\t{stats}",
									"glm.control"
								],
								[
									"hasTsp\t{stats}",
									"hasTsp"
								],
								[
									"pgamma\t{stats}",
									"pgamma"
								],
								[
									"addmargins\t{stats}",
									"addmargins"
								],
								[
									"dexp\t{stats}",
									"dexp"
								],
								[
									"power.anova.test\t{stats}",
									"power.anova.test"
								],
								[
									"prop.test\t{stats}",
									"prop.test"
								],
								[
									"model.weights\t{stats}",
									"model.weights"
								],
								[
									"ave\t{stats}",
									"ave"
								],
								[
									"is.stepfun\t{stats}",
									"is.stepfun"
								],
								[
									"heatmap\t{stats}",
									"heatmap"
								],
								[
									"stepfun\t{stats}",
									"stepfun"
								],
								[
									"loess.smooth\t{stats}",
									"loess.smooth"
								],
								[
									"line\t{stats}",
									"line"
								],
								[
									"qqline\t{stats}",
									"qqline"
								],
								[
									"ar.mle\t{stats}",
									"ar.mle"
								],
								[
									"residuals\t{stats}",
									"residuals"
								],
								[
									"lsfit\t{stats}",
									"lsfit"
								],
								[
									"get_all_vars\t{stats}",
									"get_all_vars"
								],
								[
									"dt\t{stats}",
									"dt"
								],
								[
									"splinefun\t{stats}",
									"splinefun"
								],
								[
									"ks.test\t{stats}",
									"ks.test"
								],
								[
									"cor\t{stats}",
									"cor"
								],
								[
									"add.scope\t{stats}",
									"add.scope"
								],
								[
									"ecdf\t{stats}",
									"ecdf"
								],
								[
									"pwilcox\t{stats}",
									"pwilcox"
								],
								[
									"cov\t{stats}",
									"cov"
								],
								[
									"dendrapply\t{stats}",
									"dendrapply"
								],
								[
									"rsignrank\t{stats}",
									"rsignrank"
								],
								[
									"bandwidth.kernel\t{stats}",
									"bandwidth.kernel"
								],
								[
									"as.dist\t{stats}",
									"as.dist"
								],
								[
									"SSweibull\t{stats}",
									"SSweibull"
								],
								[
									"bw.nrd\t{stats}",
									"bw.nrd"
								],
								[
									"start\t{stats}",
									"start"
								],
								[
									"plnorm\t{stats}",
									"plnorm"
								],
								[
									"ts.union\t{stats}",
									"ts.union"
								],
								[
									"mvfft\t{stats}",
									"mvfft"
								],
								[
									"dweibull\t{stats}",
									"dweibull"
								],
								[
									"as.ts\t{stats}",
									"as.ts"
								],
								[
									"cor.test\t{stats}",
									"cor.test"
								],
								[
									".checkMFClasses\t{stats}",
									".checkMFClasses"
								],
								[
									"effects\t{stats}",
									"effects"
								],
								[
									"reorder\t{stats}",
									"reorder"
								],
								[
									"KalmanForecast\t{stats}",
									"KalmanForecast"
								],
								[
									"eff.aovlist\t{stats}",
									"eff.aovlist"
								],
								[
									"qgamma\t{stats}",
									"qgamma"
								],
								[
									"glm.fit\t{stats}",
									"glm.fit"
								],
								[
									"plot.spec.coherency\t{stats}",
									"plot.spec.coherency"
								],
								[
									"dgamma\t{stats}",
									"dgamma"
								],
								[
									"cov2cor\t{stats}",
									"cov2cor"
								],
								[
									"ls.print\t{stats}",
									"ls.print"
								],
								[
									"setNames\t{stats}",
									"setNames"
								],
								[
									"acf2AR\t{stats}",
									"acf2AR"
								],
								[
									"add1\t{stats}",
									"add1"
								],
								[
									"rcauchy\t{stats}",
									"rcauchy"
								],
								[
									"shapiro.test\t{stats}",
									"shapiro.test"
								],
								[
									"deriv3\t{stats}",
									"deriv3"
								],
								[
									"window\t{stats}",
									"window"
								],
								[
									"model.tables\t{stats}",
									"model.tables"
								],
								[
									"model.matrix\t{stats}",
									"model.matrix"
								],
								[
									".nknots.smspl\t{stats}",
									".nknots.smspl"
								],
								[
									"KalmanLike\t{stats}",
									"KalmanLike"
								],
								[
									"SSasymp\t{stats}",
									"SSasymp"
								],
								[
									"predict\t{stats}",
									"predict"
								],
								[
									"as.stepfun\t{stats}",
									"as.stepfun"
								],
								[
									"t.test\t{stats}",
									"t.test"
								],
								[
									"power.prop.test\t{stats}",
									"power.prop.test"
								],
								[
									"rstandard\t{stats}",
									"rstandard"
								],
								[
									"binom.test\t{stats}",
									"binom.test"
								],
								[
									"cophenetic\t{stats}",
									"cophenetic"
								],
								[
									"pbeta\t{stats}",
									"pbeta"
								],
								[
									"KalmanRun\t{stats}",
									"KalmanRun"
								],
								[
									"naprint\t{stats}",
									"naprint"
								],
								[
									"qlnorm\t{stats}",
									"qlnorm"
								],
								[
									"plclust\t{stats}",
									"plclust"
								],
								[
									"model.response\t{stats}",
									"model.response"
								],
								[
									"dlnorm\t{stats}",
									"dlnorm"
								],
								[
									"lag\t{stats}",
									"lag"
								],
								[
									"spec.pgram\t{stats}",
									"spec.pgram"
								],
								[
									"interaction.plot\t{stats}",
									"interaction.plot"
								],
								[
									"fitted\t{stats}",
									"fitted"
								],
								[
									"rgeom\t{stats}",
									"rgeom"
								],
								[
									"estVar\t{stats}",
									"estVar"
								],
								[
									"rgamma\t{stats}",
									"rgamma"
								],
								[
									"arima0\t{stats}",
									"arima0"
								],
								[
									"loglin\t{stats}",
									"loglin"
								],
								[
									"ar.yw\t{stats}",
									"ar.yw"
								],
								[
									"promax\t{stats}",
									"promax"
								],
								[
									"phyper\t{stats}",
									"phyper"
								],
								[
									"drop1\t{stats}",
									"drop1"
								],
								[
									"SSfol\t{stats}",
									"SSfol"
								],
								[
									"runif\t{stats}",
									"runif"
								],
								[
									"family\t{stats}",
									"family"
								],
								[
									"quantile\t{stats}",
									"quantile"
								],
								[
									"wilcox.test\t{stats}",
									"wilcox.test"
								],
								[
									"psignrank\t{stats}",
									"psignrank"
								],
								[
									"complete.cases\t{stats}",
									"complete.cases"
								],
								[
									"offset\t{stats}",
									"offset"
								],
								[
									"scatter.smooth\t{stats}",
									"scatter.smooth"
								],
								[
									"dmultinom\t{stats}",
									"dmultinom"
								],
								[
									"rlnorm\t{stats}",
									"rlnorm"
								],
								[
									"approx\t{stats}",
									"approx"
								],
								[
									"naresid\t{stats}",
									"naresid"
								],
								[
									"SSfpl\t{stats}",
									"SSfpl"
								],
								[
									"proj\t{stats}",
									"proj"
								],
								[
									"supsmu\t{stats}",
									"supsmu"
								],
								[
									"qqnorm\t{stats}",
									"qqnorm"
								],
								[
									"end\t{stats}",
									"end"
								],
								[
									"printCoefmat\t{stats}",
									"printCoefmat"
								],
								[
									"princomp\t{stats}",
									"princomp"
								],
								[
									"aggregate.data.frame\t{stats}",
									"aggregate.data.frame"
								],
								[
									"dnbinom\t{stats}",
									"dnbinom"
								],
								[
									"lm.influence\t{stats}",
									"lm.influence"
								],
								[
									"rect.hclust\t{stats}",
									"rect.hclust"
								],
								[
									"convolve\t{stats}",
									"convolve"
								],
								[
									"ansari.test\t{stats}",
									"ansari.test"
								],
								[
									"median.default\t{stats}",
									"median.default"
								],
								[
									"ARMAacf\t{stats}",
									"ARMAacf"
								],
								[
									"poly\t{stats}",
									"poly"
								],
								[
									"NLSstRtAsymptote\t{stats}",
									"NLSstRtAsymptote"
								],
								[
									"power.t.test\t{stats}",
									"power.t.test"
								],
								[
									"write.ftable\t{stats}",
									"write.ftable"
								],
								[
									"qhyper\t{stats}",
									"qhyper"
								],
								[
									"polym\t{stats}",
									"polym"
								],
								[
									"weights\t{stats}",
									"weights"
								],
								[
									"dhyper\t{stats}",
									"dhyper"
								],
								[
									"kernel\t{stats}",
									"kernel"
								],
								[
									"friedman.test\t{stats}",
									"friedman.test"
								],
								[
									"acf\t{stats}",
									"acf"
								],
								[
									"qwilcox\t{stats}",
									"qwilcox"
								],
								[
									"filter\t{stats}",
									"filter"
								],
								[
									"lm.fit\t{stats}",
									"lm.fit"
								],
								[
									"rpois\t{stats}",
									"rpois"
								],
								[
									"cmdscale\t{stats}",
									"cmdscale"
								],
								[
									"factor.scope\t{stats}",
									"factor.scope"
								],
								[
									"Gamma\t{stats}",
									"Gamma"
								],
								[
									"pweibull\t{stats}",
									"pweibull"
								],
								[
									"pchisq\t{stats}",
									"pchisq"
								],
								[
									"ksmooth\t{stats}",
									"ksmooth"
								],
								[
									"symnum\t{stats}",
									"symnum"
								],
								[
									"smooth\t{stats}",
									"smooth"
								],
								[
									"quasipoisson\t{stats}",
									"quasipoisson"
								],
								[
									"ppr\t{stats}",
									"ppr"
								],
								[
									"spec.ar\t{stats}",
									"spec.ar"
								],
								[
									"pnbinom\t{stats}",
									"pnbinom"
								],
								[
									"coefficients\t{stats}",
									"coefficients"
								],
								[
									"model.offset\t{stats}",
									"model.offset"
								],
								[
									"dbeta\t{stats}",
									"dbeta"
								],
								[
									"SSasympOff\t{stats}",
									"SSasympOff"
								],
								[
									"pbirthday\t{stats}",
									"pbirthday"
								],
								[
									"replications\t{stats}",
									"replications"
								],
								[
									"ar.ols\t{stats}",
									"ar.ols"
								],
								[
									"rhyper\t{stats}",
									"rhyper"
								],
								[
									"spectrum\t{stats}",
									"spectrum"
								],
								[
									"lm\t{stats}",
									"lm"
								],
								[
									"expand.model.frame\t{stats}",
									"expand.model.frame"
								],
								[
									"kernapply\t{stats}",
									"kernapply"
								],
								[
									"bw.nrd0\t{stats}",
									"bw.nrd0"
								],
								[
									"stl\t{stats}",
									"stl"
								],
								[
									"loess\t{stats}",
									"loess"
								],
								[
									"IQR\t{stats}",
									"IQR"
								],
								[
									"qgeom\t{stats}",
									"qgeom"
								],
								[
									"contr.helmert\t{stats}",
									"contr.helmert"
								],
								[
									"na.pass\t{stats}",
									"na.pass"
								],
								[
									"toeplitz\t{stats}",
									"toeplitz"
								],
								[
									"pairwise.t.test\t{stats}",
									"pairwise.t.test"
								],
								[
									"dist\t{stats}",
									"dist"
								],
								[
									".getXlevels\t{stats}",
									".getXlevels"
								],
								[
									"NLSstClosestX\t{stats}",
									"NLSstClosestX"
								],
								[
									"getInitial\t{stats}",
									"getInitial"
								],
								[
									"sigma\t{stats}",
									"sigma"
								],
								[
									"qchisq\t{stats}",
									"qchisq"
								],
								[
									"contr.poly\t{stats}",
									"contr.poly"
								],
								[
									"dchisq\t{stats}",
									"dchisq"
								],
								[
									"spline\t{stats}",
									"spline"
								],
								[
									"qunif\t{stats}",
									"qunif"
								],
								[
									"confint\t{stats}",
									"confint"
								],
								[
									"pairwise.table\t{stats}",
									"pairwise.table"
								],
								[
									"SSasympOrig\t{stats}",
									"SSasympOrig"
								],
								[
									"pexp\t{stats}",
									"pexp"
								],
								[
									"plot.spec.phase\t{stats}",
									"plot.spec.phase"
								],
								[
									"density.default\t{stats}",
									"density.default"
								],
								[
									"medpolish\t{stats}",
									"medpolish"
								],
								[
									"ptukey\t{stats}",
									"ptukey"
								],
								[
									"cancor\t{stats}",
									"cancor"
								],
								[
									"Box.test\t{stats}",
									"Box.test"
								],
								[
									"TukeyHSD\t{stats}",
									"TukeyHSD"
								],
								[
									"rnorm\t{stats}",
									"rnorm"
								],
								[
									"var.test\t{stats}",
									"var.test"
								],
								[
									"poisson\t{stats}",
									"poisson"
								],
								[
									"bartlett.test\t{stats}",
									"bartlett.test"
								],
								[
									"summary.stepfun\t{stats}",
									"summary.stepfun"
								],
								[
									"na.fail\t{stats}",
									"na.fail"
								],
								[
									"model.frame\t{stats}",
									"model.frame"
								],
								[
									"covratio\t{stats}",
									"covratio"
								],
								[
									"contrasts\t{stats}",
									"contrasts"
								],
								[
									"ar.burg\t{stats}",
									"ar.burg"
								],
								[
									"residuals.lm\t{stats}",
									"residuals.lm"
								],
								[
									"df.residual\t{stats}",
									"df.residual"
								],
								[
									"ts.intersect\t{stats}",
									"ts.intersect"
								],
								[
									"power\t{stats}",
									"power"
								],
								[
									"SSlogis\t{stats}",
									"SSlogis"
								],
								[
									"glm\t{stats}",
									"glm"
								],
								[
									"rchisq\t{stats}",
									"rchisq"
								],
								[
									"getCall\t{stats}",
									"getCall"
								],
								[
									"model.matrix.lm\t{stats}",
									"model.matrix.lm"
								],
								[
									"chisq.test\t{stats}",
									"chisq.test"
								],
								[
									"coef\t{stats}",
									"coef"
								],
								[
									"step\t{stats}",
									"step"
								],
								[
									"ppoints\t{stats}",
									"ppoints"
								],
								[
									"vcov\t{stats}",
									"vcov"
								],
								[
									".preformat.ts\t{stats}",
									".preformat.ts"
								],
								[
									"qqplot\t{stats}",
									"qqplot"
								],
								[
									"DF2formula\t{stats}",
									"DF2formula"
								],
								[
									"update.default\t{stats}",
									"update.default"
								],
								[
									"qtukey\t{stats}",
									"qtukey"
								],
								[
									"quade.test\t{stats}",
									"quade.test"
								],
								[
									"qpois\t{stats}",
									"qpois"
								],
								[
									"df.kernel\t{stats}",
									"df.kernel"
								],
								[
									"influence\t{stats}",
									"influence"
								],
								[
									"qsmirnov\t{stats}",
									"qsmirnov"
								],
								[
									"cutree\t{stats}",
									"cutree"
								],
								[
									"poisson.test\t{stats}",
									"poisson.test"
								],
								[
									"pf\t{stats}",
									"pf"
								],
								[
									"case.names\t{stats}",
									"case.names"
								],
								[
									"frequency\t{stats}",
									"frequency"
								],
								[
									"tsdiag\t{stats}",
									"tsdiag"
								],
								[
									"qweibull\t{stats}",
									"qweibull"
								],
								[
									"NLSstLfAsymptote\t{stats}",
									"NLSstLfAsymptote"
								],
								[
									"kmeans\t{stats}",
									"kmeans"
								],
								[
									"weighted.residuals\t{stats}",
									"weighted.residuals"
								],
								[
									"mauchly.test\t{stats}",
									"mauchly.test"
								],
								[
									"napredict\t{stats}",
									"napredict"
								],
								[
									"qexp\t{stats}",
									"qexp"
								],
								[
									"deriv\t{stats}",
									"deriv"
								],
								[
									"var\t{stats}",
									"var"
								],
								[
									"aggregate.ts\t{stats}",
									"aggregate.ts"
								],
								[
									"rwilcox\t{stats}",
									"rwilcox"
								],
								[
									"SSbiexp\t{stats}",
									"SSbiexp"
								],
								[
									"pt\t{stats}",
									"pt"
								],
								[
									"rsmirnov\t{stats}",
									"rsmirnov"
								],
								[
									"qf\t{stats}",
									"qf"
								],
								[
									"xtabs\t{stats}",
									"xtabs"
								],
								[
									"kruskal.test\t{stats}",
									"kruskal.test"
								],
								[
									"median\t{stats}",
									"median"
								],
								[
									"as.hclust\t{stats}",
									"as.hclust"
								],
								[
									"termplot\t{stats}",
									"termplot"
								],
								[
									"rweibull\t{stats}",
									"rweibull"
								],
								[
									"resid\t{stats}",
									"resid"
								],
								[
									"pgeom\t{stats}",
									"pgeom"
								],
								[
									"qnbinom\t{stats}",
									"qnbinom"
								],
								[
									"se.contrast\t{stats}",
									"se.contrast"
								],
								[
									"summary.manova\t{stats}",
									"summary.manova"
								],
								[
									"prcomp\t{stats}",
									"prcomp"
								],
								[
									"preplot\t{stats}",
									"preplot"
								],
								[
									"plot.ecdf\t{stats}",
									"plot.ecdf"
								],
								[
									"arima.sim\t{stats}",
									"arima.sim"
								],
								[
									"lm.wfit\t{stats}",
									"lm.wfit"
								],
								[
									"ccf\t{stats}",
									"ccf"
								],
								[
									"is.leaf\t{stats}",
									"is.leaf"
								],
								[
									"na.action\t{stats}",
									"na.action"
								],
								[
									"screeplot\t{stats}",
									"screeplot"
								],
								[
									"approxfun\t{stats}",
									"approxfun"
								],
								[
									"NLSstAsymptotic\t{stats}",
									"NLSstAsymptotic"
								],
								[
									"order.dendrogram\t{stats}",
									"order.dendrogram"
								],
								[
									"cycle\t{stats}",
									"cycle"
								],
								[
									"qt\t{stats}",
									"qt"
								],
								[
									"rf\t{stats}",
									"rf"
								],
								[
									"punif\t{stats}",
									"punif"
								],
								[
									"quasi\t{stats}",
									"quasi"
								],
								[
									"ts.plot\t{stats}",
									"ts.plot"
								],
								[
									"cov.wt\t{stats}",
									"cov.wt"
								],
								[
									"mood.test\t{stats}",
									"mood.test"
								],
								[
									"PP.test\t{stats}",
									"PP.test"
								],
								[
									"is.empty.model\t{stats}",
									"is.empty.model"
								],
								[
									"loess.control\t{stats}",
									"loess.control"
								],
								[
									"decompose\t{stats}",
									"decompose"
								],
								[
									"aggregate\t{stats}",
									"aggregate"
								],
								[
									"BIC\t{stats}",
									"BIC"
								],
								[
									"reshape\t{stats}",
									"reshape"
								],
								[
									"makeARIMA\t{stats}",
									"makeARIMA"
								],
								[
									"ARMAtoMA\t{stats}",
									"ARMAtoMA"
								],
								[
									"weighted.mean\t{stats}",
									"weighted.mean"
								],
								[
									"pbinom\t{stats}",
									"pbinom"
								],
								[
									"selfStart\t{stats}",
									"selfStart"
								],
								[
									"SSgompertz\t{stats}",
									"SSgompertz"
								],
								[
									"qnorm\t{stats}",
									"qnorm"
								],
								[
									"inverse.gaussian\t{stats}",
									"inverse.gaussian"
								],
								[
									"na.omit\t{stats}",
									"na.omit"
								],
								[
									"sd\t{stats}",
									"sd"
								],
								[
									"rt\t{stats}",
									"rt"
								],
								[
									"fft\t{stats}",
									"fft"
								],
								[
									"dcauchy\t{stats}",
									"dcauchy"
								],
								[
									"fivenum\t{stats}",
									"fivenum"
								],
								[
									"toeplitz2\t{stats}",
									"toeplitz2"
								],
								[
									"relevel\t{stats}",
									"relevel"
								],
								[
									"summary.glm\t{stats}",
									"summary.glm"
								],
								[
									"rexp\t{stats}",
									"rexp"
								],
								[
									"monthplot\t{stats}",
									"monthplot"
								],
								[
									"dfbeta\t{stats}",
									"dfbeta"
								],
								[
									"diffinv\t{stats}",
									"diffinv"
								],
								[
									"nobs\t{stats}",
									"nobs"
								],
								[
									"SSmicmen\t{stats}",
									"SSmicmen"
								],
								[
									"is.ts\t{stats}",
									"is.ts"
								],
								[
									"dummy.coef.lm\t{stats}",
									"dummy.coef.lm"
								],
								[
									"hatvalues\t{stats}",
									"hatvalues"
								],
								[
									"variable.names\t{stats}",
									"variable.names"
								],
								[
									"Pair\t{stats}",
									"Pair"
								],
								[
									"model.frame.default\t{stats}",
									"model.frame.default"
								],
								[
									"anova\t{stats}",
									"anova"
								],
								[
									"simulate\t{stats}",
									"simulate"
								],
								[
									"dffits\t{stats}",
									"dffits"
								],
								[
									"model.matrix.default\t{stats}",
									"model.matrix.default"
								],
								[
									"contr.SAS\t{stats}",
									"contr.SAS"
								],
								[
									"contr.treatment\t{stats}",
									"contr.treatment"
								],
								[
									"predict.lm\t{stats}",
									"predict.lm"
								],
								[
									"prop.trend.test\t{stats}",
									"prop.trend.test"
								],
								[
									"as.dendrogram\t{stats}",
									"as.dendrogram"
								],
								[
									"ppois\t{stats}",
									"ppois"
								],
								[
									"pcauchy\t{stats}",
									"pcauchy"
								],
								[
									"smoothEnds\t{stats}",
									"smoothEnds"
								],
								[
									"qbinom\t{stats}",
									"qbinom"
								],
								[
									"hat\t{stats}",
									"hat"
								],
								[
									"p.adjust\t{stats}",
									"p.adjust"
								],
								[
									".MFclass\t{stats}",
									".MFclass"
								],
								[
									"dbinom\t{stats}",
									"dbinom"
								],
								[
									"terms.formula\t{stats}",
									"terms.formula"
								],
								[
									"spec.taper\t{stats}",
									"spec.taper"
								],
								[
									"HoltWinters\t{stats}",
									"HoltWinters"
								],
								[
									"ts\t{stats}",
									"ts"
								],
								[
									"na.exclude\t{stats}",
									"na.exclude"
								],
								[
									"dsignrank\t{stats}",
									"dsignrank"
								],
								[
									"is.tskernel\t{stats}",
									"is.tskernel"
								],
								[
									"fitted.values\t{stats}",
									"fitted.values"
								],
								[
									"qsignrank\t{stats}",
									"qsignrank"
								],
								[
									"integrate\t{stats}",
									"integrate"
								],
								[
									"optimise\t{stats}",
									"optimise"
								],
								[
									"binomial\t{stats}",
									"binomial"
								],
								[
									"KalmanSmooth\t{stats}",
									"KalmanSmooth"
								],
								[
									".vcov.aliased\t{stats}",
									".vcov.aliased"
								],
								[
									"deltat\t{stats}",
									"deltat"
								],
								[
									"p.adjust.methods\t{stats}",
									"p.adjust.methods"
								],
								[
									"SSD\t{stats}",
									"SSD"
								],
								[
									"summary.lm\t{stats}",
									"summary.lm"
								],
								[
									"smooth.spline\t{stats}",
									"smooth.spline"
								],
								[
									"rstudent\t{stats}",
									"rstudent"
								],
								[
									"hclust\t{stats}",
									"hclust"
								],
								[
									"density\t{stats}",
									"density"
								],
								[
									"dgeom\t{stats}",
									"dgeom"
								],
								[
									"terms\t{stats}",
									"terms"
								],
								[
									"fisher.test\t{stats}",
									"fisher.test"
								],
								[
									"rbinom\t{stats}",
									"rbinom"
								],
								[
									"formula\t{stats}",
									"formula"
								],
								[
									"nls.control\t{stats}",
									"nls.control"
								],
								[
									"isoreg\t{stats}",
									"isoreg"
								],
								[
									"contr.sum\t{stats}",
									"contr.sum"
								],
								[
									"uniroot\t{stats}",
									"uniroot"
								],
								[
									"quasibinomial\t{stats}",
									"quasibinomial"
								],
								[
									"dunif\t{stats}",
									"dunif"
								],
								[
									"influence.measures\t{stats}",
									"influence.measures"
								],
								[
									"na.contiguous\t{stats}",
									"na.contiguous"
								],
								[
									"dfbetas\t{stats}",
									"dfbetas"
								],
								[
									"pairwise.prop.test\t{stats}",
									"pairwise.prop.test"
								],
								[
									"rnbinom\t{stats}",
									"rnbinom"
								],
								[
									"pnorm\t{stats}",
									"pnorm"
								],
								[
									"rbeta\t{stats}",
									"rbeta"
								],
								[
									"cpgram\t{stats}",
									"cpgram"
								],
								[
									"knots\t{stats}",
									"knots"
								],
								[
									"biplot\t{stats}",
									"biplot"
								],
								[
									"runmed\t{stats}",
									"runmed"
								],
								[
									"mad\t{stats}",
									"mad"
								],
								[
									"delete.response\t{stats}",
									"delete.response"
								],
								[
									"plogis\t{stats}",
									"plogis"
								],
								[
									"read.ftable\t{stats}",
									"read.ftable"
								],
								[
									"aov\t{stats}",
									"aov"
								],
								[
									"update\t{stats}",
									"update"
								],
								[
									"StructTS\t{stats}",
									"StructTS"
								],
								[
									"polypath\t{graphics}",
									"polypath"
								],
								[
									"sunflowerplot\t{graphics}",
									"sunflowerplot"
								],
								[
									"plot.new\t{graphics}",
									"plot.new"
								],
								[
									"layout.show\t{graphics}",
									"layout.show"
								],
								[
									"matplot\t{graphics}",
									"matplot"
								],
								[
									"boxplot\t{graphics}",
									"boxplot"
								],
								[
									"panel.smooth\t{graphics}",
									"panel.smooth"
								],
								[
									"box\t{graphics}",
									"box"
								],
								[
									"lcm\t{graphics}",
									"lcm"
								],
								[
									"locator\t{graphics}",
									"locator"
								],
								[
									"plot.design\t{graphics}",
									"plot.design"
								],
								[
									"barplot.default\t{graphics}",
									"barplot.default"
								],
								[
									"axis.POSIXct\t{graphics}",
									"axis.POSIXct"
								],
								[
									"curve\t{graphics}",
									"curve"
								],
								[
									"matpoints\t{graphics}",
									"matpoints"
								],
								[
									"plot.default\t{graphics}",
									"plot.default"
								],
								[
									"pairs.default\t{graphics}",
									"pairs.default"
								],
								[
									"coplot\t{graphics}",
									"coplot"
								],
								[
									"par\t{graphics}",
									"par"
								],
								[
									"co.intervals\t{graphics}",
									"co.intervals"
								],
								[
									"hist.default\t{graphics}",
									"hist.default"
								],
								[
									"xyinch\t{graphics}",
									"xyinch"
								],
								[
									"mtext\t{graphics}",
									"mtext"
								],
								[
									"frame\t{graphics}",
									"frame"
								],
								[
									"screen\t{graphics}",
									"screen"
								],
								[
									"image.default\t{graphics}",
									"image.default"
								],
								[
									"boxplot.default\t{graphics}",
									"boxplot.default"
								],
								[
									"stem\t{graphics}",
									"stem"
								],
								[
									"polygon\t{graphics}",
									"polygon"
								],
								[
									"stars\t{graphics}",
									"stars"
								],
								[
									"lines\t{graphics}",
									"lines"
								],
								[
									"symbols\t{graphics}",
									"symbols"
								],
								[
									"pairs\t{graphics}",
									"pairs"
								],
								[
									"points\t{graphics}",
									"points"
								],
								[
									"grconvertX\t{graphics}",
									"grconvertX"
								],
								[
									"assocplot\t{graphics}",
									"assocplot"
								],
								[
									"spineplot\t{graphics}",
									"spineplot"
								],
								[
									"grconvertY\t{graphics}",
									"grconvertY"
								],
								[
									"title\t{graphics}",
									"title"
								],
								[
									"barplot\t{graphics}",
									"barplot"
								],
								[
									"persp\t{graphics}",
									"persp"
								],
								[
									"legend\t{graphics}",
									"legend"
								],
								[
									"identify\t{graphics}",
									"identify"
								],
								[
									"image\t{graphics}",
									"image"
								],
								[
									"filled.contour\t{graphics}",
									"filled.contour"
								],
								[
									"lines.default\t{graphics}",
									"lines.default"
								],
								[
									"hist\t{graphics}",
									"hist"
								],
								[
									"stripchart\t{graphics}",
									"stripchart"
								],
								[
									"contour\t{graphics}",
									"contour"
								],
								[
									"plot.function\t{graphics}",
									"plot.function"
								],
								[
									"mosaicplot\t{graphics}",
									"mosaicplot"
								],
								[
									"fourfoldplot\t{graphics}",
									"fourfoldplot"
								],
								[
									"split.screen\t{graphics}",
									"split.screen"
								],
								[
									"smoothScatter\t{graphics}",
									"smoothScatter"
								],
								[
									"matlines\t{graphics}",
									"matlines"
								],
								[
									"axTicks\t{graphics}",
									"axTicks"
								],
								[
									"arrows\t{graphics}",
									"arrows"
								],
								[
									"text.default\t{graphics}",
									"text.default"
								],
								[
									"points.default\t{graphics}",
									"points.default"
								],
								[
									"xinch\t{graphics}",
									"xinch"
								],
								[
									"dotchart\t{graphics}",
									"dotchart"
								],
								[
									"strheight\t{graphics}",
									"strheight"
								],
								[
									"rect\t{graphics}",
									"rect"
								],
								[
									"grid\t{graphics}",
									"grid"
								],
								[
									".filled.contour\t{graphics}",
									".filled.contour"
								],
								[
									"close.screen\t{graphics}",
									"close.screen"
								],
								[
									"axis\t{graphics}",
									"axis"
								],
								[
									"layout\t{graphics}",
									"layout"
								],
								[
									"contour.default\t{graphics}",
									"contour.default"
								],
								[
									"cdplot\t{graphics}",
									"cdplot"
								],
								[
									"pie\t{graphics}",
									"pie"
								],
								[
									"xspline\t{graphics}",
									"xspline"
								],
								[
									"text\t{graphics}",
									"text"
								],
								[
									"strwidth\t{graphics}",
									"strwidth"
								],
								[
									"axis.Date\t{graphics}",
									"axis.Date"
								],
								[
									"boxplot.matrix\t{graphics}",
									"boxplot.matrix"
								],
								[
									"bxp\t{graphics}",
									"bxp"
								],
								[
									"abline\t{graphics}",
									"abline"
								],
								[
									"plot.xy\t{graphics}",
									"plot.xy"
								],
								[
									"rasterImage\t{graphics}",
									"rasterImage"
								],
								[
									"segments\t{graphics}",
									"segments"
								],
								[
									"yinch\t{graphics}",
									"yinch"
								],
								[
									"plot\t{graphics}",
									"plot"
								],
								[
									"plot.window\t{graphics}",
									"plot.window"
								],
								[
									"clip\t{graphics}",
									"clip"
								],
								[
									"erase.screen\t{graphics}",
									"erase.screen"
								],
								[
									"rug\t{graphics}",
									"rug"
								],
								[
									"Axis\t{graphics}",
									"Axis"
								],
								[
									".__C__signature\t{methods}",
									".__C__signature"
								],
								[
									".ShortPrimitiveSkeletons\t{methods}",
									".ShortPrimitiveSkeletons"
								],
								[
									"showExtends\t{methods}",
									"showExtends"
								],
								[
									".__C__packageInfo\t{methods}",
									".__C__packageInfo"
								],
								[
									".__C__MethodSelectionReport\t{methods}",
									".__C__MethodSelectionReport"
								],
								[
									".__C__uninitializedField\t{methods}",
									".__C__uninitializedField"
								],
								[
									"extends\t{methods}",
									"extends"
								],
								[
									".__C__ordered\t{methods}",
									".__C__ordered"
								],
								[
									".__C__oldClass\t{methods}",
									".__C__oldClass"
								],
								[
									"addNextMethod\t{methods}",
									"addNextMethod"
								],
								[
									".__C__groupGenericFunction\t{methods}",
									".__C__groupGenericFunction"
								],
								[
									"getGenerics\t{methods}",
									"getGenerics"
								],
								[
									".__C__standardGeneric\t{methods}",
									".__C__standardGeneric"
								],
								[
									".__C__nonstandardGroupGenericFunction\t{methods}",
									".__C__nonstandardGroupGenericFunction"
								],
								[
									"makeExtends\t{methods}",
									"makeExtends"
								],
								[
									".__C__S3\t{methods}",
									".__C__S3"
								],
								[
									".__C__array\t{methods}",
									".__C__array"
								],
								[
									".__C__S4\t{methods}",
									".__C__S4"
								],
								[
									".EmptyPrimitiveSkeletons\t{methods}",
									".EmptyPrimitiveSkeletons"
								],
								[
									".__C__SuperClassMethod\t{methods}",
									".__C__SuperClassMethod"
								],
								[
									"showMlist\t{methods}",
									"showMlist"
								],
								[
									"setAs\t{methods}",
									"setAs"
								],
								[
									".__C__aov\t{methods}",
									".__C__aov"
								],
								[
									"resetClass\t{methods}",
									"resetClass"
								],
								[
									"assignMethodsMetaData\t{methods}",
									"assignMethodsMetaData"
								],
								[
									".__C__integrate\t{methods}",
									".__C__integrate"
								],
								[
									"getDataPart\t{methods}",
									"getDataPart"
								],
								[
									".__C__listOfMethods\t{methods}",
									".__C__listOfMethods"
								],
								[
									".__C__ClassUnionRepresentation\t{methods}",
									".__C__ClassUnionRepresentation"
								],
								[
									"findMethodSignatures\t{methods}",
									"findMethodSignatures"
								],
								[
									"getGroupMembers\t{methods}",
									"getGroupMembers"
								],
								[
									"signature\t{methods}",
									"signature"
								],
								[
									"setReplaceMethod\t{methods}",
									"setReplaceMethod"
								],
								[
									"removeClass\t{methods}",
									"removeClass"
								],
								[
									"implicitGeneric\t{methods}",
									"implicitGeneric"
								],
								[
									".OldClassesList\t{methods}",
									".OldClassesList"
								],
								[
									".__C__refObject\t{methods}",
									".__C__refObject"
								],
								[
									"cacheMetaData\t{methods}",
									"cacheMetaData"
								],
								[
									"el\t{methods}",
									"el"
								],
								[
									"callGeneric\t{methods}",
									"callGeneric"
								],
								[
									"showClass\t{methods}",
									"showClass"
								],
								[
									"Complex\t{methods}",
									"Complex"
								],
								[
									".__C__.Other\t{methods}",
									".__C__.Other"
								],
								[
									".__C__classPrototypeDef\t{methods}",
									".__C__classPrototypeDef"
								],
								[
									".__C__ts\t{methods}",
									".__C__ts"
								],
								[
									"evalSource\t{methods}",
									"evalSource"
								],
								[
									"kronecker\t{methods}",
									"kronecker"
								],
								[
									"resetGeneric\t{methods}",
									"resetGeneric"
								],
								[
									"possibleExtends\t{methods}",
									"possibleExtends"
								],
								[
									".__C__table\t{methods}",
									".__C__table"
								],
								[
									"missingArg\t{methods}",
									"missingArg"
								],
								[
									"Quote\t{methods}",
									"Quote"
								],
								[
									"registerImplicitGenerics\t{methods}",
									"registerImplicitGenerics"
								],
								[
									".__C__double\t{methods}",
									".__C__double"
								],
								[
									"isClassDef\t{methods}",
									"isClassDef"
								],
								[
									"initRefFields\t{methods}",
									"initRefFields"
								],
								[
									".__C__environment\t{methods}",
									".__C__environment"
								],
								[
									"insertMethod\t{methods}",
									"insertMethod"
								],
								[
									"findFunction\t{methods}",
									"findFunction"
								],
								[
									"externalRefMethod\t{methods}",
									"externalRefMethod"
								],
								[
									"fixPre1.8\t{methods}",
									"fixPre1.8"
								],
								[
									"checkAtAssignment\t{methods}",
									"checkAtAssignment"
								],
								[
									".__C__Date\t{methods}",
									".__C__Date"
								],
								[
									"finalDefaultMethod\t{methods}",
									"finalDefaultMethod"
								],
								[
									".__C__character\t{methods}",
									".__C__character"
								],
								[
									"isClass\t{methods}",
									"isClass"
								],
								[
									"completeClassDefinition\t{methods}",
									"completeClassDefinition"
								],
								[
									"callNextMethod\t{methods}",
									"callNextMethod"
								],
								[
									"isVirtualClass\t{methods}",
									"isVirtualClass"
								],
								[
									"slotNames\t{methods}",
									"slotNames"
								],
								[
									"getSlots\t{methods}",
									"getSlots"
								],
								[
									".__C__LinearMethodsList\t{methods}",
									".__C__LinearMethodsList"
								],
								[
									"selectSuperClasses\t{methods}",
									"selectSuperClasses"
								],
								[
									"removeMethods\t{methods}",
									"removeMethods"
								],
								[
									".classEnv\t{methods}",
									".classEnv"
								],
								[
									".__C__structure\t{methods}",
									".__C__structure"
								],
								[
									"evalOnLoad\t{methods}",
									"evalOnLoad"
								],
								[
									"cbind2\t{methods}",
									"cbind2"
								],
								[
									".__C__lm\t{methods}",
									".__C__lm"
								],
								[
									".__C__dump.frames\t{methods}",
									".__C__dump.frames"
								],
								[
									"setClassUnion\t{methods}",
									"setClassUnion"
								],
								[
									".__C__density\t{methods}",
									".__C__density"
								],
								[
									".hasSlot\t{methods}",
									".hasSlot"
								],
								[
									"initialize\t{methods}",
									"initialize"
								],
								[
									"Summary\t{methods}",
									"Summary"
								],
								[
									"representation\t{methods}",
									"representation"
								],
								[
									"getClass\t{methods}",
									"getClass"
								],
								[
									"method.skeleton\t{methods}",
									"method.skeleton"
								],
								[
									".__C__vector\t{methods}",
									".__C__vector"
								],
								[
									"setRefClass\t{methods}",
									"setRefClass"
								],
								[
									"Math2\t{methods}",
									"Math2"
								],
								[
									"getMethods\t{methods}",
									"getMethods"
								],
								[
									".__C__repeat\t{methods}",
									".__C__repeat"
								],
								[
									".__C__MethodsList\t{methods}",
									".__C__MethodsList"
								],
								[
									"Logic\t{methods}",
									"Logic"
								],
								[
									"matchSignature\t{methods}",
									"matchSignature"
								],
								[
									".__C__className\t{methods}",
									".__C__className"
								],
								[
									"methodsPackageMetaName\t{methods}",
									"methodsPackageMetaName"
								],
								[
									"defaultDumpName\t{methods}",
									"defaultDumpName"
								],
								[
									".__C__name\t{methods}",
									".__C__name"
								],
								[
									"getGroup\t{methods}",
									"getGroup"
								],
								[
									".__C__ObjectsWithPackage\t{methods}",
									".__C__ObjectsWithPackage"
								],
								[
									".__C__glm.null\t{methods}",
									".__C__glm.null"
								],
								[
									"substituteDirect\t{methods}",
									"substituteDirect"
								],
								[
									"packageSlot\t{methods}",
									"packageSlot"
								],
								[
									".__C__defaultBindingFunction\t{methods}",
									".__C__defaultBindingFunction"
								],
								[
									"removeMethod\t{methods}",
									"removeMethod"
								],
								[
									".__C__special\t{methods}",
									".__C__special"
								],
								[
									".__C__SealedMethodDefinition\t{methods}",
									".__C__SealedMethodDefinition"
								],
								[
									"MethodsListSelect\t{methods}",
									"MethodsListSelect"
								],
								[
									"S3Part\t{methods}",
									"S3Part"
								],
								[
									".__C__list\t{methods}",
									".__C__list"
								],
								[
									".__C__NULL\t{methods}",
									".__C__NULL"
								],
								[
									"is\t{methods}",
									"is"
								],
								[
									"checkSlotAssignment\t{methods}",
									"checkSlotAssignment"
								],
								[
									"classMetaName\t{methods}",
									"classMetaName"
								],
								[
									"slotsFromS3\t{methods}",
									"slotsFromS3"
								],
								[
									"promptMethods\t{methods}",
									"promptMethods"
								],
								[
									"insertClassMethods\t{methods}",
									"insertClassMethods"
								],
								[
									"isXS3Class\t{methods}",
									"isXS3Class"
								],
								[
									"isRematched\t{methods}",
									"isRematched"
								],
								[
									".__C__.environment\t{methods}",
									".__C__.environment"
								],
								[
									".selectSuperClasses\t{methods}",
									".selectSuperClasses"
								],
								[
									".__C__genericFunctionWithTrace\t{methods}",
									".__C__genericFunctionWithTrace"
								],
								[
									".__C__anova\t{methods}",
									".__C__anova"
								],
								[
									".__C__socket\t{methods}",
									".__C__socket"
								],
								[
									"emptyMethodsList\t{methods}",
									"emptyMethodsList"
								],
								[
									"listFromMethods\t{methods}",
									"listFromMethods"
								],
								[
									"isGeneric\t{methods}",
									"isGeneric"
								],
								[
									".__C__refGeneratorSlot\t{methods}",
									".__C__refGeneratorSlot"
								],
								[
									".__C__integer\t{methods}",
									".__C__integer"
								],
								[
									"show\t{methods}",
									"show"
								],
								[
									"metaNameUndo\t{methods}",
									"metaNameUndo"
								],
								[
									".untracedFunction\t{methods}",
									".untracedFunction"
								],
								[
									"getMethodsForDispatch\t{methods}",
									"getMethodsForDispatch"
								],
								[
									".__C__packageIQR\t{methods}",
									".__C__packageIQR"
								],
								[
									".__C__envRefClass\t{methods}",
									".__C__envRefClass"
								],
								[
									"Math\t{methods}",
									"Math"
								],
								[
									"makePrototypeFromClassDef\t{methods}",
									"makePrototypeFromClassDef"
								],
								[
									"slot\t{methods}",
									"slot"
								],
								[
									".__C__complex\t{methods}",
									".__C__complex"
								],
								[
									"reconcilePropertiesAndPrototype\t{methods}",
									"reconcilePropertiesAndPrototype"
								],
								[
									"doPrimitiveMethod\t{methods}",
									"doPrimitiveMethod"
								],
								[
									"getValidity\t{methods}",
									"getValidity"
								],
								[
									".__C__classRepresentation\t{methods}",
									".__C__classRepresentation"
								],
								[
									"SignatureMethod\t{methods}",
									"SignatureMethod"
								],
								[
									".__C__libraryIQR\t{methods}",
									".__C__libraryIQR"
								],
								[
									"isSealedMethod\t{methods}",
									"isSealedMethod"
								],
								[
									"getPackageName\t{methods}",
									"getPackageName"
								],
								[
									".__C__OptionalFunction\t{methods}",
									".__C__OptionalFunction"
								],
								[
									"setIs\t{methods}",
									"setIs"
								],
								[
									"balanceMethodsList\t{methods}",
									"balanceMethodsList"
								],
								[
									".__C__missing\t{methods}",
									".__C__missing"
								],
								[
									"setLoadActions\t{methods}",
									"setLoadActions"
								],
								[
									"setDataPart\t{methods}",
									"setDataPart"
								],
								[
									".__C__refMethodDef\t{methods}",
									".__C__refMethodDef"
								],
								[
									"setGroupGeneric\t{methods}",
									"setGroupGeneric"
								],
								[
									".__C__genericFunction\t{methods}",
									".__C__genericFunction"
								],
								[
									"S3Class\t{methods}",
									"S3Class"
								],
								[
									"findUnique\t{methods}",
									"findUnique"
								],
								[
									".__C__classGeneratorFunction\t{methods}",
									".__C__classGeneratorFunction"
								],
								[
									"dumpMethods\t{methods}",
									"dumpMethods"
								],
								[
									".__C__raw\t{methods}",
									".__C__raw"
								],
								[
									".__C__mlm\t{methods}",
									".__C__mlm"
								],
								[
									"sigToEnv\t{methods}",
									"sigToEnv"
								],
								[
									"setGenericImplicit\t{methods}",
									"setGenericImplicit"
								],
								[
									".__C__POSIXct\t{methods}",
									".__C__POSIXct"
								],
								[
									"sealClass\t{methods}",
									"sealClass"
								],
								[
									".__C__groupGenericFunctionWithTrace\t{methods}",
									".__C__groupGenericFunctionWithTrace"
								],
								[
									"hasArg\t{methods}",
									"hasArg"
								],
								[
									"makeStandardGeneric\t{methods}",
									"makeStandardGeneric"
								],
								[
									"selectMethod\t{methods}",
									"selectMethod"
								],
								[
									"loadMethod\t{methods}",
									"loadMethod"
								],
								[
									"getLoadActions\t{methods}",
									"getLoadActions"
								],
								[
									"prohibitGeneric\t{methods}",
									"prohibitGeneric"
								],
								[
									"substituteFunctionArgs\t{methods}",
									"substituteFunctionArgs"
								],
								[
									"completeExtends\t{methods}",
									"completeExtends"
								],
								[
									"assignClassDef\t{methods}",
									"assignClassDef"
								],
								[
									"methodSignatureMatrix\t{methods}",
									"methodSignatureMatrix"
								],
								[
									"isGrammarSymbol\t{methods}",
									"isGrammarSymbol"
								],
								[
									"prototype\t{methods}",
									"prototype"
								],
								[
									"requireMethods\t{methods}",
									"requireMethods"
								],
								[
									".__C__data.frameRowLabels\t{methods}",
									".__C__data.frameRowLabels"
								],
								[
									".__C__activeBindingFunction\t{methods}",
									".__C__activeBindingFunction"
								],
								[
									".__C__externalptr\t{methods}",
									".__C__externalptr"
								],
								[
									".__C__.name\t{methods}",
									".__C__.name"
								],
								[
									"setOldClass\t{methods}",
									"setOldClass"
								],
								[
									"setPrimitiveMethods\t{methods}",
									"setPrimitiveMethods"
								],
								[
									".__C__recordedplot\t{methods}",
									".__C__recordedplot"
								],
								[
									"isGroup\t{methods}",
									"isGroup"
								],
								[
									"getAllSuperClasses\t{methods}",
									"getAllSuperClasses"
								],
								[
									".__C__localRefClass\t{methods}",
									".__C__localRefClass"
								],
								[
									"findMethods\t{methods}",
									"findMethods"
								],
								[
									"rematchDefinition\t{methods}",
									"rematchDefinition"
								],
								[
									"MethodAddCoerce\t{methods}",
									"MethodAddCoerce"
								],
								[
									".__C__POSIXt\t{methods}",
									".__C__POSIXt"
								],
								[
									".__C__summary.table\t{methods}",
									".__C__summary.table"
								],
								[
									"hasMethod\t{methods}",
									"hasMethod"
								],
								[
									".__C__language\t{methods}",
									".__C__language"
								],
								[
									".__C__refClass\t{methods}",
									".__C__refClass"
								],
								[
									"evalqOnLoad\t{methods}",
									"evalqOnLoad"
								],
								[
									"insertSource\t{methods}",
									"insertSource"
								],
								[
									"hasLoadAction\t{methods}",
									"hasLoadAction"
								],
								[
									".__C__numeric\t{methods}",
									".__C__numeric"
								],
								[
									".__C__derivedDefaultMethodWithTrace\t{methods}",
									".__C__derivedDefaultMethodWithTrace"
								],
								[
									".__C__externalRefMethod\t{methods}",
									".__C__externalRefMethod"
								],
								[
									"validSlotNames\t{methods}",
									"validSlotNames"
								],
								[
									"multipleClasses\t{methods}",
									"multipleClasses"
								],
								[
									"empty.dump\t{methods}",
									"empty.dump"
								],
								[
									"setPackageName\t{methods}",
									"setPackageName"
								],
								[
									".__C__MethodDefinitionWithTrace\t{methods}",
									".__C__MethodDefinitionWithTrace"
								],
								[
									".__C__maov\t{methods}",
									".__C__maov"
								],
								[
									".__C__standardGenericWithTrace\t{methods}",
									".__C__standardGenericWithTrace"
								],
								[
									"getClassDef\t{methods}",
									"getClassDef"
								],
								[
									"newEmptyObject\t{methods}",
									"newEmptyObject"
								],
								[
									"formalArgs\t{methods}",
									"formalArgs"
								],
								[
									"Arith\t{methods}",
									"Arith"
								],
								[
									"mergeMethods\t{methods}",
									"mergeMethods"
								],
								[
									"MethodsList\t{methods}",
									"MethodsList"
								],
								[
									"getRefClass\t{methods}",
									"getRefClass"
								],
								[
									"inheritedSlotNames\t{methods}",
									"inheritedSlotNames"
								],
								[
									".__C__.NULL\t{methods}",
									".__C__.NULL"
								],
								[
									".__C__PossibleMethod\t{methods}",
									".__C__PossibleMethod"
								],
								[
									"classesToAM\t{methods}",
									"classesToAM"
								],
								[
									".__C__functionWithTrace\t{methods}",
									".__C__functionWithTrace"
								],
								[
									"asMethodDefinition\t{methods}",
									"asMethodDefinition"
								],
								[
									".__C__factor\t{methods}",
									".__C__factor"
								],
								[
									".__C__sourceEnvironment\t{methods}",
									".__C__sourceEnvironment"
								],
								[
									"languageEl\t{methods}",
									"languageEl"
								],
								[
									"Ops\t{methods}",
									"Ops"
								],
								[
									"getMethod\t{methods}",
									"getMethod"
								],
								[
									".__C__MethodDefinition\t{methods}",
									".__C__MethodDefinition"
								],
								[
									"listFromMlist\t{methods}",
									"listFromMlist"
								],
								[
									"allNames\t{methods}",
									"allNames"
								],
								[
									".__C__mts\t{methods}",
									".__C__mts"
								],
								[
									".__C__mtable\t{methods}",
									".__C__mtable"
								],
								[
									"completeSubclasses\t{methods}",
									"completeSubclasses"
								],
								[
									"cacheGenericsMetaData\t{methods}",
									"cacheGenericsMetaData"
								],
								[
									".__C__data.frame\t{methods}",
									".__C__data.frame"
								],
								[
									"tryNew\t{methods}",
									"tryNew"
								],
								[
									"findClass\t{methods}",
									"findClass"
								],
								[
									"cacheMethod\t{methods}",
									"cacheMethod"
								],
								[
									"showDefault\t{methods}",
									"showDefault"
								],
								[
									"Compare\t{methods}",
									"Compare"
								],
								[
									"new\t{methods}",
									"new"
								],
								[
									".__C__if\t{methods}",
									".__C__if"
								],
								[
									".__C__EmptyMethodsList\t{methods}",
									".__C__EmptyMethodsList"
								],
								[
									"makeClassRepresentation\t{methods}",
									"makeClassRepresentation"
								],
								[
									"promptClass\t{methods}",
									"promptClass"
								],
								[
									".__C__optionalMethod\t{methods}",
									".__C__optionalMethod"
								],
								[
									"newClassRepresentation\t{methods}",
									"newClassRepresentation"
								],
								[
									".S4methods\t{methods}",
									".S4methods"
								],
								[
									".__C__ANY\t{methods}",
									".__C__ANY"
								],
								[
									"testVirtual\t{methods}",
									"testVirtual"
								],
								[
									".__C__refClassRepresentation\t{methods}",
									".__C__refClassRepresentation"
								],
								[
									".__C__conditionalExtension\t{methods}",
									".__C__conditionalExtension"
								],
								[
									"linearizeMlist\t{methods}",
									"linearizeMlist"
								],
								[
									"removeGeneric\t{methods}",
									"removeGeneric"
								],
								[
									"canCoerce\t{methods}",
									"canCoerce"
								],
								[
									".__C__traceable\t{methods}",
									".__C__traceable"
								],
								[
									".__C__MethodWithNextWithTrace\t{methods}",
									".__C__MethodWithNextWithTrace"
								],
								[
									"rbind2\t{methods}",
									"rbind2"
								],
								[
									".__C__anova.glm.null\t{methods}",
									".__C__anova.glm.null"
								],
								[
									".__C__.externalptr\t{methods}",
									".__C__.externalptr"
								],
								[
									".__C__matrix\t{methods}",
									".__C__matrix"
								],
								[
									"setValidity\t{methods}",
									"setValidity"
								],
								[
									"functionBody\t{methods}",
									"functionBody"
								],
								[
									".__C__hsearch\t{methods}",
									".__C__hsearch"
								],
								[
									".__C__function\t{methods}",
									".__C__function"
								],
								[
									"getGeneric\t{methods}",
									"getGeneric"
								],
								[
									".__C__POSIXlt\t{methods}",
									".__C__POSIXlt"
								],
								[
									"dumpMethod\t{methods}",
									"dumpMethod"
								],
								[
									"elNamed\t{methods}",
									"elNamed"
								],
								[
									".__C__logical\t{methods}",
									".__C__logical"
								],
								[
									".__C__nonstandardGenericWithTrace\t{methods}",
									".__C__nonstandardGenericWithTrace"
								],
								[
									".__C__summaryDefault\t{methods}",
									".__C__summaryDefault"
								],
								[
									".__C__derivedDefaultMethod\t{methods}",
									".__C__derivedDefaultMethod"
								],
								[
									".__C__nonstandardGeneric\t{methods}",
									".__C__nonstandardGeneric"
								],
								[
									".doTracePrint\t{methods}",
									".doTracePrint"
								],
								[
									".__C__glm\t{methods}",
									".__C__glm"
								],
								[
									".__C__nonstandardGenericFunction\t{methods}",
									".__C__nonstandardGenericFunction"
								],
								[
									".__C__refObjectGenerator\t{methods}",
									".__C__refObjectGenerator"
								],
								[
									".__C__builtin\t{methods}",
									".__C__builtin"
								],
								[
									"setClass\t{methods}",
									"setClass"
								],
								[
									".__C__for\t{methods}",
									".__C__for"
								],
								[
									"isSealedClass\t{methods}",
									"isSealedClass"
								],
								[
									"generic.skeleton\t{methods}",
									"generic.skeleton"
								],
								[
									".__C__internalDispatchMethod\t{methods}",
									".__C__internalDispatchMethod"
								],
								[
									".__C__anova.glm\t{methods}",
									".__C__anova.glm"
								],
								[
									"makeGeneric\t{methods}",
									"makeGeneric"
								],
								[
									"setMethod\t{methods}",
									"setMethod"
								],
								[
									"isClassUnion\t{methods}",
									"isClassUnion"
								],
								[
									"coerce\t{methods}",
									"coerce"
								],
								[
									"initFieldArgs\t{methods}",
									"initFieldArgs"
								],
								[
									".valueClassTest\t{methods}",
									".valueClassTest"
								],
								[
									"validObject\t{methods}",
									"validObject"
								],
								[
									"getClasses\t{methods}",
									"getClasses"
								],
								[
									"setGeneric\t{methods}",
									"setGeneric"
								],
								[
									"unRematchDefinition\t{methods}",
									"unRematchDefinition"
								],
								[
									".__C__nonStructure\t{methods}",
									".__C__nonStructure"
								],
								[
									"hasMethods\t{methods}",
									"hasMethods"
								],
								[
									".__C__call\t{methods}",
									".__C__call"
								],
								[
									"existsFunction\t{methods}",
									"existsFunction"
								],
								[
									"classLabel\t{methods}",
									"classLabel"
								],
								[
									"defaultPrototype\t{methods}",
									"defaultPrototype"
								],
								[
									".__C__MethodWithNext\t{methods}",
									".__C__MethodWithNext"
								],
								[
									".__C__rle\t{methods}",
									".__C__rle"
								],
								[
									"showMethods\t{methods}",
									"showMethods"
								],
								[
									".__C__logLik\t{methods}",
									".__C__logLik"
								],
								[
									".__C__namedList\t{methods}",
									".__C__namedList"
								],
								[
									".__C__formula\t{methods}",
									".__C__formula"
								],
								[
									"findMethod\t{methods}",
									"findMethod"
								],
								[
									"testInheritedMethods\t{methods}",
									"testInheritedMethods"
								],
								[
									"as\t{methods}",
									"as"
								],
								[
									"conformMethod\t{methods}",
									"conformMethod"
								],
								[
									"makeMethodsList\t{methods}",
									"makeMethodsList"
								],
								[
									"newBasic\t{methods}",
									"newBasic"
								],
								[
									".__C__while\t{methods}",
									".__C__while"
								],
								[
									".slotNames\t{methods}",
									".slotNames"
								],
								[
									"className\t{methods}",
									"className"
								],
								[
									".__C__expression\t{methods}",
									".__C__expression"
								],
								[
									".__C__refMethodDefWithTrace\t{methods}",
									".__C__refMethodDefWithTrace"
								],
								[
									"setLoadAction\t{methods}",
									"setLoadAction"
								],
								[
									".__C__VIRTUAL\t{methods}",
									".__C__VIRTUAL"
								],
								[
									"superClassDepth\t{methods}",
									"superClassDepth"
								],
								[
									".__C__SClassExtension\t{methods}",
									".__C__SClassExtension"
								],
								[
									"existsMethod\t{methods}",
									"existsMethod"
								],
								[
									"getFunction\t{methods}",
									"getFunction"
								],
								[
									"getMethodsMetaData\t{methods}",
									"getMethodsMetaData"
								],
								[
									"write.socket\t{utils}",
									"write.socket"
								],
								[
									"fixInNamespace\t{utils}",
									"fixInNamespace"
								],
								[
									"changedFiles\t{utils}",
									"changedFiles"
								],
								[
									"history\t{utils}",
									"history"
								],
								[
									"SweaveHooks\t{utils}",
									"SweaveHooks"
								],
								[
									"packageDate\t{utils}",
									"packageDate"
								],
								[
									"installed.packages\t{utils}",
									"installed.packages"
								],
								[
									"citEntry\t{utils}",
									"citEntry"
								],
								[
									"as.roman\t{utils}",
									"as.roman"
								],
								[
									".romans\t{utils}",
									".romans"
								],
								[
									"suppressForeignCheck\t{utils}",
									"suppressForeignCheck"
								],
								[
									"aregexec\t{utils}",
									"aregexec"
								],
								[
									"txtProgressBar\t{utils}",
									"txtProgressBar"
								],
								[
									"strcapture\t{utils}",
									"strcapture"
								],
								[
									"xemacs\t{utils}",
									"xemacs"
								],
								[
									"rtags\t{utils}",
									"rtags"
								],
								[
									"as.person\t{utils}",
									"as.person"
								],
								[
									"maintainer\t{utils}",
									"maintainer"
								],
								[
									"aspell\t{utils}",
									"aspell"
								],
								[
									"bug.report\t{utils}",
									"bug.report"
								],
								[
									"capture.output\t{utils}",
									"capture.output"
								],
								[
									"remhash\t{utils}",
									"remhash"
								],
								[
									"assignInMyNamespace\t{utils}",
									"assignInMyNamespace"
								],
								[
									"aspell_package_vignettes\t{utils}",
									"aspell_package_vignettes"
								],
								[
									"memory.limit\t{utils}",
									"memory.limit"
								],
								[
									"person\t{utils}",
									"person"
								],
								[
									"ls.str\t{utils}",
									"ls.str"
								],
								[
									"read.delim2\t{utils}",
									"read.delim2"
								],
								[
									"RweaveLatexWritedoc\t{utils}",
									"RweaveLatexWritedoc"
								],
								[
									"hasName\t{utils}",
									"hasName"
								],
								[
									"getTxtProgressBar\t{utils}",
									"getTxtProgressBar"
								],
								[
									"news\t{utils}",
									"news"
								],
								[
									"typhash\t{utils}",
									"typhash"
								],
								[
									"read.csv\t{utils}",
									"read.csv"
								],
								[
									"RSiteSearch\t{utils}",
									"RSiteSearch"
								],
								[
									"debugger\t{utils}",
									"debugger"
								],
								[
									"demo\t{utils}",
									"demo"
								],
								[
									"isS3stdGeneric\t{utils}",
									"isS3stdGeneric"
								],
								[
									"Sweave\t{utils}",
									"Sweave"
								],
								[
									"nsl\t{utils}",
									"nsl"
								],
								[
									"modifyList\t{utils}",
									"modifyList"
								],
								[
									"promptData\t{utils}",
									"promptData"
								],
								[
									"help.request\t{utils}",
									"help.request"
								],
								[
									"alarm\t{utils}",
									"alarm"
								],
								[
									".DollarNames\t{utils}",
									".DollarNames"
								],
								[
									"promptImport\t{utils}",
									"promptImport"
								],
								[
									"close.socket\t{utils}",
									"close.socket"
								],
								[
									"read.csv2\t{utils}",
									"read.csv2"
								],
								[
									"zip\t{utils}",
									"zip"
								],
								[
									"hsearch_db_concepts\t{utils}",
									"hsearch_db_concepts"
								],
								[
									"assignInNamespace\t{utils}",
									"assignInNamespace"
								],
								[
									"askYesNo\t{utils}",
									"askYesNo"
								],
								[
									"read.delim\t{utils}",
									"read.delim"
								],
								[
									"limitedLabels\t{utils}",
									"limitedLabels"
								],
								[
									"is.relistable\t{utils}",
									"is.relistable"
								],
								[
									"toLatex\t{utils}",
									"toLatex"
								],
								[
									"citFooter\t{utils}",
									"citFooter"
								],
								[
									"head.matrix\t{utils}",
									"head.matrix"
								],
								[
									"View\t{utils}",
									"View"
								],
								[
									"findMatches\t{utils}",
									"findMatches"
								],
								[
									"create.post\t{utils}",
									"create.post"
								],
								[
									"globalVariables\t{utils}",
									"globalVariables"
								],
								[
									"vi\t{utils}",
									"vi"
								],
								[
									"bibentry\t{utils}",
									"bibentry"
								],
								[
									"checkCRAN\t{utils}",
									"checkCRAN"
								],
								[
									"Stangle\t{utils}",
									"Stangle"
								],
								[
									"methods\t{utils}",
									"methods"
								],
								[
									"sethash\t{utils}",
									"sethash"
								],
								[
									"type.convert\t{utils}",
									"type.convert"
								],
								[
									"findLineNum\t{utils}",
									"findLineNum"
								],
								[
									"menu\t{utils}",
									"menu"
								],
								[
									"aspell_package_C_files\t{utils}",
									"aspell_package_C_files"
								],
								[
									"old.packages\t{utils}",
									"old.packages"
								],
								[
									"hsearch_db_keywords\t{utils}",
									"hsearch_db_keywords"
								],
								[
									"RShowDoc\t{utils}",
									"RShowDoc"
								],
								[
									"browseURL\t{utils}",
									"browseURL"
								],
								[
									"debugcall\t{utils}",
									"debugcall"
								],
								[
									"is.hashtab\t{utils}",
									"is.hashtab"
								],
								[
									"gethash\t{utils}",
									"gethash"
								],
								[
									"setTxtProgressBar\t{utils}",
									"setTxtProgressBar"
								],
								[
									"tail\t{utils}",
									"tail"
								],
								[
									"emacs\t{utils}",
									"emacs"
								],
								[
									"object.size\t{utils}",
									"object.size"
								],
								[
									"RweaveTryStop\t{utils}",
									"RweaveTryStop"
								],
								[
									"undebugcall\t{utils}",
									"undebugcall"
								],
								[
									"download.file\t{utils}",
									"download.file"
								],
								[
									"loadhistory\t{utils}",
									"loadhistory"
								],
								[
									"RweaveChunkPrefix\t{utils}",
									"RweaveChunkPrefix"
								],
								[
									"summaryRprof\t{utils}",
									"summaryRprof"
								],
								[
									"make.socket\t{utils}",
									"make.socket"
								],
								[
									"xedit\t{utils}",
									"xedit"
								],
								[
									"data\t{utils}",
									"data"
								],
								[
									"charClass\t{utils}",
									"charClass"
								],
								[
									"RtangleSetup\t{utils}",
									"RtangleSetup"
								],
								[
									"browseEnv\t{utils}",
									"browseEnv"
								],
								[
									"update.packages\t{utils}",
									"update.packages"
								],
								[
									"untar\t{utils}",
									"untar"
								],
								[
									"tail.matrix\t{utils}",
									"tail.matrix"
								],
								[
									"getS3method\t{utils}",
									"getS3method"
								],
								[
									"write.table\t{utils}",
									"write.table"
								],
								[
									"strOptions\t{utils}",
									"strOptions"
								],
								[
									"rc.status\t{utils}",
									"rc.status"
								],
								[
									"asDateBuilt\t{utils}",
									"asDateBuilt"
								],
								[
									"Rprofmem\t{utils}",
									"Rprofmem"
								],
								[
									"apropos\t{utils}",
									"apropos"
								],
								[
									"getSrcDirectory\t{utils}",
									"getSrcDirectory"
								],
								[
									"as.relistable\t{utils}",
									"as.relistable"
								],
								[
									"SweaveSyntaxNoweb\t{utils}",
									"SweaveSyntaxNoweb"
								],
								[
									"SweaveSyntaxLatex\t{utils}",
									"SweaveSyntaxLatex"
								],
								[
									"citeNatbib\t{utils}",
									"citeNatbib"
								],
								[
									"read.fwf\t{utils}",
									"read.fwf"
								],
								[
									"de.setup\t{utils}",
									"de.setup"
								],
								[
									"removeSource\t{utils}",
									"removeSource"
								],
								[
									"data.entry\t{utils}",
									"data.entry"
								],
								[
									"packageVersion\t{utils}",
									"packageVersion"
								],
								[
									"as.personList\t{utils}",
									"as.personList"
								],
								[
									"citation\t{utils}",
									"citation"
								],
								[
									"citHeader\t{utils}",
									"citHeader"
								],
								[
									"read.fortran\t{utils}",
									"read.fortran"
								],
								[
									"findCRANmirror\t{utils}",
									"findCRANmirror"
								],
								[
									"aspell_package_R_files\t{utils}",
									"aspell_package_R_files"
								],
								[
									"RtangleFinish\t{utils}",
									"RtangleFinish"
								],
								[
									"hashtab\t{utils}",
									"hashtab"
								],
								[
									"rc.getOption\t{utils}",
									"rc.getOption"
								],
								[
									"RtangleWritedoc\t{utils}",
									"RtangleWritedoc"
								],
								[
									"readCitationFile\t{utils}",
									"readCitationFile"
								],
								[
									"stack\t{utils}",
									"stack"
								],
								[
									"package.skeleton\t{utils}",
									"package.skeleton"
								],
								[
									"memory.size\t{utils}",
									"memory.size"
								],
								[
									"de.ncols\t{utils}",
									"de.ncols"
								],
								[
									"file.edit\t{utils}",
									"file.edit"
								],
								[
									"sessionInfo\t{utils}",
									"sessionInfo"
								],
								[
									"SweaveSyntConv\t{utils}",
									"SweaveSyntConv"
								],
								[
									"RweaveLatex\t{utils}",
									"RweaveLatex"
								],
								[
									"help\t{utils}",
									"help"
								],
								[
									"prompt\t{utils}",
									"prompt"
								],
								[
									"getParseText\t{utils}",
									"getParseText"
								],
								[
									"osVersion\t{utils}",
									"osVersion"
								],
								[
									".AtNames\t{utils}",
									".AtNames"
								],
								[
									"url.show\t{utils}",
									"url.show"
								],
								[
									"getCRANmirrors\t{utils}",
									"getCRANmirrors"
								],
								[
									"head\t{utils}",
									"head"
								],
								[
									"localeToCharset\t{utils}",
									"localeToCharset"
								],
								[
									"Rprof\t{utils}",
									"Rprof"
								],
								[
									"getParseData\t{utils}",
									"getParseData"
								],
								[
									"RweaveLatexSetup\t{utils}",
									"RweaveLatexSetup"
								],
								[
									"formatOL\t{utils}",
									"formatOL"
								],
								[
									"dump.frames\t{utils}",
									"dump.frames"
								],
								[
									"read.table\t{utils}",
									"read.table"
								],
								[
									"URLdecode\t{utils}",
									"URLdecode"
								],
								[
									"numhash\t{utils}",
									"numhash"
								],
								[
									"isS3method\t{utils}",
									"isS3method"
								],
								[
									"compareVersion\t{utils}",
									"compareVersion"
								],
								[
									"count.fields\t{utils}",
									"count.fields"
								],
								[
									"tar\t{utils}",
									"tar"
								],
								[
									"setRepositories\t{utils}",
									"setRepositories"
								],
								[
									"edit\t{utils}",
									"edit"
								],
								[
									"mirror2html\t{utils}",
									"mirror2html"
								],
								[
									"relist\t{utils}",
									"relist"
								],
								[
									"chooseBioCmirror\t{utils}",
									"chooseBioCmirror"
								],
								[
									"available.packages\t{utils}",
									"available.packages"
								],
								[
									"aspell_write_personal_dictionary_file\t{utils}",
									"aspell_write_personal_dictionary_file"
								],
								[
									"getAnywhere\t{utils}",
									"getAnywhere"
								],
								[
									"hsearch_db\t{utils}",
									"hsearch_db"
								],
								[
									"personList\t{utils}",
									"personList"
								],
								[
									"fileSnapshot\t{utils}",
									"fileSnapshot"
								],
								[
									"combn\t{utils}",
									"combn"
								],
								[
									"packageStatus\t{utils}",
									"packageStatus"
								],
								[
									"read.socket\t{utils}",
									"read.socket"
								],
								[
									"find\t{utils}",
									"find"
								],
								[
									"RweaveLatexOptions\t{utils}",
									"RweaveLatexOptions"
								],
								[
									"page\t{utils}",
									"page"
								],
								[
									"write.csv\t{utils}",
									"write.csv"
								],
								[
									"dataentry\t{utils}",
									"dataentry"
								],
								[
									"getSrcFilename\t{utils}",
									"getSrcFilename"
								],
								[
									"packageDescription\t{utils}",
									"packageDescription"
								],
								[
									"file_test\t{utils}",
									"file_test"
								],
								[
									"toBibtex\t{utils}",
									"toBibtex"
								],
								[
									"browseVignettes\t{utils}",
									"browseVignettes"
								],
								[
									"setBreakpoint\t{utils}",
									"setBreakpoint"
								],
								[
									"download.packages\t{utils}",
									"download.packages"
								],
								[
									"remove.packages\t{utils}",
									"remove.packages"
								],
								[
									"RweaveLatexFinish\t{utils}",
									"RweaveLatexFinish"
								],
								[
									"chooseCRANmirror\t{utils}",
									"chooseCRANmirror"
								],
								[
									"upgrade\t{utils}",
									"upgrade"
								],
								[
									"de\t{utils}",
									"de"
								],
								[
									".RtangleCodeLabel\t{utils}",
									".RtangleCodeLabel"
								],
								[
									"formatUL\t{utils}",
									"formatUL"
								],
								[
									"de.restore\t{utils}",
									"de.restore"
								],
								[
									"promptPackage\t{utils}",
									"promptPackage"
								],
								[
									"write.csv2\t{utils}",
									"write.csv2"
								],
								[
									"Rtangle\t{utils}",
									"Rtangle"
								],
								[
									"packageName\t{utils}",
									"packageName"
								],
								[
									"glob2rx\t{utils}",
									"glob2rx"
								],
								[
									"unstack\t{utils}",
									"unstack"
								],
								[
									"read.DIF\t{utils}",
									"read.DIF"
								],
								[
									"savehistory\t{utils}",
									"savehistory"
								],
								[
									"vignette\t{utils}",
									"vignette"
								],
								[
									"install.packages\t{utils}",
									"install.packages"
								],
								[
									".S3methods\t{utils}",
									".S3methods"
								],
								[
									"argsAnywhere\t{utils}",
									"argsAnywhere"
								],
								[
									"help.search\t{utils}",
									"help.search"
								],
								[
									"getSrcref\t{utils}",
									"getSrcref"
								],
								[
									"makeRweaveLatexCodeRunner\t{utils}",
									"makeRweaveLatexCodeRunner"
								],
								[
									"RweaveEvalWithOpt\t{utils}",
									"RweaveEvalWithOpt"
								],
								[
									"lsf.str\t{utils}",
									"lsf.str"
								],
								[
									"select.list\t{utils}",
									"select.list"
								],
								[
									"cite\t{utils}",
									"cite"
								],
								[
									"recover\t{utils}",
									"recover"
								],
								[
									"fix\t{utils}",
									"fix"
								],
								[
									"new.packages\t{utils}",
									"new.packages"
								],
								[
									"aspell_package_Rd_files\t{utils}",
									"aspell_package_Rd_files"
								],
								[
									"str\t{utils}",
									"str"
								],
								[
									"RtangleRuncode\t{utils}",
									"RtangleRuncode"
								],
								[
									"process.events\t{utils}",
									"process.events"
								],
								[
									"example\t{utils}",
									"example"
								],
								[
									"warnErrList\t{utils}",
									"warnErrList"
								],
								[
									"getSrcLocation\t{utils}",
									"getSrcLocation"
								],
								[
									"flush.console\t{utils}",
									"flush.console"
								],
								[
									"maphash\t{utils}",
									"maphash"
								],
								[
									"timestamp\t{utils}",
									"timestamp"
								],
								[
									"make.packages.html\t{utils}",
									"make.packages.html"
								],
								[
									"rc.options\t{utils}",
									"rc.options"
								],
								[
									"getFromNamespace\t{utils}",
									"getFromNamespace"
								],
								[
									"clrhash\t{utils}",
									"clrhash"
								],
								[
									"adist\t{utils}",
									"adist"
								],
								[
									"contrib.url\t{utils}",
									"contrib.url"
								],
								[
									"URLencode\t{utils}",
									"URLencode"
								],
								[
									"rc.settings\t{utils}",
									"rc.settings"
								],
								[
									"help.start\t{utils}",
									"help.start"
								],
								[
									"unzip\t{utils}",
									"unzip"
								],
								[
									"pico\t{utils}",
									"pico"
								],
								[
									"-\t{base}",
									"-"
								],
								[
									"as.matrix.data.frame\t{base}",
									"as.matrix.data.frame"
								],
								[
									"F\t{base}",
									"F"
								],
								[
									"I\t{base}",
									"I"
								],
								[
									"registerS3methods\t{base}",
									"registerS3methods"
								],
								[
									"as.POSIXct.Date\t{base}",
									"as.POSIXct.Date"
								],
								[
									"T\t{base}",
									"T"
								],
								[
									"c\t{base}",
									"c"
								],
								[
									"q\t{base}",
									"q"
								],
								[
									"t\t{base}",
									"t"
								],
								[
									"array2DF\t{base}",
									"array2DF"
								],
								[
									"qr.solve\t{base}",
									"qr.solve"
								],
								[
									"str2expression\t{base}",
									"str2expression"
								],
								[
									"dynGet\t{base}",
									"dynGet"
								],
								[
									"as.single\t{base}",
									"as.single"
								],
								[
									"interaction\t{base}",
									"interaction"
								],
								[
									"as.POSIXlt.default\t{base}",
									"as.POSIXlt.default"
								],
								[
									"gamma\t{base}",
									"gamma"
								],
								[
									"as.package_version\t{base}",
									"as.package_version"
								],
								[
									".GlobalEnv\t{base}",
									".GlobalEnv"
								],
								[
									"getNativeSymbolInfo\t{base}",
									"getNativeSymbolInfo"
								],
								[
									"print.srcfile\t{base}",
									"print.srcfile"
								],
								[
									"packageHasNamespace\t{base}",
									"packageHasNamespace"
								],
								[
									".handleSimpleError\t{base}",
									".handleSimpleError"
								],
								[
									"xtfrm.AsIs\t{base}",
									"xtfrm.AsIs"
								],
								[
									"file.choose\t{base}",
									"file.choose"
								],
								[
									"summary.connection\t{base}",
									"summary.connection"
								],
								[
									".C\t{base}",
									".C"
								],
								[
									"subset.default\t{base}",
									"subset.default"
								],
								[
									"warningCondition\t{base}",
									"warningCondition"
								],
								[
									"utf8ToInt\t{base}",
									"utf8ToInt"
								],
								[
									"baseenv\t{base}",
									"baseenv"
								],
								[
									".set_row_names\t{base}",
									".set_row_names"
								],
								[
									"Ops.POSIXt\t{base}",
									"Ops.POSIXt"
								],
								[
									"quote\t{base}",
									"quote"
								],
								[
									"inverse.rle\t{base}",
									"inverse.rle"
								],
								[
									"memory.profile\t{base}",
									"memory.profile"
								],
								[
									"split.POSIXct\t{base}",
									"split.POSIXct"
								],
								[
									"unique.numeric_version\t{base}",
									"unique.numeric_version"
								],
								[
									"infoRDS\t{base}",
									"infoRDS"
								],
								[
									"length.POSIXlt\t{base}",
									"length.POSIXlt"
								],
								[
									"getOption\t{base}",
									"getOption"
								],
								[
									"Im\t{base}",
									"Im"
								],
								[
									"qr.Q\t{base}",
									"qr.Q"
								],
								[
									"qr.R\t{base}",
									"qr.R"
								],
								[
									"rapply\t{base}",
									"rapply"
								],
								[
									"qr.X\t{base}",
									"qr.X"
								],
								[
									"library.dynam\t{base}",
									"library.dynam"
								],
								[
									"evalq\t{base}",
									"evalq"
								],
								[
									"units.difftime\t{base}",
									"units.difftime"
								],
								[
									"Re\t{base}",
									"Re"
								],
								[
									"package_version\t{base}",
									"package_version"
								],
								[
									"is.name\t{base}",
									"is.name"
								],
								[
									"as.data.frame.matrix\t{base}",
									"as.data.frame.matrix"
								],
								[
									".NotYetImplemented\t{base}",
									".NotYetImplemented"
								],
								[
									"LETTERS\t{base}",
									"LETTERS"
								],
								[
									"unique.array\t{base}",
									"unique.array"
								],
								[
									".LC.categories\t{base}",
									".LC.categories"
								],
								[
									"dimnames.data.frame\t{base}",
									"dimnames.data.frame"
								],
								[
									"require\t{base}",
									"require"
								],
								[
									"parse\t{base}",
									"parse"
								],
								[
									"by\t{base}",
									"by"
								],
								[
									"gc\t{base}",
									"gc"
								],
								[
									"gl\t{base}",
									"gl"
								],
								[
									"if\t{base}",
									"if"
								],
								[
									"ls\t{base}",
									"ls"
								],
								[
									"unique.warnings\t{base}",
									"unique.warnings"
								],
								[
									"pi\t{base}",
									"pi"
								],
								[
									"gzcon\t{base}",
									"gzcon"
								],
								[
									"qr\t{base}",
									"qr"
								],
								[
									"lapply\t{base}",
									"lapply"
								],
								[
									"rm\t{base}",
									"rm"
								],
								[
									"paste\t{base}",
									"paste"
								],
								[
									"match\t{base}",
									"match"
								],
								[
									"order\t{base}",
									"order"
								],
								[
									"xpdrows.data.frame\t{base}",
									"xpdrows.data.frame"
								],
								[
									"rank\t{base}",
									"rank"
								],
								[
									"seq.default\t{base}",
									"seq.default"
								],
								[
									"startsWith\t{base}",
									"startsWith"
								],
								[
									".noGenerics\t{base}",
									".noGenerics"
								],
								[
									"aperm.default\t{base}",
									"aperm.default"
								],
								[
									"kronecker\t{base}",
									"kronecker"
								],
								[
									"traceback\t{base}",
									"traceback"
								],
								[
									"as.character.hexmode\t{base}",
									"as.character.hexmode"
								],
								[
									"simpleError\t{base}",
									"simpleError"
								],
								[
									"warnings\t{base}",
									"warnings"
								],
								[
									"as.Date.POSIXct\t{base}",
									"as.Date.POSIXct"
								],
								[
									"kappa.qr\t{base}",
									"kappa.qr"
								],
								[
									"isNamespace\t{base}",
									"isNamespace"
								],
								[
									"is.finite.POSIXlt\t{base}",
									"is.finite.POSIXlt"
								],
								[
									"colMeans\t{base}",
									"colMeans"
								],
								[
									"as.Date.POSIXlt\t{base}",
									"as.Date.POSIXlt"
								],
								[
									"asNamespace\t{base}",
									"asNamespace"
								],
								[
									"xtfrm.difftime\t{base}",
									"xtfrm.difftime"
								],
								[
									"quit\t{base}",
									"quit"
								],
								[
									"kappa.lm\t{base}",
									"kappa.lm"
								],
								[
									"setSessionTimeLimit\t{base}",
									"setSessionTimeLimit"
								],
								[
									"find.package\t{base}",
									"find.package"
								],
								[
									"weekdays.POSIXt\t{base}",
									"weekdays.POSIXt"
								],
								[
									"eval\t{base}",
									"eval"
								],
								[
									"c.numeric_version\t{base}",
									"c.numeric_version"
								],
								[
									"deparse1\t{base}",
									"deparse1"
								],
								[
									"split.Date\t{base}",
									"split.Date"
								],
								[
									"readChar\t{base}",
									"readChar"
								],
								[
									"autoloader\t{base}",
									"autoloader"
								],
								[
									"untracemem\t{base}",
									"untracemem"
								],
								[
									"Encoding\t{base}",
									"Encoding"
								],
								[
									"debuggingState\t{base}",
									"debuggingState"
								],
								[
									"do.call\t{base}",
									"do.call"
								],
								[
									".cache_class\t{base}",
									".cache_class"
								],
								[
									".getRequiredPackages2\t{base}",
									".getRequiredPackages2"
								],
								[
									"chooseOpsMethod.default\t{base}",
									"chooseOpsMethod.default"
								],
								[
									"levels.default\t{base}",
									"levels.default"
								],
								[
									"computeRestarts\t{base}",
									"computeRestarts"
								],
								[
									"readBin\t{base}",
									"readBin"
								],
								[
									"as.double.difftime\t{base}",
									"as.double.difftime"
								],
								[
									"sys.call\t{base}",
									"sys.call"
								],
								[
									"path.expand\t{base}",
									"path.expand"
								],
								[
									"fifo\t{base}",
									"fifo"
								],
								[
									"substitute\t{base}",
									"substitute"
								],
								[
									"data.matrix\t{base}",
									"data.matrix"
								],
								[
									"all.equal.formula\t{base}",
									"all.equal.formula"
								],
								[
									"as.logical.factor\t{base}",
									"as.logical.factor"
								],
								[
									"file\t{base}",
									"file"
								],
								[
									"srcfilealias\t{base}",
									"srcfilealias"
								],
								[
									"determinant\t{base}",
									"determinant"
								],
								[
									"print.noquote\t{base}",
									"print.noquote"
								],
								[
									"by.default\t{base}",
									"by.default"
								],
								[
									"Ops.ordered\t{base}",
									"Ops.ordered"
								],
								[
									"getNamespace\t{base}",
									"getNamespace"
								],
								[
									"as.POSIXct.default\t{base}",
									"as.POSIXct.default"
								],
								[
									"conditionMessage.condition\t{base}",
									"conditionMessage.condition"
								],
								[
									".OptRequireMethods\t{base}",
									".OptRequireMethods"
								],
								[
									"mean.POSIXct\t{base}",
									"mean.POSIXct"
								],
								[
									"as.POSIXct.POSIXlt\t{base}",
									"as.POSIXct.POSIXlt"
								],
								[
									"mean.POSIXlt\t{base}",
									"mean.POSIXlt"
								],
								[
									"as.character.octmode\t{base}",
									"as.character.octmode"
								],
								[
									".makeMessage\t{base}",
									".makeMessage"
								],
								[
									"browserSetDebug\t{base}",
									"browserSetDebug"
								],
								[
									"parent.env\t{base}",
									"parent.env"
								],
								[
									"print.listof\t{base}",
									"print.listof"
								],
								[
									"close.srcfile\t{base}",
									"close.srcfile"
								],
								[
									"anyNA.numeric_version\t{base}",
									"anyNA.numeric_version"
								],
								[
									"chooseOpsMethod\t{base}",
									"chooseOpsMethod"
								],
								[
									"socketAccept\t{base}",
									"socketAccept"
								],
								[
									"transform.data.frame\t{base}",
									"transform.data.frame"
								],
								[
									"interactive\t{base}",
									"interactive"
								],
								[
									"unname\t{base}",
									"unname"
								],
								[
									"remove\t{base}",
									"remove"
								],
								[
									"sample\t{base}",
									"sample"
								],
								[
									"getNamespaceVersion\t{base}",
									"getNamespaceVersion"
								],
								[
									"removeTaskCallback\t{base}",
									"removeTaskCallback"
								],
								[
									"scale\t{base}",
									"scale"
								],
								[
									"is.data.frame\t{base}",
									"is.data.frame"
								],
								[
									"textConnectionValue\t{base}",
									"textConnectionValue"
								],
								[
									"transform\t{base}",
									"transform"
								],
								[
									"lchoose\t{base}",
									"lchoose"
								],
								[
									"format.POSIXct\t{base}",
									"format.POSIXct"
								],
								[
									"is.call\t{base}",
									"is.call"
								],
								[
									".packages\t{base}",
									".packages"
								],
								[
									"row.names\t{base}",
									"row.names"
								],
								[
									"str2lang\t{base}",
									"str2lang"
								],
								[
									"print.factor\t{base}",
									"print.factor"
								],
								[
									"format.POSIXlt\t{base}",
									"format.POSIXlt"
								],
								[
									"switch\t{base}",
									"switch"
								],
								[
									"getElement\t{base}",
									"getElement"
								],
								[
									".amatch_costs\t{base}",
									".amatch_costs"
								],
								[
									"lengths\t{base}",
									"lengths"
								],
								[
									"save\t{base}",
									"save"
								],
								[
									"function\t{base}",
									"function"
								],
								[
									"is.single\t{base}",
									"is.single"
								],
								[
									"default.stringsAsFactors\t{base}",
									"default.stringsAsFactors"
								],
								[
									"pmatch\t{base}",
									"pmatch"
								],
								[
									"withRestarts\t{base}",
									"withRestarts"
								],
								[
									"scan\t{base}",
									"scan"
								],
								[
									"is.null\t{base}",
									"is.null"
								],
								[
									"sink.number\t{base}",
									"sink.number"
								],
								[
									"pretty\t{base}",
									"pretty"
								],
								[
									"Summary.Date\t{base}",
									"Summary.Date"
								],
								[
									"library.dynam.unload\t{base}",
									"library.dynam.unload"
								],
								[
									"letters\t{base}",
									"letters"
								],
								[
									"diff.difftime\t{base}",
									"diff.difftime"
								],
								[
									"browserCondition\t{base}",
									"browserCondition"
								],
								[
									"dir.exists\t{base}",
									"dir.exists"
								],
								[
									"print.srcref\t{base}",
									"print.srcref"
								],
								[
									"arrayInd\t{base}",
									"arrayInd"
								],
								[
									"casefold\t{base}",
									"casefold"
								],
								[
									"anyNA\t{base}",
									"anyNA"
								],
								[
									"suppressWarnings\t{base}",
									"suppressWarnings"
								],
								[
									"seek\t{base}",
									"seek"
								],
								[
									"is.language\t{base}",
									"is.language"
								],
								[
									"xtfrm.numeric_version\t{base}",
									"xtfrm.numeric_version"
								],
								[
									"get0\t{base}",
									"get0"
								],
								[
									"as.vector\t{base}",
									"as.vector"
								],
								[
									"strftime\t{base}",
									"strftime"
								],
								[
									"readRDS\t{base}",
									"readRDS"
								],
								[
									"is.pairlist\t{base}",
									"is.pairlist"
								],
								[
									"chartr\t{base}",
									"chartr"
								],
								[
									"rep.Date\t{base}",
									"rep.Date"
								],
								[
									"isFALSE\t{base}",
									"isFALSE"
								],
								[
									"as.pairlist\t{base}",
									"as.pairlist"
								],
								[
									"as.octmode\t{base}",
									"as.octmode"
								],
								[
									"is.na.numeric_version\t{base}",
									"is.na.numeric_version"
								],
								[
									"length\t{base}",
									"length"
								],
								[
									"formals\t{base}",
									"formals"
								],
								[
									"rawConnectionValue\t{base}",
									"rawConnectionValue"
								],
								[
									"Math.POSIXt\t{base}",
									"Math.POSIXt"
								],
								[
									"Sys.chmod\t{base}",
									"Sys.chmod"
								],
								[
									"formatC\t{base}",
									"formatC"
								],
								[
									"sign\t{base}",
									"sign"
								],
								[
									"sinh\t{base}",
									"sinh"
								],
								[
									"sink\t{base}",
									"sink"
								],
								[
									"solve\t{base}",
									"solve"
								],
								[
									".External.graphics\t{base}",
									".External.graphics"
								],
								[
									"as.data.frame.default\t{base}",
									"as.data.frame.default"
								],
								[
									"is.numeric.Date\t{base}",
									"is.numeric.Date"
								],
								[
									"all.equal.character\t{base}",
									"all.equal.character"
								],
								[
									"unsplit\t{base}",
									"unsplit"
								],
								[
									"as.hexmode\t{base}",
									"as.hexmode"
								],
								[
									"globalenv\t{base}",
									"globalenv"
								],
								[
									"list.files\t{base}",
									"list.files"
								],
								[
									"loadingNamespaceInfo\t{base}",
									"loadingNamespaceInfo"
								],
								[
									"packageEvent\t{base}",
									"packageEvent"
								],
								[
									"make.unique\t{base}",
									"make.unique"
								],
								[
									".decode_numeric_version\t{base}",
									".decode_numeric_version"
								],
								[
									"logical\t{base}",
									"logical"
								],
								[
									"as.vector.factor\t{base}",
									"as.vector.factor"
								],
								[
									"noquote\t{base}",
									"noquote"
								],
								[
									"as.qr\t{base}",
									"as.qr"
								],
								[
									"suppressPackageStartupMessages\t{base}",
									"suppressPackageStartupMessages"
								],
								[
									"as.null.default\t{base}",
									"as.null.default"
								],
								[
									"c.difftime\t{base}",
									"c.difftime"
								],
								[
									"as.data.frame.data.frame\t{base}",
									"as.data.frame.data.frame"
								],
								[
									"summary.warnings\t{base}",
									"summary.warnings"
								],
								[
									"file.show\t{base}",
									"file.show"
								],
								[
									"bindingIsLocked\t{base}",
									"bindingIsLocked"
								],
								[
									".maskedMsg\t{base}",
									".maskedMsg"
								],
								[
									".colSums\t{base}",
									".colSums"
								],
								[
									"acosh\t{base}",
									"acosh"
								],
								[
									"bzfile\t{base}",
									"bzfile"
								],
								[
									"intersect\t{base}",
									"intersect"
								],
								[
									"by.data.frame\t{base}",
									"by.data.frame"
								],
								[
									"summary.srcref\t{base}",
									"summary.srcref"
								],
								[
									"withAutoprint\t{base}",
									"withAutoprint"
								],
								[
									"as.table.default\t{base}",
									"as.table.default"
								],
								[
									"kappa.default\t{base}",
									"kappa.default"
								],
								[
									"as.list.Date\t{base}",
									"as.list.Date"
								],
								[
									".Primitive\t{base}",
									".Primitive"
								],
								[
									"getDLLRegisteredRoutines.character\t{base}",
									"getDLLRegisteredRoutines.character"
								],
								[
									"gctorture2\t{base}",
									"gctorture2"
								],
								[
									"Conj\t{base}",
									"Conj"
								],
								[
									"normalizePath\t{base}",
									"normalizePath"
								],
								[
									"sort\t{base}",
									"sort"
								],
								[
									"addNA\t{base}",
									"addNA"
								],
								[
									"is.matrix\t{base}",
									"is.matrix"
								],
								[
									"writeLines\t{base}",
									"writeLines"
								],
								[
									"colSums\t{base}",
									"colSums"
								],
								[
									"saveRDS\t{base}",
									"saveRDS"
								],
								[
									"suppressMessages\t{base}",
									"suppressMessages"
								],
								[
									"print.data.frame\t{base}",
									"print.data.frame"
								],
								[
									"undebug\t{base}",
									"undebug"
								],
								[
									"tanh\t{base}",
									"tanh"
								],
								[
									"is.loaded\t{base}",
									"is.loaded"
								],
								[
									"curlGetHeaders\t{base}",
									"curlGetHeaders"
								],
								[
									"sqrt\t{base}",
									"sqrt"
								],
								[
									"sample.int\t{base}",
									"sample.int"
								],
								[
									"grep\t{base}",
									"grep"
								],
								[
									"xtfrm.POSIXct\t{base}",
									"xtfrm.POSIXct"
								],
								[
									"is.logical\t{base}",
									"is.logical"
								],
								[
									"print.proc_time\t{base}",
									"print.proc_time"
								],
								[
									"Sys.readlink\t{base}",
									"Sys.readlink"
								],
								[
									"strsplit\t{base}",
									"strsplit"
								],
								[
									"xtfrm.POSIXlt\t{base}",
									"xtfrm.POSIXlt"
								],
								[
									"Cstack_info\t{base}",
									"Cstack_info"
								],
								[
									"dir.create\t{base}",
									"dir.create"
								],
								[
									"nlevels\t{base}",
									"nlevels"
								],
								[
									"aperm\t{base}",
									"aperm"
								],
								[
									"xtfrm\t{base}",
									"xtfrm"
								],
								[
									"Summary.data.frame\t{base}",
									"Summary.data.frame"
								],
								[
									"gsub\t{base}",
									"gsub"
								],
								[
									"merge.data.frame\t{base}",
									"merge.data.frame"
								],
								[
									"as.vector.POSIXlt\t{base}",
									"as.vector.POSIXlt"
								],
								[
									".S3PrimitiveGenerics\t{base}",
									".S3PrimitiveGenerics"
								],
								[
									"stop\t{base}",
									"stop"
								],
								[
									"sort.list\t{base}",
									"sort.list"
								],
								[
									"unloadNamespace\t{base}",
									"unloadNamespace"
								],
								[
									"grouping\t{base}",
									"grouping"
								],
								[
									"seek.connection\t{base}",
									"seek.connection"
								],
								[
									"as.matrix.default\t{base}",
									"as.matrix.default"
								],
								[
									"as.POSIXlt.numeric\t{base}",
									"as.POSIXlt.numeric"
								],
								[
									"eval.parent\t{base}",
									"eval.parent"
								],
								[
									"diff.POSIXt\t{base}",
									"diff.POSIXt"
								],
								[
									"pushBack\t{base}",
									"pushBack"
								],
								[
									"transform.default\t{base}",
									"transform.default"
								],
								[
									"srcfilecopy\t{base}",
									"srcfilecopy"
								],
								[
									"qr.coef\t{base}",
									"qr.coef"
								],
								[
									"restartFormals\t{base}",
									"restartFormals"
								],
								[
									"print.rle\t{base}",
									"print.rle"
								],
								[
									"format.octmode\t{base}",
									"format.octmode"
								],
								[
									"diff.Date\t{base}",
									"diff.Date"
								],
								[
									"conditionCall.condition\t{base}",
									"conditionCall.condition"
								],
								[
									"as.matrix\t{base}",
									"as.matrix"
								],
								[
									"enc2utf8\t{base}",
									"enc2utf8"
								],
								[
									"sys.function\t{base}",
									"sys.function"
								],
								[
									"print.DLLInfo\t{base}",
									"print.DLLInfo"
								],
								[
									"UseMethod\t{base}",
									"UseMethod"
								],
								[
									"write.dcf\t{base}",
									"write.dcf"
								],
								[
									"split\t{base}",
									"split"
								],
								[
									"match.call\t{base}",
									"match.call"
								],
								[
									"is.numeric.POSIXt\t{base}",
									"is.numeric.POSIXt"
								],
								[
									"sys.calls\t{base}",
									"sys.calls"
								],
								[
									".AutoloadEnv\t{base}",
									".AutoloadEnv"
								],
								[
									"format.numeric_version\t{base}",
									"format.numeric_version"
								],
								[
									"char.expand\t{base}",
									"char.expand"
								],
								[
									"signif\t{base}",
									"signif"
								],
								[
									"file.link\t{base}",
									"file.link"
								],
								[
									".Devices\t{base}",
									".Devices"
								],
								[
									"diff.default\t{base}",
									"diff.default"
								],
								[
									"dyn.load\t{base}",
									"dyn.load"
								],
								[
									".userHooksEnv\t{base}",
									".userHooksEnv"
								],
								[
									"anyNA.POSIXlt\t{base}",
									"anyNA.POSIXlt"
								],
								[
									".subset\t{base}",
									".subset"
								],
								[
									"expm1\t{base}",
									"expm1"
								],
								[
									"is.vector\t{base}",
									"is.vector"
								],
								[
									"apply\t{base}",
									"apply"
								],
								[
									"iconvlist\t{base}",
									"iconvlist"
								],
								[
									"chkDots\t{base}",
									"chkDots"
								],
								[
									".gt\t{base}",
									".gt"
								],
								[
									"is.na.data.frame\t{base}",
									"is.na.data.frame"
								],
								[
									"library\t{base}",
									"library"
								],
								[
									"julian.POSIXt\t{base}",
									"julian.POSIXt"
								],
								[
									"path.package\t{base}",
									"path.package"
								],
								[
									"as.data.frame.vector\t{base}",
									"as.data.frame.vector"
								],
								[
									"proc.time\t{base}",
									"proc.time"
								],
								[
									"table\t{base}",
									"table"
								],
								[
									"enc2native\t{base}",
									"enc2native"
								],
								[
									"as.data.frame.table\t{base}",
									"as.data.frame.table"
								],
								[
									"debug\t{base}",
									"debug"
								],
								[
									"OlsonNames\t{base}",
									"OlsonNames"
								],
								[
									"marginSums\t{base}",
									"marginSums"
								],
								[
									".Library\t{base}",
									".Library"
								],
								[
									"isOpen\t{base}",
									"isOpen"
								],
								[
									"grepRaw\t{base}",
									"grepRaw"
								],
								[
									"nullfile\t{base}",
									"nullfile"
								],
								[
									"rowsum\t{base}",
									"rowsum"
								],
								[
									"as.list.data.frame\t{base}",
									"as.list.data.frame"
								],
								[
									"as.list\t{base}",
									"as.list"
								],
								[
									"topenv\t{base}",
									"topenv"
								],
								[
									"system.file\t{base}",
									"system.file"
								],
								[
									"repeat\t{base}",
									"repeat"
								],
								[
									"as.character.factor\t{base}",
									"as.character.factor"
								],
								[
									"print.table\t{base}",
									"print.table"
								],
								[
									"lockEnvironment\t{base}",
									"lockEnvironment"
								],
								[
									"xtfrm.default\t{base}",
									"xtfrm.default"
								],
								[
									"all.vars\t{base}",
									"all.vars"
								],
								[
									"format.default\t{base}",
									"format.default"
								],
								[
									"choose\t{base}",
									"choose"
								],
								[
									"as.expression.default\t{base}",
									"as.expression.default"
								],
								[
									"bitwAnd\t{base}",
									"bitwAnd"
								],
								[
									"mem.maxVSize\t{base}",
									"mem.maxVSize"
								],
								[
									"tabulate\t{base}",
									"tabulate"
								],
								[
									"cut.POSIXt\t{base}",
									"cut.POSIXt"
								],
								[
									"as.POSIXlt.Date\t{base}",
									"as.POSIXlt.Date"
								],
								[
									"c.noquote\t{base}",
									"c.noquote"
								],
								[
									"file.size\t{base}",
									"file.size"
								],
								[
									"makeActiveBinding\t{base}",
									"makeActiveBinding"
								],
								[
									"c.Date\t{base}",
									"c.Date"
								],
								[
									"findInterval\t{base}",
									"findInterval"
								],
								[
									"all.equal.raw\t{base}",
									"all.equal.raw"
								],
								[
									"parseNamespaceFile\t{base}",
									"parseNamespaceFile"
								],
								[
									"icuSetCollate\t{base}",
									"icuSetCollate"
								],
								[
									"print.numeric_version\t{base}",
									"print.numeric_version"
								],
								[
									"sequence.default\t{base}",
									"sequence.default"
								],
								[
									"Sys.localeconv\t{base}",
									"Sys.localeconv"
								],
								[
									"conditionCall\t{base}",
									"conditionCall"
								],
								[
									"margin.table\t{base}",
									"margin.table"
								],
								[
									"sprintf\t{base}",
									"sprintf"
								],
								[
									"duplicated.matrix\t{base}",
									"duplicated.matrix"
								],
								[
									".ArgsEnv\t{base}",
									".ArgsEnv"
								],
								[
									"cbind.data.frame\t{base}",
									"cbind.data.frame"
								],
								[
									"read.dcf\t{base}",
									"read.dcf"
								],
								[
									"names\t{base}",
									"names"
								],
								[
									"append\t{base}",
									"append"
								],
								[
									"rowsum.data.frame\t{base}",
									"rowsum.data.frame"
								],
								[
									"mat.or.vec\t{base}",
									"mat.or.vec"
								],
								[
									"as.POSIXlt.POSIXct\t{base}",
									"as.POSIXlt.POSIXct"
								],
								[
									"R.version.string\t{base}",
									"R.version.string"
								],
								[
									"tanpi\t{base}",
									"tanpi"
								],
								[
									"namespaceExport\t{base}",
									"namespaceExport"
								],
								[
									"Summary.numeric_version\t{base}",
									"Summary.numeric_version"
								],
								[
									"prmatrix\t{base}",
									"prmatrix"
								],
								[
									"as.single.default\t{base}",
									"as.single.default"
								],
								[
									"expand.grid\t{base}",
									"expand.grid"
								],
								[
									"vapply\t{base}",
									"vapply"
								],
								[
									"dimnames\t{base}",
									"dimnames"
								],
								[
									"nameOfClass\t{base}",
									"nameOfClass"
								],
								[
									".popath\t{base}",
									".popath"
								],
								[
									"kappa\t{base}",
									"kappa"
								],
								[
									"identical\t{base}",
									"identical"
								],
								[
									"chol.default\t{base}",
									"chol.default"
								],
								[
									"sapply\t{base}",
									"sapply"
								],
								[
									".format.zeros\t{base}",
									".format.zeros"
								],
								[
									"gctorture\t{base}",
									"gctorture"
								],
								[
									"missing\t{base}",
									"missing"
								],
								[
									"abbreviate\t{base}",
									"abbreviate"
								],
								[
									"showConnections\t{base}",
									"showConnections"
								],
								[
									"merge\t{base}",
									"merge"
								],
								[
									"nargs\t{base}",
									"nargs"
								],
								[
									"proportions\t{base}",
									"proportions"
								],
								[
									"is.R\t{base}",
									"is.R"
								],
								[
									"Sys.sleep\t{base}",
									"Sys.sleep"
								],
								[
									"reg.finalizer\t{base}",
									"reg.finalizer"
								],
								[
									"isdebugged\t{base}",
									"isdebugged"
								],
								[
									".C_R_getTaskCallbackNames\t{base}",
									".C_R_getTaskCallbackNames"
								],
								[
									"anyDuplicated.default\t{base}",
									"anyDuplicated.default"
								],
								[
									"mapply\t{base}",
									"mapply"
								],
								[
									"asplit\t{base}",
									"asplit"
								],
								[
									"rep.factor\t{base}",
									"rep.factor"
								],
								[
									"zapsmall\t{base}",
									"zapsmall"
								],
								[
									"outer\t{base}",
									"outer"
								],
								[
									"print.function\t{base}",
									"print.function"
								],
								[
									"qr.default\t{base}",
									"qr.default"
								],
								[
									"backsolve\t{base}",
									"backsolve"
								],
								[
									"ISOdate\t{base}",
									"ISOdate"
								],
								[
									"duplicated.array\t{base}",
									"duplicated.array"
								],
								[
									"isS4\t{base}",
									"isS4"
								],
								[
									"isBaseNamespace\t{base}",
									"isBaseNamespace"
								],
								[
									"errorCondition\t{base}",
									"errorCondition"
								],
								[
									".detach\t{base}",
									".detach"
								],
								[
									"Arg\t{base}",
									"Arg"
								],
								[
									"file.mtime\t{base}",
									"file.mtime"
								],
								[
									"setwd\t{base}",
									"setwd"
								],
								[
									".kappa_tri\t{base}",
									".kappa_tri"
								],
								[
									"bitwNot\t{base}",
									"bitwNot"
								],
								[
									".getRequiredPackages\t{base}",
									".getRequiredPackages"
								],
								[
									"getwd\t{base}",
									"getwd"
								],
								[
									"list2env\t{base}",
									"list2env"
								],
								[
									"set.seed\t{base}",
									"set.seed"
								],
								[
									".doWrap\t{base}",
									".doWrap"
								],
								[
									"R_compiled_by\t{base}",
									"R_compiled_by"
								],
								[
									"is.primitive\t{base}",
									"is.primitive"
								],
								[
									"grepl\t{base}",
									"grepl"
								],
								[
									"Ops.data.frame\t{base}",
									"Ops.data.frame"
								],
								[
									"format.difftime\t{base}",
									"format.difftime"
								],
								[
									"trigamma\t{base}",
									"trigamma"
								],
								[
									"as.list.difftime\t{base}",
									"as.list.difftime"
								],
								[
									"character\t{base}",
									"character"
								],
								[
									".col\t{base}",
									".col"
								],
								[
									".POSIXct\t{base}",
									".POSIXct"
								],
								[
									"returnValue\t{base}",
									"returnValue"
								],
								[
									".POSIXlt\t{base}",
									".POSIXlt"
								],
								[
									"xtfrm.data.frame\t{base}",
									"xtfrm.data.frame"
								],
								[
									"Math.difftime\t{base}",
									"Math.difftime"
								],
								[
									"version\t{base}",
									"version"
								],
								[
									".F_dchdc\t{base}",
									".F_dchdc"
								],
								[
									"jitter\t{base}",
									"jitter"
								],
								[
									"isNamespaceLoaded\t{base}",
									"isNamespaceLoaded"
								],
								[
									"print.warnings\t{base}",
									"print.warnings"
								],
								[
									"simpleWarning\t{base}",
									"simpleWarning"
								],
								[
									"double\t{base}",
									"double"
								],
								[
									"as.expression\t{base}",
									"as.expression"
								],
								[
									"summary.srcfile\t{base}",
									"summary.srcfile"
								],
								[
									"summary.data.frame\t{base}",
									"summary.data.frame"
								],
								[
									"c.factor\t{base}",
									"c.factor"
								],
								[
									"debugonce\t{base}",
									"debugonce"
								],
								[
									"print\t{base}",
									"print"
								],
								[
									".isMethodsDispatchOn\t{base}",
									".isMethodsDispatchOn"
								],
								[
									"gregexec\t{base}",
									"gregexec"
								],
								[
									"forceAndCall\t{base}",
									"forceAndCall"
								],
								[
									"close.srcfilealias\t{base}",
									"close.srcfilealias"
								],
								[
									".gtn\t{base}",
									".gtn"
								],
								[
									".mergeExportMethods\t{base}",
									".mergeExportMethods"
								],
								[
									".primTrace\t{base}",
									".primTrace"
								],
								[
									"seq.int\t{base}",
									"seq.int"
								],
								[
									"gregexpr\t{base}",
									"gregexpr"
								],
								[
									"namespaceImportClasses\t{base}",
									"namespaceImportClasses"
								],
								[
									"contributors\t{base}",
									"contributors"
								],
								[
									"unix.time\t{base}",
									"unix.time"
								],
								[
									"ngettext\t{base}",
									"ngettext"
								],
								[
									"print.Dlist\t{base}",
									"print.Dlist"
								],
								[
									"Find\t{base}",
									"Find"
								],
								[
									"all.equal.envRefClass\t{base}",
									"all.equal.envRefClass"
								],
								[
									"as.name\t{base}",
									"as.name"
								],
								[
									"gettext\t{base}",
									"gettext"
								],
								[
									"rawToChar\t{base}",
									"rawToChar"
								],
								[
									"anyDuplicated.array\t{base}",
									"anyDuplicated.array"
								],
								[
									"unique.POSIXlt\t{base}",
									"unique.POSIXlt"
								],
								[
									"as.list.POSIXct\t{base}",
									"as.list.POSIXct"
								],
								[
									"as.data.frame.character\t{base}",
									"as.data.frame.character"
								],
								[
									"importIntoEnv\t{base}",
									"importIntoEnv"
								],
								[
									"as.list.POSIXlt\t{base}",
									"as.list.POSIXlt"
								],
								[
									"isIncomplete\t{base}",
									"isIncomplete"
								],
								[
									"qr.qy\t{base}",
									"qr.qy"
								],
								[
									"bitwXor\t{base}",
									"bitwXor"
								],
								[
									"format.factor\t{base}",
									"format.factor"
								],
								[
									"Map\t{base}",
									"Map"
								],
								[
									"getTaskCallbackNames\t{base}",
									"getTaskCallbackNames"
								],
								[
									"data.frame\t{base}",
									"data.frame"
								],
								[
									"Mod\t{base}",
									"Mod"
								],
								[
									"sQuote\t{base}",
									"sQuote"
								],
								[
									"regexec\t{base}",
									"regexec"
								],
								[
									"-.Date\t{base}",
									"-.Date"
								],
								[
									"regexpr\t{base}",
									"regexpr"
								],
								[
									"packageNotFoundError\t{base}",
									"packageNotFoundError"
								],
								[
									"sys.nframe\t{base}",
									"sys.nframe"
								],
								[
									"as.table\t{base}",
									"as.table"
								],
								[
									"sys.load.image\t{base}",
									"sys.load.image"
								],
								[
									"source\t{base}",
									"source"
								],
								[
									"objects\t{base}",
									"objects"
								],
								[
									"is.table\t{base}",
									"is.table"
								],
								[
									"sys.status\t{base}",
									"sys.status"
								],
								[
									"array\t{base}",
									"array"
								],
								[
									"search\t{base}",
									"search"
								],
								[
									"is.infinite\t{base}",
									"is.infinite"
								],
								[
									"Sys.setLanguage\t{base}",
									"Sys.setLanguage"
								],
								[
									".Machine\t{base}",
									".Machine"
								],
								[
									"weekdays.Date\t{base}",
									"weekdays.Date"
								],
								[
									"rownames\t{base}",
									"rownames"
								],
								[
									"readRenviron\t{base}",
									"readRenviron"
								],
								[
									"textConnection\t{base}",
									"textConnection"
								],
								[
									".rowMeans\t{base}",
									".rowMeans"
								],
								[
									"getSrcLines\t{base}",
									"getSrcLines"
								],
								[
									".Call\t{base}",
									".Call"
								],
								[
									"unclass\t{base}",
									"unclass"
								],
								[
									".expand_R_libs_env_var\t{base}",
									".expand_R_libs_env_var"
								],
								[
									"gc.time\t{base}",
									"gc.time"
								],
								[
									"cummax\t{base}",
									"cummax"
								],
								[
									"gcinfo\t{base}",
									"gcinfo"
								],
								[
									"cummin\t{base}",
									"cummin"
								],
								[
									".mergeImportMethods\t{base}",
									".mergeImportMethods"
								],
								[
									".subset2\t{base}",
									".subset2"
								],
								[
									"addTaskCallback\t{base}",
									"addTaskCallback"
								],
								[
									"file.mode\t{base}",
									"file.mode"
								],
								[
									".knownS3Generics\t{base}",
									".knownS3Generics"
								],
								[
									"unlockBinding\t{base}",
									"unlockBinding"
								],
								[
									"solve.qr\t{base}",
									"solve.qr"
								],
								[
									".deparseOpts\t{base}",
									".deparseOpts"
								],
								[
									"file.info\t{base}",
									"file.info"
								],
								[
									".row\t{base}",
									".row"
								],
								[
									"round.POSIXt\t{base}",
									"round.POSIXt"
								],
								[
									"duplicated.POSIXlt\t{base}",
									"duplicated.POSIXlt"
								],
								[
									"attachNamespace\t{base}",
									"attachNamespace"
								],
								[
									"dQuote\t{base}",
									"dQuote"
								],
								[
									"bquote\t{base}",
									"bquote"
								],
								[
									"builtins\t{base}",
									"builtins"
								],
								[
									".standard_regexps\t{base}",
									".standard_regexps"
								],
								[
									"format.summaryDefault\t{base}",
									"format.summaryDefault"
								],
								[
									"xzfile\t{base}",
									"xzfile"
								],
								[
									"cut.Date\t{base}",
									"cut.Date"
								],
								[
									"nchar\t{base}",
									"nchar"
								],
								[
									"simplify2array\t{base}",
									"simplify2array"
								],
								[
									"writeChar\t{base}",
									"writeChar"
								],
								[
									"La_library\t{base}",
									"La_library"
								],
								[
									"strptime\t{base}",
									"strptime"
								],
								[
									"serverSocket\t{base}",
									"serverSocket"
								],
								[
									"all.equal.numeric\t{base}",
									"all.equal.numeric"
								],
								[
									"readline\t{base}",
									"readline"
								],
								[
									"duplicated.data.frame\t{base}",
									"duplicated.data.frame"
								],
								[
									".__H__.rbind\t{base}",
									".__H__.rbind"
								],
								[
									"registerS3method\t{base}",
									"registerS3method"
								],
								[
									"as.list.default\t{base}",
									"as.list.default"
								],
								[
									"setNamespaceInfo\t{base}",
									"setNamespaceInfo"
								],
								[
									"seq.Date\t{base}",
									"seq.Date"
								],
								[
									"getNamespaceInfo\t{base}",
									"getNamespaceInfo"
								],
								[
									"asinh\t{base}",
									"asinh"
								],
								[
									"sys.on.exit\t{base}",
									"sys.on.exit"
								],
								[
									"anyNA.data.frame\t{base}",
									"anyNA.data.frame"
								],
								[
									"namespaceImportMethods\t{base}",
									"namespaceImportMethods"
								],
								[
									"sort.int\t{base}",
									"sort.int"
								],
								[
									"cumsum\t{base}",
									"cumsum"
								],
								[
									"environmentName\t{base}",
									"environmentName"
								],
								[
									"as.list.environment\t{base}",
									"as.list.environment"
								],
								[
									"restartDescription\t{base}",
									"restartDescription"
								],
								[
									".signalSimpleWarning\t{base}",
									".signalSimpleWarning"
								],
								[
									"autoload\t{base}",
									"autoload"
								],
								[
									"format.pval\t{base}",
									"format.pval"
								],
								[
									"as.data.frame\t{base}",
									"as.data.frame"
								],
								[
									"as.call\t{base}",
									"as.call"
								],
								[
									"with\t{base}",
									"with"
								],
								[
									"round.Date\t{base}",
									"round.Date"
								],
								[
									"emptyenv\t{base}",
									"emptyenv"
								],
								[
									"as.list.function\t{base}",
									"as.list.function"
								],
								[
									"agrepl\t{base}",
									"agrepl"
								],
								[
									"seq_len\t{base}",
									"seq_len"
								],
								[
									"rowsum.default\t{base}",
									"rowsum.default"
								],
								[
									"months.POSIXt\t{base}",
									"months.POSIXt"
								],
								[
									"besselI\t{base}",
									"besselI"
								],
								[
									"besselJ\t{base}",
									"besselJ"
								],
								[
									"besselK\t{base}",
									"besselK"
								],
								[
									"besselY\t{base}",
									"besselY"
								],
								[
									"numeric\t{base}",
									"numeric"
								],
								[
									"withCallingHandlers\t{base}",
									"withCallingHandlers"
								],
								[
									"open.srcfilecopy\t{base}",
									"open.srcfilecopy"
								],
								[
									"weekdays\t{base}",
									"weekdays"
								],
								[
									"formatDL\t{base}",
									"formatDL"
								],
								[
									"qr.fitted\t{base}",
									"qr.fitted"
								],
								[
									"system2\t{base}",
									"system2"
								],
								[
									".External2\t{base}",
									".External2"
								],
								[
									"as.factor\t{base}",
									"as.factor"
								],
								[
									"data.class\t{base}",
									"data.class"
								],
								[
									"is.symbol\t{base}",
									"is.symbol"
								],
								[
									"memCompress\t{base}",
									"memCompress"
								],
								[
									"simpleMessage\t{base}",
									"simpleMessage"
								],
								[
									"La_version\t{base}",
									"La_version"
								],
								[
									"as.difftime\t{base}",
									"as.difftime"
								],
								[
									"make.names\t{base}",
									"make.names"
								],
								[
									"as.null\t{base}",
									"as.null"
								],
								[
									"storage.mode\t{base}",
									"storage.mode"
								],
								[
									"getExportedValue\t{base}",
									"getExportedValue"
								],
								[
									"mean.Date\t{base}",
									"mean.Date"
								],
								[
									"atan2\t{base}",
									"atan2"
								],
								[
									"requireNamespace\t{base}",
									"requireNamespace"
								],
								[
									"atanh\t{base}",
									"atanh"
								],
								[
									"is.nan\t{base}",
									"is.nan"
								],
								[
									"class\t{base}",
									"class"
								],
								[
									"agrep\t{base}",
									"agrep"
								],
								[
									"which.min\t{base}",
									"which.min"
								],
								[
									"as.Date.default\t{base}",
									"as.Date.default"
								],
								[
									"Sys.glob\t{base}",
									"Sys.glob"
								],
								[
									"Sys.getpid\t{base}",
									"Sys.getpid"
								],
								[
									"which.max\t{base}",
									"which.max"
								],
								[
									"pretty.default\t{base}",
									"pretty.default"
								],
								[
									"on.exit\t{base}",
									"on.exit"
								],
								[
									".pretty\t{base}",
									".pretty"
								],
								[
									"tcrossprod\t{base}",
									"tcrossprod"
								],
								[
									".Date\t{base}",
									".Date"
								],
								[
									"crossprod\t{base}",
									"crossprod"
								],
								[
									"anyDuplicated.data.frame\t{base}",
									"anyDuplicated.data.frame"
								],
								[
									"abs\t{base}",
									"abs"
								],
								[
									"months.Date\t{base}",
									"months.Date"
								],
								[
									"-.POSIXt\t{base}",
									"-.POSIXt"
								],
								[
									"stdin\t{base}",
									"stdin"
								],
								[
									"all\t{base}",
									"all"
								],
								[
									"as.numeric\t{base}",
									"as.numeric"
								],
								[
									"any\t{base}",
									"any"
								],
								[
									"isTRUE\t{base}",
									"isTRUE"
								],
								[
									"charToRaw\t{base}",
									"charToRaw"
								],
								[
									"Sys.time\t{base}",
									"Sys.time"
								],
								[
									"as.Date.numeric\t{base}",
									"as.Date.numeric"
								],
								[
									"environment\t{base}",
									"environment"
								],
								[
									"cat\t{base}",
									"cat"
								],
								[
									"is.raw\t{base}",
									"is.raw"
								],
								[
									"mean.difftime\t{base}",
									"mean.difftime"
								],
								[
									"readLines\t{base}",
									"readLines"
								],
								[
									".rowSums\t{base}",
									".rowSums"
								],
								[
									"charmatch\t{base}",
									"charmatch"
								],
								[
									"col\t{base}",
									"col"
								],
								[
									"cos\t{base}",
									"cos"
								],
								[
									"mtfrm\t{base}",
									"mtfrm"
								],
								[
									"Sys.Date\t{base}",
									"Sys.Date"
								],
								[
									"det\t{base}",
									"det"
								],
								[
									"cut\t{base}",
									"cut"
								],
								[
									"dim\t{base}",
									"dim"
								],
								[
									"dir\t{base}",
									"dir"
								],
								[
									"as.data.frame.raw\t{base}",
									"as.data.frame.raw"
								],
								[
									"as.symbol\t{base}",
									"as.symbol"
								],
								[
									"as.data.frame.AsIs\t{base}",
									"as.data.frame.AsIs"
								],
								[
									"summary.factor\t{base}",
									"summary.factor"
								],
								[
									"anyDuplicated.matrix\t{base}",
									"anyDuplicated.matrix"
								],
								[
									"getDLLRegisteredRoutines.DLLInfo\t{base}",
									"getDLLRegisteredRoutines.DLLInfo"
								],
								[
									"exp\t{base}",
									"exp"
								],
								[
									"print.Date\t{base}",
									"print.Date"
								],
								[
									"split.data.frame\t{base}",
									"split.data.frame"
								],
								[
									"for\t{base}",
									"for"
								],
								[
									"rowSums\t{base}",
									"rowSums"
								],
								[
									"rawShift\t{base}",
									"rawShift"
								],
								[
									"get\t{base}",
									"get"
								],
								[
									"open.srcfilealias\t{base}",
									"open.srcfilealias"
								],
								[
									"as.list.numeric_version\t{base}",
									"as.list.numeric_version"
								],
								[
									"identity\t{base}",
									"identity"
								],
								[
									"Summary.factor\t{base}",
									"Summary.factor"
								],
								[
									"print.summaryDefault\t{base}",
									"print.summaryDefault"
								],
								[
									"toString.default\t{base}",
									"toString.default"
								],
								[
									"pushBackLength\t{base}",
									"pushBackLength"
								],
								[
									"extSoftVersion\t{base}",
									"extSoftVersion"
								],
								[
									"serialize\t{base}",
									"serialize"
								],
								[
									"is.complex\t{base}",
									"is.complex"
								],
								[
									"loadNamespace\t{base}",
									"loadNamespace"
								],
								[
									"all.equal.default\t{base}",
									"all.equal.default"
								],
								[
									"print.condition\t{base}",
									"print.condition"
								],
								[
									"RNGkind\t{base}",
									"RNGkind"
								],
								[
									"summary.table\t{base}",
									"summary.table"
								],
								[
									"nameOfClass.default\t{base}",
									"nameOfClass.default"
								],
								[
									"list\t{base}",
									"list"
								],
								[
									"isa\t{base}",
									"isa"
								],
								[
									"print.difftime\t{base}",
									"print.difftime"
								],
								[
									"as.character.error\t{base}",
									"as.character.error"
								],
								[
									"strtrim\t{base}",
									"strtrim"
								],
								[
									"licence\t{base}",
									"licence"
								],
								[
									"summary\t{base}",
									"summary"
								],
								[
									"row.names.data.frame\t{base}",
									"row.names.data.frame"
								],
								[
									"packageStartupMessage\t{base}",
									"packageStartupMessage"
								],
								[
									"print.summary.warnings\t{base}",
									"print.summary.warnings"
								],
								[
									"pmax.int\t{base}",
									"pmax.int"
								],
								[
									"julian.Date\t{base}",
									"julian.Date"
								],
								[
									"license\t{base}",
									"license"
								],
								[
									"sys.save.image\t{base}",
									"sys.save.image"
								],
								[
									"lazyLoadDBexec\t{base}",
									"lazyLoadDBexec"
								],
								[
									"max.col\t{base}",
									"max.col"
								],
								[
									"invisible\t{base}",
									"invisible"
								],
								[
									"open.srcfile\t{base}",
									"open.srcfile"
								],
								[
									"searchpaths\t{base}",
									"searchpaths"
								],
								[
									".formula2varlist\t{base}",
									".formula2varlist"
								],
								[
									"namespaceImportFrom\t{base}",
									"namespaceImportFrom"
								],
								[
									"sys.frames\t{base}",
									"sys.frames"
								],
								[
									"Recall\t{base}",
									"Recall"
								],
								[
									".difftime\t{base}",
									".difftime"
								],
								[
									"log\t{base}",
									"log"
								],
								[
									"numToBits\t{base}",
									"numToBits"
								],
								[
									"rawToBits\t{base}",
									"rawToBits"
								],
								[
									"max\t{base}",
									"max"
								],
								[
									"floor\t{base}",
									"floor"
								],
								[
									"Ops.numeric_version\t{base}",
									"Ops.numeric_version"
								],
								[
									"close\t{base}",
									"close"
								],
								[
									"Math.Date\t{base}",
									"Math.Date"
								],
								[
									"Math.data.frame\t{base}",
									"Math.data.frame"
								],
								[
									"min\t{base}",
									"min"
								],
								[
									"as.array\t{base}",
									"as.array"
								],
								[
									"assign\t{base}",
									"assign"
								],
								[
									"taskCallbackManager\t{base}",
									"taskCallbackManager"
								],
								[
									"gettextf\t{base}",
									"gettextf"
								],
								[
									".NotYetUsed\t{base}",
									".NotYetUsed"
								],
								[
									"setHook\t{base}",
									"setHook"
								],
								[
									"load\t{base}",
									"load"
								],
								[
									"socketTimeout\t{base}",
									"socketTimeout"
								],
								[
									"Negate\t{base}",
									"Negate"
								],
								[
									"unique.matrix\t{base}",
									"unique.matrix"
								],
								[
									"log2\t{base}",
									"log2"
								],
								[
									"as.character.POSIXt\t{base}",
									"as.character.POSIXt"
								],
								[
									"untrace\t{base}",
									"untrace"
								],
								[
									"logb\t{base}",
									"logb"
								],
								[
									"is.array\t{base}",
									"is.array"
								],
								[
									"droplevels.factor\t{base}",
									"droplevels.factor"
								],
								[
									"R.version\t{base}",
									"R.version"
								],
								[
									"R.Version\t{base}",
									"R.Version"
								],
								[
									"within.list\t{base}",
									"within.list"
								],
								[
									"inherits\t{base}",
									"inherits"
								],
								[
									"Sys.setenv\t{base}",
									"Sys.setenv"
								],
								[
									"comment\t{base}",
									"comment"
								],
								[
									"as.vector.data.frame\t{base}",
									"as.vector.data.frame"
								],
								[
									"print.DLLInfoList\t{base}",
									"print.DLLInfoList"
								],
								[
									"vector\t{base}",
									"vector"
								],
								[
									"system\t{base}",
									"system"
								],
								[
									".First.sys\t{base}",
									".First.sys"
								],
								[
									"save.image\t{base}",
									"save.image"
								],
								[
									"as.array.default\t{base}",
									"as.array.default"
								],
								[
									"format.info\t{base}",
									"format.info"
								],
								[
									".F_dqrqy\t{base}",
									".F_dqrqy"
								],
								[
									"Sys.setFileTime\t{base}",
									"Sys.setFileTime"
								],
								[
									".F_dqrxb\t{base}",
									".F_dqrxb"
								],
								[
									"setequal\t{base}",
									"setequal"
								],
								[
									"raw\t{base}",
									"raw"
								],
								[
									"typeof\t{base}",
									"typeof"
								],
								[
									"rep\t{base}",
									"rep"
								],
								[
									"rev\t{base}",
									"rev"
								],
								[
									"paste0\t{base}",
									"paste0"
								],
								[
									"rle\t{base}",
									"rle"
								],
								[
									"conditionMessage\t{base}",
									"conditionMessage"
								],
								[
									".F_dqrcf\t{base}",
									".F_dqrcf"
								],
								[
									"row\t{base}",
									"row"
								],
								[
									"stderr\t{base}",
									"stderr"
								],
								[
									".Last.value\t{base}",
									".Last.value"
								],
								[
									"seq\t{base}",
									"seq"
								],
								[
									"flush\t{base}",
									"flush"
								],
								[
									"sin\t{base}",
									"sin"
								],
								[
									"intToUtf8\t{base}",
									"intToUtf8"
								],
								[
									"acos\t{base}",
									"acos"
								],
								[
									"globalCallingHandlers\t{base}",
									"globalCallingHandlers"
								],
								[
									"within\t{base}",
									"within"
								],
								[
									"tan\t{base}",
									"tan"
								],
								[
									"as.matrix.noquote\t{base}",
									"as.matrix.noquote"
								],
								[
									"libcurlVersion\t{base}",
									"libcurlVersion"
								],
								[
									"sub\t{base}",
									"sub"
								],
								[
									"sum\t{base}",
									"sum"
								],
								[
									"svd\t{base}",
									"svd"
								],
								[
									"upper.tri\t{base}",
									"upper.tri"
								],
								[
									"isSymmetric.matrix\t{base}",
									"isSymmetric.matrix"
								],
								[
									"is.factor\t{base}",
									"is.factor"
								],
								[
									"mean\t{base}",
									"mean"
								],
								[
									"try\t{base}",
									"try"
								],
								[
									"rev.default\t{base}",
									"rev.default"
								],
								[
									"is.character\t{base}",
									"is.character"
								],
								[
									"Sys.getenv\t{base}",
									"Sys.getenv"
								],
								[
									"unz\t{base}",
									"unz"
								],
								[
									"as.data.frame.factor\t{base}",
									"as.data.frame.factor"
								],
								[
									"url\t{base}",
									"url"
								],
								[
									"Ops.Date\t{base}",
									"Ops.Date"
								],
								[
									"as.environment\t{base}",
									"as.environment"
								],
								[
									"mget\t{base}",
									"mget"
								],
								[
									"print.eigen\t{base}",
									"print.eigen"
								],
								[
									"invokeRestartInteractively\t{base}",
									"invokeRestartInteractively"
								],
								[
									"getNamespaceExports\t{base}",
									"getNamespaceExports"
								],
								[
									"subset.matrix\t{base}",
									"subset.matrix"
								],
								[
									"forwardsolve\t{base}",
									"forwardsolve"
								],
								[
									"solve.default\t{base}",
									"solve.default"
								],
								[
									"icuGetCollate\t{base}",
									"icuGetCollate"
								],
								[
									"dirname\t{base}",
									"dirname"
								],
								[
									"as.data.frame.model.matrix\t{base}",
									"as.data.frame.model.matrix"
								],
								[
									"Sys.info\t{base}",
									"Sys.info"
								],
								[
									"as.Date.character\t{base}",
									"as.Date.character"
								],
								[
									".encode_numeric_version\t{base}",
									".encode_numeric_version"
								],
								[
									"xor\t{base}",
									"xor"
								],
								[
									"quarters.POSIXt\t{base}",
									"quarters.POSIXt"
								],
								[
									"allowInterrupts\t{base}",
									"allowInterrupts"
								],
								[
									"julian\t{base}",
									"julian"
								],
								[
									"intToBits\t{base}",
									"intToBits"
								],
								[
									"validUTF8\t{base}",
									"validUTF8"
								],
								[
									"capabilities\t{base}",
									"capabilities"
								],
								[
									"print.simple.list\t{base}",
									"print.simple.list"
								],
								[
									"namespaceImport\t{base}",
									"namespaceImport"
								],
								[
									"geterrmessage\t{base}",
									"geterrmessage"
								],
								[
									"delayedAssign\t{base}",
									"delayedAssign"
								],
								[
									"print.DLLRegisteredRoutines\t{base}",
									"print.DLLRegisteredRoutines"
								],
								[
									"Sys.setlocale\t{base}",
									"Sys.setlocale"
								],
								[
									"difftime\t{base}",
									"difftime"
								],
								[
									"..getNamespace\t{base}",
									"..getNamespace"
								],
								[
									"range\t{base}",
									"range"
								],
								[
									"unique.data.frame\t{base}",
									"unique.data.frame"
								],
								[
									"deparse\t{base}",
									"deparse"
								],
								[
									"pairlist\t{base}",
									"pairlist"
								],
								[
									"sinpi\t{base}",
									"sinpi"
								],
								[
									"summary.POSIXct\t{base}",
									"summary.POSIXct"
								],
								[
									"print.NativeRoutineList\t{base}",
									"print.NativeRoutineList"
								],
								[
									"psigamma\t{base}",
									"psigamma"
								],
								[
									"file.access\t{base}",
									"file.access"
								],
								[
									"is.environment\t{base}",
									"is.environment"
								],
								[
									"Math.factor\t{base}",
									"Math.factor"
								],
								[
									"getRversion\t{base}",
									"getRversion"
								],
								[
									"droplevels\t{base}",
									"droplevels"
								],
								[
									"determinant.matrix\t{base}",
									"determinant.matrix"
								],
								[
									"stdout\t{base}",
									"stdout"
								],
								[
									"summary.POSIXlt\t{base}",
									"summary.POSIXlt"
								],
								[
									"suspendInterrupts\t{base}",
									"suspendInterrupts"
								],
								[
									"tapply\t{base}",
									"tapply"
								],
								[
									".F_dqrqty\t{base}",
									".F_dqrqty"
								],
								[
									"trace\t{base}",
									"trace"
								],
								[
									"callCC\t{base}",
									"callCC"
								],
								[
									".getNamespace\t{base}",
									".getNamespace"
								],
								[
									"as.matrix.POSIXlt\t{base}",
									"as.matrix.POSIXlt"
								],
								[
									"rowMeans\t{base}",
									"rowMeans"
								],
								[
									".isOpen\t{base}",
									".isOpen"
								],
								[
									"format.packageInfo\t{base}",
									"format.packageInfo"
								],
								[
									".F_dqrrsd\t{base}",
									".F_dqrrsd"
								],
								[
									"print.default\t{base}",
									"print.default"
								],
								[
									"shQuote\t{base}",
									"shQuote"
								],
								[
									"cut.default\t{base}",
									"cut.default"
								],
								[
									"range.default\t{base}",
									"range.default"
								],
								[
									"structure\t{base}",
									"structure"
								],
								[
									"mode\t{base}",
									"mode"
								],
								[
									"Ops.difftime\t{base}",
									"Ops.difftime"
								],
								[
									"attributes\t{base}",
									"attributes"
								],
								[
									"as.POSIXct\t{base}",
									"as.POSIXct"
								],
								[
									"all.names\t{base}",
									"all.names"
								],
								[
									"as.character\t{base}",
									"as.character"
								],
								[
									"as.POSIXlt\t{base}",
									"as.POSIXlt"
								],
								[
									"sort.default\t{base}",
									"sort.default"
								],
								[
									"simpleCondition\t{base}",
									"simpleCondition"
								],
								[
									"within.data.frame\t{base}",
									"within.data.frame"
								],
								[
									"endsWith\t{base}",
									"endsWith"
								],
								[
									"print.connection\t{base}",
									"print.connection"
								],
								[
									"split.default\t{base}",
									"split.default"
								],
								[
									"asS3\t{base}",
									"asS3"
								],
								[
									"asS4\t{base}",
									"asS4"
								],
								[
									"with.default\t{base}",
									"with.default"
								],
								[
									"balancePOSIXlt\t{base}",
									"balancePOSIXlt"
								],
								[
									"args\t{base}",
									"args"
								],
								[
									"break\t{base}",
									"break"
								],
								[
									"R_system_version\t{base}",
									"R_system_version"
								],
								[
									"matrix\t{base}",
									"matrix"
								],
								[
									"is.na.POSIXlt\t{base}",
									"is.na.POSIXlt"
								],
								[
									"basename\t{base}",
									"basename"
								],
								[
									"lbeta\t{base}",
									"lbeta"
								],
								[
									"asin\t{base}",
									"asin"
								],
								[
									"summary.default\t{base}",
									"summary.default"
								],
								[
									"file.append\t{base}",
									"file.append"
								],
								[
									"srcfile\t{base}",
									"srcfile"
								],
								[
									"Sys.which\t{base}",
									"Sys.which"
								],
								[
									"ncol\t{base}",
									"ncol"
								],
								[
									"return\t{base}",
									"return"
								],
								[
									"atan\t{base}",
									"atan"
								],
								[
									"eapply\t{base}",
									"eapply"
								],
								[
									"rep.POSIXct\t{base}",
									"rep.POSIXct"
								],
								[
									"rep.POSIXlt\t{base}",
									"rep.POSIXlt"
								],
								[
									"socketConnection\t{base}",
									"socketConnection"
								],
								[
									"format.Date\t{base}",
									"format.Date"
								],
								[
									"getConnection\t{base}",
									"getConnection"
								],
								[
									"tryCatch\t{base}",
									"tryCatch"
								],
								[
									"attr\t{base}",
									"attr"
								],
								[
									"tracemem\t{base}",
									"tracemem"
								],
								[
									"as.data.frame.ordered\t{base}",
									"as.data.frame.ordered"
								],
								[
									"format.hexmode\t{base}",
									"format.hexmode"
								],
								[
									"beta\t{base}",
									"beta"
								],
								[
									"seq.POSIXt\t{base}",
									"seq.POSIXt"
								],
								[
									"summary.Date\t{base}",
									"summary.Date"
								],
								[
									"next\t{base}",
									"next"
								],
								[
									"Sys.getlocale\t{base}",
									"Sys.getlocale"
								],
								[
									"lower.tri\t{base}",
									"lower.tri"
								],
								[
									"rbind\t{base}",
									"rbind"
								],
								[
									"union\t{base}",
									"union"
								],
								[
									"write\t{base}",
									"write"
								],
								[
									"units\t{base}",
									"units"
								],
								[
									"cbind\t{base}",
									"cbind"
								],
								[
									"dim.data.frame\t{base}",
									"dim.data.frame"
								],
								[
									"t.data.frame\t{base}",
									"t.data.frame"
								],
								[
									"month.abb\t{base}",
									"month.abb"
								],
								[
									"Sys.unsetenv\t{base}",
									"Sys.unsetenv"
								],
								[
									"dyn.unload\t{base}",
									"dyn.unload"
								],
								[
									"scale.default\t{base}",
									"scale.default"
								],
								[
									"invokeRestart\t{base}",
									"invokeRestart"
								],
								[
									"as.data.frame.integer\t{base}",
									"as.data.frame.integer"
								],
								[
									"all.equal.language\t{base}",
									"all.equal.language"
								],
								[
									"bitwOr\t{base}",
									"bitwOr"
								],
								[
									".Library.site\t{base}",
									".Library.site"
								],
								[
									".packageStartupMessage\t{base}",
									".packageStartupMessage"
								],
								[
									"close.connection\t{base}",
									"close.connection"
								],
								[
									"trimws\t{base}",
									"trimws"
								],
								[
									".Call.graphics\t{base}",
									".Call.graphics"
								],
								[
									".C_R_addTaskCallback\t{base}",
									".C_R_addTaskCallback"
								],
								[
									"unserialize\t{base}",
									"unserialize"
								],
								[
									".amatch_bounds\t{base}",
									".amatch_bounds"
								],
								[
									".S3_methods_table\t{base}",
									".S3_methods_table"
								],
								[
									".row_names_info\t{base}",
									".row_names_info"
								],
								[
									"standardGeneric\t{base}",
									"standardGeneric"
								],
								[
									".F_dqrdc2\t{base}",
									".F_dqrdc2"
								],
								[
									"is.nan.POSIXlt\t{base}",
									"is.nan.POSIXlt"
								],
								[
									"as.data.frame.Date\t{base}",
									"as.data.frame.Date"
								],
								[
									"R.home\t{base}",
									"R.home"
								],
								[
									"unique.default\t{base}",
									"unique.default"
								],
								[
									"sys.frame\t{base}",
									"sys.frame"
								],
								[
									"sys.source\t{base}",
									"sys.source"
								],
								[
									"as.double.POSIXlt\t{base}",
									"as.double.POSIXlt"
								],
								[
									"clearPushBack\t{base}",
									"clearPushBack"
								],
								[
									".leap.seconds\t{base}",
									".leap.seconds"
								],
								[
									".mapply\t{base}",
									".mapply"
								],
								[
									"bindtextdomain\t{base}",
									"bindtextdomain"
								],
								[
									"lgamma\t{base}",
									"lgamma"
								],
								[
									"aperm.table\t{base}",
									"aperm.table"
								],
								[
									"getLoadedDLLs\t{base}",
									"getLoadedDLLs"
								],
								[
									"subset.data.frame\t{base}",
									"subset.data.frame"
								],
								[
									"as.Date.factor\t{base}",
									"as.Date.factor"
								],
								[
									"format.libraryIQR\t{base}",
									"format.libraryIQR"
								],
								[
									"unique\t{base}",
									"unique"
								],
								[
									"as.data.frame.difftime\t{base}",
									"as.data.frame.difftime"
								],
								[
									"merge.default\t{base}",
									"merge.default"
								],
								[
									"ifelse\t{base}",
									"ifelse"
								],
								[
									"is.atomic\t{base}",
									"is.atomic"
								],
								[
									"sys.parents\t{base}",
									"sys.parents"
								],
								[
									"body\t{base}",
									"body"
								],
								[
									"as.character.default\t{base}",
									"as.character.default"
								],
								[
									"rep.int\t{base}",
									"rep.int"
								],
								[
									"as.data.frame.array\t{base}",
									"as.data.frame.array"
								],
								[
									"xtfrm.Date\t{base}",
									"xtfrm.Date"
								],
								[
									"norm\t{base}",
									"norm"
								],
								[
									"as.list.factor\t{base}",
									"as.list.factor"
								],
								[
									"retracemem\t{base}",
									"retracemem"
								],
								[
									"local\t{base}",
									"local"
								],
								[
									"expression\t{base}",
									"expression"
								],
								[
									"Reduce\t{base}",
									"Reduce"
								],
								[
									"signalCondition\t{base}",
									"signalCondition"
								],
								[
									"validEnc\t{base}",
									"validEnc"
								],
								[
									"log10\t{base}",
									"log10"
								],
								[
									"isSymmetric\t{base}",
									"isSymmetric"
								],
								[
									"log1p\t{base}",
									"log1p"
								],
								[
									"is.expression\t{base}",
									"is.expression"
								],
								[
									"tryInvokeRestart\t{base}",
									"tryInvokeRestart"
								],
								[
									"is.unsorted\t{base}",
									"is.unsorted"
								],
								[
									"droplevels.data.frame\t{base}",
									"droplevels.data.frame"
								],
								[
									"sys.parent\t{base}",
									"sys.parent"
								],
								[
									"call\t{base}",
									"call"
								],
								[
									"is.object\t{base}",
									"is.object"
								],
								[
									"pos.to.env\t{base}",
									"pos.to.env"
								],
								[
									"as.POSIXlt.character\t{base}",
									"as.POSIXlt.character"
								],
								[
									"sweep\t{base}",
									"sweep"
								],
								[
									".C_R_removeTaskCallback\t{base}",
									".C_R_removeTaskCallback"
								],
								[
									".libPaths\t{base}",
									".libPaths"
								],
								[
									".getNamespaceInfo\t{base}",
									".getNamespaceInfo"
								],
								[
									"trunc.POSIXt\t{base}",
									"trunc.POSIXt"
								],
								[
									"encodeString\t{base}",
									"encodeString"
								],
								[
									"trunc\t{base}",
									"trunc"
								],
								[
									"system.time\t{base}",
									"system.time"
								],
								[
									"all.equal.POSIXt\t{base}",
									"all.equal.POSIXt"
								],
								[
									"bitwShiftR\t{base}",
									"bitwShiftR"
								],
								[
									"nrow\t{base}",
									"nrow"
								],
								[
									"bitwShiftL\t{base}",
									"bitwShiftL"
								],
								[
									"print.restart\t{base}",
									"print.restart"
								],
								[
									"RNGversion\t{base}",
									"RNGversion"
								],
								[
									"sort.POSIXlt\t{base}",
									"sort.POSIXlt"
								],
								[
									"print.POSIXct\t{base}",
									"print.POSIXct"
								],
								[
									".S3method\t{base}",
									".S3method"
								],
								[
									"print.POSIXlt\t{base}",
									"print.POSIXlt"
								],
								[
									"withVisible\t{base}",
									"withVisible"
								],
								[
									"file.create\t{base}",
									"file.create"
								],
								[
									"getHook\t{base}",
									"getHook"
								],
								[
									"as.data.frame.list\t{base}",
									"as.data.frame.list"
								],
								[
									"row.names.default\t{base}",
									"row.names.default"
								],
								[
									"print.AsIs\t{base}",
									"print.AsIs"
								],
								[
									"Filter\t{base}",
									"Filter"
								],
								[
									"options\t{base}",
									"options"
								],
								[
									"single\t{base}",
									"single"
								],
								[
									"attr.all.equal\t{base}",
									"attr.all.equal"
								],
								[
									".primUntrace\t{base}",
									".primUntrace"
								],
								[
									"factorial\t{base}",
									"factorial"
								],
								[
									"lfactorial\t{base}",
									"lfactorial"
								],
								[
									"colnames\t{base}",
									"colnames"
								],
								[
									"dontCheck\t{base}",
									"dontCheck"
								],
								[
									".Options\t{base}",
									".Options"
								],
								[
									"all.equal.list\t{base}",
									"all.equal.list"
								],
								[
									"levels\t{base}",
									"levels"
								],
								[
									".colMeans\t{base}",
									".colMeans"
								],
								[
									"labels\t{base}",
									"labels"
								],
								[
									".dynLibs\t{base}",
									".dynLibs"
								],
								[
									"isatty\t{base}",
									"isatty"
								],
								[
									"file.remove\t{base}",
									"file.remove"
								],
								[
									"ordered\t{base}",
									"ordered"
								],
								[
									"...length\t{base}",
									"...length"
								],
								[
									"exists\t{base}",
									"exists"
								],
								[
									"prettyNum\t{base}",
									"prettyNum"
								],
								[
									"isRestart\t{base}",
									"isRestart"
								],
								[
									"setTimeLimit\t{base}",
									"setTimeLimit"
								],
								[
									"names.POSIXlt\t{base}",
									"names.POSIXlt"
								],
								[
									".__H__.cbind\t{base}",
									".__H__.cbind"
								],
								[
									"list.dirs\t{base}",
									"list.dirs"
								],
								[
									"truncate\t{base}",
									"truncate"
								],
								[
									"quarters\t{base}",
									"quarters"
								],
								[
									".External\t{base}",
									".External"
								],
								[
									"xtfrm.factor\t{base}",
									"xtfrm.factor"
								],
								[
									"oldClass\t{base}",
									"oldClass"
								],
								[
									"as.function.default\t{base}",
									"as.function.default"
								],
								[
									"chol\t{base}",
									"chol"
								],
								[
									"file.rename\t{base}",
									"file.rename"
								],
								[
									"loadedNamespaces\t{base}",
									"loadedNamespaces"
								],
								[
									"all.equal.factor\t{base}",
									"all.equal.factor"
								],
								[
									".BaseNamespaceEnv\t{base}",
									".BaseNamespaceEnv"
								],
								[
									"truncate.connection\t{base}",
									"truncate.connection"
								],
								[
									"is.finite\t{base}",
									"is.finite"
								],
								[
									"as.data.frame.numeric\t{base}",
									"as.data.frame.numeric"
								],
								[
									"labels.default\t{base}",
									"labels.default"
								],
								[
									"strwrap\t{base}",
									"strwrap"
								],
								[
									".Internal\t{base}",
									".Internal"
								],
								[
									"tolower\t{base}",
									"tolower"
								],
								[
									"gzfile\t{base}",
									"gzfile"
								],
								[
									".Fortran\t{base}",
									".Fortran"
								],
								[
									"as.character.numeric_version\t{base}",
									"as.character.numeric_version"
								],
								[
									"env.profile\t{base}",
									"env.profile"
								],
								[
									"is.na\t{base}",
									"is.na"
								],
								[
									"Summary.POSIXct\t{base}",
									"Summary.POSIXct"
								],
								[
									"open.connection\t{base}",
									"open.connection"
								],
								[
									"is.qr\t{base}",
									"is.qr"
								],
								[
									"list2DF\t{base}",
									"list2DF"
								],
								[
									"duplicated\t{base}",
									"duplicated"
								],
								[
									"writeBin\t{base}",
									"writeBin"
								],
								[
									"flush.connection\t{base}",
									"flush.connection"
								],
								[
									"rcond\t{base}",
									"rcond"
								],
								[
									"is.ordered\t{base}",
									"is.ordered"
								],
								[
									"isSeekable\t{base}",
									"isSeekable"
								],
								[
									"as.ordered\t{base}",
									"as.ordered"
								],
								[
									"iconv\t{base}",
									"iconv"
								],
								[
									"tempdir\t{base}",
									"tempdir"
								],
								[
									"Summary.POSIXlt\t{base}",
									"Summary.POSIXlt"
								],
								[
									"is.numeric.difftime\t{base}",
									"is.numeric.difftime"
								],
								[
									"print.octmode\t{base}",
									"print.octmode"
								],
								[
									"summary.proc_time\t{base}",
									"summary.proc_time"
								],
								[
									"chol2inv\t{base}",
									"chol2inv"
								],
								[
									"as.character.Date\t{base}",
									"as.character.Date"
								],
								[
									".sys.timezone\t{base}",
									".sys.timezone"
								],
								[
									"Sys.timezone\t{base}",
									"Sys.timezone"
								],
								[
									"quarters.Date\t{base}",
									"quarters.Date"
								],
								[
									"stopifnot\t{base}",
									"stopifnot"
								],
								[
									"as.data.frame.complex\t{base}",
									"as.data.frame.complex"
								],
								[
									"all.equal.function\t{base}",
									"all.equal.function"
								],
								[
									"packBits\t{base}",
									"packBits"
								],
								[
									"c.POSIXct\t{base}",
									"c.POSIXct"
								],
								[
									"rep.difftime\t{base}",
									"rep.difftime"
								],
								[
									"strrep\t{base}",
									"strrep"
								],
								[
									"force\t{base}",
									"force"
								],
								[
									"c.POSIXlt\t{base}",
									"c.POSIXlt"
								],
								[
									"mem.maxNSize\t{base}",
									"mem.maxNSize"
								],
								[
									"format\t{base}",
									"format"
								],
								[
									"NextMethod\t{base}",
									"NextMethod"
								],
								[
									"..deparseOpts\t{base}",
									"..deparseOpts"
								],
								[
									".TAOCP1997init\t{base}",
									".TAOCP1997init"
								],
								[
									"Vectorize\t{base}",
									"Vectorize"
								],
								[
									"getNamespaceUsers\t{base}",
									"getNamespaceUsers"
								],
								[
									"cosh\t{base}",
									"cosh"
								],
								[
									"open\t{base}",
									"open"
								],
								[
									"qr.qty\t{base}",
									"qr.qty"
								],
								[
									"subset\t{base}",
									"subset"
								],
								[
									"print.summary.table\t{base}",
									"print.summary.table"
								],
								[
									"is.infinite.POSIXlt\t{base}",
									"is.infinite.POSIXlt"
								],
								[
									"substr\t{base}",
									"substr"
								],
								[
									"cospi\t{base}",
									"cospi"
								],
								[
									"c.warnings\t{base}",
									"c.warnings"
								],
								[
									"print.packageInfo\t{base}",
									"print.packageInfo"
								],
								[
									"NCOL\t{base}",
									"NCOL"
								],
								[
									"is.numeric\t{base}",
									"is.numeric"
								],
								[
									"strtoi\t{base}",
									"strtoi"
								],
								[
									".GenericArgsEnv\t{base}",
									".GenericArgsEnv"
								],
								[
									"rep_len\t{base}",
									"rep_len"
								],
								[
									".make_numeric_version\t{base}",
									".make_numeric_version"
								],
								[
									"date\t{base}",
									"date"
								],
								[
									"closeAllConnections\t{base}",
									"closeAllConnections"
								],
								[
									"as.logical\t{base}",
									"as.logical"
								],
								[
									"getDLLRegisteredRoutines\t{base}",
									"getDLLRegisteredRoutines"
								],
								[
									"round\t{base}",
									"round"
								],
								[
									"file.exists\t{base}",
									"file.exists"
								],
								[
									".F_dtrco\t{base}",
									".F_dtrco"
								],
								[
									"polyroot\t{base}",
									"polyroot"
								],
								[
									".kronecker\t{base}",
									".kronecker"
								],
								[
									".traceback\t{base}",
									".traceback"
								],
								[
									"browser\t{base}",
									"browser"
								],
								[
									"conflictRules\t{base}",
									"conflictRules"
								],
								[
									"is.double\t{base}",
									"is.double"
								],
								[
									"months\t{base}",
									"months"
								],
								[
									"toupper\t{base}",
									"toupper"
								],
								[
									"duplicated.default\t{base}",
									"duplicated.default"
								],
								[
									".bincode\t{base}",
									".bincode"
								],
								[
									"qr.resid\t{base}",
									"qr.resid"
								],
								[
									"toString\t{base}",
									"toString"
								],
								[
									"socketSelect\t{base}",
									"socketSelect"
								],
								[
									".class2\t{base}",
									".class2"
								],
								[
									"print.libraryIQR\t{base}",
									"print.libraryIQR"
								],
								[
									"prop.table\t{base}",
									"prop.table"
								],
								[
									"new.env\t{base}",
									"new.env"
								],
								[
									"which\t{base}",
									"which"
								],
								[
									"duplicated.numeric_version\t{base}",
									"duplicated.numeric_version"
								],
								[
									"while\t{base}",
									"while"
								],
								[
									"is.element\t{base}",
									"is.element"
								],
								[
									"as.raw\t{base}",
									"as.raw"
								],
								[
									"nzchar\t{base}",
									"nzchar"
								],
								[
									"replace\t{base}",
									"replace"
								],
								[
									"complex\t{base}",
									"complex"
								],
								[
									"dget\t{base}",
									"dget"
								],
								[
									"environmentIsLocked\t{base}",
									"environmentIsLocked"
								],
								[
									".Deprecated\t{base}",
									".Deprecated"
								],
								[
									"alist\t{base}",
									"alist"
								],
								[
									"is.list\t{base}",
									"is.list"
								],
								[
									"Ops.factor\t{base}",
									"Ops.factor"
								],
								[
									"setdiff\t{base}",
									"setdiff"
								],
								[
									"pmin.int\t{base}",
									"pmin.int"
								],
								[
									"slice.index\t{base}",
									"slice.index"
								],
								[
									"getAllConnections\t{base}",
									"getAllConnections"
								],
								[
									"duplicated.warnings\t{base}",
									"duplicated.warnings"
								],
								[
									"numeric_version\t{base}",
									"numeric_version"
								],
								[
									"ceiling\t{base}",
									"ceiling"
								],
								[
									"diag\t{base}",
									"diag"
								],
								[
									"as.complex\t{base}",
									"as.complex"
								],
								[
									"sequence\t{base}",
									"sequence"
								],
								[
									".check_tzones\t{base}",
									".check_tzones"
								],
								[
									"diff\t{base}",
									"diff"
								],
								[
									".doSortWrap\t{base}",
									".doSortWrap"
								],
								[
									"anyDuplicated\t{base}",
									"anyDuplicated"
								],
								[
									"all.equal.environment\t{base}",
									"all.equal.environment"
								],
								[
									"pipe\t{base}",
									"pipe"
								],
								[
									"ISOdatetime\t{base}",
									"ISOdatetime"
								],
								[
									"replicate\t{base}",
									"replicate"
								],
								[
									"rbind.data.frame\t{base}",
									"rbind.data.frame"
								],
								[
									"lazyLoadDBfetch\t{base}",
									"lazyLoadDBfetch"
								],
								[
									"conflicts\t{base}",
									"conflicts"
								],
								[
									".rmpkg\t{base}",
									".rmpkg"
								],
								[
									"as.Date\t{base}",
									"as.Date"
								],
								[
									"as.data.frame.numeric_version\t{base}",
									"as.data.frame.numeric_version"
								],
								[
									"mean.default\t{base}",
									"mean.default"
								],
								[
									"cumprod\t{base}",
									"cumprod"
								],
								[
									"as.double\t{base}",
									"as.double"
								],
								[
									"as.data.frame.logical\t{base}",
									"as.data.frame.logical"
								],
								[
									"as.data.frame.POSIXct\t{base}",
									"as.data.frame.POSIXct"
								],
								[
									"findRestart\t{base}",
									"findRestart"
								],
								[
									"as.data.frame.POSIXlt\t{base}",
									"as.data.frame.POSIXlt"
								],
								[
									"as.data.frame.ts\t{base}",
									"as.data.frame.ts"
								],
								[
									"findPackageEnv\t{base}",
									"findPackageEnv"
								],
								[
									"plot\t{base}",
									"plot"
								],
								[
									"pmax\t{base}",
									"pmax"
								],
								[
									"getNamespaceImports\t{base}",
									"getNamespaceImports"
								],
								[
									"as.numeric_version\t{base}",
									"as.numeric_version"
								],
								[
									"pmin\t{base}",
									"pmin"
								],
								[
									"as.character.srcref\t{base}",
									"as.character.srcref"
								],
								[
									"trunc.Date\t{base}",
									"trunc.Date"
								],
								[
									"print.hexmode\t{base}",
									"print.hexmode"
								],
								[
									"provideDimnames\t{base}",
									"provideDimnames"
								],
								[
									"match.arg\t{base}",
									"match.arg"
								],
								[
									"enquote\t{base}",
									"enquote"
								],
								[
									"file.path\t{base}",
									"file.path"
								],
								[
									"as.character.condition\t{base}",
									"as.character.condition"
								],
								[
									".Platform\t{base}",
									".Platform"
								],
								[
									"memDecompress\t{base}",
									"memDecompress"
								],
								[
									"activeBindingFunction\t{base}",
									"activeBindingFunction"
								],
								[
									"format.data.frame\t{base}",
									"format.data.frame"
								],
								[
									"unCfillPOSIXlt\t{base}",
									"unCfillPOSIXlt"
								],
								[
									"lazyLoad\t{base}",
									"lazyLoad"
								],
								[
									"srcref\t{base}",
									"srcref"
								],
								[
									"as.POSIXlt.factor\t{base}",
									"as.POSIXlt.factor"
								],
								[
									"t.default\t{base}",
									"t.default"
								],
								[
									"warning\t{base}",
									"warning"
								],
								[
									".__S3MethodsTable__.\t{base}",
									".__S3MethodsTable__."
								],
								[
									"substring\t{base}",
									"substring"
								],
								[
									"commandArgs\t{base}",
									"commandArgs"
								],
								[
									"file.symlink\t{base}",
									"file.symlink"
								],
								[
									"getCallingDLLe\t{base}",
									"getCallingDLLe"
								],
								[
									"Summary.difftime\t{base}",
									"Summary.difftime"
								],
								[
									"NROW\t{base}",
									"NROW"
								],
								[
									"match.fun\t{base}",
									"match.fun"
								],
								[
									"dput\t{base}",
									"dput"
								],
								[
									"tempfile\t{base}",
									"tempfile"
								],
								[
									"...elt\t{base}",
									"...elt"
								],
								[
									"print.by\t{base}",
									"print.by"
								],
								[
									"summary.matrix\t{base}",
									"summary.matrix"
								],
								[
									"...names\t{base}",
									"...names"
								],
								[
									"Summary.ordered\t{base}",
									"Summary.ordered"
								],
								[
									".Script\t{base}",
									".Script"
								],
								[
									"La.svd\t{base}",
									"La.svd"
								],
								[
									"rawConnection\t{base}",
									"rawConnection"
								],
								[
									"format.AsIs\t{base}",
									"format.AsIs"
								],
								[
									"is.integer\t{base}",
									"is.integer"
								],
								[
									"prod\t{base}",
									"prod"
								],
								[
									"as.integer\t{base}",
									"as.integer"
								],
								[
									"drop\t{base}",
									"drop"
								],
								[
									"Sys.umask\t{base}",
									"Sys.umask"
								],
								[
									".doTrace\t{base}",
									".doTrace"
								],
								[
									"browserText\t{base}",
									"browserText"
								],
								[
									"is.package_version\t{base}",
									"is.package_version"
								],
								[
									"bindingIsActive\t{base}",
									"bindingIsActive"
								],
								[
									"file.copy\t{base}",
									"file.copy"
								],
								[
									"eigen\t{base}",
									"eigen"
								],
								[
									"is.function\t{base}",
									"is.function"
								],
								[
									"month.name\t{base}",
									"month.name"
								],
								[
									"digamma\t{base}",
									"digamma"
								],
								[
									"l10n_info\t{base}",
									"l10n_info"
								],
								[
									"detach\t{base}",
									"detach"
								],
								[
									"as.data.frame.noquote\t{base}",
									"as.data.frame.noquote"
								],
								[
									"integer\t{base}",
									"integer"
								],
								[
									"getCallingDLL\t{base}",
									"getCallingDLL"
								],
								[
									"tracingState\t{base}",
									"tracingState"
								],
								[
									"as.function\t{base}",
									"as.function"
								],
								[
									"attach\t{base}",
									"attach"
								],
								[
									"dump\t{base}",
									"dump"
								],
								[
									"as.POSIXct.numeric\t{base}",
									"as.POSIXct.numeric"
								],
								[
									"is.recursive\t{base}",
									"is.recursive"
								],
								[
									"unlink\t{base}",
									"unlink"
								],
								[
									"seq_along\t{base}",
									"seq_along"
								],
								[
									"pcre_config\t{base}",
									"pcre_config"
								],
								[
									"unlist\t{base}",
									"unlist"
								],
								[
									"all.equal\t{base}",
									"all.equal"
								],
								[
									"regmatches\t{base}",
									"regmatches"
								],
								[
									"is.numeric_version\t{base}",
									"is.numeric_version"
								],
								[
									".Device\t{base}",
									".Device"
								],
								[
									".tryResumeInterrupt\t{base}",
									".tryResumeInterrupt"
								],
								[
									"getNamespaceName\t{base}",
									"getNamespaceName"
								],
								[
									"parent.frame\t{base}",
									"parent.frame"
								],
								[
									"factor\t{base}",
									"factor"
								],
								[
									"mtfrm.default\t{base}",
									"mtfrm.default"
								],
								[
									"message\t{base}",
									"message"
								],
								[
									"lockBinding\t{base}",
									"lockBinding"
								],
								[
									"numToInts\t{base}",
									"numToInts"
								],
								[
									".valid.factor\t{base}",
									".valid.factor"
								],
								[
									"Position\t{base}",
									"Position"
								],
								[
									"rep.numeric_version\t{base}",
									"rep.numeric_version"
								],
								[
									".Defunct\t{base}",
									".Defunct"
								],
								[
									"agricolae\tInstalled Package",
									"agricolae"
								],
								[
									"AlgDesign\tInstalled Package",
									"AlgDesign"
								],
								[
									"algEq\tInstalled Package",
									"algEq"
								],
								[
									"anytime\tInstalled Package",
									"anytime"
								],
								[
									"AsioHeaders\tInstalled Package",
									"AsioHeaders"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"ast2ast\tInstalled Package",
									"ast2ast"
								],
								[
									"BB\tInstalled Package",
									"BB"
								],
								[
									"BBmisc\tInstalled Package",
									"BBmisc"
								],
								[
									"bibtex\tInstalled Package",
									"bibtex"
								],
								[
									"bigD\tInstalled Package",
									"bigD"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"bmp\tInstalled Package",
									"bmp"
								],
								[
									"brew\tInstalled Package",
									"brew"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broman\tInstalled Package",
									"broman"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"ca\tInstalled Package",
									"ca"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"Cairo\tInstalled Package",
									"Cairo"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"car\tInstalled Package",
									"car"
								],
								[
									"carData\tInstalled Package",
									"carData"
								],
								[
									"cellranger\tInstalled Package",
									"cellranger"
								],
								[
									"chromatogram\tInstalled Package",
									"chromatogram"
								],
								[
									"chromatographR\tInstalled Package",
									"chromatographR"
								],
								[
									"chromConverter\tInstalled Package",
									"chromConverter"
								],
								[
									"chromote\tInstalled Package",
									"chromote"
								],
								[
									"cinterpolate\tInstalled Package",
									"cinterpolate"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"clipr\tInstalled Package",
									"clipr"
								],
								[
									"clue\tInstalled Package",
									"clue"
								],
								[
									"collections\tInstalled Package",
									"collections"
								],
								[
									"colorout\tInstalled Package",
									"colorout"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"combinat\tInstalled Package",
									"combinat"
								],
								[
									"COMELN\tInstalled Package",
									"COMELN"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"config\tInstalled Package",
									"config"
								],
								[
									"confintr\tInstalled Package",
									"confintr"
								],
								[
									"corrplot\tInstalled Package",
									"corrplot"
								],
								[
									"cowplot\tInstalled Package",
									"cowplot"
								],
								[
									"CPAT\tInstalled Package",
									"CPAT"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"credentials\tInstalled Package",
									"credentials"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"cyclocomp\tInstalled Package",
									"cyclocomp"
								],
								[
									"dendextend\tInstalled Package",
									"dendextend"
								],
								[
									"Deriv\tInstalled Package",
									"Deriv"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"deSolve\tInstalled Package",
									"deSolve"
								],
								[
									"devtools\tInstalled Package",
									"devtools"
								],
								[
									"dfdr\tInstalled Package",
									"dfdr"
								],
								[
									"dfoptim\tInstalled Package",
									"dfoptim"
								],
								[
									"DiagrammeR\tInstalled Package",
									"DiagrammeR"
								],
								[
									"DiagrammeRsvg\tInstalled Package",
									"DiagrammeRsvg"
								],
								[
									"differential\tInstalled Package",
									"differential"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dlstats\tInstalled Package",
									"dlstats"
								],
								[
									"doParallel\tInstalled Package",
									"doParallel"
								],
								[
									"downlit\tInstalled Package",
									"downlit"
								],
								[
									"downloader\tInstalled Package",
									"downloader"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"drc\tInstalled Package",
									"drc"
								],
								[
									"dsa2a\tInstalled Package",
									"dsa2a"
								],
								[
									"dtw\tInstalled Package",
									"dtw"
								],
								[
									"dtwclust\tInstalled Package",
									"dtwclust"
								],
								[
									"dynamicTreeCut\tInstalled Package",
									"dynamicTreeCut"
								],
								[
									"ellipse\tInstalled Package",
									"ellipse"
								],
								[
									"emmeans\tInstalled Package",
									"emmeans"
								],
								[
									"entab\tInstalled Package",
									"entab"
								],
								[
									"estimability\tInstalled Package",
									"estimability"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"factoextra\tInstalled Package",
									"factoextra"
								],
								[
									"FactoMineR\tInstalled Package",
									"FactoMineR"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastcluster\tInstalled Package",
									"fastcluster"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"ff\tInstalled Package",
									"ff"
								],
								[
									"filelock\tInstalled Package",
									"filelock"
								],
								[
									"flashClust\tInstalled Package",
									"flashClust"
								],
								[
									"flexclust\tInstalled Package",
									"flexclust"
								],
								[
									"flexdashboard\tInstalled Package",
									"flexdashboard"
								],
								[
									"fontawesome\tInstalled Package",
									"fontawesome"
								],
								[
									"forcats\tInstalled Package",
									"forcats"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"future\tInstalled Package",
									"future"
								],
								[
									"future.apply\tInstalled Package",
									"future.apply"
								],
								[
									"gapminder\tInstalled Package",
									"gapminder"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"gert\tInstalled Package",
									"gert"
								],
								[
									"gg3D\tInstalled Package",
									"gg3D"
								],
								[
									"gganimate\tInstalled Package",
									"gganimate"
								],
								[
									"ggdendro\tInstalled Package",
									"ggdendro"
								],
								[
									"ggfortify\tInstalled Package",
									"ggfortify"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"ggpmisc\tInstalled Package",
									"ggpmisc"
								],
								[
									"ggpp\tInstalled Package",
									"ggpp"
								],
								[
									"ggpubr\tInstalled Package",
									"ggpubr"
								],
								[
									"ggrepel\tInstalled Package",
									"ggrepel"
								],
								[
									"ggsci\tInstalled Package",
									"ggsci"
								],
								[
									"ggsignif\tInstalled Package",
									"ggsignif"
								],
								[
									"gifski\tInstalled Package",
									"gifski"
								],
								[
									"glmnet\tInstalled Package",
									"glmnet"
								],
								[
									"globals\tInstalled Package",
									"globals"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"gt\tInstalled Package",
									"gt"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"gtools\tInstalled Package",
									"gtools"
								],
								[
									"hardhat\tInstalled Package",
									"hardhat"
								],
								[
									"haven\tInstalled Package",
									"haven"
								],
								[
									"HDclassif\tInstalled Package",
									"HDclassif"
								],
								[
									"here\tInstalled Package",
									"here"
								],
								[
									"highcharter\tInstalled Package",
									"highcharter"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"hunspell\tInstalled Package",
									"hunspell"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"imager\tInstalled Package",
									"imager"
								],
								[
									"inline\tInstalled Package",
									"inline"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"jose\tInstalled Package",
									"jose"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"juicyjuice\tInstalled Package",
									"juicyjuice"
								],
								[
									"kableExtra\tInstalled Package",
									"kableExtra"
								],
								[
									"katex\tInstalled Package",
									"katex"
								],
								[
									"keras\tInstalled Package",
									"keras"
								],
								[
									"keyring\tInstalled Package",
									"keyring"
								],
								[
									"klaR\tInstalled Package",
									"klaR"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"labelled\tInstalled Package",
									"labelled"
								],
								[
									"languageserver\tInstalled Package",
									"languageserver"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lbfgs\tInstalled Package",
									"lbfgs"
								],
								[
									"lbfgsb3c\tInstalled Package",
									"lbfgsb3c"
								],
								[
									"leaps\tInstalled Package",
									"leaps"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"lintr\tInstalled Package",
									"lintr"
								],
								[
									"lme4\tInstalled Package",
									"lme4"
								],
								[
									"lmodel2\tInstalled Package",
									"lmodel2"
								],
								[
									"lobstr\tInstalled Package",
									"lobstr"
								],
								[
									"luajr\tInstalled Package",
									"luajr"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"marqLevAlg\tInstalled Package",
									"marqLevAlg"
								],
								[
									"MatrixModels\tInstalled Package",
									"MatrixModels"
								],
								[
									"microbenchmark\tInstalled Package",
									"microbenchmark"
								],
								[
									"miniUI\tInstalled Package",
									"miniUI"
								],
								[
									"minpack.lm\tInstalled Package",
									"minpack.lm"
								],
								[
									"minqa\tInstalled Package",
									"minqa"
								],
								[
									"mlr\tInstalled Package",
									"mlr"
								],
								[
									"modeltools\tInstalled Package",
									"modeltools"
								],
								[
									"MTT\tInstalled Package",
									"MTT"
								],
								[
									"multcomp\tInstalled Package",
									"multcomp"
								],
								[
									"multcompView\tInstalled Package",
									"multcompView"
								],
								[
									"mvtnorm\tInstalled Package",
									"mvtnorm"
								],
								[
									"networkD3\tInstalled Package",
									"networkD3"
								],
								[
									"nleqslv\tInstalled Package",
									"nleqslv"
								],
								[
									"nloptr\tInstalled Package",
									"nloptr"
								],
								[
									"numbers\tInstalled Package",
									"numbers"
								],
								[
									"nvimcom\tInstalled Package",
									"nvimcom"
								],
								[
									"odin\tInstalled Package",
									"odin"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"openxlsx\tInstalled Package",
									"openxlsx"
								],
								[
									"optimx\tInstalled Package",
									"optimx"
								],
								[
									"orca\tInstalled Package",
									"orca"
								],
								[
									"packrat\tInstalled Package",
									"packrat"
								],
								[
									"parallelly\tInstalled Package",
									"parallelly"
								],
								[
									"parallelMap\tInstalled Package",
									"parallelMap"
								],
								[
									"ParamHelpers\tInstalled Package",
									"ParamHelpers"
								],
								[
									"paropt\tInstalled Package",
									"paropt"
								],
								[
									"parsedate\tInstalled Package",
									"parsedate"
								],
								[
									"patchwork\tInstalled Package",
									"patchwork"
								],
								[
									"pattern\tInstalled Package",
									"pattern"
								],
								[
									"pbkrtest\tInstalled Package",
									"pbkrtest"
								],
								[
									"pheatmap\tInstalled Package",
									"pheatmap"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgdown\tInstalled Package",
									"pkgdown"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"PKI\tInstalled Package",
									"PKI"
								],
								[
									"plantuml\tInstalled Package",
									"plantuml"
								],
								[
									"platereader\tInstalled Package",
									"platereader"
								],
								[
									"plotly\tInstalled Package",
									"plotly"
								],
								[
									"plotrix\tInstalled Package",
									"plotrix"
								],
								[
									"polynom\tInstalled Package",
									"polynom"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"profvis\tInstalled Package",
									"profvis"
								],
								[
									"pryr\tInstalled Package",
									"pryr"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"ptw\tInstalled Package",
									"ptw"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"pvclust\tInstalled Package",
									"pvclust"
								],
								[
									"quantreg\tInstalled Package",
									"quantreg"
								],
								[
									"quarto\tInstalled Package",
									"quarto"
								],
								[
									"questionr\tInstalled Package",
									"questionr"
								],
								[
									"R.cache\tInstalled Package",
									"R.cache"
								],
								[
									"R.methodsS3\tInstalled Package",
									"R.methodsS3"
								],
								[
									"R.oo\tInstalled Package",
									"R.oo"
								],
								[
									"R.utils\tInstalled Package",
									"R.utils"
								],
								[
									"ragg\tInstalled Package",
									"ragg"
								],
								[
									"rARPACK\tInstalled Package",
									"rARPACK"
								],
								[
									"rbibutils\tInstalled Package",
									"rbibutils"
								],
								[
									"rcmdcheck\tInstalled Package",
									"rcmdcheck"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppArmadillo\tInstalled Package",
									"RcppArmadillo"
								],
								[
									"RcppClock\tInstalled Package",
									"RcppClock"
								],
								[
									"RcppDE\tInstalled Package",
									"RcppDE"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"RcppEnsmallen\tInstalled Package",
									"RcppEnsmallen"
								],
								[
									"RcppParallel\tInstalled Package",
									"RcppParallel"
								],
								[
									"RcppThread\tInstalled Package",
									"RcppThread"
								],
								[
									"RcppTOML\tInstalled Package",
									"RcppTOML"
								],
								[
									"RcppXPtrUtils\tInstalled Package",
									"RcppXPtrUtils"
								],
								[
									"Rdpack\tInstalled Package",
									"Rdpack"
								],
								[
									"reactable\tInstalled Package",
									"reactable"
								],
								[
									"reactR\tInstalled Package",
									"reactR"
								],
								[
									"readbitmap\tInstalled Package",
									"readbitmap"
								],
								[
									"readr\tInstalled Package",
									"readr"
								],
								[
									"readxl\tInstalled Package",
									"readxl"
								],
								[
									"RefManageR\tInstalled Package",
									"RefManageR"
								],
								[
									"rematch\tInstalled Package",
									"rematch"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"renv\tInstalled Package",
									"renv"
								],
								[
									"reticulate\tInstalled Package",
									"reticulate"
								],
								[
									"rhub\tInstalled Package",
									"rhub"
								],
								[
									"ring\tInstalled Package",
									"ring"
								],
								[
									"RInside\tInstalled Package",
									"RInside"
								],
								[
									"rjson\tInstalled Package",
									"rjson"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rlist\tInstalled Package",
									"rlist"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"rootSolve\tInstalled Package",
									"rootSolve"
								],
								[
									"roxygen2\tInstalled Package",
									"roxygen2"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rsconnect\tInstalled Package",
									"rsconnect"
								],
								[
									"rstatix\tInstalled Package",
									"rstatix"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"rsvg\tInstalled Package",
									"rsvg"
								],
								[
									"rversions\tInstalled Package",
									"rversions"
								],
								[
									"rvest\tInstalled Package",
									"rvest"
								],
								[
									"Ryacas\tInstalled Package",
									"Ryacas"
								],
								[
									"sandwich\tInstalled Package",
									"sandwich"
								],
								[
									"sanitizers\tInstalled Package",
									"sanitizers"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"scatterplot3d\tInstalled Package",
									"scatterplot3d"
								],
								[
									"sensitivity\tInstalled Package",
									"sensitivity"
								],
								[
									"serial\tInstalled Package",
									"serial"
								],
								[
									"sessioninfo\tInstalled Package",
									"sessioninfo"
								],
								[
									"shape\tInstalled Package",
									"shape"
								],
								[
									"shinydashboard\tInstalled Package",
									"shinydashboard"
								],
								[
									"shinyjs\tInstalled Package",
									"shinyjs"
								],
								[
									"shinyWidgets\tInstalled Package",
									"shinyWidgets"
								],
								[
									"spelling\tInstalled Package",
									"spelling"
								],
								[
									"splus2R\tInstalled Package",
									"splus2R"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"styler\tInstalled Package",
									"styler"
								],
								[
									"subplex\tInstalled Package",
									"subplex"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"tensorflow\tInstalled Package",
									"tensorflow"
								],
								[
									"test\tInstalled Package",
									"test"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"tfautograph\tInstalled Package",
									"tfautograph"
								],
								[
									"tfdatasets\tInstalled Package",
									"tfdatasets"
								],
								[
									"tfruns\tInstalled Package",
									"tfruns"
								],
								[
									"TH.data\tInstalled Package",
									"TH.data"
								],
								[
									"thermosimfit\tInstalled Package",
									"thermosimfit"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyCpp\tInstalled Package",
									"tidyCpp"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tiff\tInstalled Package",
									"tiff"
								],
								[
									"timechange\tInstalled Package",
									"timechange"
								],
								[
									"tinytest\tInstalled Package",
									"tinytest"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tsf\tInstalled Package",
									"tsf"
								],
								[
									"tweenr\tInstalled Package",
									"tweenr"
								],
								[
									"tzdb\tInstalled Package",
									"tzdb"
								],
								[
									"ucminf\tInstalled Package",
									"ucminf"
								],
								[
									"unix\tInstalled Package",
									"unix"
								],
								[
									"urlchecker\tInstalled Package",
									"urlchecker"
								],
								[
									"usethis\tInstalled Package",
									"usethis"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"uuid\tInstalled Package",
									"uuid"
								],
								[
									"V8\tInstalled Package",
									"V8"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"visNetwork\tInstalled Package",
									"visNetwork"
								],
								[
									"VPdtw\tInstalled Package",
									"VPdtw"
								],
								[
									"vroom\tInstalled Package",
									"vroom"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"webshot\tInstalled Package",
									"webshot"
								],
								[
									"webshot2\tInstalled Package",
									"webshot2"
								],
								[
									"websocket\tInstalled Package",
									"websocket"
								],
								[
									"whisker\tInstalled Package",
									"whisker"
								],
								[
									"whoami\tInstalled Package",
									"whoami"
								],
								[
									"wiesbaden\tInstalled Package",
									"wiesbaden"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"xlsx\tInstalled Package",
									"xlsx"
								],
								[
									"xlsxjars\tInstalled Package",
									"xlsxjars"
								],
								[
									"xmlparsedata\tInstalled Package",
									"xmlparsedata"
								],
								[
									"xopen\tInstalled Package",
									"xopen"
								],
								[
									"xts\tInstalled Package",
									"xts"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"yardstick\tInstalled Package",
									"yardstick"
								],
								[
									"zeallot\tInstalled Package",
									"zeallot"
								],
								[
									"zip\tInstalled Package",
									"zip"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"fontawesome\tInstalled Package",
									"fontawesome"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"jquerylib\tInstalled Package",
									"jquerylib"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"abind\tInstalled Package",
									"abind"
								],
								[
									"acepack\tInstalled Package",
									"acepack"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"assertthat\tInstalled Package",
									"assertthat"
								],
								[
									"backports\tInstalled Package",
									"backports"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bench\tInstalled Package",
									"bench"
								],
								[
									"BH\tInstalled Package",
									"BH"
								],
								[
									"bit\tInstalled Package",
									"bit"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"bitops\tInstalled Package",
									"bitops"
								],
								[
									"blob\tInstalled Package",
									"blob"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"caret\tInstalled Package",
									"caret"
								],
								[
									"caTools\tInstalled Package",
									"caTools"
								],
								[
									"cba\tInstalled Package",
									"cba"
								],
								[
									"checkmate\tInstalled Package",
									"checkmate"
								],
								[
									"chron\tInstalled Package",
									"chron"
								],
								[
									"classInt\tInstalled Package",
									"classInt"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"cliapp\tInstalled Package",
									"cliapp"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"conquer\tInstalled Package",
									"conquer"
								],
								[
									"covr\tInstalled Package",
									"covr"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"crosstalk\tInstalled Package",
									"crosstalk"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"CVST\tInstalled Package",
									"CVST"
								],
								[
									"data.table\tInstalled Package",
									"data.table"
								],
								[
									"DBI\tInstalled Package",
									"DBI"
								],
								[
									"DBItest\tInstalled Package",
									"DBItest"
								],
								[
									"dbplyr\tInstalled Package",
									"dbplyr"
								],
								[
									"ddalpha\tInstalled Package",
									"ddalpha"
								],
								[
									"decor\tInstalled Package",
									"decor"
								],
								[
									"deldir\tInstalled Package",
									"deldir"
								],
								[
									"DEoptimR\tInstalled Package",
									"DEoptimR"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"diffobj\tInstalled Package",
									"diffobj"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dimRed\tInstalled Package",
									"dimRed"
								],
								[
									"doMC\tInstalled Package",
									"doMC"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"DRR\tInstalled Package",
									"DRR"
								],
								[
									"DT\tInstalled Package",
									"DT"
								],
								[
									"dygraphs\tInstalled Package",
									"dygraphs"
								],
								[
									"e1071\tInstalled Package",
									"e1071"
								],
								[
									"earth\tInstalled Package",
									"earth"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastICA\tInstalled Package",
									"fastICA"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"fastmatch\tInstalled Package",
									"fastmatch"
								],
								[
									"filehash\tInstalled Package",
									"filehash"
								],
								[
									"FNN\tInstalled Package",
									"FNN"
								],
								[
									"fontBitstreamVera\tInstalled Package",
									"fontBitstreamVera"
								],
								[
									"fontLiberation\tInstalled Package",
									"fontLiberation"
								],
								[
									"fontquiver\tInstalled Package",
									"fontquiver"
								],
								[
									"foreach\tInstalled Package",
									"foreach"
								],
								[
									"Formula\tInstalled Package",
									"Formula"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"fts\tInstalled Package",
									"fts"
								],
								[
									"furrr\tInstalled Package",
									"furrr"
								],
								[
									"future\tInstalled Package",
									"future"
								],
								[
									"future.apply\tInstalled Package",
									"future.apply"
								],
								[
									"gdata\tInstalled Package",
									"gdata"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"geometry\tInstalled Package",
									"geometry"
								],
								[
									"geosphere\tInstalled Package",
									"geosphere"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"gh\tInstalled Package",
									"gh"
								],
								[
									"gitcreds\tInstalled Package",
									"gitcreds"
								],
								[
									"globals\tInstalled Package",
									"globals"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"goftest\tInstalled Package",
									"goftest"
								],
								[
									"gower\tInstalled Package",
									"gower"
								],
								[
									"gplots\tInstalled Package",
									"gplots"
								],
								[
									"gridExtra\tInstalled Package",
									"gridExtra"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"gtools\tInstalled Package",
									"gtools"
								],
								[
									"hexbin\tInstalled Package",
									"hexbin"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"Hmisc\tInstalled Package",
									"Hmisc"
								],
								[
									"hms\tInstalled Package",
									"hms"
								],
								[
									"htmlTable\tInstalled Package",
									"htmlTable"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"httr\tInstalled Package",
									"httr"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"ini\tInstalled Package",
									"ini"
								],
								[
									"interp\tInstalled Package",
									"interp"
								],
								[
									"ipred\tInstalled Package",
									"ipred"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"iterators\tInstalled Package",
									"iterators"
								],
								[
									"jpeg\tInstalled Package",
									"jpeg"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"kernlab\tInstalled Package",
									"kernlab"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"ks\tInstalled Package",
									"ks"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"latticeExtra\tInstalled Package",
									"latticeExtra"
								],
								[
									"lava\tInstalled Package",
									"lava"
								],
								[
									"lazyeval\tInstalled Package",
									"lazyeval"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"linprog\tInstalled Package",
									"linprog"
								],
								[
									"listenv\tInstalled Package",
									"listenv"
								],
								[
									"littler\tInstalled Package",
									"littler"
								],
								[
									"lme4\tInstalled Package",
									"lme4"
								],
								[
									"lobstr\tInstalled Package",
									"lobstr"
								],
								[
									"logcondens\tInstalled Package",
									"logcondens"
								],
								[
									"lpSolve\tInstalled Package",
									"lpSolve"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"lwgeom\tInstalled Package",
									"lwgeom"
								],
								[
									"magic\tInstalled Package",
									"magic"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"mapproj\tInstalled Package",
									"mapproj"
								],
								[
									"maps\tInstalled Package",
									"maps"
								],
								[
									"maptools\tInstalled Package",
									"maptools"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"MatrixModels\tInstalled Package",
									"MatrixModels"
								],
								[
									"matrixStats\tInstalled Package",
									"matrixStats"
								],
								[
									"mclust\tInstalled Package",
									"mclust"
								],
								[
									"mda\tInstalled Package",
									"mda"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"mets\tInstalled Package",
									"mets"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"minqa\tInstalled Package",
									"minqa"
								],
								[
									"misc3d\tInstalled Package",
									"misc3d"
								],
								[
									"mlbench\tInstalled Package",
									"mlbench"
								],
								[
									"MLmetrics\tInstalled Package",
									"MLmetrics"
								],
								[
									"mockery\tInstalled Package",
									"mockery"
								],
								[
									"mockr\tInstalled Package",
									"mockr"
								],
								[
									"modeldata\tInstalled Package",
									"modeldata"
								],
								[
									"ModelMetrics\tInstalled Package",
									"ModelMetrics"
								],
								[
									"multcomp\tInstalled Package",
									"multcomp"
								],
								[
									"multicool\tInstalled Package",
									"multicool"
								],
								[
									"munsell\tInstalled Package",
									"munsell"
								],
								[
									"mvtnorm\tInstalled Package",
									"mvtnorm"
								],
								[
									"nloptr\tInstalled Package",
									"nloptr"
								],
								[
									"numDeriv\tInstalled Package",
									"numDeriv"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"palmerpenguins\tInstalled Package",
									"palmerpenguins"
								],
								[
									"parallelly\tInstalled Package",
									"parallelly"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgconfig\tInstalled Package",
									"pkgconfig"
								],
								[
									"pkgKitten\tInstalled Package",
									"pkgKitten"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"plogr\tInstalled Package",
									"plogr"
								],
								[
									"plot3D\tInstalled Package",
									"plot3D"
								],
								[
									"plotmo\tInstalled Package",
									"plotmo"
								],
								[
									"plotrix\tInstalled Package",
									"plotrix"
								],
								[
									"pls\tInstalled Package",
									"pls"
								],
								[
									"plyr\tInstalled Package",
									"plyr"
								],
								[
									"png\tInstalled Package",
									"png"
								],
								[
									"polyclip\tInstalled Package",
									"polyclip"
								],
								[
									"pracma\tInstalled Package",
									"pracma"
								],
								[
									"praise\tInstalled Package",
									"praise"
								],
								[
									"prettycode\tInstalled Package",
									"prettycode"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"pROC\tInstalled Package",
									"pROC"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"prodlim\tInstalled Package",
									"prodlim"
								],
								[
									"profmem\tInstalled Package",
									"profmem"
								],
								[
									"progress\tInstalled Package",
									"progress"
								],
								[
									"progressr\tInstalled Package",
									"progressr"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"proxy\tInstalled Package",
									"proxy"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"quadprog\tInstalled Package",
									"quadprog"
								],
								[
									"quantmod\tInstalled Package",
									"quantmod"
								],
								[
									"quantreg\tInstalled Package",
									"quantreg"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"ragg\tInstalled Package",
									"ragg"
								],
								[
									"RANN\tInstalled Package",
									"RANN"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"raster\tInstalled Package",
									"raster"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppArmadillo\tInstalled Package",
									"RcppArmadillo"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"RcppProgress\tInstalled Package",
									"RcppProgress"
								],
								[
									"RcppRoll\tInstalled Package",
									"RcppRoll"
								],
								[
									"recipes\tInstalled Package",
									"recipes"
								],
								[
									"rematch2\tInstalled Package",
									"rematch2"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"reshape2\tInstalled Package",
									"reshape2"
								],
								[
									"rex\tInstalled Package",
									"rex"
								],
								[
									"rgdal\tInstalled Package",
									"rgdal"
								],
								[
									"rgl\tInstalled Package",
									"rgl"
								],
								[
									"rJava\tInstalled Package",
									"rJava"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"RMySQL\tInstalled Package",
									"RMySQL"
								],
								[
									"robustbase\tInstalled Package",
									"robustbase"
								],
								[
									"ROCR\tInstalled Package",
									"ROCR"
								],
								[
									"RPostgreSQL\tInstalled Package",
									"RPostgreSQL"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rsample\tInstalled Package",
									"rsample"
								],
								[
									"RSpectra\tInstalled Package",
									"RSpectra"
								],
								[
									"RSQLite\tInstalled Package",
									"RSQLite"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"RUnit\tInstalled Package",
									"RUnit"
								],
								[
									"s2\tInstalled Package",
									"s2"
								],
								[
									"sandwich\tInstalled Package",
									"sandwich"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"selectr\tInstalled Package",
									"selectr"
								],
								[
									"setRNG\tInstalled Package",
									"setRNG"
								],
								[
									"sf\tInstalled Package",
									"sf"
								],
								[
									"sfsmisc\tInstalled Package",
									"sfsmisc"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"slider\tInstalled Package",
									"slider"
								],
								[
									"sodium\tInstalled Package",
									"sodium"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"sp\tInstalled Package",
									"sp"
								],
								[
									"SparseM\tInstalled Package",
									"SparseM"
								],
								[
									"spatstat\tInstalled Package",
									"spatstat"
								],
								[
									"spatstat.core\tInstalled Package",
									"spatstat.core"
								],
								[
									"spatstat.data\tInstalled Package",
									"spatstat.data"
								],
								[
									"spatstat.geom\tInstalled Package",
									"spatstat.geom"
								],
								[
									"spatstat.linnet\tInstalled Package",
									"spatstat.linnet"
								],
								[
									"spatstat.sparse\tInstalled Package",
									"spatstat.sparse"
								],
								[
									"spatstat.utils\tInstalled Package",
									"spatstat.utils"
								],
								[
									"SQUAREM\tInstalled Package",
									"SQUAREM"
								],
								[
									"statmod\tInstalled Package",
									"statmod"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"svglite\tInstalled Package",
									"svglite"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"systemfonts\tInstalled Package",
									"systemfonts"
								],
								[
									"TeachingDemos\tInstalled Package",
									"TeachingDemos"
								],
								[
									"tensor\tInstalled Package",
									"tensor"
								],
								[
									"terra\tInstalled Package",
									"terra"
								],
								[
									"testit\tInstalled Package",
									"testit"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"textshaping\tInstalled Package",
									"textshaping"
								],
								[
									"TH.data\tInstalled Package",
									"TH.data"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tikzDevice\tInstalled Package",
									"tikzDevice"
								],
								[
									"timeDate\tInstalled Package",
									"timeDate"
								],
								[
									"timereg\tInstalled Package",
									"timereg"
								],
								[
									"timeSeries\tInstalled Package",
									"timeSeries"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tseries\tInstalled Package",
									"tseries"
								],
								[
									"TTR\tInstalled Package",
									"TTR"
								],
								[
									"units\tInstalled Package",
									"units"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"vdiffr\tInstalled Package",
									"vdiffr"
								],
								[
									"viridis\tInstalled Package",
									"viridis"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"warp\tInstalled Package",
									"warp"
								],
								[
									"webfakes\tInstalled Package",
									"webfakes"
								],
								[
									"webutils\tInstalled Package",
									"webutils"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"wk\tInstalled Package",
									"wk"
								],
								[
									"wkutils\tInstalled Package",
									"wkutils"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"XML\tInstalled Package",
									"XML"
								],
								[
									"xml2\tInstalled Package",
									"xml2"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"xts\tInstalled Package",
									"xts"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								],
								[
									"base\tInstalled Package",
									"base"
								],
								[
									"boot\tInstalled Package",
									"boot"
								],
								[
									"class\tInstalled Package",
									"class"
								],
								[
									"cluster\tInstalled Package",
									"cluster"
								],
								[
									"codetools\tInstalled Package",
									"codetools"
								],
								[
									"compiler\tInstalled Package",
									"compiler"
								],
								[
									"datasets\tInstalled Package",
									"datasets"
								],
								[
									"foreign\tInstalled Package",
									"foreign"
								],
								[
									"graphics\tInstalled Package",
									"graphics"
								],
								[
									"grDevices\tInstalled Package",
									"grDevices"
								],
								[
									"grid\tInstalled Package",
									"grid"
								],
								[
									"KernSmooth\tInstalled Package",
									"KernSmooth"
								],
								[
									"lattice\tInstalled Package",
									"lattice"
								],
								[
									"MASS\tInstalled Package",
									"MASS"
								],
								[
									"Matrix\tInstalled Package",
									"Matrix"
								],
								[
									"methods\tInstalled Package",
									"methods"
								],
								[
									"mgcv\tInstalled Package",
									"mgcv"
								],
								[
									"nlme\tInstalled Package",
									"nlme"
								],
								[
									"nnet\tInstalled Package",
									"nnet"
								],
								[
									"parallel\tInstalled Package",
									"parallel"
								],
								[
									"rpart\tInstalled Package",
									"rpart"
								],
								[
									"spatial\tInstalled Package",
									"spatial"
								],
								[
									"splines\tInstalled Package",
									"splines"
								],
								[
									"stats\tInstalled Package",
									"stats"
								],
								[
									"stats4\tInstalled Package",
									"stats4"
								],
								[
									"survival\tInstalled Package",
									"survival"
								],
								[
									"tcltk\tInstalled Package",
									"tcltk"
								],
								[
									"tools\tInstalled Package",
									"tools"
								],
								[
									"utils\tInstalled Package",
									"utils"
								]
							],
							"R-Box.loaded_packages":
							[
								"grDevices",
								"stats",
								"graphics",
								"methods",
								"utils",
								"base"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/R/R.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1194.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 3,
					"file": "tsf/R/server.R",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2311,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"R-Box.completions":
							[
								[
									".radialGradientPattern\t{grDevices}",
									".radialGradientPattern"
								],
								[
									"gray.colors\t{grDevices}",
									"gray.colors"
								],
								[
									"rainbow\t{grDevices}",
									"rainbow"
								],
								[
									"check.options\t{grDevices}",
									"check.options"
								],
								[
									"hcl.pals\t{grDevices}",
									"hcl.pals"
								],
								[
									"glyphFontList\t{grDevices}",
									"glyphFontList"
								],
								[
									"embedFonts\t{grDevices}",
									"embedFonts"
								],
								[
									"cairo_ps\t{grDevices}",
									"cairo_ps"
								],
								[
									"colorspaces\t{grDevices}",
									"colorspaces"
								],
								[
									"cairo_pdf\t{grDevices}",
									"cairo_pdf"
								],
								[
									"getGraphicsEventEnv\t{grDevices}",
									"getGraphicsEventEnv"
								],
								[
									".axisPars\t{grDevices}",
									".axisPars"
								],
								[
									"bmp\t{grDevices}",
									"bmp"
								],
								[
									".devUp\t{grDevices}",
									".devUp"
								],
								[
									".mask\t{grDevices}",
									".mask"
								],
								[
									"graphics.off\t{grDevices}",
									"graphics.off"
								],
								[
									"densCols\t{grDevices}",
									"densCols"
								],
								[
									"savePlot\t{grDevices}",
									"savePlot"
								],
								[
									"X11Font\t{grDevices}",
									"X11Font"
								],
								[
									"grey\t{grDevices}",
									"grey"
								],
								[
									".setMask\t{grDevices}",
									".setMask"
								],
								[
									"deviceIsInteractive\t{grDevices}",
									"deviceIsInteractive"
								],
								[
									".opIndex\t{grDevices}",
									".opIndex"
								],
								[
									"quartz.save\t{grDevices}",
									"quartz.save"
								],
								[
									"quartz\t{grDevices}",
									"quartz"
								],
								[
									"xfig\t{grDevices}",
									"xfig"
								],
								[
									"dev.capabilities\t{grDevices}",
									"dev.capabilities"
								],
								[
									"extendrange\t{grDevices}",
									"extendrange"
								],
								[
									"nclass.Sturges\t{grDevices}",
									"nclass.Sturges"
								],
								[
									".defineGroup\t{grDevices}",
									".defineGroup"
								],
								[
									".useGroup\t{grDevices}",
									".useGroup"
								],
								[
									"colors\t{grDevices}",
									"colors"
								],
								[
									"pictex\t{grDevices}",
									"pictex"
								],
								[
									".ruleIndex\t{grDevices}",
									".ruleIndex"
								],
								[
									"dev.set\t{grDevices}",
									"dev.set"
								],
								[
									"trans3d\t{grDevices}",
									"trans3d"
								],
								[
									"recordPlot\t{grDevices}",
									"recordPlot"
								],
								[
									"glyphWidthLeft\t{grDevices}",
									"glyphWidthLeft"
								],
								[
									"hsv\t{grDevices}",
									"hsv"
								],
								[
									"bitmap\t{grDevices}",
									"bitmap"
								],
								[
									"embedGlyphs\t{grDevices}",
									"embedGlyphs"
								],
								[
									"hcl\t{grDevices}",
									"hcl"
								],
								[
									"postscriptFonts\t{grDevices}",
									"postscriptFonts"
								],
								[
									"tiff\t{grDevices}",
									"tiff"
								],
								[
									"X11\t{grDevices}",
									"X11"
								],
								[
									"Hershey\t{grDevices}",
									"Hershey"
								],
								[
									"palette.colors\t{grDevices}",
									"palette.colors"
								],
								[
									"glyphHeight\t{grDevices}",
									"glyphHeight"
								],
								[
									"is.raster\t{grDevices}",
									"is.raster"
								],
								[
									"colorConverter\t{grDevices}",
									"colorConverter"
								],
								[
									"glyphFont\t{grDevices}",
									"glyphFont"
								],
								[
									"dev2bitmap\t{grDevices}",
									"dev2bitmap"
								],
								[
									"dev.next\t{grDevices}",
									"dev.next"
								],
								[
									"dev.interactive\t{grDevices}",
									"dev.interactive"
								],
								[
									"grey.colors\t{grDevices}",
									"grey.colors"
								],
								[
									"dev.copy2pdf\t{grDevices}",
									"dev.copy2pdf"
								],
								[
									"terrain.colors\t{grDevices}",
									"terrain.colors"
								],
								[
									"grSoftVersion\t{grDevices}",
									"grSoftVersion"
								],
								[
									"quartz.options\t{grDevices}",
									"quartz.options"
								],
								[
									".tilingPattern\t{grDevices}",
									".tilingPattern"
								],
								[
									"hcl.colors\t{grDevices}",
									"hcl.colors"
								],
								[
									"glyphAnchor\t{grDevices}",
									"glyphAnchor"
								],
								[
									"nclass.scott\t{grDevices}",
									"nclass.scott"
								],
								[
									"dev.hold\t{grDevices}",
									"dev.hold"
								],
								[
									"glyphWidth\t{grDevices}",
									"glyphWidth"
								],
								[
									"devAskNewPage\t{grDevices}",
									"devAskNewPage"
								],
								[
									"x11\t{grDevices}",
									"x11"
								],
								[
									"as.raster\t{grDevices}",
									"as.raster"
								],
								[
									".clipPath\t{grDevices}",
									".clipPath"
								],
								[
									"rgb2hsv\t{grDevices}",
									"rgb2hsv"
								],
								[
									"setGraphicsEventEnv\t{grDevices}",
									"setGraphicsEventEnv"
								],
								[
									"heat.colors\t{grDevices}",
									"heat.colors"
								],
								[
									"topo.colors\t{grDevices}",
									"topo.colors"
								],
								[
									"blues9\t{grDevices}",
									"blues9"
								],
								[
									"recordGraphics\t{grDevices}",
									"recordGraphics"
								],
								[
									"boxplot.stats\t{grDevices}",
									"boxplot.stats"
								],
								[
									"svg\t{grDevices}",
									"svg"
								],
								[
									"dev.list\t{grDevices}",
									"dev.list"
								],
								[
									"colours\t{grDevices}",
									"colours"
								],
								[
									"convertColor\t{grDevices}",
									"convertColor"
								],
								[
									"dev.copy\t{grDevices}",
									"dev.copy"
								],
								[
									"chull\t{grDevices}",
									"chull"
								],
								[
									"xy.coords\t{grDevices}",
									"xy.coords"
								],
								[
									"dev.capture\t{grDevices}",
									"dev.capture"
								],
								[
									"dev.cur\t{grDevices}",
									"dev.cur"
								],
								[
									"glyphJust\t{grDevices}",
									"glyphJust"
								],
								[
									"setEPS\t{grDevices}",
									"setEPS"
								],
								[
									"cm\t{grDevices}",
									"cm"
								],
								[
									"dev.flush\t{grDevices}",
									"dev.flush"
								],
								[
									"glyphHeightBottom\t{grDevices}",
									"glyphHeightBottom"
								],
								[
									"dev.size\t{grDevices}",
									"dev.size"
								],
								[
									"setPS\t{grDevices}",
									"setPS"
								],
								[
									"cm.colors\t{grDevices}",
									"cm.colors"
								],
								[
									"dev.off\t{grDevices}",
									"dev.off"
								],
								[
									"pdf\t{grDevices}",
									"pdf"
								],
								[
									"gray\t{grDevices}",
									"gray"
								],
								[
									"nclass.FD\t{grDevices}",
									"nclass.FD"
								],
								[
									"ps.options\t{grDevices}",
									"ps.options"
								],
								[
									"as.graphicsAnnot\t{grDevices}",
									"as.graphicsAnnot"
								],
								[
									".setPattern\t{grDevices}",
									".setPattern"
								],
								[
									"X11.options\t{grDevices}",
									"X11.options"
								],
								[
									"palette\t{grDevices}",
									"palette"
								],
								[
									"replayPlot\t{grDevices}",
									"replayPlot"
								],
								[
									"pdfFonts\t{grDevices}",
									"pdfFonts"
								],
								[
									"cairoSymbolFont\t{grDevices}",
									"cairoSymbolFont"
								],
								[
									"dev.new\t{grDevices}",
									"dev.new"
								],
								[
									"pdf.options\t{grDevices}",
									"pdf.options"
								],
								[
									"X11Fonts\t{grDevices}",
									"X11Fonts"
								],
								[
									"axisTicks\t{grDevices}",
									"axisTicks"
								],
								[
									"make.rgb\t{grDevices}",
									"make.rgb"
								],
								[
									".setClipPath\t{grDevices}",
									".setClipPath"
								],
								[
									"n2mfrow\t{grDevices}",
									"n2mfrow"
								],
								[
									"rgb\t{grDevices}",
									"rgb"
								],
								[
									"quartzFont\t{grDevices}",
									"quartzFont"
								],
								[
									"getGraphicsEvent\t{grDevices}",
									"getGraphicsEvent"
								],
								[
									"xyz.coords\t{grDevices}",
									"xyz.coords"
								],
								[
									"xyTable\t{grDevices}",
									"xyTable"
								],
								[
									"CIDFont\t{grDevices}",
									"CIDFont"
								],
								[
									"adjustcolor\t{grDevices}",
									"adjustcolor"
								],
								[
									"col2rgb\t{grDevices}",
									"col2rgb"
								],
								[
									"dev.prev\t{grDevices}",
									"dev.prev"
								],
								[
									"quartzFonts\t{grDevices}",
									"quartzFonts"
								],
								[
									"png\t{grDevices}",
									"png"
								],
								[
									"colorRampPalette\t{grDevices}",
									"colorRampPalette"
								],
								[
									"palette.pals\t{grDevices}",
									"palette.pals"
								],
								[
									"glyphInfo\t{grDevices}",
									"glyphInfo"
								],
								[
									".linearGradientPattern\t{grDevices}",
									".linearGradientPattern"
								],
								[
									"jpeg\t{grDevices}",
									"jpeg"
								],
								[
									"colorRamp\t{grDevices}",
									"colorRamp"
								],
								[
									"setGraphicsEventHandlers\t{grDevices}",
									"setGraphicsEventHandlers"
								],
								[
									"dev.control\t{grDevices}",
									"dev.control"
								],
								[
									"dev.print\t{grDevices}",
									"dev.print"
								],
								[
									"dev.copy2eps\t{grDevices}",
									"dev.copy2eps"
								],
								[
									"Type1Font\t{grDevices}",
									"Type1Font"
								],
								[
									"contourLines\t{grDevices}",
									"contourLines"
								],
								[
									"postscript\t{grDevices}",
									"postscript"
								],
								[
									".__C__signature\t{methods}",
									".__C__signature"
								],
								[
									".ShortPrimitiveSkeletons\t{methods}",
									".ShortPrimitiveSkeletons"
								],
								[
									"showExtends\t{methods}",
									"showExtends"
								],
								[
									".__C__packageInfo\t{methods}",
									".__C__packageInfo"
								],
								[
									".__C__MethodSelectionReport\t{methods}",
									".__C__MethodSelectionReport"
								],
								[
									".__C__uninitializedField\t{methods}",
									".__C__uninitializedField"
								],
								[
									"extends\t{methods}",
									"extends"
								],
								[
									".__C__ordered\t{methods}",
									".__C__ordered"
								],
								[
									".__C__oldClass\t{methods}",
									".__C__oldClass"
								],
								[
									"addNextMethod\t{methods}",
									"addNextMethod"
								],
								[
									".__C__groupGenericFunction\t{methods}",
									".__C__groupGenericFunction"
								],
								[
									"getGenerics\t{methods}",
									"getGenerics"
								],
								[
									".__C__standardGeneric\t{methods}",
									".__C__standardGeneric"
								],
								[
									".__C__nonstandardGroupGenericFunction\t{methods}",
									".__C__nonstandardGroupGenericFunction"
								],
								[
									"makeExtends\t{methods}",
									"makeExtends"
								],
								[
									".__C__S3\t{methods}",
									".__C__S3"
								],
								[
									".__C__array\t{methods}",
									".__C__array"
								],
								[
									".__C__S4\t{methods}",
									".__C__S4"
								],
								[
									".EmptyPrimitiveSkeletons\t{methods}",
									".EmptyPrimitiveSkeletons"
								],
								[
									".__C__SuperClassMethod\t{methods}",
									".__C__SuperClassMethod"
								],
								[
									"showMlist\t{methods}",
									"showMlist"
								],
								[
									"setAs\t{methods}",
									"setAs"
								],
								[
									".__C__aov\t{methods}",
									".__C__aov"
								],
								[
									"resetClass\t{methods}",
									"resetClass"
								],
								[
									"assignMethodsMetaData\t{methods}",
									"assignMethodsMetaData"
								],
								[
									".__C__integrate\t{methods}",
									".__C__integrate"
								],
								[
									"getDataPart\t{methods}",
									"getDataPart"
								],
								[
									".__C__listOfMethods\t{methods}",
									".__C__listOfMethods"
								],
								[
									".__C__ClassUnionRepresentation\t{methods}",
									".__C__ClassUnionRepresentation"
								],
								[
									"findMethodSignatures\t{methods}",
									"findMethodSignatures"
								],
								[
									"getGroupMembers\t{methods}",
									"getGroupMembers"
								],
								[
									"signature\t{methods}",
									"signature"
								],
								[
									"setReplaceMethod\t{methods}",
									"setReplaceMethod"
								],
								[
									"removeClass\t{methods}",
									"removeClass"
								],
								[
									"implicitGeneric\t{methods}",
									"implicitGeneric"
								],
								[
									".OldClassesList\t{methods}",
									".OldClassesList"
								],
								[
									".__C__refObject\t{methods}",
									".__C__refObject"
								],
								[
									"cacheMetaData\t{methods}",
									"cacheMetaData"
								],
								[
									"el\t{methods}",
									"el"
								],
								[
									"callGeneric\t{methods}",
									"callGeneric"
								],
								[
									"showClass\t{methods}",
									"showClass"
								],
								[
									"Complex\t{methods}",
									"Complex"
								],
								[
									".__C__.Other\t{methods}",
									".__C__.Other"
								],
								[
									".__C__classPrototypeDef\t{methods}",
									".__C__classPrototypeDef"
								],
								[
									".__C__ts\t{methods}",
									".__C__ts"
								],
								[
									"evalSource\t{methods}",
									"evalSource"
								],
								[
									"kronecker\t{methods}",
									"kronecker"
								],
								[
									"resetGeneric\t{methods}",
									"resetGeneric"
								],
								[
									"possibleExtends\t{methods}",
									"possibleExtends"
								],
								[
									".__C__table\t{methods}",
									".__C__table"
								],
								[
									"missingArg\t{methods}",
									"missingArg"
								],
								[
									"Quote\t{methods}",
									"Quote"
								],
								[
									"registerImplicitGenerics\t{methods}",
									"registerImplicitGenerics"
								],
								[
									".__C__double\t{methods}",
									".__C__double"
								],
								[
									"isClassDef\t{methods}",
									"isClassDef"
								],
								[
									"initRefFields\t{methods}",
									"initRefFields"
								],
								[
									".__C__environment\t{methods}",
									".__C__environment"
								],
								[
									"insertMethod\t{methods}",
									"insertMethod"
								],
								[
									"findFunction\t{methods}",
									"findFunction"
								],
								[
									"externalRefMethod\t{methods}",
									"externalRefMethod"
								],
								[
									"fixPre1.8\t{methods}",
									"fixPre1.8"
								],
								[
									"checkAtAssignment\t{methods}",
									"checkAtAssignment"
								],
								[
									".__C__Date\t{methods}",
									".__C__Date"
								],
								[
									"finalDefaultMethod\t{methods}",
									"finalDefaultMethod"
								],
								[
									".__C__character\t{methods}",
									".__C__character"
								],
								[
									"isClass\t{methods}",
									"isClass"
								],
								[
									"completeClassDefinition\t{methods}",
									"completeClassDefinition"
								],
								[
									"callNextMethod\t{methods}",
									"callNextMethod"
								],
								[
									"isVirtualClass\t{methods}",
									"isVirtualClass"
								],
								[
									"slotNames\t{methods}",
									"slotNames"
								],
								[
									"getSlots\t{methods}",
									"getSlots"
								],
								[
									".__C__LinearMethodsList\t{methods}",
									".__C__LinearMethodsList"
								],
								[
									"selectSuperClasses\t{methods}",
									"selectSuperClasses"
								],
								[
									"removeMethods\t{methods}",
									"removeMethods"
								],
								[
									".classEnv\t{methods}",
									".classEnv"
								],
								[
									".__C__structure\t{methods}",
									".__C__structure"
								],
								[
									"evalOnLoad\t{methods}",
									"evalOnLoad"
								],
								[
									"cbind2\t{methods}",
									"cbind2"
								],
								[
									".__C__lm\t{methods}",
									".__C__lm"
								],
								[
									".__C__dump.frames\t{methods}",
									".__C__dump.frames"
								],
								[
									"setClassUnion\t{methods}",
									"setClassUnion"
								],
								[
									".__C__density\t{methods}",
									".__C__density"
								],
								[
									".hasSlot\t{methods}",
									".hasSlot"
								],
								[
									"initialize\t{methods}",
									"initialize"
								],
								[
									"Summary\t{methods}",
									"Summary"
								],
								[
									"representation\t{methods}",
									"representation"
								],
								[
									"getClass\t{methods}",
									"getClass"
								],
								[
									"method.skeleton\t{methods}",
									"method.skeleton"
								],
								[
									".__C__vector\t{methods}",
									".__C__vector"
								],
								[
									"setRefClass\t{methods}",
									"setRefClass"
								],
								[
									"Math2\t{methods}",
									"Math2"
								],
								[
									"getMethods\t{methods}",
									"getMethods"
								],
								[
									".__C__repeat\t{methods}",
									".__C__repeat"
								],
								[
									".__C__MethodsList\t{methods}",
									".__C__MethodsList"
								],
								[
									"Logic\t{methods}",
									"Logic"
								],
								[
									"matchSignature\t{methods}",
									"matchSignature"
								],
								[
									".__C__className\t{methods}",
									".__C__className"
								],
								[
									"methodsPackageMetaName\t{methods}",
									"methodsPackageMetaName"
								],
								[
									"defaultDumpName\t{methods}",
									"defaultDumpName"
								],
								[
									".__C__name\t{methods}",
									".__C__name"
								],
								[
									"getGroup\t{methods}",
									"getGroup"
								],
								[
									".__C__ObjectsWithPackage\t{methods}",
									".__C__ObjectsWithPackage"
								],
								[
									".__C__glm.null\t{methods}",
									".__C__glm.null"
								],
								[
									"substituteDirect\t{methods}",
									"substituteDirect"
								],
								[
									"packageSlot\t{methods}",
									"packageSlot"
								],
								[
									".__C__defaultBindingFunction\t{methods}",
									".__C__defaultBindingFunction"
								],
								[
									"removeMethod\t{methods}",
									"removeMethod"
								],
								[
									".__C__special\t{methods}",
									".__C__special"
								],
								[
									".__C__SealedMethodDefinition\t{methods}",
									".__C__SealedMethodDefinition"
								],
								[
									"MethodsListSelect\t{methods}",
									"MethodsListSelect"
								],
								[
									"S3Part\t{methods}",
									"S3Part"
								],
								[
									".__C__list\t{methods}",
									".__C__list"
								],
								[
									".__C__NULL\t{methods}",
									".__C__NULL"
								],
								[
									"is\t{methods}",
									"is"
								],
								[
									"checkSlotAssignment\t{methods}",
									"checkSlotAssignment"
								],
								[
									"classMetaName\t{methods}",
									"classMetaName"
								],
								[
									"slotsFromS3\t{methods}",
									"slotsFromS3"
								],
								[
									"promptMethods\t{methods}",
									"promptMethods"
								],
								[
									"insertClassMethods\t{methods}",
									"insertClassMethods"
								],
								[
									"isXS3Class\t{methods}",
									"isXS3Class"
								],
								[
									"isRematched\t{methods}",
									"isRematched"
								],
								[
									".__C__.environment\t{methods}",
									".__C__.environment"
								],
								[
									".selectSuperClasses\t{methods}",
									".selectSuperClasses"
								],
								[
									".__C__genericFunctionWithTrace\t{methods}",
									".__C__genericFunctionWithTrace"
								],
								[
									".__C__anova\t{methods}",
									".__C__anova"
								],
								[
									".__C__socket\t{methods}",
									".__C__socket"
								],
								[
									"emptyMethodsList\t{methods}",
									"emptyMethodsList"
								],
								[
									"listFromMethods\t{methods}",
									"listFromMethods"
								],
								[
									"isGeneric\t{methods}",
									"isGeneric"
								],
								[
									".__C__refGeneratorSlot\t{methods}",
									".__C__refGeneratorSlot"
								],
								[
									".__C__integer\t{methods}",
									".__C__integer"
								],
								[
									"show\t{methods}",
									"show"
								],
								[
									"metaNameUndo\t{methods}",
									"metaNameUndo"
								],
								[
									".untracedFunction\t{methods}",
									".untracedFunction"
								],
								[
									"getMethodsForDispatch\t{methods}",
									"getMethodsForDispatch"
								],
								[
									".__C__packageIQR\t{methods}",
									".__C__packageIQR"
								],
								[
									".__C__envRefClass\t{methods}",
									".__C__envRefClass"
								],
								[
									"Math\t{methods}",
									"Math"
								],
								[
									"makePrototypeFromClassDef\t{methods}",
									"makePrototypeFromClassDef"
								],
								[
									"slot\t{methods}",
									"slot"
								],
								[
									".__C__complex\t{methods}",
									".__C__complex"
								],
								[
									"reconcilePropertiesAndPrototype\t{methods}",
									"reconcilePropertiesAndPrototype"
								],
								[
									"doPrimitiveMethod\t{methods}",
									"doPrimitiveMethod"
								],
								[
									"getValidity\t{methods}",
									"getValidity"
								],
								[
									".__C__classRepresentation\t{methods}",
									".__C__classRepresentation"
								],
								[
									"SignatureMethod\t{methods}",
									"SignatureMethod"
								],
								[
									".__C__libraryIQR\t{methods}",
									".__C__libraryIQR"
								],
								[
									"isSealedMethod\t{methods}",
									"isSealedMethod"
								],
								[
									"getPackageName\t{methods}",
									"getPackageName"
								],
								[
									".__C__OptionalFunction\t{methods}",
									".__C__OptionalFunction"
								],
								[
									"setIs\t{methods}",
									"setIs"
								],
								[
									"balanceMethodsList\t{methods}",
									"balanceMethodsList"
								],
								[
									".__C__missing\t{methods}",
									".__C__missing"
								],
								[
									"setLoadActions\t{methods}",
									"setLoadActions"
								],
								[
									"setDataPart\t{methods}",
									"setDataPart"
								],
								[
									".__C__refMethodDef\t{methods}",
									".__C__refMethodDef"
								],
								[
									"setGroupGeneric\t{methods}",
									"setGroupGeneric"
								],
								[
									".__C__genericFunction\t{methods}",
									".__C__genericFunction"
								],
								[
									"S3Class\t{methods}",
									"S3Class"
								],
								[
									"findUnique\t{methods}",
									"findUnique"
								],
								[
									".__C__classGeneratorFunction\t{methods}",
									".__C__classGeneratorFunction"
								],
								[
									"dumpMethods\t{methods}",
									"dumpMethods"
								],
								[
									".__C__raw\t{methods}",
									".__C__raw"
								],
								[
									".__C__mlm\t{methods}",
									".__C__mlm"
								],
								[
									"sigToEnv\t{methods}",
									"sigToEnv"
								],
								[
									"setGenericImplicit\t{methods}",
									"setGenericImplicit"
								],
								[
									".__C__POSIXct\t{methods}",
									".__C__POSIXct"
								],
								[
									"sealClass\t{methods}",
									"sealClass"
								],
								[
									".__C__groupGenericFunctionWithTrace\t{methods}",
									".__C__groupGenericFunctionWithTrace"
								],
								[
									"hasArg\t{methods}",
									"hasArg"
								],
								[
									"makeStandardGeneric\t{methods}",
									"makeStandardGeneric"
								],
								[
									"selectMethod\t{methods}",
									"selectMethod"
								],
								[
									"loadMethod\t{methods}",
									"loadMethod"
								],
								[
									"getLoadActions\t{methods}",
									"getLoadActions"
								],
								[
									"prohibitGeneric\t{methods}",
									"prohibitGeneric"
								],
								[
									"substituteFunctionArgs\t{methods}",
									"substituteFunctionArgs"
								],
								[
									"completeExtends\t{methods}",
									"completeExtends"
								],
								[
									"assignClassDef\t{methods}",
									"assignClassDef"
								],
								[
									"methodSignatureMatrix\t{methods}",
									"methodSignatureMatrix"
								],
								[
									"isGrammarSymbol\t{methods}",
									"isGrammarSymbol"
								],
								[
									"prototype\t{methods}",
									"prototype"
								],
								[
									"requireMethods\t{methods}",
									"requireMethods"
								],
								[
									".__C__data.frameRowLabels\t{methods}",
									".__C__data.frameRowLabels"
								],
								[
									".__C__activeBindingFunction\t{methods}",
									".__C__activeBindingFunction"
								],
								[
									".__C__externalptr\t{methods}",
									".__C__externalptr"
								],
								[
									".__C__.name\t{methods}",
									".__C__.name"
								],
								[
									"setOldClass\t{methods}",
									"setOldClass"
								],
								[
									"setPrimitiveMethods\t{methods}",
									"setPrimitiveMethods"
								],
								[
									".__C__recordedplot\t{methods}",
									".__C__recordedplot"
								],
								[
									"isGroup\t{methods}",
									"isGroup"
								],
								[
									"getAllSuperClasses\t{methods}",
									"getAllSuperClasses"
								],
								[
									".__C__localRefClass\t{methods}",
									".__C__localRefClass"
								],
								[
									"findMethods\t{methods}",
									"findMethods"
								],
								[
									"rematchDefinition\t{methods}",
									"rematchDefinition"
								],
								[
									"MethodAddCoerce\t{methods}",
									"MethodAddCoerce"
								],
								[
									".__C__POSIXt\t{methods}",
									".__C__POSIXt"
								],
								[
									".__C__summary.table\t{methods}",
									".__C__summary.table"
								],
								[
									"hasMethod\t{methods}",
									"hasMethod"
								],
								[
									".__C__language\t{methods}",
									".__C__language"
								],
								[
									".__C__refClass\t{methods}",
									".__C__refClass"
								],
								[
									"evalqOnLoad\t{methods}",
									"evalqOnLoad"
								],
								[
									"insertSource\t{methods}",
									"insertSource"
								],
								[
									"hasLoadAction\t{methods}",
									"hasLoadAction"
								],
								[
									".__C__numeric\t{methods}",
									".__C__numeric"
								],
								[
									".__C__derivedDefaultMethodWithTrace\t{methods}",
									".__C__derivedDefaultMethodWithTrace"
								],
								[
									".__C__externalRefMethod\t{methods}",
									".__C__externalRefMethod"
								],
								[
									"validSlotNames\t{methods}",
									"validSlotNames"
								],
								[
									"multipleClasses\t{methods}",
									"multipleClasses"
								],
								[
									"empty.dump\t{methods}",
									"empty.dump"
								],
								[
									"setPackageName\t{methods}",
									"setPackageName"
								],
								[
									".__C__MethodDefinitionWithTrace\t{methods}",
									".__C__MethodDefinitionWithTrace"
								],
								[
									".__C__maov\t{methods}",
									".__C__maov"
								],
								[
									".__C__standardGenericWithTrace\t{methods}",
									".__C__standardGenericWithTrace"
								],
								[
									"getClassDef\t{methods}",
									"getClassDef"
								],
								[
									"newEmptyObject\t{methods}",
									"newEmptyObject"
								],
								[
									"formalArgs\t{methods}",
									"formalArgs"
								],
								[
									"Arith\t{methods}",
									"Arith"
								],
								[
									"mergeMethods\t{methods}",
									"mergeMethods"
								],
								[
									"MethodsList\t{methods}",
									"MethodsList"
								],
								[
									"getRefClass\t{methods}",
									"getRefClass"
								],
								[
									"inheritedSlotNames\t{methods}",
									"inheritedSlotNames"
								],
								[
									".__C__.NULL\t{methods}",
									".__C__.NULL"
								],
								[
									".__C__PossibleMethod\t{methods}",
									".__C__PossibleMethod"
								],
								[
									"classesToAM\t{methods}",
									"classesToAM"
								],
								[
									".__C__functionWithTrace\t{methods}",
									".__C__functionWithTrace"
								],
								[
									"asMethodDefinition\t{methods}",
									"asMethodDefinition"
								],
								[
									".__C__factor\t{methods}",
									".__C__factor"
								],
								[
									".__C__sourceEnvironment\t{methods}",
									".__C__sourceEnvironment"
								],
								[
									"languageEl\t{methods}",
									"languageEl"
								],
								[
									"Ops\t{methods}",
									"Ops"
								],
								[
									"getMethod\t{methods}",
									"getMethod"
								],
								[
									".__C__MethodDefinition\t{methods}",
									".__C__MethodDefinition"
								],
								[
									"listFromMlist\t{methods}",
									"listFromMlist"
								],
								[
									"allNames\t{methods}",
									"allNames"
								],
								[
									".__C__mts\t{methods}",
									".__C__mts"
								],
								[
									".__C__mtable\t{methods}",
									".__C__mtable"
								],
								[
									"completeSubclasses\t{methods}",
									"completeSubclasses"
								],
								[
									"cacheGenericsMetaData\t{methods}",
									"cacheGenericsMetaData"
								],
								[
									".__C__data.frame\t{methods}",
									".__C__data.frame"
								],
								[
									"tryNew\t{methods}",
									"tryNew"
								],
								[
									"findClass\t{methods}",
									"findClass"
								],
								[
									"cacheMethod\t{methods}",
									"cacheMethod"
								],
								[
									"showDefault\t{methods}",
									"showDefault"
								],
								[
									"Compare\t{methods}",
									"Compare"
								],
								[
									"new\t{methods}",
									"new"
								],
								[
									".__C__if\t{methods}",
									".__C__if"
								],
								[
									".__C__EmptyMethodsList\t{methods}",
									".__C__EmptyMethodsList"
								],
								[
									"makeClassRepresentation\t{methods}",
									"makeClassRepresentation"
								],
								[
									"promptClass\t{methods}",
									"promptClass"
								],
								[
									".__C__optionalMethod\t{methods}",
									".__C__optionalMethod"
								],
								[
									"newClassRepresentation\t{methods}",
									"newClassRepresentation"
								],
								[
									".S4methods\t{methods}",
									".S4methods"
								],
								[
									".__C__ANY\t{methods}",
									".__C__ANY"
								],
								[
									"testVirtual\t{methods}",
									"testVirtual"
								],
								[
									".__C__refClassRepresentation\t{methods}",
									".__C__refClassRepresentation"
								],
								[
									".__C__conditionalExtension\t{methods}",
									".__C__conditionalExtension"
								],
								[
									"linearizeMlist\t{methods}",
									"linearizeMlist"
								],
								[
									"removeGeneric\t{methods}",
									"removeGeneric"
								],
								[
									"canCoerce\t{methods}",
									"canCoerce"
								],
								[
									".__C__traceable\t{methods}",
									".__C__traceable"
								],
								[
									".__C__MethodWithNextWithTrace\t{methods}",
									".__C__MethodWithNextWithTrace"
								],
								[
									"rbind2\t{methods}",
									"rbind2"
								],
								[
									".__C__anova.glm.null\t{methods}",
									".__C__anova.glm.null"
								],
								[
									".__C__.externalptr\t{methods}",
									".__C__.externalptr"
								],
								[
									".__C__matrix\t{methods}",
									".__C__matrix"
								],
								[
									"setValidity\t{methods}",
									"setValidity"
								],
								[
									"functionBody\t{methods}",
									"functionBody"
								],
								[
									".__C__hsearch\t{methods}",
									".__C__hsearch"
								],
								[
									".__C__function\t{methods}",
									".__C__function"
								],
								[
									"getGeneric\t{methods}",
									"getGeneric"
								],
								[
									".__C__POSIXlt\t{methods}",
									".__C__POSIXlt"
								],
								[
									"dumpMethod\t{methods}",
									"dumpMethod"
								],
								[
									"elNamed\t{methods}",
									"elNamed"
								],
								[
									".__C__logical\t{methods}",
									".__C__logical"
								],
								[
									".__C__nonstandardGenericWithTrace\t{methods}",
									".__C__nonstandardGenericWithTrace"
								],
								[
									".__C__summaryDefault\t{methods}",
									".__C__summaryDefault"
								],
								[
									".__C__derivedDefaultMethod\t{methods}",
									".__C__derivedDefaultMethod"
								],
								[
									".__C__nonstandardGeneric\t{methods}",
									".__C__nonstandardGeneric"
								],
								[
									".doTracePrint\t{methods}",
									".doTracePrint"
								],
								[
									".__C__glm\t{methods}",
									".__C__glm"
								],
								[
									".__C__nonstandardGenericFunction\t{methods}",
									".__C__nonstandardGenericFunction"
								],
								[
									".__C__refObjectGenerator\t{methods}",
									".__C__refObjectGenerator"
								],
								[
									".__C__builtin\t{methods}",
									".__C__builtin"
								],
								[
									"setClass\t{methods}",
									"setClass"
								],
								[
									".__C__for\t{methods}",
									".__C__for"
								],
								[
									"isSealedClass\t{methods}",
									"isSealedClass"
								],
								[
									"generic.skeleton\t{methods}",
									"generic.skeleton"
								],
								[
									".__C__internalDispatchMethod\t{methods}",
									".__C__internalDispatchMethod"
								],
								[
									".__C__anova.glm\t{methods}",
									".__C__anova.glm"
								],
								[
									"makeGeneric\t{methods}",
									"makeGeneric"
								],
								[
									"setMethod\t{methods}",
									"setMethod"
								],
								[
									"isClassUnion\t{methods}",
									"isClassUnion"
								],
								[
									"coerce\t{methods}",
									"coerce"
								],
								[
									"initFieldArgs\t{methods}",
									"initFieldArgs"
								],
								[
									".valueClassTest\t{methods}",
									".valueClassTest"
								],
								[
									"validObject\t{methods}",
									"validObject"
								],
								[
									"getClasses\t{methods}",
									"getClasses"
								],
								[
									"setGeneric\t{methods}",
									"setGeneric"
								],
								[
									"unRematchDefinition\t{methods}",
									"unRematchDefinition"
								],
								[
									".__C__nonStructure\t{methods}",
									".__C__nonStructure"
								],
								[
									"hasMethods\t{methods}",
									"hasMethods"
								],
								[
									".__C__call\t{methods}",
									".__C__call"
								],
								[
									"existsFunction\t{methods}",
									"existsFunction"
								],
								[
									"classLabel\t{methods}",
									"classLabel"
								],
								[
									"defaultPrototype\t{methods}",
									"defaultPrototype"
								],
								[
									".__C__MethodWithNext\t{methods}",
									".__C__MethodWithNext"
								],
								[
									".__C__rle\t{methods}",
									".__C__rle"
								],
								[
									"showMethods\t{methods}",
									"showMethods"
								],
								[
									".__C__logLik\t{methods}",
									".__C__logLik"
								],
								[
									".__C__namedList\t{methods}",
									".__C__namedList"
								],
								[
									".__C__formula\t{methods}",
									".__C__formula"
								],
								[
									"findMethod\t{methods}",
									"findMethod"
								],
								[
									"testInheritedMethods\t{methods}",
									"testInheritedMethods"
								],
								[
									"as\t{methods}",
									"as"
								],
								[
									"conformMethod\t{methods}",
									"conformMethod"
								],
								[
									"makeMethodsList\t{methods}",
									"makeMethodsList"
								],
								[
									"newBasic\t{methods}",
									"newBasic"
								],
								[
									".__C__while\t{methods}",
									".__C__while"
								],
								[
									".slotNames\t{methods}",
									".slotNames"
								],
								[
									"className\t{methods}",
									"className"
								],
								[
									".__C__expression\t{methods}",
									".__C__expression"
								],
								[
									".__C__refMethodDefWithTrace\t{methods}",
									".__C__refMethodDefWithTrace"
								],
								[
									"setLoadAction\t{methods}",
									"setLoadAction"
								],
								[
									".__C__VIRTUAL\t{methods}",
									".__C__VIRTUAL"
								],
								[
									"superClassDepth\t{methods}",
									"superClassDepth"
								],
								[
									".__C__SClassExtension\t{methods}",
									".__C__SClassExtension"
								],
								[
									"existsMethod\t{methods}",
									"existsMethod"
								],
								[
									"getFunction\t{methods}",
									"getFunction"
								],
								[
									"getMethodsMetaData\t{methods}",
									"getMethodsMetaData"
								],
								[
									"polypath\t{graphics}",
									"polypath"
								],
								[
									"sunflowerplot\t{graphics}",
									"sunflowerplot"
								],
								[
									"plot.new\t{graphics}",
									"plot.new"
								],
								[
									"layout.show\t{graphics}",
									"layout.show"
								],
								[
									"matplot\t{graphics}",
									"matplot"
								],
								[
									"boxplot\t{graphics}",
									"boxplot"
								],
								[
									"panel.smooth\t{graphics}",
									"panel.smooth"
								],
								[
									"box\t{graphics}",
									"box"
								],
								[
									"lcm\t{graphics}",
									"lcm"
								],
								[
									"locator\t{graphics}",
									"locator"
								],
								[
									"plot.design\t{graphics}",
									"plot.design"
								],
								[
									"barplot.default\t{graphics}",
									"barplot.default"
								],
								[
									"axis.POSIXct\t{graphics}",
									"axis.POSIXct"
								],
								[
									"curve\t{graphics}",
									"curve"
								],
								[
									"matpoints\t{graphics}",
									"matpoints"
								],
								[
									"plot.default\t{graphics}",
									"plot.default"
								],
								[
									"pairs.default\t{graphics}",
									"pairs.default"
								],
								[
									"coplot\t{graphics}",
									"coplot"
								],
								[
									"par\t{graphics}",
									"par"
								],
								[
									"co.intervals\t{graphics}",
									"co.intervals"
								],
								[
									"hist.default\t{graphics}",
									"hist.default"
								],
								[
									"xyinch\t{graphics}",
									"xyinch"
								],
								[
									"mtext\t{graphics}",
									"mtext"
								],
								[
									"frame\t{graphics}",
									"frame"
								],
								[
									"screen\t{graphics}",
									"screen"
								],
								[
									"image.default\t{graphics}",
									"image.default"
								],
								[
									"boxplot.default\t{graphics}",
									"boxplot.default"
								],
								[
									"stem\t{graphics}",
									"stem"
								],
								[
									"polygon\t{graphics}",
									"polygon"
								],
								[
									"stars\t{graphics}",
									"stars"
								],
								[
									"lines\t{graphics}",
									"lines"
								],
								[
									"symbols\t{graphics}",
									"symbols"
								],
								[
									"pairs\t{graphics}",
									"pairs"
								],
								[
									"points\t{graphics}",
									"points"
								],
								[
									"grconvertX\t{graphics}",
									"grconvertX"
								],
								[
									"assocplot\t{graphics}",
									"assocplot"
								],
								[
									"spineplot\t{graphics}",
									"spineplot"
								],
								[
									"grconvertY\t{graphics}",
									"grconvertY"
								],
								[
									"title\t{graphics}",
									"title"
								],
								[
									"barplot\t{graphics}",
									"barplot"
								],
								[
									"persp\t{graphics}",
									"persp"
								],
								[
									"legend\t{graphics}",
									"legend"
								],
								[
									"identify\t{graphics}",
									"identify"
								],
								[
									"image\t{graphics}",
									"image"
								],
								[
									"filled.contour\t{graphics}",
									"filled.contour"
								],
								[
									"lines.default\t{graphics}",
									"lines.default"
								],
								[
									"hist\t{graphics}",
									"hist"
								],
								[
									"stripchart\t{graphics}",
									"stripchart"
								],
								[
									"contour\t{graphics}",
									"contour"
								],
								[
									"plot.function\t{graphics}",
									"plot.function"
								],
								[
									"mosaicplot\t{graphics}",
									"mosaicplot"
								],
								[
									"fourfoldplot\t{graphics}",
									"fourfoldplot"
								],
								[
									"split.screen\t{graphics}",
									"split.screen"
								],
								[
									"smoothScatter\t{graphics}",
									"smoothScatter"
								],
								[
									"matlines\t{graphics}",
									"matlines"
								],
								[
									"axTicks\t{graphics}",
									"axTicks"
								],
								[
									"arrows\t{graphics}",
									"arrows"
								],
								[
									"text.default\t{graphics}",
									"text.default"
								],
								[
									"points.default\t{graphics}",
									"points.default"
								],
								[
									"xinch\t{graphics}",
									"xinch"
								],
								[
									"dotchart\t{graphics}",
									"dotchart"
								],
								[
									"strheight\t{graphics}",
									"strheight"
								],
								[
									"rect\t{graphics}",
									"rect"
								],
								[
									"grid\t{graphics}",
									"grid"
								],
								[
									".filled.contour\t{graphics}",
									".filled.contour"
								],
								[
									"close.screen\t{graphics}",
									"close.screen"
								],
								[
									"axis\t{graphics}",
									"axis"
								],
								[
									"layout\t{graphics}",
									"layout"
								],
								[
									"contour.default\t{graphics}",
									"contour.default"
								],
								[
									"cdplot\t{graphics}",
									"cdplot"
								],
								[
									"pie\t{graphics}",
									"pie"
								],
								[
									"xspline\t{graphics}",
									"xspline"
								],
								[
									"text\t{graphics}",
									"text"
								],
								[
									"strwidth\t{graphics}",
									"strwidth"
								],
								[
									"axis.Date\t{graphics}",
									"axis.Date"
								],
								[
									"boxplot.matrix\t{graphics}",
									"boxplot.matrix"
								],
								[
									"bxp\t{graphics}",
									"bxp"
								],
								[
									"abline\t{graphics}",
									"abline"
								],
								[
									"plot.xy\t{graphics}",
									"plot.xy"
								],
								[
									"rasterImage\t{graphics}",
									"rasterImage"
								],
								[
									"segments\t{graphics}",
									"segments"
								],
								[
									"yinch\t{graphics}",
									"yinch"
								],
								[
									"plot\t{graphics}",
									"plot"
								],
								[
									"plot.window\t{graphics}",
									"plot.window"
								],
								[
									"clip\t{graphics}",
									"clip"
								],
								[
									"erase.screen\t{graphics}",
									"erase.screen"
								],
								[
									"rug\t{graphics}",
									"rug"
								],
								[
									"Axis\t{graphics}",
									"Axis"
								],
								[
									"-\t{base}",
									"-"
								],
								[
									"as.matrix.data.frame\t{base}",
									"as.matrix.data.frame"
								],
								[
									"F\t{base}",
									"F"
								],
								[
									"I\t{base}",
									"I"
								],
								[
									"registerS3methods\t{base}",
									"registerS3methods"
								],
								[
									"as.POSIXct.Date\t{base}",
									"as.POSIXct.Date"
								],
								[
									"T\t{base}",
									"T"
								],
								[
									"c\t{base}",
									"c"
								],
								[
									"q\t{base}",
									"q"
								],
								[
									"t\t{base}",
									"t"
								],
								[
									"array2DF\t{base}",
									"array2DF"
								],
								[
									"qr.solve\t{base}",
									"qr.solve"
								],
								[
									"str2expression\t{base}",
									"str2expression"
								],
								[
									"dynGet\t{base}",
									"dynGet"
								],
								[
									"as.single\t{base}",
									"as.single"
								],
								[
									"interaction\t{base}",
									"interaction"
								],
								[
									"as.POSIXlt.default\t{base}",
									"as.POSIXlt.default"
								],
								[
									"gamma\t{base}",
									"gamma"
								],
								[
									"as.package_version\t{base}",
									"as.package_version"
								],
								[
									".GlobalEnv\t{base}",
									".GlobalEnv"
								],
								[
									"getNativeSymbolInfo\t{base}",
									"getNativeSymbolInfo"
								],
								[
									"print.srcfile\t{base}",
									"print.srcfile"
								],
								[
									"packageHasNamespace\t{base}",
									"packageHasNamespace"
								],
								[
									".handleSimpleError\t{base}",
									".handleSimpleError"
								],
								[
									"xtfrm.AsIs\t{base}",
									"xtfrm.AsIs"
								],
								[
									"file.choose\t{base}",
									"file.choose"
								],
								[
									"summary.connection\t{base}",
									"summary.connection"
								],
								[
									".C\t{base}",
									".C"
								],
								[
									"subset.default\t{base}",
									"subset.default"
								],
								[
									"warningCondition\t{base}",
									"warningCondition"
								],
								[
									"utf8ToInt\t{base}",
									"utf8ToInt"
								],
								[
									"baseenv\t{base}",
									"baseenv"
								],
								[
									".set_row_names\t{base}",
									".set_row_names"
								],
								[
									"Ops.POSIXt\t{base}",
									"Ops.POSIXt"
								],
								[
									"quote\t{base}",
									"quote"
								],
								[
									"inverse.rle\t{base}",
									"inverse.rle"
								],
								[
									"memory.profile\t{base}",
									"memory.profile"
								],
								[
									"split.POSIXct\t{base}",
									"split.POSIXct"
								],
								[
									"unique.numeric_version\t{base}",
									"unique.numeric_version"
								],
								[
									"infoRDS\t{base}",
									"infoRDS"
								],
								[
									"length.POSIXlt\t{base}",
									"length.POSIXlt"
								],
								[
									"getOption\t{base}",
									"getOption"
								],
								[
									"Im\t{base}",
									"Im"
								],
								[
									"qr.Q\t{base}",
									"qr.Q"
								],
								[
									"qr.R\t{base}",
									"qr.R"
								],
								[
									"rapply\t{base}",
									"rapply"
								],
								[
									"qr.X\t{base}",
									"qr.X"
								],
								[
									"library.dynam\t{base}",
									"library.dynam"
								],
								[
									"evalq\t{base}",
									"evalq"
								],
								[
									"units.difftime\t{base}",
									"units.difftime"
								],
								[
									"Re\t{base}",
									"Re"
								],
								[
									"package_version\t{base}",
									"package_version"
								],
								[
									"is.name\t{base}",
									"is.name"
								],
								[
									"as.data.frame.matrix\t{base}",
									"as.data.frame.matrix"
								],
								[
									".NotYetImplemented\t{base}",
									".NotYetImplemented"
								],
								[
									"LETTERS\t{base}",
									"LETTERS"
								],
								[
									"unique.array\t{base}",
									"unique.array"
								],
								[
									".LC.categories\t{base}",
									".LC.categories"
								],
								[
									"dimnames.data.frame\t{base}",
									"dimnames.data.frame"
								],
								[
									"require\t{base}",
									"require"
								],
								[
									"parse\t{base}",
									"parse"
								],
								[
									"by\t{base}",
									"by"
								],
								[
									"gc\t{base}",
									"gc"
								],
								[
									"gl\t{base}",
									"gl"
								],
								[
									"if\t{base}",
									"if"
								],
								[
									"ls\t{base}",
									"ls"
								],
								[
									"unique.warnings\t{base}",
									"unique.warnings"
								],
								[
									"pi\t{base}",
									"pi"
								],
								[
									"gzcon\t{base}",
									"gzcon"
								],
								[
									"qr\t{base}",
									"qr"
								],
								[
									"lapply\t{base}",
									"lapply"
								],
								[
									"rm\t{base}",
									"rm"
								],
								[
									"paste\t{base}",
									"paste"
								],
								[
									"match\t{base}",
									"match"
								],
								[
									"order\t{base}",
									"order"
								],
								[
									"xpdrows.data.frame\t{base}",
									"xpdrows.data.frame"
								],
								[
									"rank\t{base}",
									"rank"
								],
								[
									"seq.default\t{base}",
									"seq.default"
								],
								[
									"startsWith\t{base}",
									"startsWith"
								],
								[
									".noGenerics\t{base}",
									".noGenerics"
								],
								[
									"aperm.default\t{base}",
									"aperm.default"
								],
								[
									"kronecker\t{base}",
									"kronecker"
								],
								[
									"traceback\t{base}",
									"traceback"
								],
								[
									"as.character.hexmode\t{base}",
									"as.character.hexmode"
								],
								[
									"simpleError\t{base}",
									"simpleError"
								],
								[
									"warnings\t{base}",
									"warnings"
								],
								[
									"as.Date.POSIXct\t{base}",
									"as.Date.POSIXct"
								],
								[
									"kappa.qr\t{base}",
									"kappa.qr"
								],
								[
									"isNamespace\t{base}",
									"isNamespace"
								],
								[
									"is.finite.POSIXlt\t{base}",
									"is.finite.POSIXlt"
								],
								[
									"colMeans\t{base}",
									"colMeans"
								],
								[
									"as.Date.POSIXlt\t{base}",
									"as.Date.POSIXlt"
								],
								[
									"asNamespace\t{base}",
									"asNamespace"
								],
								[
									"xtfrm.difftime\t{base}",
									"xtfrm.difftime"
								],
								[
									"quit\t{base}",
									"quit"
								],
								[
									"kappa.lm\t{base}",
									"kappa.lm"
								],
								[
									"setSessionTimeLimit\t{base}",
									"setSessionTimeLimit"
								],
								[
									"find.package\t{base}",
									"find.package"
								],
								[
									"weekdays.POSIXt\t{base}",
									"weekdays.POSIXt"
								],
								[
									"eval\t{base}",
									"eval"
								],
								[
									"c.numeric_version\t{base}",
									"c.numeric_version"
								],
								[
									"deparse1\t{base}",
									"deparse1"
								],
								[
									"split.Date\t{base}",
									"split.Date"
								],
								[
									"readChar\t{base}",
									"readChar"
								],
								[
									"autoloader\t{base}",
									"autoloader"
								],
								[
									"untracemem\t{base}",
									"untracemem"
								],
								[
									"Encoding\t{base}",
									"Encoding"
								],
								[
									"debuggingState\t{base}",
									"debuggingState"
								],
								[
									"do.call\t{base}",
									"do.call"
								],
								[
									".cache_class\t{base}",
									".cache_class"
								],
								[
									".getRequiredPackages2\t{base}",
									".getRequiredPackages2"
								],
								[
									"chooseOpsMethod.default\t{base}",
									"chooseOpsMethod.default"
								],
								[
									"levels.default\t{base}",
									"levels.default"
								],
								[
									"computeRestarts\t{base}",
									"computeRestarts"
								],
								[
									"readBin\t{base}",
									"readBin"
								],
								[
									"as.double.difftime\t{base}",
									"as.double.difftime"
								],
								[
									"sys.call\t{base}",
									"sys.call"
								],
								[
									"path.expand\t{base}",
									"path.expand"
								],
								[
									"fifo\t{base}",
									"fifo"
								],
								[
									"substitute\t{base}",
									"substitute"
								],
								[
									"data.matrix\t{base}",
									"data.matrix"
								],
								[
									"all.equal.formula\t{base}",
									"all.equal.formula"
								],
								[
									"as.logical.factor\t{base}",
									"as.logical.factor"
								],
								[
									"file\t{base}",
									"file"
								],
								[
									"srcfilealias\t{base}",
									"srcfilealias"
								],
								[
									"determinant\t{base}",
									"determinant"
								],
								[
									"print.noquote\t{base}",
									"print.noquote"
								],
								[
									"by.default\t{base}",
									"by.default"
								],
								[
									"Ops.ordered\t{base}",
									"Ops.ordered"
								],
								[
									"getNamespace\t{base}",
									"getNamespace"
								],
								[
									"as.POSIXct.default\t{base}",
									"as.POSIXct.default"
								],
								[
									"conditionMessage.condition\t{base}",
									"conditionMessage.condition"
								],
								[
									".OptRequireMethods\t{base}",
									".OptRequireMethods"
								],
								[
									"mean.POSIXct\t{base}",
									"mean.POSIXct"
								],
								[
									"as.POSIXct.POSIXlt\t{base}",
									"as.POSIXct.POSIXlt"
								],
								[
									"mean.POSIXlt\t{base}",
									"mean.POSIXlt"
								],
								[
									"as.character.octmode\t{base}",
									"as.character.octmode"
								],
								[
									".makeMessage\t{base}",
									".makeMessage"
								],
								[
									"browserSetDebug\t{base}",
									"browserSetDebug"
								],
								[
									"parent.env\t{base}",
									"parent.env"
								],
								[
									"print.listof\t{base}",
									"print.listof"
								],
								[
									"close.srcfile\t{base}",
									"close.srcfile"
								],
								[
									"anyNA.numeric_version\t{base}",
									"anyNA.numeric_version"
								],
								[
									"chooseOpsMethod\t{base}",
									"chooseOpsMethod"
								],
								[
									"socketAccept\t{base}",
									"socketAccept"
								],
								[
									"transform.data.frame\t{base}",
									"transform.data.frame"
								],
								[
									"interactive\t{base}",
									"interactive"
								],
								[
									"unname\t{base}",
									"unname"
								],
								[
									"remove\t{base}",
									"remove"
								],
								[
									"sample\t{base}",
									"sample"
								],
								[
									"getNamespaceVersion\t{base}",
									"getNamespaceVersion"
								],
								[
									"removeTaskCallback\t{base}",
									"removeTaskCallback"
								],
								[
									"scale\t{base}",
									"scale"
								],
								[
									"is.data.frame\t{base}",
									"is.data.frame"
								],
								[
									"textConnectionValue\t{base}",
									"textConnectionValue"
								],
								[
									"transform\t{base}",
									"transform"
								],
								[
									"lchoose\t{base}",
									"lchoose"
								],
								[
									"format.POSIXct\t{base}",
									"format.POSIXct"
								],
								[
									"is.call\t{base}",
									"is.call"
								],
								[
									".packages\t{base}",
									".packages"
								],
								[
									"row.names\t{base}",
									"row.names"
								],
								[
									"str2lang\t{base}",
									"str2lang"
								],
								[
									"print.factor\t{base}",
									"print.factor"
								],
								[
									"format.POSIXlt\t{base}",
									"format.POSIXlt"
								],
								[
									"switch\t{base}",
									"switch"
								],
								[
									"getElement\t{base}",
									"getElement"
								],
								[
									".amatch_costs\t{base}",
									".amatch_costs"
								],
								[
									"lengths\t{base}",
									"lengths"
								],
								[
									"save\t{base}",
									"save"
								],
								[
									"function\t{base}",
									"function"
								],
								[
									"is.single\t{base}",
									"is.single"
								],
								[
									"default.stringsAsFactors\t{base}",
									"default.stringsAsFactors"
								],
								[
									"pmatch\t{base}",
									"pmatch"
								],
								[
									"withRestarts\t{base}",
									"withRestarts"
								],
								[
									"scan\t{base}",
									"scan"
								],
								[
									"is.null\t{base}",
									"is.null"
								],
								[
									"sink.number\t{base}",
									"sink.number"
								],
								[
									"pretty\t{base}",
									"pretty"
								],
								[
									"Summary.Date\t{base}",
									"Summary.Date"
								],
								[
									"library.dynam.unload\t{base}",
									"library.dynam.unload"
								],
								[
									"letters\t{base}",
									"letters"
								],
								[
									"diff.difftime\t{base}",
									"diff.difftime"
								],
								[
									"browserCondition\t{base}",
									"browserCondition"
								],
								[
									"dir.exists\t{base}",
									"dir.exists"
								],
								[
									"print.srcref\t{base}",
									"print.srcref"
								],
								[
									"arrayInd\t{base}",
									"arrayInd"
								],
								[
									"casefold\t{base}",
									"casefold"
								],
								[
									"anyNA\t{base}",
									"anyNA"
								],
								[
									"suppressWarnings\t{base}",
									"suppressWarnings"
								],
								[
									"seek\t{base}",
									"seek"
								],
								[
									"is.language\t{base}",
									"is.language"
								],
								[
									"xtfrm.numeric_version\t{base}",
									"xtfrm.numeric_version"
								],
								[
									"get0\t{base}",
									"get0"
								],
								[
									"as.vector\t{base}",
									"as.vector"
								],
								[
									"strftime\t{base}",
									"strftime"
								],
								[
									"readRDS\t{base}",
									"readRDS"
								],
								[
									"is.pairlist\t{base}",
									"is.pairlist"
								],
								[
									"chartr\t{base}",
									"chartr"
								],
								[
									"rep.Date\t{base}",
									"rep.Date"
								],
								[
									"isFALSE\t{base}",
									"isFALSE"
								],
								[
									"as.pairlist\t{base}",
									"as.pairlist"
								],
								[
									"as.octmode\t{base}",
									"as.octmode"
								],
								[
									"is.na.numeric_version\t{base}",
									"is.na.numeric_version"
								],
								[
									"length\t{base}",
									"length"
								],
								[
									"formals\t{base}",
									"formals"
								],
								[
									"rawConnectionValue\t{base}",
									"rawConnectionValue"
								],
								[
									"Math.POSIXt\t{base}",
									"Math.POSIXt"
								],
								[
									"Sys.chmod\t{base}",
									"Sys.chmod"
								],
								[
									"formatC\t{base}",
									"formatC"
								],
								[
									"sign\t{base}",
									"sign"
								],
								[
									"sinh\t{base}",
									"sinh"
								],
								[
									"sink\t{base}",
									"sink"
								],
								[
									"solve\t{base}",
									"solve"
								],
								[
									".External.graphics\t{base}",
									".External.graphics"
								],
								[
									"as.data.frame.default\t{base}",
									"as.data.frame.default"
								],
								[
									"is.numeric.Date\t{base}",
									"is.numeric.Date"
								],
								[
									"all.equal.character\t{base}",
									"all.equal.character"
								],
								[
									"unsplit\t{base}",
									"unsplit"
								],
								[
									"as.hexmode\t{base}",
									"as.hexmode"
								],
								[
									"globalenv\t{base}",
									"globalenv"
								],
								[
									"list.files\t{base}",
									"list.files"
								],
								[
									"loadingNamespaceInfo\t{base}",
									"loadingNamespaceInfo"
								],
								[
									"packageEvent\t{base}",
									"packageEvent"
								],
								[
									"make.unique\t{base}",
									"make.unique"
								],
								[
									".decode_numeric_version\t{base}",
									".decode_numeric_version"
								],
								[
									"logical\t{base}",
									"logical"
								],
								[
									"as.vector.factor\t{base}",
									"as.vector.factor"
								],
								[
									"noquote\t{base}",
									"noquote"
								],
								[
									"as.qr\t{base}",
									"as.qr"
								],
								[
									"suppressPackageStartupMessages\t{base}",
									"suppressPackageStartupMessages"
								],
								[
									"as.null.default\t{base}",
									"as.null.default"
								],
								[
									"c.difftime\t{base}",
									"c.difftime"
								],
								[
									"as.data.frame.data.frame\t{base}",
									"as.data.frame.data.frame"
								],
								[
									"summary.warnings\t{base}",
									"summary.warnings"
								],
								[
									"file.show\t{base}",
									"file.show"
								],
								[
									"bindingIsLocked\t{base}",
									"bindingIsLocked"
								],
								[
									".maskedMsg\t{base}",
									".maskedMsg"
								],
								[
									".colSums\t{base}",
									".colSums"
								],
								[
									"acosh\t{base}",
									"acosh"
								],
								[
									"bzfile\t{base}",
									"bzfile"
								],
								[
									"intersect\t{base}",
									"intersect"
								],
								[
									"by.data.frame\t{base}",
									"by.data.frame"
								],
								[
									"summary.srcref\t{base}",
									"summary.srcref"
								],
								[
									"withAutoprint\t{base}",
									"withAutoprint"
								],
								[
									"as.table.default\t{base}",
									"as.table.default"
								],
								[
									"kappa.default\t{base}",
									"kappa.default"
								],
								[
									"as.list.Date\t{base}",
									"as.list.Date"
								],
								[
									".Primitive\t{base}",
									".Primitive"
								],
								[
									"getDLLRegisteredRoutines.character\t{base}",
									"getDLLRegisteredRoutines.character"
								],
								[
									"gctorture2\t{base}",
									"gctorture2"
								],
								[
									"Conj\t{base}",
									"Conj"
								],
								[
									"normalizePath\t{base}",
									"normalizePath"
								],
								[
									"sort\t{base}",
									"sort"
								],
								[
									"addNA\t{base}",
									"addNA"
								],
								[
									"is.matrix\t{base}",
									"is.matrix"
								],
								[
									"writeLines\t{base}",
									"writeLines"
								],
								[
									"colSums\t{base}",
									"colSums"
								],
								[
									"saveRDS\t{base}",
									"saveRDS"
								],
								[
									"suppressMessages\t{base}",
									"suppressMessages"
								],
								[
									"print.data.frame\t{base}",
									"print.data.frame"
								],
								[
									"undebug\t{base}",
									"undebug"
								],
								[
									"tanh\t{base}",
									"tanh"
								],
								[
									"is.loaded\t{base}",
									"is.loaded"
								],
								[
									"curlGetHeaders\t{base}",
									"curlGetHeaders"
								],
								[
									"sqrt\t{base}",
									"sqrt"
								],
								[
									"sample.int\t{base}",
									"sample.int"
								],
								[
									"grep\t{base}",
									"grep"
								],
								[
									"xtfrm.POSIXct\t{base}",
									"xtfrm.POSIXct"
								],
								[
									"is.logical\t{base}",
									"is.logical"
								],
								[
									"print.proc_time\t{base}",
									"print.proc_time"
								],
								[
									"Sys.readlink\t{base}",
									"Sys.readlink"
								],
								[
									"strsplit\t{base}",
									"strsplit"
								],
								[
									"xtfrm.POSIXlt\t{base}",
									"xtfrm.POSIXlt"
								],
								[
									"Cstack_info\t{base}",
									"Cstack_info"
								],
								[
									"dir.create\t{base}",
									"dir.create"
								],
								[
									"nlevels\t{base}",
									"nlevels"
								],
								[
									"aperm\t{base}",
									"aperm"
								],
								[
									"xtfrm\t{base}",
									"xtfrm"
								],
								[
									"Summary.data.frame\t{base}",
									"Summary.data.frame"
								],
								[
									"gsub\t{base}",
									"gsub"
								],
								[
									"merge.data.frame\t{base}",
									"merge.data.frame"
								],
								[
									"as.vector.POSIXlt\t{base}",
									"as.vector.POSIXlt"
								],
								[
									".S3PrimitiveGenerics\t{base}",
									".S3PrimitiveGenerics"
								],
								[
									"stop\t{base}",
									"stop"
								],
								[
									"sort.list\t{base}",
									"sort.list"
								],
								[
									"unloadNamespace\t{base}",
									"unloadNamespace"
								],
								[
									"grouping\t{base}",
									"grouping"
								],
								[
									"seek.connection\t{base}",
									"seek.connection"
								],
								[
									"as.matrix.default\t{base}",
									"as.matrix.default"
								],
								[
									"as.POSIXlt.numeric\t{base}",
									"as.POSIXlt.numeric"
								],
								[
									"eval.parent\t{base}",
									"eval.parent"
								],
								[
									"diff.POSIXt\t{base}",
									"diff.POSIXt"
								],
								[
									"pushBack\t{base}",
									"pushBack"
								],
								[
									"transform.default\t{base}",
									"transform.default"
								],
								[
									"srcfilecopy\t{base}",
									"srcfilecopy"
								],
								[
									"qr.coef\t{base}",
									"qr.coef"
								],
								[
									"restartFormals\t{base}",
									"restartFormals"
								],
								[
									"print.rle\t{base}",
									"print.rle"
								],
								[
									"format.octmode\t{base}",
									"format.octmode"
								],
								[
									"diff.Date\t{base}",
									"diff.Date"
								],
								[
									"conditionCall.condition\t{base}",
									"conditionCall.condition"
								],
								[
									"as.matrix\t{base}",
									"as.matrix"
								],
								[
									"enc2utf8\t{base}",
									"enc2utf8"
								],
								[
									"sys.function\t{base}",
									"sys.function"
								],
								[
									"print.DLLInfo\t{base}",
									"print.DLLInfo"
								],
								[
									"UseMethod\t{base}",
									"UseMethod"
								],
								[
									"write.dcf\t{base}",
									"write.dcf"
								],
								[
									"split\t{base}",
									"split"
								],
								[
									"match.call\t{base}",
									"match.call"
								],
								[
									"is.numeric.POSIXt\t{base}",
									"is.numeric.POSIXt"
								],
								[
									"sys.calls\t{base}",
									"sys.calls"
								],
								[
									".AutoloadEnv\t{base}",
									".AutoloadEnv"
								],
								[
									"format.numeric_version\t{base}",
									"format.numeric_version"
								],
								[
									"char.expand\t{base}",
									"char.expand"
								],
								[
									"signif\t{base}",
									"signif"
								],
								[
									"file.link\t{base}",
									"file.link"
								],
								[
									".Devices\t{base}",
									".Devices"
								],
								[
									"diff.default\t{base}",
									"diff.default"
								],
								[
									"dyn.load\t{base}",
									"dyn.load"
								],
								[
									".userHooksEnv\t{base}",
									".userHooksEnv"
								],
								[
									"anyNA.POSIXlt\t{base}",
									"anyNA.POSIXlt"
								],
								[
									".subset\t{base}",
									".subset"
								],
								[
									"expm1\t{base}",
									"expm1"
								],
								[
									"is.vector\t{base}",
									"is.vector"
								],
								[
									"apply\t{base}",
									"apply"
								],
								[
									"iconvlist\t{base}",
									"iconvlist"
								],
								[
									"chkDots\t{base}",
									"chkDots"
								],
								[
									".gt\t{base}",
									".gt"
								],
								[
									"is.na.data.frame\t{base}",
									"is.na.data.frame"
								],
								[
									"library\t{base}",
									"library"
								],
								[
									"julian.POSIXt\t{base}",
									"julian.POSIXt"
								],
								[
									"path.package\t{base}",
									"path.package"
								],
								[
									"as.data.frame.vector\t{base}",
									"as.data.frame.vector"
								],
								[
									"proc.time\t{base}",
									"proc.time"
								],
								[
									"table\t{base}",
									"table"
								],
								[
									"enc2native\t{base}",
									"enc2native"
								],
								[
									"as.data.frame.table\t{base}",
									"as.data.frame.table"
								],
								[
									"debug\t{base}",
									"debug"
								],
								[
									"OlsonNames\t{base}",
									"OlsonNames"
								],
								[
									"marginSums\t{base}",
									"marginSums"
								],
								[
									".Library\t{base}",
									".Library"
								],
								[
									"isOpen\t{base}",
									"isOpen"
								],
								[
									"grepRaw\t{base}",
									"grepRaw"
								],
								[
									"nullfile\t{base}",
									"nullfile"
								],
								[
									"rowsum\t{base}",
									"rowsum"
								],
								[
									"as.list.data.frame\t{base}",
									"as.list.data.frame"
								],
								[
									"as.list\t{base}",
									"as.list"
								],
								[
									"topenv\t{base}",
									"topenv"
								],
								[
									"system.file\t{base}",
									"system.file"
								],
								[
									"repeat\t{base}",
									"repeat"
								],
								[
									"as.character.factor\t{base}",
									"as.character.factor"
								],
								[
									"print.table\t{base}",
									"print.table"
								],
								[
									"lockEnvironment\t{base}",
									"lockEnvironment"
								],
								[
									"xtfrm.default\t{base}",
									"xtfrm.default"
								],
								[
									"all.vars\t{base}",
									"all.vars"
								],
								[
									"format.default\t{base}",
									"format.default"
								],
								[
									"choose\t{base}",
									"choose"
								],
								[
									"as.expression.default\t{base}",
									"as.expression.default"
								],
								[
									"bitwAnd\t{base}",
									"bitwAnd"
								],
								[
									"mem.maxVSize\t{base}",
									"mem.maxVSize"
								],
								[
									"tabulate\t{base}",
									"tabulate"
								],
								[
									"cut.POSIXt\t{base}",
									"cut.POSIXt"
								],
								[
									"as.POSIXlt.Date\t{base}",
									"as.POSIXlt.Date"
								],
								[
									"c.noquote\t{base}",
									"c.noquote"
								],
								[
									"file.size\t{base}",
									"file.size"
								],
								[
									"makeActiveBinding\t{base}",
									"makeActiveBinding"
								],
								[
									"c.Date\t{base}",
									"c.Date"
								],
								[
									"findInterval\t{base}",
									"findInterval"
								],
								[
									"all.equal.raw\t{base}",
									"all.equal.raw"
								],
								[
									"parseNamespaceFile\t{base}",
									"parseNamespaceFile"
								],
								[
									"icuSetCollate\t{base}",
									"icuSetCollate"
								],
								[
									"print.numeric_version\t{base}",
									"print.numeric_version"
								],
								[
									"sequence.default\t{base}",
									"sequence.default"
								],
								[
									"Sys.localeconv\t{base}",
									"Sys.localeconv"
								],
								[
									"conditionCall\t{base}",
									"conditionCall"
								],
								[
									"margin.table\t{base}",
									"margin.table"
								],
								[
									"sprintf\t{base}",
									"sprintf"
								],
								[
									"duplicated.matrix\t{base}",
									"duplicated.matrix"
								],
								[
									".ArgsEnv\t{base}",
									".ArgsEnv"
								],
								[
									"cbind.data.frame\t{base}",
									"cbind.data.frame"
								],
								[
									"read.dcf\t{base}",
									"read.dcf"
								],
								[
									"names\t{base}",
									"names"
								],
								[
									"append\t{base}",
									"append"
								],
								[
									"rowsum.data.frame\t{base}",
									"rowsum.data.frame"
								],
								[
									"mat.or.vec\t{base}",
									"mat.or.vec"
								],
								[
									"as.POSIXlt.POSIXct\t{base}",
									"as.POSIXlt.POSIXct"
								],
								[
									"R.version.string\t{base}",
									"R.version.string"
								],
								[
									"tanpi\t{base}",
									"tanpi"
								],
								[
									"namespaceExport\t{base}",
									"namespaceExport"
								],
								[
									"Summary.numeric_version\t{base}",
									"Summary.numeric_version"
								],
								[
									"prmatrix\t{base}",
									"prmatrix"
								],
								[
									"as.single.default\t{base}",
									"as.single.default"
								],
								[
									"expand.grid\t{base}",
									"expand.grid"
								],
								[
									"vapply\t{base}",
									"vapply"
								],
								[
									"dimnames\t{base}",
									"dimnames"
								],
								[
									"nameOfClass\t{base}",
									"nameOfClass"
								],
								[
									".popath\t{base}",
									".popath"
								],
								[
									"kappa\t{base}",
									"kappa"
								],
								[
									"identical\t{base}",
									"identical"
								],
								[
									"chol.default\t{base}",
									"chol.default"
								],
								[
									"sapply\t{base}",
									"sapply"
								],
								[
									".format.zeros\t{base}",
									".format.zeros"
								],
								[
									"gctorture\t{base}",
									"gctorture"
								],
								[
									"missing\t{base}",
									"missing"
								],
								[
									"abbreviate\t{base}",
									"abbreviate"
								],
								[
									"showConnections\t{base}",
									"showConnections"
								],
								[
									"merge\t{base}",
									"merge"
								],
								[
									"nargs\t{base}",
									"nargs"
								],
								[
									"proportions\t{base}",
									"proportions"
								],
								[
									"is.R\t{base}",
									"is.R"
								],
								[
									"Sys.sleep\t{base}",
									"Sys.sleep"
								],
								[
									"reg.finalizer\t{base}",
									"reg.finalizer"
								],
								[
									"isdebugged\t{base}",
									"isdebugged"
								],
								[
									".C_R_getTaskCallbackNames\t{base}",
									".C_R_getTaskCallbackNames"
								],
								[
									"anyDuplicated.default\t{base}",
									"anyDuplicated.default"
								],
								[
									"mapply\t{base}",
									"mapply"
								],
								[
									"asplit\t{base}",
									"asplit"
								],
								[
									"rep.factor\t{base}",
									"rep.factor"
								],
								[
									"zapsmall\t{base}",
									"zapsmall"
								],
								[
									"outer\t{base}",
									"outer"
								],
								[
									"print.function\t{base}",
									"print.function"
								],
								[
									"qr.default\t{base}",
									"qr.default"
								],
								[
									"backsolve\t{base}",
									"backsolve"
								],
								[
									"ISOdate\t{base}",
									"ISOdate"
								],
								[
									"duplicated.array\t{base}",
									"duplicated.array"
								],
								[
									"isS4\t{base}",
									"isS4"
								],
								[
									"isBaseNamespace\t{base}",
									"isBaseNamespace"
								],
								[
									"errorCondition\t{base}",
									"errorCondition"
								],
								[
									".detach\t{base}",
									".detach"
								],
								[
									"Arg\t{base}",
									"Arg"
								],
								[
									"file.mtime\t{base}",
									"file.mtime"
								],
								[
									"setwd\t{base}",
									"setwd"
								],
								[
									".kappa_tri\t{base}",
									".kappa_tri"
								],
								[
									"bitwNot\t{base}",
									"bitwNot"
								],
								[
									".getRequiredPackages\t{base}",
									".getRequiredPackages"
								],
								[
									"getwd\t{base}",
									"getwd"
								],
								[
									"list2env\t{base}",
									"list2env"
								],
								[
									"set.seed\t{base}",
									"set.seed"
								],
								[
									".doWrap\t{base}",
									".doWrap"
								],
								[
									"R_compiled_by\t{base}",
									"R_compiled_by"
								],
								[
									"is.primitive\t{base}",
									"is.primitive"
								],
								[
									"grepl\t{base}",
									"grepl"
								],
								[
									"Ops.data.frame\t{base}",
									"Ops.data.frame"
								],
								[
									"format.difftime\t{base}",
									"format.difftime"
								],
								[
									"trigamma\t{base}",
									"trigamma"
								],
								[
									"as.list.difftime\t{base}",
									"as.list.difftime"
								],
								[
									"character\t{base}",
									"character"
								],
								[
									".col\t{base}",
									".col"
								],
								[
									".POSIXct\t{base}",
									".POSIXct"
								],
								[
									"returnValue\t{base}",
									"returnValue"
								],
								[
									".POSIXlt\t{base}",
									".POSIXlt"
								],
								[
									"xtfrm.data.frame\t{base}",
									"xtfrm.data.frame"
								],
								[
									"Math.difftime\t{base}",
									"Math.difftime"
								],
								[
									"version\t{base}",
									"version"
								],
								[
									".F_dchdc\t{base}",
									".F_dchdc"
								],
								[
									"jitter\t{base}",
									"jitter"
								],
								[
									"isNamespaceLoaded\t{base}",
									"isNamespaceLoaded"
								],
								[
									"print.warnings\t{base}",
									"print.warnings"
								],
								[
									"simpleWarning\t{base}",
									"simpleWarning"
								],
								[
									"double\t{base}",
									"double"
								],
								[
									"as.expression\t{base}",
									"as.expression"
								],
								[
									"summary.srcfile\t{base}",
									"summary.srcfile"
								],
								[
									"summary.data.frame\t{base}",
									"summary.data.frame"
								],
								[
									"c.factor\t{base}",
									"c.factor"
								],
								[
									"debugonce\t{base}",
									"debugonce"
								],
								[
									"print\t{base}",
									"print"
								],
								[
									".isMethodsDispatchOn\t{base}",
									".isMethodsDispatchOn"
								],
								[
									"gregexec\t{base}",
									"gregexec"
								],
								[
									"forceAndCall\t{base}",
									"forceAndCall"
								],
								[
									"close.srcfilealias\t{base}",
									"close.srcfilealias"
								],
								[
									".gtn\t{base}",
									".gtn"
								],
								[
									".mergeExportMethods\t{base}",
									".mergeExportMethods"
								],
								[
									".primTrace\t{base}",
									".primTrace"
								],
								[
									"seq.int\t{base}",
									"seq.int"
								],
								[
									"gregexpr\t{base}",
									"gregexpr"
								],
								[
									"namespaceImportClasses\t{base}",
									"namespaceImportClasses"
								],
								[
									"contributors\t{base}",
									"contributors"
								],
								[
									"unix.time\t{base}",
									"unix.time"
								],
								[
									"ngettext\t{base}",
									"ngettext"
								],
								[
									"print.Dlist\t{base}",
									"print.Dlist"
								],
								[
									"Find\t{base}",
									"Find"
								],
								[
									"all.equal.envRefClass\t{base}",
									"all.equal.envRefClass"
								],
								[
									"as.name\t{base}",
									"as.name"
								],
								[
									"gettext\t{base}",
									"gettext"
								],
								[
									"rawToChar\t{base}",
									"rawToChar"
								],
								[
									"anyDuplicated.array\t{base}",
									"anyDuplicated.array"
								],
								[
									"unique.POSIXlt\t{base}",
									"unique.POSIXlt"
								],
								[
									"as.list.POSIXct\t{base}",
									"as.list.POSIXct"
								],
								[
									"as.data.frame.character\t{base}",
									"as.data.frame.character"
								],
								[
									"importIntoEnv\t{base}",
									"importIntoEnv"
								],
								[
									"as.list.POSIXlt\t{base}",
									"as.list.POSIXlt"
								],
								[
									"isIncomplete\t{base}",
									"isIncomplete"
								],
								[
									"qr.qy\t{base}",
									"qr.qy"
								],
								[
									"bitwXor\t{base}",
									"bitwXor"
								],
								[
									"format.factor\t{base}",
									"format.factor"
								],
								[
									"Map\t{base}",
									"Map"
								],
								[
									"getTaskCallbackNames\t{base}",
									"getTaskCallbackNames"
								],
								[
									"data.frame\t{base}",
									"data.frame"
								],
								[
									"Mod\t{base}",
									"Mod"
								],
								[
									"sQuote\t{base}",
									"sQuote"
								],
								[
									"regexec\t{base}",
									"regexec"
								],
								[
									"-.Date\t{base}",
									"-.Date"
								],
								[
									"regexpr\t{base}",
									"regexpr"
								],
								[
									"packageNotFoundError\t{base}",
									"packageNotFoundError"
								],
								[
									"sys.nframe\t{base}",
									"sys.nframe"
								],
								[
									"as.table\t{base}",
									"as.table"
								],
								[
									"sys.load.image\t{base}",
									"sys.load.image"
								],
								[
									"source\t{base}",
									"source"
								],
								[
									"objects\t{base}",
									"objects"
								],
								[
									"is.table\t{base}",
									"is.table"
								],
								[
									"sys.status\t{base}",
									"sys.status"
								],
								[
									"array\t{base}",
									"array"
								],
								[
									"search\t{base}",
									"search"
								],
								[
									"is.infinite\t{base}",
									"is.infinite"
								],
								[
									"Sys.setLanguage\t{base}",
									"Sys.setLanguage"
								],
								[
									".Machine\t{base}",
									".Machine"
								],
								[
									"weekdays.Date\t{base}",
									"weekdays.Date"
								],
								[
									"rownames\t{base}",
									"rownames"
								],
								[
									"readRenviron\t{base}",
									"readRenviron"
								],
								[
									"textConnection\t{base}",
									"textConnection"
								],
								[
									".rowMeans\t{base}",
									".rowMeans"
								],
								[
									"getSrcLines\t{base}",
									"getSrcLines"
								],
								[
									".Call\t{base}",
									".Call"
								],
								[
									"unclass\t{base}",
									"unclass"
								],
								[
									".expand_R_libs_env_var\t{base}",
									".expand_R_libs_env_var"
								],
								[
									"gc.time\t{base}",
									"gc.time"
								],
								[
									"cummax\t{base}",
									"cummax"
								],
								[
									"gcinfo\t{base}",
									"gcinfo"
								],
								[
									"cummin\t{base}",
									"cummin"
								],
								[
									".mergeImportMethods\t{base}",
									".mergeImportMethods"
								],
								[
									".subset2\t{base}",
									".subset2"
								],
								[
									"addTaskCallback\t{base}",
									"addTaskCallback"
								],
								[
									"file.mode\t{base}",
									"file.mode"
								],
								[
									".knownS3Generics\t{base}",
									".knownS3Generics"
								],
								[
									"unlockBinding\t{base}",
									"unlockBinding"
								],
								[
									"solve.qr\t{base}",
									"solve.qr"
								],
								[
									".deparseOpts\t{base}",
									".deparseOpts"
								],
								[
									"file.info\t{base}",
									"file.info"
								],
								[
									".row\t{base}",
									".row"
								],
								[
									"round.POSIXt\t{base}",
									"round.POSIXt"
								],
								[
									"duplicated.POSIXlt\t{base}",
									"duplicated.POSIXlt"
								],
								[
									"attachNamespace\t{base}",
									"attachNamespace"
								],
								[
									"dQuote\t{base}",
									"dQuote"
								],
								[
									"bquote\t{base}",
									"bquote"
								],
								[
									"builtins\t{base}",
									"builtins"
								],
								[
									".standard_regexps\t{base}",
									".standard_regexps"
								],
								[
									"format.summaryDefault\t{base}",
									"format.summaryDefault"
								],
								[
									"xzfile\t{base}",
									"xzfile"
								],
								[
									"cut.Date\t{base}",
									"cut.Date"
								],
								[
									"nchar\t{base}",
									"nchar"
								],
								[
									"simplify2array\t{base}",
									"simplify2array"
								],
								[
									"writeChar\t{base}",
									"writeChar"
								],
								[
									"La_library\t{base}",
									"La_library"
								],
								[
									"strptime\t{base}",
									"strptime"
								],
								[
									"serverSocket\t{base}",
									"serverSocket"
								],
								[
									"all.equal.numeric\t{base}",
									"all.equal.numeric"
								],
								[
									"readline\t{base}",
									"readline"
								],
								[
									"duplicated.data.frame\t{base}",
									"duplicated.data.frame"
								],
								[
									".__H__.rbind\t{base}",
									".__H__.rbind"
								],
								[
									"registerS3method\t{base}",
									"registerS3method"
								],
								[
									"as.list.default\t{base}",
									"as.list.default"
								],
								[
									"setNamespaceInfo\t{base}",
									"setNamespaceInfo"
								],
								[
									"seq.Date\t{base}",
									"seq.Date"
								],
								[
									"getNamespaceInfo\t{base}",
									"getNamespaceInfo"
								],
								[
									"asinh\t{base}",
									"asinh"
								],
								[
									"sys.on.exit\t{base}",
									"sys.on.exit"
								],
								[
									"anyNA.data.frame\t{base}",
									"anyNA.data.frame"
								],
								[
									"namespaceImportMethods\t{base}",
									"namespaceImportMethods"
								],
								[
									"sort.int\t{base}",
									"sort.int"
								],
								[
									"cumsum\t{base}",
									"cumsum"
								],
								[
									"environmentName\t{base}",
									"environmentName"
								],
								[
									"as.list.environment\t{base}",
									"as.list.environment"
								],
								[
									"restartDescription\t{base}",
									"restartDescription"
								],
								[
									".signalSimpleWarning\t{base}",
									".signalSimpleWarning"
								],
								[
									"autoload\t{base}",
									"autoload"
								],
								[
									"format.pval\t{base}",
									"format.pval"
								],
								[
									"as.data.frame\t{base}",
									"as.data.frame"
								],
								[
									"as.call\t{base}",
									"as.call"
								],
								[
									"with\t{base}",
									"with"
								],
								[
									"round.Date\t{base}",
									"round.Date"
								],
								[
									"emptyenv\t{base}",
									"emptyenv"
								],
								[
									"as.list.function\t{base}",
									"as.list.function"
								],
								[
									"agrepl\t{base}",
									"agrepl"
								],
								[
									"seq_len\t{base}",
									"seq_len"
								],
								[
									"rowsum.default\t{base}",
									"rowsum.default"
								],
								[
									"months.POSIXt\t{base}",
									"months.POSIXt"
								],
								[
									"besselI\t{base}",
									"besselI"
								],
								[
									"besselJ\t{base}",
									"besselJ"
								],
								[
									"besselK\t{base}",
									"besselK"
								],
								[
									"besselY\t{base}",
									"besselY"
								],
								[
									"numeric\t{base}",
									"numeric"
								],
								[
									"withCallingHandlers\t{base}",
									"withCallingHandlers"
								],
								[
									"open.srcfilecopy\t{base}",
									"open.srcfilecopy"
								],
								[
									"weekdays\t{base}",
									"weekdays"
								],
								[
									"formatDL\t{base}",
									"formatDL"
								],
								[
									"qr.fitted\t{base}",
									"qr.fitted"
								],
								[
									"system2\t{base}",
									"system2"
								],
								[
									".External2\t{base}",
									".External2"
								],
								[
									"as.factor\t{base}",
									"as.factor"
								],
								[
									"data.class\t{base}",
									"data.class"
								],
								[
									"is.symbol\t{base}",
									"is.symbol"
								],
								[
									"memCompress\t{base}",
									"memCompress"
								],
								[
									"simpleMessage\t{base}",
									"simpleMessage"
								],
								[
									"La_version\t{base}",
									"La_version"
								],
								[
									"as.difftime\t{base}",
									"as.difftime"
								],
								[
									"make.names\t{base}",
									"make.names"
								],
								[
									"as.null\t{base}",
									"as.null"
								],
								[
									"storage.mode\t{base}",
									"storage.mode"
								],
								[
									"getExportedValue\t{base}",
									"getExportedValue"
								],
								[
									"mean.Date\t{base}",
									"mean.Date"
								],
								[
									"atan2\t{base}",
									"atan2"
								],
								[
									"requireNamespace\t{base}",
									"requireNamespace"
								],
								[
									"atanh\t{base}",
									"atanh"
								],
								[
									"is.nan\t{base}",
									"is.nan"
								],
								[
									"class\t{base}",
									"class"
								],
								[
									"agrep\t{base}",
									"agrep"
								],
								[
									"which.min\t{base}",
									"which.min"
								],
								[
									"as.Date.default\t{base}",
									"as.Date.default"
								],
								[
									"Sys.glob\t{base}",
									"Sys.glob"
								],
								[
									"Sys.getpid\t{base}",
									"Sys.getpid"
								],
								[
									"which.max\t{base}",
									"which.max"
								],
								[
									"pretty.default\t{base}",
									"pretty.default"
								],
								[
									"on.exit\t{base}",
									"on.exit"
								],
								[
									".pretty\t{base}",
									".pretty"
								],
								[
									"tcrossprod\t{base}",
									"tcrossprod"
								],
								[
									".Date\t{base}",
									".Date"
								],
								[
									"crossprod\t{base}",
									"crossprod"
								],
								[
									"anyDuplicated.data.frame\t{base}",
									"anyDuplicated.data.frame"
								],
								[
									"abs\t{base}",
									"abs"
								],
								[
									"months.Date\t{base}",
									"months.Date"
								],
								[
									"-.POSIXt\t{base}",
									"-.POSIXt"
								],
								[
									"stdin\t{base}",
									"stdin"
								],
								[
									"all\t{base}",
									"all"
								],
								[
									"as.numeric\t{base}",
									"as.numeric"
								],
								[
									"any\t{base}",
									"any"
								],
								[
									"isTRUE\t{base}",
									"isTRUE"
								],
								[
									"charToRaw\t{base}",
									"charToRaw"
								],
								[
									"Sys.time\t{base}",
									"Sys.time"
								],
								[
									"as.Date.numeric\t{base}",
									"as.Date.numeric"
								],
								[
									"environment\t{base}",
									"environment"
								],
								[
									"cat\t{base}",
									"cat"
								],
								[
									"is.raw\t{base}",
									"is.raw"
								],
								[
									"mean.difftime\t{base}",
									"mean.difftime"
								],
								[
									"readLines\t{base}",
									"readLines"
								],
								[
									".rowSums\t{base}",
									".rowSums"
								],
								[
									"charmatch\t{base}",
									"charmatch"
								],
								[
									"col\t{base}",
									"col"
								],
								[
									"cos\t{base}",
									"cos"
								],
								[
									"mtfrm\t{base}",
									"mtfrm"
								],
								[
									"Sys.Date\t{base}",
									"Sys.Date"
								],
								[
									"det\t{base}",
									"det"
								],
								[
									"cut\t{base}",
									"cut"
								],
								[
									"dim\t{base}",
									"dim"
								],
								[
									"dir\t{base}",
									"dir"
								],
								[
									"as.data.frame.raw\t{base}",
									"as.data.frame.raw"
								],
								[
									"as.symbol\t{base}",
									"as.symbol"
								],
								[
									"as.data.frame.AsIs\t{base}",
									"as.data.frame.AsIs"
								],
								[
									"summary.factor\t{base}",
									"summary.factor"
								],
								[
									"anyDuplicated.matrix\t{base}",
									"anyDuplicated.matrix"
								],
								[
									"getDLLRegisteredRoutines.DLLInfo\t{base}",
									"getDLLRegisteredRoutines.DLLInfo"
								],
								[
									"exp\t{base}",
									"exp"
								],
								[
									"print.Date\t{base}",
									"print.Date"
								],
								[
									"split.data.frame\t{base}",
									"split.data.frame"
								],
								[
									"for\t{base}",
									"for"
								],
								[
									"rowSums\t{base}",
									"rowSums"
								],
								[
									"rawShift\t{base}",
									"rawShift"
								],
								[
									"get\t{base}",
									"get"
								],
								[
									"open.srcfilealias\t{base}",
									"open.srcfilealias"
								],
								[
									"as.list.numeric_version\t{base}",
									"as.list.numeric_version"
								],
								[
									"identity\t{base}",
									"identity"
								],
								[
									"Summary.factor\t{base}",
									"Summary.factor"
								],
								[
									"print.summaryDefault\t{base}",
									"print.summaryDefault"
								],
								[
									"toString.default\t{base}",
									"toString.default"
								],
								[
									"pushBackLength\t{base}",
									"pushBackLength"
								],
								[
									"extSoftVersion\t{base}",
									"extSoftVersion"
								],
								[
									"serialize\t{base}",
									"serialize"
								],
								[
									"is.complex\t{base}",
									"is.complex"
								],
								[
									"loadNamespace\t{base}",
									"loadNamespace"
								],
								[
									"all.equal.default\t{base}",
									"all.equal.default"
								],
								[
									"print.condition\t{base}",
									"print.condition"
								],
								[
									"RNGkind\t{base}",
									"RNGkind"
								],
								[
									"summary.table\t{base}",
									"summary.table"
								],
								[
									"nameOfClass.default\t{base}",
									"nameOfClass.default"
								],
								[
									"list\t{base}",
									"list"
								],
								[
									"isa\t{base}",
									"isa"
								],
								[
									"print.difftime\t{base}",
									"print.difftime"
								],
								[
									"as.character.error\t{base}",
									"as.character.error"
								],
								[
									"strtrim\t{base}",
									"strtrim"
								],
								[
									"licence\t{base}",
									"licence"
								],
								[
									"summary\t{base}",
									"summary"
								],
								[
									"row.names.data.frame\t{base}",
									"row.names.data.frame"
								],
								[
									"packageStartupMessage\t{base}",
									"packageStartupMessage"
								],
								[
									"print.summary.warnings\t{base}",
									"print.summary.warnings"
								],
								[
									"pmax.int\t{base}",
									"pmax.int"
								],
								[
									"julian.Date\t{base}",
									"julian.Date"
								],
								[
									"license\t{base}",
									"license"
								],
								[
									"sys.save.image\t{base}",
									"sys.save.image"
								],
								[
									"lazyLoadDBexec\t{base}",
									"lazyLoadDBexec"
								],
								[
									"max.col\t{base}",
									"max.col"
								],
								[
									"invisible\t{base}",
									"invisible"
								],
								[
									"open.srcfile\t{base}",
									"open.srcfile"
								],
								[
									"searchpaths\t{base}",
									"searchpaths"
								],
								[
									".formula2varlist\t{base}",
									".formula2varlist"
								],
								[
									"namespaceImportFrom\t{base}",
									"namespaceImportFrom"
								],
								[
									"sys.frames\t{base}",
									"sys.frames"
								],
								[
									"Recall\t{base}",
									"Recall"
								],
								[
									".difftime\t{base}",
									".difftime"
								],
								[
									"log\t{base}",
									"log"
								],
								[
									"numToBits\t{base}",
									"numToBits"
								],
								[
									"rawToBits\t{base}",
									"rawToBits"
								],
								[
									"max\t{base}",
									"max"
								],
								[
									"floor\t{base}",
									"floor"
								],
								[
									"Ops.numeric_version\t{base}",
									"Ops.numeric_version"
								],
								[
									"close\t{base}",
									"close"
								],
								[
									"Math.Date\t{base}",
									"Math.Date"
								],
								[
									"Math.data.frame\t{base}",
									"Math.data.frame"
								],
								[
									"min\t{base}",
									"min"
								],
								[
									"as.array\t{base}",
									"as.array"
								],
								[
									"assign\t{base}",
									"assign"
								],
								[
									"taskCallbackManager\t{base}",
									"taskCallbackManager"
								],
								[
									"gettextf\t{base}",
									"gettextf"
								],
								[
									".NotYetUsed\t{base}",
									".NotYetUsed"
								],
								[
									"setHook\t{base}",
									"setHook"
								],
								[
									"load\t{base}",
									"load"
								],
								[
									"socketTimeout\t{base}",
									"socketTimeout"
								],
								[
									"Negate\t{base}",
									"Negate"
								],
								[
									"unique.matrix\t{base}",
									"unique.matrix"
								],
								[
									"log2\t{base}",
									"log2"
								],
								[
									"as.character.POSIXt\t{base}",
									"as.character.POSIXt"
								],
								[
									"untrace\t{base}",
									"untrace"
								],
								[
									"logb\t{base}",
									"logb"
								],
								[
									"is.array\t{base}",
									"is.array"
								],
								[
									"droplevels.factor\t{base}",
									"droplevels.factor"
								],
								[
									"R.version\t{base}",
									"R.version"
								],
								[
									"R.Version\t{base}",
									"R.Version"
								],
								[
									"within.list\t{base}",
									"within.list"
								],
								[
									"inherits\t{base}",
									"inherits"
								],
								[
									"Sys.setenv\t{base}",
									"Sys.setenv"
								],
								[
									"comment\t{base}",
									"comment"
								],
								[
									"as.vector.data.frame\t{base}",
									"as.vector.data.frame"
								],
								[
									"print.DLLInfoList\t{base}",
									"print.DLLInfoList"
								],
								[
									"vector\t{base}",
									"vector"
								],
								[
									"system\t{base}",
									"system"
								],
								[
									".First.sys\t{base}",
									".First.sys"
								],
								[
									"save.image\t{base}",
									"save.image"
								],
								[
									"as.array.default\t{base}",
									"as.array.default"
								],
								[
									"format.info\t{base}",
									"format.info"
								],
								[
									".F_dqrqy\t{base}",
									".F_dqrqy"
								],
								[
									"Sys.setFileTime\t{base}",
									"Sys.setFileTime"
								],
								[
									".F_dqrxb\t{base}",
									".F_dqrxb"
								],
								[
									"setequal\t{base}",
									"setequal"
								],
								[
									"raw\t{base}",
									"raw"
								],
								[
									"typeof\t{base}",
									"typeof"
								],
								[
									"rep\t{base}",
									"rep"
								],
								[
									"rev\t{base}",
									"rev"
								],
								[
									"paste0\t{base}",
									"paste0"
								],
								[
									"rle\t{base}",
									"rle"
								],
								[
									"conditionMessage\t{base}",
									"conditionMessage"
								],
								[
									".F_dqrcf\t{base}",
									".F_dqrcf"
								],
								[
									"row\t{base}",
									"row"
								],
								[
									"stderr\t{base}",
									"stderr"
								],
								[
									".Last.value\t{base}",
									".Last.value"
								],
								[
									"seq\t{base}",
									"seq"
								],
								[
									"flush\t{base}",
									"flush"
								],
								[
									"sin\t{base}",
									"sin"
								],
								[
									"intToUtf8\t{base}",
									"intToUtf8"
								],
								[
									"acos\t{base}",
									"acos"
								],
								[
									"globalCallingHandlers\t{base}",
									"globalCallingHandlers"
								],
								[
									"within\t{base}",
									"within"
								],
								[
									"tan\t{base}",
									"tan"
								],
								[
									"as.matrix.noquote\t{base}",
									"as.matrix.noquote"
								],
								[
									"libcurlVersion\t{base}",
									"libcurlVersion"
								],
								[
									"sub\t{base}",
									"sub"
								],
								[
									"sum\t{base}",
									"sum"
								],
								[
									"svd\t{base}",
									"svd"
								],
								[
									"upper.tri\t{base}",
									"upper.tri"
								],
								[
									"isSymmetric.matrix\t{base}",
									"isSymmetric.matrix"
								],
								[
									"is.factor\t{base}",
									"is.factor"
								],
								[
									"mean\t{base}",
									"mean"
								],
								[
									"try\t{base}",
									"try"
								],
								[
									"rev.default\t{base}",
									"rev.default"
								],
								[
									"is.character\t{base}",
									"is.character"
								],
								[
									"Sys.getenv\t{base}",
									"Sys.getenv"
								],
								[
									"unz\t{base}",
									"unz"
								],
								[
									"as.data.frame.factor\t{base}",
									"as.data.frame.factor"
								],
								[
									"url\t{base}",
									"url"
								],
								[
									"Ops.Date\t{base}",
									"Ops.Date"
								],
								[
									"as.environment\t{base}",
									"as.environment"
								],
								[
									"mget\t{base}",
									"mget"
								],
								[
									"print.eigen\t{base}",
									"print.eigen"
								],
								[
									"invokeRestartInteractively\t{base}",
									"invokeRestartInteractively"
								],
								[
									"getNamespaceExports\t{base}",
									"getNamespaceExports"
								],
								[
									"subset.matrix\t{base}",
									"subset.matrix"
								],
								[
									"forwardsolve\t{base}",
									"forwardsolve"
								],
								[
									"solve.default\t{base}",
									"solve.default"
								],
								[
									"icuGetCollate\t{base}",
									"icuGetCollate"
								],
								[
									"dirname\t{base}",
									"dirname"
								],
								[
									"as.data.frame.model.matrix\t{base}",
									"as.data.frame.model.matrix"
								],
								[
									"Sys.info\t{base}",
									"Sys.info"
								],
								[
									"as.Date.character\t{base}",
									"as.Date.character"
								],
								[
									".encode_numeric_version\t{base}",
									".encode_numeric_version"
								],
								[
									"xor\t{base}",
									"xor"
								],
								[
									"quarters.POSIXt\t{base}",
									"quarters.POSIXt"
								],
								[
									"allowInterrupts\t{base}",
									"allowInterrupts"
								],
								[
									"julian\t{base}",
									"julian"
								],
								[
									"intToBits\t{base}",
									"intToBits"
								],
								[
									"validUTF8\t{base}",
									"validUTF8"
								],
								[
									"capabilities\t{base}",
									"capabilities"
								],
								[
									"print.simple.list\t{base}",
									"print.simple.list"
								],
								[
									"namespaceImport\t{base}",
									"namespaceImport"
								],
								[
									"geterrmessage\t{base}",
									"geterrmessage"
								],
								[
									"delayedAssign\t{base}",
									"delayedAssign"
								],
								[
									"print.DLLRegisteredRoutines\t{base}",
									"print.DLLRegisteredRoutines"
								],
								[
									"Sys.setlocale\t{base}",
									"Sys.setlocale"
								],
								[
									"difftime\t{base}",
									"difftime"
								],
								[
									"..getNamespace\t{base}",
									"..getNamespace"
								],
								[
									"range\t{base}",
									"range"
								],
								[
									"unique.data.frame\t{base}",
									"unique.data.frame"
								],
								[
									"deparse\t{base}",
									"deparse"
								],
								[
									"pairlist\t{base}",
									"pairlist"
								],
								[
									"sinpi\t{base}",
									"sinpi"
								],
								[
									"summary.POSIXct\t{base}",
									"summary.POSIXct"
								],
								[
									"print.NativeRoutineList\t{base}",
									"print.NativeRoutineList"
								],
								[
									"psigamma\t{base}",
									"psigamma"
								],
								[
									"file.access\t{base}",
									"file.access"
								],
								[
									"is.environment\t{base}",
									"is.environment"
								],
								[
									"Math.factor\t{base}",
									"Math.factor"
								],
								[
									"getRversion\t{base}",
									"getRversion"
								],
								[
									"droplevels\t{base}",
									"droplevels"
								],
								[
									"determinant.matrix\t{base}",
									"determinant.matrix"
								],
								[
									"stdout\t{base}",
									"stdout"
								],
								[
									"summary.POSIXlt\t{base}",
									"summary.POSIXlt"
								],
								[
									"suspendInterrupts\t{base}",
									"suspendInterrupts"
								],
								[
									"tapply\t{base}",
									"tapply"
								],
								[
									".F_dqrqty\t{base}",
									".F_dqrqty"
								],
								[
									"trace\t{base}",
									"trace"
								],
								[
									"callCC\t{base}",
									"callCC"
								],
								[
									".getNamespace\t{base}",
									".getNamespace"
								],
								[
									"as.matrix.POSIXlt\t{base}",
									"as.matrix.POSIXlt"
								],
								[
									"rowMeans\t{base}",
									"rowMeans"
								],
								[
									".isOpen\t{base}",
									".isOpen"
								],
								[
									"format.packageInfo\t{base}",
									"format.packageInfo"
								],
								[
									".F_dqrrsd\t{base}",
									".F_dqrrsd"
								],
								[
									"print.default\t{base}",
									"print.default"
								],
								[
									"shQuote\t{base}",
									"shQuote"
								],
								[
									"cut.default\t{base}",
									"cut.default"
								],
								[
									"range.default\t{base}",
									"range.default"
								],
								[
									"structure\t{base}",
									"structure"
								],
								[
									"mode\t{base}",
									"mode"
								],
								[
									"Ops.difftime\t{base}",
									"Ops.difftime"
								],
								[
									"attributes\t{base}",
									"attributes"
								],
								[
									"as.POSIXct\t{base}",
									"as.POSIXct"
								],
								[
									"all.names\t{base}",
									"all.names"
								],
								[
									"as.character\t{base}",
									"as.character"
								],
								[
									"as.POSIXlt\t{base}",
									"as.POSIXlt"
								],
								[
									"sort.default\t{base}",
									"sort.default"
								],
								[
									"simpleCondition\t{base}",
									"simpleCondition"
								],
								[
									"within.data.frame\t{base}",
									"within.data.frame"
								],
								[
									"endsWith\t{base}",
									"endsWith"
								],
								[
									"print.connection\t{base}",
									"print.connection"
								],
								[
									"split.default\t{base}",
									"split.default"
								],
								[
									"asS3\t{base}",
									"asS3"
								],
								[
									"asS4\t{base}",
									"asS4"
								],
								[
									"with.default\t{base}",
									"with.default"
								],
								[
									"balancePOSIXlt\t{base}",
									"balancePOSIXlt"
								],
								[
									"args\t{base}",
									"args"
								],
								[
									"break\t{base}",
									"break"
								],
								[
									"R_system_version\t{base}",
									"R_system_version"
								],
								[
									"matrix\t{base}",
									"matrix"
								],
								[
									"is.na.POSIXlt\t{base}",
									"is.na.POSIXlt"
								],
								[
									"basename\t{base}",
									"basename"
								],
								[
									"lbeta\t{base}",
									"lbeta"
								],
								[
									"asin\t{base}",
									"asin"
								],
								[
									"summary.default\t{base}",
									"summary.default"
								],
								[
									"file.append\t{base}",
									"file.append"
								],
								[
									"srcfile\t{base}",
									"srcfile"
								],
								[
									"Sys.which\t{base}",
									"Sys.which"
								],
								[
									"ncol\t{base}",
									"ncol"
								],
								[
									"return\t{base}",
									"return"
								],
								[
									"atan\t{base}",
									"atan"
								],
								[
									"eapply\t{base}",
									"eapply"
								],
								[
									"rep.POSIXct\t{base}",
									"rep.POSIXct"
								],
								[
									"rep.POSIXlt\t{base}",
									"rep.POSIXlt"
								],
								[
									"socketConnection\t{base}",
									"socketConnection"
								],
								[
									"format.Date\t{base}",
									"format.Date"
								],
								[
									"getConnection\t{base}",
									"getConnection"
								],
								[
									"tryCatch\t{base}",
									"tryCatch"
								],
								[
									"attr\t{base}",
									"attr"
								],
								[
									"tracemem\t{base}",
									"tracemem"
								],
								[
									"as.data.frame.ordered\t{base}",
									"as.data.frame.ordered"
								],
								[
									"format.hexmode\t{base}",
									"format.hexmode"
								],
								[
									"beta\t{base}",
									"beta"
								],
								[
									"seq.POSIXt\t{base}",
									"seq.POSIXt"
								],
								[
									"summary.Date\t{base}",
									"summary.Date"
								],
								[
									"next\t{base}",
									"next"
								],
								[
									"Sys.getlocale\t{base}",
									"Sys.getlocale"
								],
								[
									"lower.tri\t{base}",
									"lower.tri"
								],
								[
									"rbind\t{base}",
									"rbind"
								],
								[
									"union\t{base}",
									"union"
								],
								[
									"write\t{base}",
									"write"
								],
								[
									"units\t{base}",
									"units"
								],
								[
									"cbind\t{base}",
									"cbind"
								],
								[
									"dim.data.frame\t{base}",
									"dim.data.frame"
								],
								[
									"t.data.frame\t{base}",
									"t.data.frame"
								],
								[
									"month.abb\t{base}",
									"month.abb"
								],
								[
									"Sys.unsetenv\t{base}",
									"Sys.unsetenv"
								],
								[
									"dyn.unload\t{base}",
									"dyn.unload"
								],
								[
									"scale.default\t{base}",
									"scale.default"
								],
								[
									"invokeRestart\t{base}",
									"invokeRestart"
								],
								[
									"as.data.frame.integer\t{base}",
									"as.data.frame.integer"
								],
								[
									"all.equal.language\t{base}",
									"all.equal.language"
								],
								[
									"bitwOr\t{base}",
									"bitwOr"
								],
								[
									".Library.site\t{base}",
									".Library.site"
								],
								[
									".packageStartupMessage\t{base}",
									".packageStartupMessage"
								],
								[
									"close.connection\t{base}",
									"close.connection"
								],
								[
									"trimws\t{base}",
									"trimws"
								],
								[
									".Call.graphics\t{base}",
									".Call.graphics"
								],
								[
									".C_R_addTaskCallback\t{base}",
									".C_R_addTaskCallback"
								],
								[
									"unserialize\t{base}",
									"unserialize"
								],
								[
									".amatch_bounds\t{base}",
									".amatch_bounds"
								],
								[
									".S3_methods_table\t{base}",
									".S3_methods_table"
								],
								[
									".row_names_info\t{base}",
									".row_names_info"
								],
								[
									"standardGeneric\t{base}",
									"standardGeneric"
								],
								[
									".F_dqrdc2\t{base}",
									".F_dqrdc2"
								],
								[
									"is.nan.POSIXlt\t{base}",
									"is.nan.POSIXlt"
								],
								[
									"as.data.frame.Date\t{base}",
									"as.data.frame.Date"
								],
								[
									"R.home\t{base}",
									"R.home"
								],
								[
									"unique.default\t{base}",
									"unique.default"
								],
								[
									"sys.frame\t{base}",
									"sys.frame"
								],
								[
									"sys.source\t{base}",
									"sys.source"
								],
								[
									"as.double.POSIXlt\t{base}",
									"as.double.POSIXlt"
								],
								[
									"clearPushBack\t{base}",
									"clearPushBack"
								],
								[
									".leap.seconds\t{base}",
									".leap.seconds"
								],
								[
									".mapply\t{base}",
									".mapply"
								],
								[
									"bindtextdomain\t{base}",
									"bindtextdomain"
								],
								[
									"lgamma\t{base}",
									"lgamma"
								],
								[
									"aperm.table\t{base}",
									"aperm.table"
								],
								[
									"getLoadedDLLs\t{base}",
									"getLoadedDLLs"
								],
								[
									"subset.data.frame\t{base}",
									"subset.data.frame"
								],
								[
									"as.Date.factor\t{base}",
									"as.Date.factor"
								],
								[
									"format.libraryIQR\t{base}",
									"format.libraryIQR"
								],
								[
									"unique\t{base}",
									"unique"
								],
								[
									"as.data.frame.difftime\t{base}",
									"as.data.frame.difftime"
								],
								[
									"merge.default\t{base}",
									"merge.default"
								],
								[
									"ifelse\t{base}",
									"ifelse"
								],
								[
									"is.atomic\t{base}",
									"is.atomic"
								],
								[
									"sys.parents\t{base}",
									"sys.parents"
								],
								[
									"body\t{base}",
									"body"
								],
								[
									"as.character.default\t{base}",
									"as.character.default"
								],
								[
									"rep.int\t{base}",
									"rep.int"
								],
								[
									"as.data.frame.array\t{base}",
									"as.data.frame.array"
								],
								[
									"xtfrm.Date\t{base}",
									"xtfrm.Date"
								],
								[
									"norm\t{base}",
									"norm"
								],
								[
									"as.list.factor\t{base}",
									"as.list.factor"
								],
								[
									"retracemem\t{base}",
									"retracemem"
								],
								[
									"local\t{base}",
									"local"
								],
								[
									"expression\t{base}",
									"expression"
								],
								[
									"Reduce\t{base}",
									"Reduce"
								],
								[
									"signalCondition\t{base}",
									"signalCondition"
								],
								[
									"validEnc\t{base}",
									"validEnc"
								],
								[
									"log10\t{base}",
									"log10"
								],
								[
									"isSymmetric\t{base}",
									"isSymmetric"
								],
								[
									"log1p\t{base}",
									"log1p"
								],
								[
									"is.expression\t{base}",
									"is.expression"
								],
								[
									"tryInvokeRestart\t{base}",
									"tryInvokeRestart"
								],
								[
									"is.unsorted\t{base}",
									"is.unsorted"
								],
								[
									"droplevels.data.frame\t{base}",
									"droplevels.data.frame"
								],
								[
									"sys.parent\t{base}",
									"sys.parent"
								],
								[
									"call\t{base}",
									"call"
								],
								[
									"is.object\t{base}",
									"is.object"
								],
								[
									"pos.to.env\t{base}",
									"pos.to.env"
								],
								[
									"as.POSIXlt.character\t{base}",
									"as.POSIXlt.character"
								],
								[
									"sweep\t{base}",
									"sweep"
								],
								[
									".C_R_removeTaskCallback\t{base}",
									".C_R_removeTaskCallback"
								],
								[
									".libPaths\t{base}",
									".libPaths"
								],
								[
									".getNamespaceInfo\t{base}",
									".getNamespaceInfo"
								],
								[
									"trunc.POSIXt\t{base}",
									"trunc.POSIXt"
								],
								[
									"encodeString\t{base}",
									"encodeString"
								],
								[
									"trunc\t{base}",
									"trunc"
								],
								[
									"system.time\t{base}",
									"system.time"
								],
								[
									"all.equal.POSIXt\t{base}",
									"all.equal.POSIXt"
								],
								[
									"bitwShiftR\t{base}",
									"bitwShiftR"
								],
								[
									"nrow\t{base}",
									"nrow"
								],
								[
									"bitwShiftL\t{base}",
									"bitwShiftL"
								],
								[
									"print.restart\t{base}",
									"print.restart"
								],
								[
									"RNGversion\t{base}",
									"RNGversion"
								],
								[
									"sort.POSIXlt\t{base}",
									"sort.POSIXlt"
								],
								[
									"print.POSIXct\t{base}",
									"print.POSIXct"
								],
								[
									".S3method\t{base}",
									".S3method"
								],
								[
									"print.POSIXlt\t{base}",
									"print.POSIXlt"
								],
								[
									"withVisible\t{base}",
									"withVisible"
								],
								[
									"file.create\t{base}",
									"file.create"
								],
								[
									"getHook\t{base}",
									"getHook"
								],
								[
									"as.data.frame.list\t{base}",
									"as.data.frame.list"
								],
								[
									"row.names.default\t{base}",
									"row.names.default"
								],
								[
									"print.AsIs\t{base}",
									"print.AsIs"
								],
								[
									"Filter\t{base}",
									"Filter"
								],
								[
									"options\t{base}",
									"options"
								],
								[
									"single\t{base}",
									"single"
								],
								[
									"attr.all.equal\t{base}",
									"attr.all.equal"
								],
								[
									".primUntrace\t{base}",
									".primUntrace"
								],
								[
									"factorial\t{base}",
									"factorial"
								],
								[
									"lfactorial\t{base}",
									"lfactorial"
								],
								[
									"colnames\t{base}",
									"colnames"
								],
								[
									"dontCheck\t{base}",
									"dontCheck"
								],
								[
									".Options\t{base}",
									".Options"
								],
								[
									"all.equal.list\t{base}",
									"all.equal.list"
								],
								[
									"levels\t{base}",
									"levels"
								],
								[
									".colMeans\t{base}",
									".colMeans"
								],
								[
									"labels\t{base}",
									"labels"
								],
								[
									".dynLibs\t{base}",
									".dynLibs"
								],
								[
									"isatty\t{base}",
									"isatty"
								],
								[
									"file.remove\t{base}",
									"file.remove"
								],
								[
									"ordered\t{base}",
									"ordered"
								],
								[
									"...length\t{base}",
									"...length"
								],
								[
									"exists\t{base}",
									"exists"
								],
								[
									"prettyNum\t{base}",
									"prettyNum"
								],
								[
									"isRestart\t{base}",
									"isRestart"
								],
								[
									"setTimeLimit\t{base}",
									"setTimeLimit"
								],
								[
									"names.POSIXlt\t{base}",
									"names.POSIXlt"
								],
								[
									".__H__.cbind\t{base}",
									".__H__.cbind"
								],
								[
									"list.dirs\t{base}",
									"list.dirs"
								],
								[
									"truncate\t{base}",
									"truncate"
								],
								[
									"quarters\t{base}",
									"quarters"
								],
								[
									".External\t{base}",
									".External"
								],
								[
									"xtfrm.factor\t{base}",
									"xtfrm.factor"
								],
								[
									"oldClass\t{base}",
									"oldClass"
								],
								[
									"as.function.default\t{base}",
									"as.function.default"
								],
								[
									"chol\t{base}",
									"chol"
								],
								[
									"file.rename\t{base}",
									"file.rename"
								],
								[
									"loadedNamespaces\t{base}",
									"loadedNamespaces"
								],
								[
									"all.equal.factor\t{base}",
									"all.equal.factor"
								],
								[
									".BaseNamespaceEnv\t{base}",
									".BaseNamespaceEnv"
								],
								[
									"truncate.connection\t{base}",
									"truncate.connection"
								],
								[
									"is.finite\t{base}",
									"is.finite"
								],
								[
									"as.data.frame.numeric\t{base}",
									"as.data.frame.numeric"
								],
								[
									"labels.default\t{base}",
									"labels.default"
								],
								[
									"strwrap\t{base}",
									"strwrap"
								],
								[
									".Internal\t{base}",
									".Internal"
								],
								[
									"tolower\t{base}",
									"tolower"
								],
								[
									"gzfile\t{base}",
									"gzfile"
								],
								[
									".Fortran\t{base}",
									".Fortran"
								],
								[
									"as.character.numeric_version\t{base}",
									"as.character.numeric_version"
								],
								[
									"env.profile\t{base}",
									"env.profile"
								],
								[
									"is.na\t{base}",
									"is.na"
								],
								[
									"Summary.POSIXct\t{base}",
									"Summary.POSIXct"
								],
								[
									"open.connection\t{base}",
									"open.connection"
								],
								[
									"is.qr\t{base}",
									"is.qr"
								],
								[
									"list2DF\t{base}",
									"list2DF"
								],
								[
									"duplicated\t{base}",
									"duplicated"
								],
								[
									"writeBin\t{base}",
									"writeBin"
								],
								[
									"flush.connection\t{base}",
									"flush.connection"
								],
								[
									"rcond\t{base}",
									"rcond"
								],
								[
									"is.ordered\t{base}",
									"is.ordered"
								],
								[
									"isSeekable\t{base}",
									"isSeekable"
								],
								[
									"as.ordered\t{base}",
									"as.ordered"
								],
								[
									"iconv\t{base}",
									"iconv"
								],
								[
									"tempdir\t{base}",
									"tempdir"
								],
								[
									"Summary.POSIXlt\t{base}",
									"Summary.POSIXlt"
								],
								[
									"is.numeric.difftime\t{base}",
									"is.numeric.difftime"
								],
								[
									"print.octmode\t{base}",
									"print.octmode"
								],
								[
									"summary.proc_time\t{base}",
									"summary.proc_time"
								],
								[
									"chol2inv\t{base}",
									"chol2inv"
								],
								[
									"as.character.Date\t{base}",
									"as.character.Date"
								],
								[
									".sys.timezone\t{base}",
									".sys.timezone"
								],
								[
									"Sys.timezone\t{base}",
									"Sys.timezone"
								],
								[
									"quarters.Date\t{base}",
									"quarters.Date"
								],
								[
									"stopifnot\t{base}",
									"stopifnot"
								],
								[
									"as.data.frame.complex\t{base}",
									"as.data.frame.complex"
								],
								[
									"all.equal.function\t{base}",
									"all.equal.function"
								],
								[
									"packBits\t{base}",
									"packBits"
								],
								[
									"c.POSIXct\t{base}",
									"c.POSIXct"
								],
								[
									"rep.difftime\t{base}",
									"rep.difftime"
								],
								[
									"strrep\t{base}",
									"strrep"
								],
								[
									"force\t{base}",
									"force"
								],
								[
									"c.POSIXlt\t{base}",
									"c.POSIXlt"
								],
								[
									"mem.maxNSize\t{base}",
									"mem.maxNSize"
								],
								[
									"format\t{base}",
									"format"
								],
								[
									"NextMethod\t{base}",
									"NextMethod"
								],
								[
									"..deparseOpts\t{base}",
									"..deparseOpts"
								],
								[
									".TAOCP1997init\t{base}",
									".TAOCP1997init"
								],
								[
									"Vectorize\t{base}",
									"Vectorize"
								],
								[
									"getNamespaceUsers\t{base}",
									"getNamespaceUsers"
								],
								[
									"cosh\t{base}",
									"cosh"
								],
								[
									"open\t{base}",
									"open"
								],
								[
									"qr.qty\t{base}",
									"qr.qty"
								],
								[
									"subset\t{base}",
									"subset"
								],
								[
									"print.summary.table\t{base}",
									"print.summary.table"
								],
								[
									"is.infinite.POSIXlt\t{base}",
									"is.infinite.POSIXlt"
								],
								[
									"substr\t{base}",
									"substr"
								],
								[
									"cospi\t{base}",
									"cospi"
								],
								[
									"c.warnings\t{base}",
									"c.warnings"
								],
								[
									"print.packageInfo\t{base}",
									"print.packageInfo"
								],
								[
									"NCOL\t{base}",
									"NCOL"
								],
								[
									"is.numeric\t{base}",
									"is.numeric"
								],
								[
									"strtoi\t{base}",
									"strtoi"
								],
								[
									".GenericArgsEnv\t{base}",
									".GenericArgsEnv"
								],
								[
									"rep_len\t{base}",
									"rep_len"
								],
								[
									".make_numeric_version\t{base}",
									".make_numeric_version"
								],
								[
									"date\t{base}",
									"date"
								],
								[
									"closeAllConnections\t{base}",
									"closeAllConnections"
								],
								[
									"as.logical\t{base}",
									"as.logical"
								],
								[
									"getDLLRegisteredRoutines\t{base}",
									"getDLLRegisteredRoutines"
								],
								[
									"round\t{base}",
									"round"
								],
								[
									"file.exists\t{base}",
									"file.exists"
								],
								[
									".F_dtrco\t{base}",
									".F_dtrco"
								],
								[
									"polyroot\t{base}",
									"polyroot"
								],
								[
									".kronecker\t{base}",
									".kronecker"
								],
								[
									".traceback\t{base}",
									".traceback"
								],
								[
									"browser\t{base}",
									"browser"
								],
								[
									"conflictRules\t{base}",
									"conflictRules"
								],
								[
									"is.double\t{base}",
									"is.double"
								],
								[
									"months\t{base}",
									"months"
								],
								[
									"toupper\t{base}",
									"toupper"
								],
								[
									"duplicated.default\t{base}",
									"duplicated.default"
								],
								[
									".bincode\t{base}",
									".bincode"
								],
								[
									"qr.resid\t{base}",
									"qr.resid"
								],
								[
									"toString\t{base}",
									"toString"
								],
								[
									"socketSelect\t{base}",
									"socketSelect"
								],
								[
									".class2\t{base}",
									".class2"
								],
								[
									"print.libraryIQR\t{base}",
									"print.libraryIQR"
								],
								[
									"prop.table\t{base}",
									"prop.table"
								],
								[
									"new.env\t{base}",
									"new.env"
								],
								[
									"which\t{base}",
									"which"
								],
								[
									"duplicated.numeric_version\t{base}",
									"duplicated.numeric_version"
								],
								[
									"while\t{base}",
									"while"
								],
								[
									"is.element\t{base}",
									"is.element"
								],
								[
									"as.raw\t{base}",
									"as.raw"
								],
								[
									"nzchar\t{base}",
									"nzchar"
								],
								[
									"replace\t{base}",
									"replace"
								],
								[
									"complex\t{base}",
									"complex"
								],
								[
									"dget\t{base}",
									"dget"
								],
								[
									"environmentIsLocked\t{base}",
									"environmentIsLocked"
								],
								[
									".Deprecated\t{base}",
									".Deprecated"
								],
								[
									"alist\t{base}",
									"alist"
								],
								[
									"is.list\t{base}",
									"is.list"
								],
								[
									"Ops.factor\t{base}",
									"Ops.factor"
								],
								[
									"setdiff\t{base}",
									"setdiff"
								],
								[
									"pmin.int\t{base}",
									"pmin.int"
								],
								[
									"slice.index\t{base}",
									"slice.index"
								],
								[
									"getAllConnections\t{base}",
									"getAllConnections"
								],
								[
									"duplicated.warnings\t{base}",
									"duplicated.warnings"
								],
								[
									"numeric_version\t{base}",
									"numeric_version"
								],
								[
									"ceiling\t{base}",
									"ceiling"
								],
								[
									"diag\t{base}",
									"diag"
								],
								[
									"as.complex\t{base}",
									"as.complex"
								],
								[
									"sequence\t{base}",
									"sequence"
								],
								[
									".check_tzones\t{base}",
									".check_tzones"
								],
								[
									"diff\t{base}",
									"diff"
								],
								[
									".doSortWrap\t{base}",
									".doSortWrap"
								],
								[
									"anyDuplicated\t{base}",
									"anyDuplicated"
								],
								[
									"all.equal.environment\t{base}",
									"all.equal.environment"
								],
								[
									"pipe\t{base}",
									"pipe"
								],
								[
									"ISOdatetime\t{base}",
									"ISOdatetime"
								],
								[
									"replicate\t{base}",
									"replicate"
								],
								[
									"rbind.data.frame\t{base}",
									"rbind.data.frame"
								],
								[
									"lazyLoadDBfetch\t{base}",
									"lazyLoadDBfetch"
								],
								[
									"conflicts\t{base}",
									"conflicts"
								],
								[
									".rmpkg\t{base}",
									".rmpkg"
								],
								[
									"as.Date\t{base}",
									"as.Date"
								],
								[
									"as.data.frame.numeric_version\t{base}",
									"as.data.frame.numeric_version"
								],
								[
									"mean.default\t{base}",
									"mean.default"
								],
								[
									"cumprod\t{base}",
									"cumprod"
								],
								[
									"as.double\t{base}",
									"as.double"
								],
								[
									"as.data.frame.logical\t{base}",
									"as.data.frame.logical"
								],
								[
									"as.data.frame.POSIXct\t{base}",
									"as.data.frame.POSIXct"
								],
								[
									"findRestart\t{base}",
									"findRestart"
								],
								[
									"as.data.frame.POSIXlt\t{base}",
									"as.data.frame.POSIXlt"
								],
								[
									"as.data.frame.ts\t{base}",
									"as.data.frame.ts"
								],
								[
									"findPackageEnv\t{base}",
									"findPackageEnv"
								],
								[
									"plot\t{base}",
									"plot"
								],
								[
									"pmax\t{base}",
									"pmax"
								],
								[
									"getNamespaceImports\t{base}",
									"getNamespaceImports"
								],
								[
									"as.numeric_version\t{base}",
									"as.numeric_version"
								],
								[
									"pmin\t{base}",
									"pmin"
								],
								[
									"as.character.srcref\t{base}",
									"as.character.srcref"
								],
								[
									"trunc.Date\t{base}",
									"trunc.Date"
								],
								[
									"print.hexmode\t{base}",
									"print.hexmode"
								],
								[
									"provideDimnames\t{base}",
									"provideDimnames"
								],
								[
									"match.arg\t{base}",
									"match.arg"
								],
								[
									"enquote\t{base}",
									"enquote"
								],
								[
									"file.path\t{base}",
									"file.path"
								],
								[
									"as.character.condition\t{base}",
									"as.character.condition"
								],
								[
									".Platform\t{base}",
									".Platform"
								],
								[
									"memDecompress\t{base}",
									"memDecompress"
								],
								[
									"activeBindingFunction\t{base}",
									"activeBindingFunction"
								],
								[
									"format.data.frame\t{base}",
									"format.data.frame"
								],
								[
									"unCfillPOSIXlt\t{base}",
									"unCfillPOSIXlt"
								],
								[
									"lazyLoad\t{base}",
									"lazyLoad"
								],
								[
									"srcref\t{base}",
									"srcref"
								],
								[
									"as.POSIXlt.factor\t{base}",
									"as.POSIXlt.factor"
								],
								[
									"t.default\t{base}",
									"t.default"
								],
								[
									"warning\t{base}",
									"warning"
								],
								[
									".__S3MethodsTable__.\t{base}",
									".__S3MethodsTable__."
								],
								[
									"substring\t{base}",
									"substring"
								],
								[
									"commandArgs\t{base}",
									"commandArgs"
								],
								[
									"file.symlink\t{base}",
									"file.symlink"
								],
								[
									"getCallingDLLe\t{base}",
									"getCallingDLLe"
								],
								[
									"Summary.difftime\t{base}",
									"Summary.difftime"
								],
								[
									"NROW\t{base}",
									"NROW"
								],
								[
									"match.fun\t{base}",
									"match.fun"
								],
								[
									"dput\t{base}",
									"dput"
								],
								[
									"tempfile\t{base}",
									"tempfile"
								],
								[
									"...elt\t{base}",
									"...elt"
								],
								[
									"print.by\t{base}",
									"print.by"
								],
								[
									"summary.matrix\t{base}",
									"summary.matrix"
								],
								[
									"...names\t{base}",
									"...names"
								],
								[
									"Summary.ordered\t{base}",
									"Summary.ordered"
								],
								[
									".Script\t{base}",
									".Script"
								],
								[
									"La.svd\t{base}",
									"La.svd"
								],
								[
									"rawConnection\t{base}",
									"rawConnection"
								],
								[
									"format.AsIs\t{base}",
									"format.AsIs"
								],
								[
									"is.integer\t{base}",
									"is.integer"
								],
								[
									"prod\t{base}",
									"prod"
								],
								[
									"as.integer\t{base}",
									"as.integer"
								],
								[
									"drop\t{base}",
									"drop"
								],
								[
									"Sys.umask\t{base}",
									"Sys.umask"
								],
								[
									".doTrace\t{base}",
									".doTrace"
								],
								[
									"browserText\t{base}",
									"browserText"
								],
								[
									"is.package_version\t{base}",
									"is.package_version"
								],
								[
									"bindingIsActive\t{base}",
									"bindingIsActive"
								],
								[
									"file.copy\t{base}",
									"file.copy"
								],
								[
									"eigen\t{base}",
									"eigen"
								],
								[
									"is.function\t{base}",
									"is.function"
								],
								[
									"month.name\t{base}",
									"month.name"
								],
								[
									"digamma\t{base}",
									"digamma"
								],
								[
									"l10n_info\t{base}",
									"l10n_info"
								],
								[
									"detach\t{base}",
									"detach"
								],
								[
									"as.data.frame.noquote\t{base}",
									"as.data.frame.noquote"
								],
								[
									"integer\t{base}",
									"integer"
								],
								[
									"getCallingDLL\t{base}",
									"getCallingDLL"
								],
								[
									"tracingState\t{base}",
									"tracingState"
								],
								[
									"as.function\t{base}",
									"as.function"
								],
								[
									"attach\t{base}",
									"attach"
								],
								[
									"dump\t{base}",
									"dump"
								],
								[
									"as.POSIXct.numeric\t{base}",
									"as.POSIXct.numeric"
								],
								[
									"is.recursive\t{base}",
									"is.recursive"
								],
								[
									"unlink\t{base}",
									"unlink"
								],
								[
									"seq_along\t{base}",
									"seq_along"
								],
								[
									"pcre_config\t{base}",
									"pcre_config"
								],
								[
									"unlist\t{base}",
									"unlist"
								],
								[
									"all.equal\t{base}",
									"all.equal"
								],
								[
									"regmatches\t{base}",
									"regmatches"
								],
								[
									"is.numeric_version\t{base}",
									"is.numeric_version"
								],
								[
									".Device\t{base}",
									".Device"
								],
								[
									".tryResumeInterrupt\t{base}",
									".tryResumeInterrupt"
								],
								[
									"getNamespaceName\t{base}",
									"getNamespaceName"
								],
								[
									"parent.frame\t{base}",
									"parent.frame"
								],
								[
									"factor\t{base}",
									"factor"
								],
								[
									"mtfrm.default\t{base}",
									"mtfrm.default"
								],
								[
									"message\t{base}",
									"message"
								],
								[
									"lockBinding\t{base}",
									"lockBinding"
								],
								[
									"numToInts\t{base}",
									"numToInts"
								],
								[
									".valid.factor\t{base}",
									".valid.factor"
								],
								[
									"Position\t{base}",
									"Position"
								],
								[
									"rep.numeric_version\t{base}",
									"rep.numeric_version"
								],
								[
									".Defunct\t{base}",
									".Defunct"
								],
								[
									"asOneSidedFormula\t{stats}",
									"asOneSidedFormula"
								],
								[
									"r2dtable\t{stats}",
									"r2dtable"
								],
								[
									"drop.terms\t{stats}",
									"drop.terms"
								],
								[
									"confint.lm\t{stats}",
									"confint.lm"
								],
								[
									"is.mts\t{stats}",
									"is.mts"
								],
								[
									"nlminb\t{stats}",
									"nlminb"
								],
								[
									"alias\t{stats}",
									"alias"
								],
								[
									"gaussian\t{stats}",
									"gaussian"
								],
								[
									"profile\t{stats}",
									"profile"
								],
								[
									"ls.diag\t{stats}",
									"ls.diag"
								],
								[
									"mahalanobis\t{stats}",
									"mahalanobis"
								],
								[
									"rmultinom\t{stats}",
									"rmultinom"
								],
								[
									"dpois\t{stats}",
									"dpois"
								],
								[
									"numericDeriv\t{stats}",
									"numericDeriv"
								],
								[
									"makepredictcall\t{stats}",
									"makepredictcall"
								],
								[
									"qlogis\t{stats}",
									"qlogis"
								],
								[
									"loadings\t{stats}",
									"loadings"
								],
								[
									"dlogis\t{stats}",
									"dlogis"
								],
								[
									"nlm\t{stats}",
									"nlm"
								],
								[
									"residuals.glm\t{stats}",
									"residuals.glm"
								],
								[
									"qcauchy\t{stats}",
									"qcauchy"
								],
								[
									"nextn\t{stats}",
									"nextn"
								],
								[
									"nls\t{stats}",
									"nls"
								],
								[
									"plot.stepfun\t{stats}",
									"plot.stepfun"
								],
								[
									"arima0.diag\t{stats}",
									"arima0.diag"
								],
								[
									"dummy.coef\t{stats}",
									"dummy.coef"
								],
								[
									"ftable\t{stats}",
									"ftable"
								],
								[
									"as.formula\t{stats}",
									"as.formula"
								],
								[
									"pairwise.wilcox.test\t{stats}",
									"pairwise.wilcox.test"
								],
								[
									"time\t{stats}",
									"time"
								],
								[
									"embed\t{stats}",
									"embed"
								],
								[
									"mantelhaen.test\t{stats}",
									"mantelhaen.test"
								],
								[
									"dwilcox\t{stats}",
									"dwilcox"
								],
								[
									"ar\t{stats}",
									"ar"
								],
								[
									"oneway.test\t{stats}",
									"oneway.test"
								],
								[
									"fligner.test\t{stats}",
									"fligner.test"
								],
								[
									"bw.bcv\t{stats}",
									"bw.bcv"
								],
								[
									"predict.glm\t{stats}",
									"predict.glm"
								],
								[
									"rWishart\t{stats}",
									"rWishart"
								],
								[
									"logLik\t{stats}",
									"logLik"
								],
								[
									"confint.default\t{stats}",
									"confint.default"
								],
								[
									"AIC\t{stats}",
									"AIC"
								],
								[
									"rlogis\t{stats}",
									"rlogis"
								],
								[
									"bw.ucv\t{stats}",
									"bw.ucv"
								],
								[
									"arima\t{stats}",
									"arima"
								],
								[
									"plot.ts\t{stats}",
									"plot.ts"
								],
								[
									"tsp\t{stats}",
									"tsp"
								],
								[
									"model.extract\t{stats}",
									"model.extract"
								],
								[
									"stat.anova\t{stats}",
									"stat.anova"
								],
								[
									"update.formula\t{stats}",
									"update.formula"
								],
								[
									"qbeta\t{stats}",
									"qbeta"
								],
								[
									"bw.SJ\t{stats}",
									"bw.SJ"
								],
								[
									"factanal\t{stats}",
									"factanal"
								],
								[
									"drop.scope\t{stats}",
									"drop.scope"
								],
								[
									"summary.aov\t{stats}",
									"summary.aov"
								],
								[
									"optimHess\t{stats}",
									"optimHess"
								],
								[
									".lm.fit\t{stats}",
									".lm.fit"
								],
								[
									"cooks.distance\t{stats}",
									"cooks.distance"
								],
								[
									"dnorm\t{stats}",
									"dnorm"
								],
								[
									"psmirnov\t{stats}",
									"psmirnov"
								],
								[
									"extractAIC\t{stats}",
									"extractAIC"
								],
								[
									"qbirthday\t{stats}",
									"qbirthday"
								],
								[
									"C\t{stats}",
									"C"
								],
								[
									"sortedXyData\t{stats}",
									"sortedXyData"
								],
								[
									"D\t{stats}",
									"D"
								],
								[
									"lowess\t{stats}",
									"lowess"
								],
								[
									"varimax\t{stats}",
									"varimax"
								],
								[
									"optimize\t{stats}",
									"optimize"
								],
								[
									"manova\t{stats}",
									"manova"
								],
								[
									"deviance\t{stats}",
									"deviance"
								],
								[
									"optim\t{stats}",
									"optim"
								],
								[
									"lag.plot\t{stats}",
									"lag.plot"
								],
								[
									"constrOptim\t{stats}",
									"constrOptim"
								],
								[
									"splinefunH\t{stats}",
									"splinefunH"
								],
								[
									"reformulate\t{stats}",
									"reformulate"
								],
								[
									"pacf\t{stats}",
									"pacf"
								],
								[
									"mcnemar.test\t{stats}",
									"mcnemar.test"
								],
								[
									"df\t{stats}",
									"df"
								],
								[
									"tsSmooth\t{stats}",
									"tsSmooth"
								],
								[
									"make.link\t{stats}",
									"make.link"
								],
								[
									"glm.control\t{stats}",
									"glm.control"
								],
								[
									"hasTsp\t{stats}",
									"hasTsp"
								],
								[
									"pgamma\t{stats}",
									"pgamma"
								],
								[
									"addmargins\t{stats}",
									"addmargins"
								],
								[
									"dexp\t{stats}",
									"dexp"
								],
								[
									"power.anova.test\t{stats}",
									"power.anova.test"
								],
								[
									"prop.test\t{stats}",
									"prop.test"
								],
								[
									"model.weights\t{stats}",
									"model.weights"
								],
								[
									"ave\t{stats}",
									"ave"
								],
								[
									"is.stepfun\t{stats}",
									"is.stepfun"
								],
								[
									"heatmap\t{stats}",
									"heatmap"
								],
								[
									"stepfun\t{stats}",
									"stepfun"
								],
								[
									"loess.smooth\t{stats}",
									"loess.smooth"
								],
								[
									"line\t{stats}",
									"line"
								],
								[
									"qqline\t{stats}",
									"qqline"
								],
								[
									"ar.mle\t{stats}",
									"ar.mle"
								],
								[
									"residuals\t{stats}",
									"residuals"
								],
								[
									"lsfit\t{stats}",
									"lsfit"
								],
								[
									"get_all_vars\t{stats}",
									"get_all_vars"
								],
								[
									"dt\t{stats}",
									"dt"
								],
								[
									"splinefun\t{stats}",
									"splinefun"
								],
								[
									"ks.test\t{stats}",
									"ks.test"
								],
								[
									"cor\t{stats}",
									"cor"
								],
								[
									"add.scope\t{stats}",
									"add.scope"
								],
								[
									"ecdf\t{stats}",
									"ecdf"
								],
								[
									"pwilcox\t{stats}",
									"pwilcox"
								],
								[
									"cov\t{stats}",
									"cov"
								],
								[
									"dendrapply\t{stats}",
									"dendrapply"
								],
								[
									"rsignrank\t{stats}",
									"rsignrank"
								],
								[
									"bandwidth.kernel\t{stats}",
									"bandwidth.kernel"
								],
								[
									"as.dist\t{stats}",
									"as.dist"
								],
								[
									"SSweibull\t{stats}",
									"SSweibull"
								],
								[
									"bw.nrd\t{stats}",
									"bw.nrd"
								],
								[
									"start\t{stats}",
									"start"
								],
								[
									"plnorm\t{stats}",
									"plnorm"
								],
								[
									"ts.union\t{stats}",
									"ts.union"
								],
								[
									"mvfft\t{stats}",
									"mvfft"
								],
								[
									"dweibull\t{stats}",
									"dweibull"
								],
								[
									"as.ts\t{stats}",
									"as.ts"
								],
								[
									"cor.test\t{stats}",
									"cor.test"
								],
								[
									".checkMFClasses\t{stats}",
									".checkMFClasses"
								],
								[
									"effects\t{stats}",
									"effects"
								],
								[
									"reorder\t{stats}",
									"reorder"
								],
								[
									"KalmanForecast\t{stats}",
									"KalmanForecast"
								],
								[
									"eff.aovlist\t{stats}",
									"eff.aovlist"
								],
								[
									"qgamma\t{stats}",
									"qgamma"
								],
								[
									"glm.fit\t{stats}",
									"glm.fit"
								],
								[
									"plot.spec.coherency\t{stats}",
									"plot.spec.coherency"
								],
								[
									"dgamma\t{stats}",
									"dgamma"
								],
								[
									"cov2cor\t{stats}",
									"cov2cor"
								],
								[
									"ls.print\t{stats}",
									"ls.print"
								],
								[
									"setNames\t{stats}",
									"setNames"
								],
								[
									"acf2AR\t{stats}",
									"acf2AR"
								],
								[
									"add1\t{stats}",
									"add1"
								],
								[
									"rcauchy\t{stats}",
									"rcauchy"
								],
								[
									"shapiro.test\t{stats}",
									"shapiro.test"
								],
								[
									"deriv3\t{stats}",
									"deriv3"
								],
								[
									"window\t{stats}",
									"window"
								],
								[
									"model.tables\t{stats}",
									"model.tables"
								],
								[
									"model.matrix\t{stats}",
									"model.matrix"
								],
								[
									".nknots.smspl\t{stats}",
									".nknots.smspl"
								],
								[
									"KalmanLike\t{stats}",
									"KalmanLike"
								],
								[
									"SSasymp\t{stats}",
									"SSasymp"
								],
								[
									"predict\t{stats}",
									"predict"
								],
								[
									"as.stepfun\t{stats}",
									"as.stepfun"
								],
								[
									"t.test\t{stats}",
									"t.test"
								],
								[
									"power.prop.test\t{stats}",
									"power.prop.test"
								],
								[
									"rstandard\t{stats}",
									"rstandard"
								],
								[
									"binom.test\t{stats}",
									"binom.test"
								],
								[
									"cophenetic\t{stats}",
									"cophenetic"
								],
								[
									"pbeta\t{stats}",
									"pbeta"
								],
								[
									"KalmanRun\t{stats}",
									"KalmanRun"
								],
								[
									"naprint\t{stats}",
									"naprint"
								],
								[
									"qlnorm\t{stats}",
									"qlnorm"
								],
								[
									"plclust\t{stats}",
									"plclust"
								],
								[
									"model.response\t{stats}",
									"model.response"
								],
								[
									"dlnorm\t{stats}",
									"dlnorm"
								],
								[
									"lag\t{stats}",
									"lag"
								],
								[
									"spec.pgram\t{stats}",
									"spec.pgram"
								],
								[
									"interaction.plot\t{stats}",
									"interaction.plot"
								],
								[
									"fitted\t{stats}",
									"fitted"
								],
								[
									"rgeom\t{stats}",
									"rgeom"
								],
								[
									"estVar\t{stats}",
									"estVar"
								],
								[
									"rgamma\t{stats}",
									"rgamma"
								],
								[
									"arima0\t{stats}",
									"arima0"
								],
								[
									"loglin\t{stats}",
									"loglin"
								],
								[
									"ar.yw\t{stats}",
									"ar.yw"
								],
								[
									"promax\t{stats}",
									"promax"
								],
								[
									"phyper\t{stats}",
									"phyper"
								],
								[
									"drop1\t{stats}",
									"drop1"
								],
								[
									"SSfol\t{stats}",
									"SSfol"
								],
								[
									"runif\t{stats}",
									"runif"
								],
								[
									"family\t{stats}",
									"family"
								],
								[
									"quantile\t{stats}",
									"quantile"
								],
								[
									"wilcox.test\t{stats}",
									"wilcox.test"
								],
								[
									"psignrank\t{stats}",
									"psignrank"
								],
								[
									"complete.cases\t{stats}",
									"complete.cases"
								],
								[
									"offset\t{stats}",
									"offset"
								],
								[
									"scatter.smooth\t{stats}",
									"scatter.smooth"
								],
								[
									"dmultinom\t{stats}",
									"dmultinom"
								],
								[
									"rlnorm\t{stats}",
									"rlnorm"
								],
								[
									"approx\t{stats}",
									"approx"
								],
								[
									"naresid\t{stats}",
									"naresid"
								],
								[
									"SSfpl\t{stats}",
									"SSfpl"
								],
								[
									"proj\t{stats}",
									"proj"
								],
								[
									"supsmu\t{stats}",
									"supsmu"
								],
								[
									"qqnorm\t{stats}",
									"qqnorm"
								],
								[
									"end\t{stats}",
									"end"
								],
								[
									"printCoefmat\t{stats}",
									"printCoefmat"
								],
								[
									"princomp\t{stats}",
									"princomp"
								],
								[
									"aggregate.data.frame\t{stats}",
									"aggregate.data.frame"
								],
								[
									"dnbinom\t{stats}",
									"dnbinom"
								],
								[
									"lm.influence\t{stats}",
									"lm.influence"
								],
								[
									"rect.hclust\t{stats}",
									"rect.hclust"
								],
								[
									"convolve\t{stats}",
									"convolve"
								],
								[
									"ansari.test\t{stats}",
									"ansari.test"
								],
								[
									"median.default\t{stats}",
									"median.default"
								],
								[
									"ARMAacf\t{stats}",
									"ARMAacf"
								],
								[
									"poly\t{stats}",
									"poly"
								],
								[
									"NLSstRtAsymptote\t{stats}",
									"NLSstRtAsymptote"
								],
								[
									"power.t.test\t{stats}",
									"power.t.test"
								],
								[
									"write.ftable\t{stats}",
									"write.ftable"
								],
								[
									"qhyper\t{stats}",
									"qhyper"
								],
								[
									"polym\t{stats}",
									"polym"
								],
								[
									"weights\t{stats}",
									"weights"
								],
								[
									"dhyper\t{stats}",
									"dhyper"
								],
								[
									"kernel\t{stats}",
									"kernel"
								],
								[
									"friedman.test\t{stats}",
									"friedman.test"
								],
								[
									"acf\t{stats}",
									"acf"
								],
								[
									"qwilcox\t{stats}",
									"qwilcox"
								],
								[
									"filter\t{stats}",
									"filter"
								],
								[
									"lm.fit\t{stats}",
									"lm.fit"
								],
								[
									"rpois\t{stats}",
									"rpois"
								],
								[
									"cmdscale\t{stats}",
									"cmdscale"
								],
								[
									"factor.scope\t{stats}",
									"factor.scope"
								],
								[
									"Gamma\t{stats}",
									"Gamma"
								],
								[
									"pweibull\t{stats}",
									"pweibull"
								],
								[
									"pchisq\t{stats}",
									"pchisq"
								],
								[
									"ksmooth\t{stats}",
									"ksmooth"
								],
								[
									"symnum\t{stats}",
									"symnum"
								],
								[
									"smooth\t{stats}",
									"smooth"
								],
								[
									"quasipoisson\t{stats}",
									"quasipoisson"
								],
								[
									"ppr\t{stats}",
									"ppr"
								],
								[
									"spec.ar\t{stats}",
									"spec.ar"
								],
								[
									"pnbinom\t{stats}",
									"pnbinom"
								],
								[
									"coefficients\t{stats}",
									"coefficients"
								],
								[
									"model.offset\t{stats}",
									"model.offset"
								],
								[
									"dbeta\t{stats}",
									"dbeta"
								],
								[
									"SSasympOff\t{stats}",
									"SSasympOff"
								],
								[
									"pbirthday\t{stats}",
									"pbirthday"
								],
								[
									"replications\t{stats}",
									"replications"
								],
								[
									"ar.ols\t{stats}",
									"ar.ols"
								],
								[
									"rhyper\t{stats}",
									"rhyper"
								],
								[
									"spectrum\t{stats}",
									"spectrum"
								],
								[
									"lm\t{stats}",
									"lm"
								],
								[
									"expand.model.frame\t{stats}",
									"expand.model.frame"
								],
								[
									"kernapply\t{stats}",
									"kernapply"
								],
								[
									"bw.nrd0\t{stats}",
									"bw.nrd0"
								],
								[
									"stl\t{stats}",
									"stl"
								],
								[
									"loess\t{stats}",
									"loess"
								],
								[
									"IQR\t{stats}",
									"IQR"
								],
								[
									"qgeom\t{stats}",
									"qgeom"
								],
								[
									"contr.helmert\t{stats}",
									"contr.helmert"
								],
								[
									"na.pass\t{stats}",
									"na.pass"
								],
								[
									"toeplitz\t{stats}",
									"toeplitz"
								],
								[
									"pairwise.t.test\t{stats}",
									"pairwise.t.test"
								],
								[
									"dist\t{stats}",
									"dist"
								],
								[
									".getXlevels\t{stats}",
									".getXlevels"
								],
								[
									"NLSstClosestX\t{stats}",
									"NLSstClosestX"
								],
								[
									"getInitial\t{stats}",
									"getInitial"
								],
								[
									"sigma\t{stats}",
									"sigma"
								],
								[
									"qchisq\t{stats}",
									"qchisq"
								],
								[
									"contr.poly\t{stats}",
									"contr.poly"
								],
								[
									"dchisq\t{stats}",
									"dchisq"
								],
								[
									"spline\t{stats}",
									"spline"
								],
								[
									"qunif\t{stats}",
									"qunif"
								],
								[
									"confint\t{stats}",
									"confint"
								],
								[
									"pairwise.table\t{stats}",
									"pairwise.table"
								],
								[
									"SSasympOrig\t{stats}",
									"SSasympOrig"
								],
								[
									"pexp\t{stats}",
									"pexp"
								],
								[
									"plot.spec.phase\t{stats}",
									"plot.spec.phase"
								],
								[
									"density.default\t{stats}",
									"density.default"
								],
								[
									"medpolish\t{stats}",
									"medpolish"
								],
								[
									"ptukey\t{stats}",
									"ptukey"
								],
								[
									"cancor\t{stats}",
									"cancor"
								],
								[
									"Box.test\t{stats}",
									"Box.test"
								],
								[
									"TukeyHSD\t{stats}",
									"TukeyHSD"
								],
								[
									"rnorm\t{stats}",
									"rnorm"
								],
								[
									"var.test\t{stats}",
									"var.test"
								],
								[
									"poisson\t{stats}",
									"poisson"
								],
								[
									"bartlett.test\t{stats}",
									"bartlett.test"
								],
								[
									"summary.stepfun\t{stats}",
									"summary.stepfun"
								],
								[
									"na.fail\t{stats}",
									"na.fail"
								],
								[
									"model.frame\t{stats}",
									"model.frame"
								],
								[
									"covratio\t{stats}",
									"covratio"
								],
								[
									"contrasts\t{stats}",
									"contrasts"
								],
								[
									"ar.burg\t{stats}",
									"ar.burg"
								],
								[
									"residuals.lm\t{stats}",
									"residuals.lm"
								],
								[
									"df.residual\t{stats}",
									"df.residual"
								],
								[
									"ts.intersect\t{stats}",
									"ts.intersect"
								],
								[
									"power\t{stats}",
									"power"
								],
								[
									"SSlogis\t{stats}",
									"SSlogis"
								],
								[
									"glm\t{stats}",
									"glm"
								],
								[
									"rchisq\t{stats}",
									"rchisq"
								],
								[
									"getCall\t{stats}",
									"getCall"
								],
								[
									"model.matrix.lm\t{stats}",
									"model.matrix.lm"
								],
								[
									"chisq.test\t{stats}",
									"chisq.test"
								],
								[
									"coef\t{stats}",
									"coef"
								],
								[
									"step\t{stats}",
									"step"
								],
								[
									"ppoints\t{stats}",
									"ppoints"
								],
								[
									"vcov\t{stats}",
									"vcov"
								],
								[
									".preformat.ts\t{stats}",
									".preformat.ts"
								],
								[
									"qqplot\t{stats}",
									"qqplot"
								],
								[
									"DF2formula\t{stats}",
									"DF2formula"
								],
								[
									"update.default\t{stats}",
									"update.default"
								],
								[
									"qtukey\t{stats}",
									"qtukey"
								],
								[
									"quade.test\t{stats}",
									"quade.test"
								],
								[
									"qpois\t{stats}",
									"qpois"
								],
								[
									"df.kernel\t{stats}",
									"df.kernel"
								],
								[
									"influence\t{stats}",
									"influence"
								],
								[
									"qsmirnov\t{stats}",
									"qsmirnov"
								],
								[
									"cutree\t{stats}",
									"cutree"
								],
								[
									"poisson.test\t{stats}",
									"poisson.test"
								],
								[
									"pf\t{stats}",
									"pf"
								],
								[
									"case.names\t{stats}",
									"case.names"
								],
								[
									"frequency\t{stats}",
									"frequency"
								],
								[
									"tsdiag\t{stats}",
									"tsdiag"
								],
								[
									"qweibull\t{stats}",
									"qweibull"
								],
								[
									"NLSstLfAsymptote\t{stats}",
									"NLSstLfAsymptote"
								],
								[
									"kmeans\t{stats}",
									"kmeans"
								],
								[
									"weighted.residuals\t{stats}",
									"weighted.residuals"
								],
								[
									"mauchly.test\t{stats}",
									"mauchly.test"
								],
								[
									"napredict\t{stats}",
									"napredict"
								],
								[
									"qexp\t{stats}",
									"qexp"
								],
								[
									"deriv\t{stats}",
									"deriv"
								],
								[
									"var\t{stats}",
									"var"
								],
								[
									"aggregate.ts\t{stats}",
									"aggregate.ts"
								],
								[
									"rwilcox\t{stats}",
									"rwilcox"
								],
								[
									"SSbiexp\t{stats}",
									"SSbiexp"
								],
								[
									"pt\t{stats}",
									"pt"
								],
								[
									"rsmirnov\t{stats}",
									"rsmirnov"
								],
								[
									"qf\t{stats}",
									"qf"
								],
								[
									"xtabs\t{stats}",
									"xtabs"
								],
								[
									"kruskal.test\t{stats}",
									"kruskal.test"
								],
								[
									"median\t{stats}",
									"median"
								],
								[
									"as.hclust\t{stats}",
									"as.hclust"
								],
								[
									"termplot\t{stats}",
									"termplot"
								],
								[
									"rweibull\t{stats}",
									"rweibull"
								],
								[
									"resid\t{stats}",
									"resid"
								],
								[
									"pgeom\t{stats}",
									"pgeom"
								],
								[
									"qnbinom\t{stats}",
									"qnbinom"
								],
								[
									"se.contrast\t{stats}",
									"se.contrast"
								],
								[
									"summary.manova\t{stats}",
									"summary.manova"
								],
								[
									"prcomp\t{stats}",
									"prcomp"
								],
								[
									"preplot\t{stats}",
									"preplot"
								],
								[
									"plot.ecdf\t{stats}",
									"plot.ecdf"
								],
								[
									"arima.sim\t{stats}",
									"arima.sim"
								],
								[
									"lm.wfit\t{stats}",
									"lm.wfit"
								],
								[
									"ccf\t{stats}",
									"ccf"
								],
								[
									"is.leaf\t{stats}",
									"is.leaf"
								],
								[
									"na.action\t{stats}",
									"na.action"
								],
								[
									"screeplot\t{stats}",
									"screeplot"
								],
								[
									"approxfun\t{stats}",
									"approxfun"
								],
								[
									"NLSstAsymptotic\t{stats}",
									"NLSstAsymptotic"
								],
								[
									"order.dendrogram\t{stats}",
									"order.dendrogram"
								],
								[
									"cycle\t{stats}",
									"cycle"
								],
								[
									"qt\t{stats}",
									"qt"
								],
								[
									"rf\t{stats}",
									"rf"
								],
								[
									"punif\t{stats}",
									"punif"
								],
								[
									"quasi\t{stats}",
									"quasi"
								],
								[
									"ts.plot\t{stats}",
									"ts.plot"
								],
								[
									"cov.wt\t{stats}",
									"cov.wt"
								],
								[
									"mood.test\t{stats}",
									"mood.test"
								],
								[
									"PP.test\t{stats}",
									"PP.test"
								],
								[
									"is.empty.model\t{stats}",
									"is.empty.model"
								],
								[
									"loess.control\t{stats}",
									"loess.control"
								],
								[
									"decompose\t{stats}",
									"decompose"
								],
								[
									"aggregate\t{stats}",
									"aggregate"
								],
								[
									"BIC\t{stats}",
									"BIC"
								],
								[
									"reshape\t{stats}",
									"reshape"
								],
								[
									"makeARIMA\t{stats}",
									"makeARIMA"
								],
								[
									"ARMAtoMA\t{stats}",
									"ARMAtoMA"
								],
								[
									"weighted.mean\t{stats}",
									"weighted.mean"
								],
								[
									"pbinom\t{stats}",
									"pbinom"
								],
								[
									"selfStart\t{stats}",
									"selfStart"
								],
								[
									"SSgompertz\t{stats}",
									"SSgompertz"
								],
								[
									"qnorm\t{stats}",
									"qnorm"
								],
								[
									"inverse.gaussian\t{stats}",
									"inverse.gaussian"
								],
								[
									"na.omit\t{stats}",
									"na.omit"
								],
								[
									"sd\t{stats}",
									"sd"
								],
								[
									"rt\t{stats}",
									"rt"
								],
								[
									"fft\t{stats}",
									"fft"
								],
								[
									"dcauchy\t{stats}",
									"dcauchy"
								],
								[
									"fivenum\t{stats}",
									"fivenum"
								],
								[
									"toeplitz2\t{stats}",
									"toeplitz2"
								],
								[
									"relevel\t{stats}",
									"relevel"
								],
								[
									"summary.glm\t{stats}",
									"summary.glm"
								],
								[
									"rexp\t{stats}",
									"rexp"
								],
								[
									"monthplot\t{stats}",
									"monthplot"
								],
								[
									"dfbeta\t{stats}",
									"dfbeta"
								],
								[
									"diffinv\t{stats}",
									"diffinv"
								],
								[
									"nobs\t{stats}",
									"nobs"
								],
								[
									"SSmicmen\t{stats}",
									"SSmicmen"
								],
								[
									"is.ts\t{stats}",
									"is.ts"
								],
								[
									"dummy.coef.lm\t{stats}",
									"dummy.coef.lm"
								],
								[
									"hatvalues\t{stats}",
									"hatvalues"
								],
								[
									"variable.names\t{stats}",
									"variable.names"
								],
								[
									"Pair\t{stats}",
									"Pair"
								],
								[
									"model.frame.default\t{stats}",
									"model.frame.default"
								],
								[
									"anova\t{stats}",
									"anova"
								],
								[
									"simulate\t{stats}",
									"simulate"
								],
								[
									"dffits\t{stats}",
									"dffits"
								],
								[
									"model.matrix.default\t{stats}",
									"model.matrix.default"
								],
								[
									"contr.SAS\t{stats}",
									"contr.SAS"
								],
								[
									"contr.treatment\t{stats}",
									"contr.treatment"
								],
								[
									"predict.lm\t{stats}",
									"predict.lm"
								],
								[
									"prop.trend.test\t{stats}",
									"prop.trend.test"
								],
								[
									"as.dendrogram\t{stats}",
									"as.dendrogram"
								],
								[
									"ppois\t{stats}",
									"ppois"
								],
								[
									"pcauchy\t{stats}",
									"pcauchy"
								],
								[
									"smoothEnds\t{stats}",
									"smoothEnds"
								],
								[
									"qbinom\t{stats}",
									"qbinom"
								],
								[
									"hat\t{stats}",
									"hat"
								],
								[
									"p.adjust\t{stats}",
									"p.adjust"
								],
								[
									".MFclass\t{stats}",
									".MFclass"
								],
								[
									"dbinom\t{stats}",
									"dbinom"
								],
								[
									"terms.formula\t{stats}",
									"terms.formula"
								],
								[
									"spec.taper\t{stats}",
									"spec.taper"
								],
								[
									"HoltWinters\t{stats}",
									"HoltWinters"
								],
								[
									"ts\t{stats}",
									"ts"
								],
								[
									"na.exclude\t{stats}",
									"na.exclude"
								],
								[
									"dsignrank\t{stats}",
									"dsignrank"
								],
								[
									"is.tskernel\t{stats}",
									"is.tskernel"
								],
								[
									"fitted.values\t{stats}",
									"fitted.values"
								],
								[
									"qsignrank\t{stats}",
									"qsignrank"
								],
								[
									"integrate\t{stats}",
									"integrate"
								],
								[
									"optimise\t{stats}",
									"optimise"
								],
								[
									"binomial\t{stats}",
									"binomial"
								],
								[
									"KalmanSmooth\t{stats}",
									"KalmanSmooth"
								],
								[
									".vcov.aliased\t{stats}",
									".vcov.aliased"
								],
								[
									"deltat\t{stats}",
									"deltat"
								],
								[
									"p.adjust.methods\t{stats}",
									"p.adjust.methods"
								],
								[
									"SSD\t{stats}",
									"SSD"
								],
								[
									"summary.lm\t{stats}",
									"summary.lm"
								],
								[
									"smooth.spline\t{stats}",
									"smooth.spline"
								],
								[
									"rstudent\t{stats}",
									"rstudent"
								],
								[
									"hclust\t{stats}",
									"hclust"
								],
								[
									"density\t{stats}",
									"density"
								],
								[
									"dgeom\t{stats}",
									"dgeom"
								],
								[
									"terms\t{stats}",
									"terms"
								],
								[
									"fisher.test\t{stats}",
									"fisher.test"
								],
								[
									"rbinom\t{stats}",
									"rbinom"
								],
								[
									"formula\t{stats}",
									"formula"
								],
								[
									"nls.control\t{stats}",
									"nls.control"
								],
								[
									"isoreg\t{stats}",
									"isoreg"
								],
								[
									"contr.sum\t{stats}",
									"contr.sum"
								],
								[
									"uniroot\t{stats}",
									"uniroot"
								],
								[
									"quasibinomial\t{stats}",
									"quasibinomial"
								],
								[
									"dunif\t{stats}",
									"dunif"
								],
								[
									"influence.measures\t{stats}",
									"influence.measures"
								],
								[
									"na.contiguous\t{stats}",
									"na.contiguous"
								],
								[
									"dfbetas\t{stats}",
									"dfbetas"
								],
								[
									"pairwise.prop.test\t{stats}",
									"pairwise.prop.test"
								],
								[
									"rnbinom\t{stats}",
									"rnbinom"
								],
								[
									"pnorm\t{stats}",
									"pnorm"
								],
								[
									"rbeta\t{stats}",
									"rbeta"
								],
								[
									"cpgram\t{stats}",
									"cpgram"
								],
								[
									"knots\t{stats}",
									"knots"
								],
								[
									"biplot\t{stats}",
									"biplot"
								],
								[
									"runmed\t{stats}",
									"runmed"
								],
								[
									"mad\t{stats}",
									"mad"
								],
								[
									"delete.response\t{stats}",
									"delete.response"
								],
								[
									"plogis\t{stats}",
									"plogis"
								],
								[
									"read.ftable\t{stats}",
									"read.ftable"
								],
								[
									"aov\t{stats}",
									"aov"
								],
								[
									"update\t{stats}",
									"update"
								],
								[
									"StructTS\t{stats}",
									"StructTS"
								],
								[
									"write.socket\t{utils}",
									"write.socket"
								],
								[
									"fixInNamespace\t{utils}",
									"fixInNamespace"
								],
								[
									"changedFiles\t{utils}",
									"changedFiles"
								],
								[
									"history\t{utils}",
									"history"
								],
								[
									"SweaveHooks\t{utils}",
									"SweaveHooks"
								],
								[
									"packageDate\t{utils}",
									"packageDate"
								],
								[
									"installed.packages\t{utils}",
									"installed.packages"
								],
								[
									"citEntry\t{utils}",
									"citEntry"
								],
								[
									"as.roman\t{utils}",
									"as.roman"
								],
								[
									".romans\t{utils}",
									".romans"
								],
								[
									"suppressForeignCheck\t{utils}",
									"suppressForeignCheck"
								],
								[
									"aregexec\t{utils}",
									"aregexec"
								],
								[
									"txtProgressBar\t{utils}",
									"txtProgressBar"
								],
								[
									"strcapture\t{utils}",
									"strcapture"
								],
								[
									"xemacs\t{utils}",
									"xemacs"
								],
								[
									"rtags\t{utils}",
									"rtags"
								],
								[
									"as.person\t{utils}",
									"as.person"
								],
								[
									"maintainer\t{utils}",
									"maintainer"
								],
								[
									"aspell\t{utils}",
									"aspell"
								],
								[
									"bug.report\t{utils}",
									"bug.report"
								],
								[
									"capture.output\t{utils}",
									"capture.output"
								],
								[
									"remhash\t{utils}",
									"remhash"
								],
								[
									"assignInMyNamespace\t{utils}",
									"assignInMyNamespace"
								],
								[
									"aspell_package_vignettes\t{utils}",
									"aspell_package_vignettes"
								],
								[
									"memory.limit\t{utils}",
									"memory.limit"
								],
								[
									"person\t{utils}",
									"person"
								],
								[
									"ls.str\t{utils}",
									"ls.str"
								],
								[
									"read.delim2\t{utils}",
									"read.delim2"
								],
								[
									"RweaveLatexWritedoc\t{utils}",
									"RweaveLatexWritedoc"
								],
								[
									"hasName\t{utils}",
									"hasName"
								],
								[
									"getTxtProgressBar\t{utils}",
									"getTxtProgressBar"
								],
								[
									"news\t{utils}",
									"news"
								],
								[
									"typhash\t{utils}",
									"typhash"
								],
								[
									"read.csv\t{utils}",
									"read.csv"
								],
								[
									"RSiteSearch\t{utils}",
									"RSiteSearch"
								],
								[
									"debugger\t{utils}",
									"debugger"
								],
								[
									"demo\t{utils}",
									"demo"
								],
								[
									"isS3stdGeneric\t{utils}",
									"isS3stdGeneric"
								],
								[
									"Sweave\t{utils}",
									"Sweave"
								],
								[
									"nsl\t{utils}",
									"nsl"
								],
								[
									"modifyList\t{utils}",
									"modifyList"
								],
								[
									"promptData\t{utils}",
									"promptData"
								],
								[
									"help.request\t{utils}",
									"help.request"
								],
								[
									"alarm\t{utils}",
									"alarm"
								],
								[
									".DollarNames\t{utils}",
									".DollarNames"
								],
								[
									"promptImport\t{utils}",
									"promptImport"
								],
								[
									"close.socket\t{utils}",
									"close.socket"
								],
								[
									"read.csv2\t{utils}",
									"read.csv2"
								],
								[
									"zip\t{utils}",
									"zip"
								],
								[
									"hsearch_db_concepts\t{utils}",
									"hsearch_db_concepts"
								],
								[
									"assignInNamespace\t{utils}",
									"assignInNamespace"
								],
								[
									"askYesNo\t{utils}",
									"askYesNo"
								],
								[
									"read.delim\t{utils}",
									"read.delim"
								],
								[
									"limitedLabels\t{utils}",
									"limitedLabels"
								],
								[
									"is.relistable\t{utils}",
									"is.relistable"
								],
								[
									"toLatex\t{utils}",
									"toLatex"
								],
								[
									"citFooter\t{utils}",
									"citFooter"
								],
								[
									"head.matrix\t{utils}",
									"head.matrix"
								],
								[
									"View\t{utils}",
									"View"
								],
								[
									"findMatches\t{utils}",
									"findMatches"
								],
								[
									"create.post\t{utils}",
									"create.post"
								],
								[
									"globalVariables\t{utils}",
									"globalVariables"
								],
								[
									"vi\t{utils}",
									"vi"
								],
								[
									"bibentry\t{utils}",
									"bibentry"
								],
								[
									"checkCRAN\t{utils}",
									"checkCRAN"
								],
								[
									"Stangle\t{utils}",
									"Stangle"
								],
								[
									"methods\t{utils}",
									"methods"
								],
								[
									"sethash\t{utils}",
									"sethash"
								],
								[
									"type.convert\t{utils}",
									"type.convert"
								],
								[
									"findLineNum\t{utils}",
									"findLineNum"
								],
								[
									"menu\t{utils}",
									"menu"
								],
								[
									"aspell_package_C_files\t{utils}",
									"aspell_package_C_files"
								],
								[
									"old.packages\t{utils}",
									"old.packages"
								],
								[
									"hsearch_db_keywords\t{utils}",
									"hsearch_db_keywords"
								],
								[
									"RShowDoc\t{utils}",
									"RShowDoc"
								],
								[
									"browseURL\t{utils}",
									"browseURL"
								],
								[
									"debugcall\t{utils}",
									"debugcall"
								],
								[
									"is.hashtab\t{utils}",
									"is.hashtab"
								],
								[
									"gethash\t{utils}",
									"gethash"
								],
								[
									"setTxtProgressBar\t{utils}",
									"setTxtProgressBar"
								],
								[
									"tail\t{utils}",
									"tail"
								],
								[
									"emacs\t{utils}",
									"emacs"
								],
								[
									"object.size\t{utils}",
									"object.size"
								],
								[
									"RweaveTryStop\t{utils}",
									"RweaveTryStop"
								],
								[
									"undebugcall\t{utils}",
									"undebugcall"
								],
								[
									"download.file\t{utils}",
									"download.file"
								],
								[
									"loadhistory\t{utils}",
									"loadhistory"
								],
								[
									"RweaveChunkPrefix\t{utils}",
									"RweaveChunkPrefix"
								],
								[
									"summaryRprof\t{utils}",
									"summaryRprof"
								],
								[
									"make.socket\t{utils}",
									"make.socket"
								],
								[
									"xedit\t{utils}",
									"xedit"
								],
								[
									"data\t{utils}",
									"data"
								],
								[
									"charClass\t{utils}",
									"charClass"
								],
								[
									"RtangleSetup\t{utils}",
									"RtangleSetup"
								],
								[
									"browseEnv\t{utils}",
									"browseEnv"
								],
								[
									"update.packages\t{utils}",
									"update.packages"
								],
								[
									"untar\t{utils}",
									"untar"
								],
								[
									"tail.matrix\t{utils}",
									"tail.matrix"
								],
								[
									"getS3method\t{utils}",
									"getS3method"
								],
								[
									"write.table\t{utils}",
									"write.table"
								],
								[
									"strOptions\t{utils}",
									"strOptions"
								],
								[
									"rc.status\t{utils}",
									"rc.status"
								],
								[
									"asDateBuilt\t{utils}",
									"asDateBuilt"
								],
								[
									"Rprofmem\t{utils}",
									"Rprofmem"
								],
								[
									"apropos\t{utils}",
									"apropos"
								],
								[
									"getSrcDirectory\t{utils}",
									"getSrcDirectory"
								],
								[
									"as.relistable\t{utils}",
									"as.relistable"
								],
								[
									"SweaveSyntaxNoweb\t{utils}",
									"SweaveSyntaxNoweb"
								],
								[
									"SweaveSyntaxLatex\t{utils}",
									"SweaveSyntaxLatex"
								],
								[
									"citeNatbib\t{utils}",
									"citeNatbib"
								],
								[
									"read.fwf\t{utils}",
									"read.fwf"
								],
								[
									"de.setup\t{utils}",
									"de.setup"
								],
								[
									"removeSource\t{utils}",
									"removeSource"
								],
								[
									"data.entry\t{utils}",
									"data.entry"
								],
								[
									"packageVersion\t{utils}",
									"packageVersion"
								],
								[
									"as.personList\t{utils}",
									"as.personList"
								],
								[
									"citation\t{utils}",
									"citation"
								],
								[
									"citHeader\t{utils}",
									"citHeader"
								],
								[
									"read.fortran\t{utils}",
									"read.fortran"
								],
								[
									"findCRANmirror\t{utils}",
									"findCRANmirror"
								],
								[
									"aspell_package_R_files\t{utils}",
									"aspell_package_R_files"
								],
								[
									"RtangleFinish\t{utils}",
									"RtangleFinish"
								],
								[
									"hashtab\t{utils}",
									"hashtab"
								],
								[
									"rc.getOption\t{utils}",
									"rc.getOption"
								],
								[
									"RtangleWritedoc\t{utils}",
									"RtangleWritedoc"
								],
								[
									"readCitationFile\t{utils}",
									"readCitationFile"
								],
								[
									"stack\t{utils}",
									"stack"
								],
								[
									"package.skeleton\t{utils}",
									"package.skeleton"
								],
								[
									"memory.size\t{utils}",
									"memory.size"
								],
								[
									"de.ncols\t{utils}",
									"de.ncols"
								],
								[
									"file.edit\t{utils}",
									"file.edit"
								],
								[
									"sessionInfo\t{utils}",
									"sessionInfo"
								],
								[
									"SweaveSyntConv\t{utils}",
									"SweaveSyntConv"
								],
								[
									"RweaveLatex\t{utils}",
									"RweaveLatex"
								],
								[
									"help\t{utils}",
									"help"
								],
								[
									"prompt\t{utils}",
									"prompt"
								],
								[
									"getParseText\t{utils}",
									"getParseText"
								],
								[
									"osVersion\t{utils}",
									"osVersion"
								],
								[
									".AtNames\t{utils}",
									".AtNames"
								],
								[
									"url.show\t{utils}",
									"url.show"
								],
								[
									"getCRANmirrors\t{utils}",
									"getCRANmirrors"
								],
								[
									"head\t{utils}",
									"head"
								],
								[
									"localeToCharset\t{utils}",
									"localeToCharset"
								],
								[
									"Rprof\t{utils}",
									"Rprof"
								],
								[
									"getParseData\t{utils}",
									"getParseData"
								],
								[
									"RweaveLatexSetup\t{utils}",
									"RweaveLatexSetup"
								],
								[
									"formatOL\t{utils}",
									"formatOL"
								],
								[
									"dump.frames\t{utils}",
									"dump.frames"
								],
								[
									"read.table\t{utils}",
									"read.table"
								],
								[
									"URLdecode\t{utils}",
									"URLdecode"
								],
								[
									"numhash\t{utils}",
									"numhash"
								],
								[
									"isS3method\t{utils}",
									"isS3method"
								],
								[
									"compareVersion\t{utils}",
									"compareVersion"
								],
								[
									"count.fields\t{utils}",
									"count.fields"
								],
								[
									"tar\t{utils}",
									"tar"
								],
								[
									"setRepositories\t{utils}",
									"setRepositories"
								],
								[
									"edit\t{utils}",
									"edit"
								],
								[
									"mirror2html\t{utils}",
									"mirror2html"
								],
								[
									"relist\t{utils}",
									"relist"
								],
								[
									"chooseBioCmirror\t{utils}",
									"chooseBioCmirror"
								],
								[
									"available.packages\t{utils}",
									"available.packages"
								],
								[
									"aspell_write_personal_dictionary_file\t{utils}",
									"aspell_write_personal_dictionary_file"
								],
								[
									"getAnywhere\t{utils}",
									"getAnywhere"
								],
								[
									"hsearch_db\t{utils}",
									"hsearch_db"
								],
								[
									"personList\t{utils}",
									"personList"
								],
								[
									"fileSnapshot\t{utils}",
									"fileSnapshot"
								],
								[
									"combn\t{utils}",
									"combn"
								],
								[
									"packageStatus\t{utils}",
									"packageStatus"
								],
								[
									"read.socket\t{utils}",
									"read.socket"
								],
								[
									"find\t{utils}",
									"find"
								],
								[
									"RweaveLatexOptions\t{utils}",
									"RweaveLatexOptions"
								],
								[
									"page\t{utils}",
									"page"
								],
								[
									"write.csv\t{utils}",
									"write.csv"
								],
								[
									"dataentry\t{utils}",
									"dataentry"
								],
								[
									"getSrcFilename\t{utils}",
									"getSrcFilename"
								],
								[
									"packageDescription\t{utils}",
									"packageDescription"
								],
								[
									"file_test\t{utils}",
									"file_test"
								],
								[
									"toBibtex\t{utils}",
									"toBibtex"
								],
								[
									"browseVignettes\t{utils}",
									"browseVignettes"
								],
								[
									"setBreakpoint\t{utils}",
									"setBreakpoint"
								],
								[
									"download.packages\t{utils}",
									"download.packages"
								],
								[
									"remove.packages\t{utils}",
									"remove.packages"
								],
								[
									"RweaveLatexFinish\t{utils}",
									"RweaveLatexFinish"
								],
								[
									"chooseCRANmirror\t{utils}",
									"chooseCRANmirror"
								],
								[
									"upgrade\t{utils}",
									"upgrade"
								],
								[
									"de\t{utils}",
									"de"
								],
								[
									".RtangleCodeLabel\t{utils}",
									".RtangleCodeLabel"
								],
								[
									"formatUL\t{utils}",
									"formatUL"
								],
								[
									"de.restore\t{utils}",
									"de.restore"
								],
								[
									"promptPackage\t{utils}",
									"promptPackage"
								],
								[
									"write.csv2\t{utils}",
									"write.csv2"
								],
								[
									"Rtangle\t{utils}",
									"Rtangle"
								],
								[
									"packageName\t{utils}",
									"packageName"
								],
								[
									"glob2rx\t{utils}",
									"glob2rx"
								],
								[
									"unstack\t{utils}",
									"unstack"
								],
								[
									"read.DIF\t{utils}",
									"read.DIF"
								],
								[
									"savehistory\t{utils}",
									"savehistory"
								],
								[
									"vignette\t{utils}",
									"vignette"
								],
								[
									"install.packages\t{utils}",
									"install.packages"
								],
								[
									".S3methods\t{utils}",
									".S3methods"
								],
								[
									"argsAnywhere\t{utils}",
									"argsAnywhere"
								],
								[
									"help.search\t{utils}",
									"help.search"
								],
								[
									"getSrcref\t{utils}",
									"getSrcref"
								],
								[
									"makeRweaveLatexCodeRunner\t{utils}",
									"makeRweaveLatexCodeRunner"
								],
								[
									"RweaveEvalWithOpt\t{utils}",
									"RweaveEvalWithOpt"
								],
								[
									"lsf.str\t{utils}",
									"lsf.str"
								],
								[
									"select.list\t{utils}",
									"select.list"
								],
								[
									"cite\t{utils}",
									"cite"
								],
								[
									"recover\t{utils}",
									"recover"
								],
								[
									"fix\t{utils}",
									"fix"
								],
								[
									"new.packages\t{utils}",
									"new.packages"
								],
								[
									"aspell_package_Rd_files\t{utils}",
									"aspell_package_Rd_files"
								],
								[
									"str\t{utils}",
									"str"
								],
								[
									"RtangleRuncode\t{utils}",
									"RtangleRuncode"
								],
								[
									"process.events\t{utils}",
									"process.events"
								],
								[
									"example\t{utils}",
									"example"
								],
								[
									"warnErrList\t{utils}",
									"warnErrList"
								],
								[
									"getSrcLocation\t{utils}",
									"getSrcLocation"
								],
								[
									"flush.console\t{utils}",
									"flush.console"
								],
								[
									"maphash\t{utils}",
									"maphash"
								],
								[
									"timestamp\t{utils}",
									"timestamp"
								],
								[
									"make.packages.html\t{utils}",
									"make.packages.html"
								],
								[
									"rc.options\t{utils}",
									"rc.options"
								],
								[
									"getFromNamespace\t{utils}",
									"getFromNamespace"
								],
								[
									"clrhash\t{utils}",
									"clrhash"
								],
								[
									"adist\t{utils}",
									"adist"
								],
								[
									"contrib.url\t{utils}",
									"contrib.url"
								],
								[
									"URLencode\t{utils}",
									"URLencode"
								],
								[
									"rc.settings\t{utils}",
									"rc.settings"
								],
								[
									"help.start\t{utils}",
									"help.start"
								],
								[
									"unzip\t{utils}",
									"unzip"
								],
								[
									"pico\t{utils}",
									"pico"
								],
								[
									"agricolae\tInstalled Package",
									"agricolae"
								],
								[
									"AlgDesign\tInstalled Package",
									"AlgDesign"
								],
								[
									"algEq\tInstalled Package",
									"algEq"
								],
								[
									"anytime\tInstalled Package",
									"anytime"
								],
								[
									"AsioHeaders\tInstalled Package",
									"AsioHeaders"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"ast2ast\tInstalled Package",
									"ast2ast"
								],
								[
									"BB\tInstalled Package",
									"BB"
								],
								[
									"BBmisc\tInstalled Package",
									"BBmisc"
								],
								[
									"bibtex\tInstalled Package",
									"bibtex"
								],
								[
									"bigD\tInstalled Package",
									"bigD"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"bmp\tInstalled Package",
									"bmp"
								],
								[
									"brew\tInstalled Package",
									"brew"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broman\tInstalled Package",
									"broman"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"ca\tInstalled Package",
									"ca"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"Cairo\tInstalled Package",
									"Cairo"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"car\tInstalled Package",
									"car"
								],
								[
									"carData\tInstalled Package",
									"carData"
								],
								[
									"cellranger\tInstalled Package",
									"cellranger"
								],
								[
									"chromatogram\tInstalled Package",
									"chromatogram"
								],
								[
									"chromatographR\tInstalled Package",
									"chromatographR"
								],
								[
									"chromConverter\tInstalled Package",
									"chromConverter"
								],
								[
									"chromote\tInstalled Package",
									"chromote"
								],
								[
									"cinterpolate\tInstalled Package",
									"cinterpolate"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"clipr\tInstalled Package",
									"clipr"
								],
								[
									"clue\tInstalled Package",
									"clue"
								],
								[
									"collections\tInstalled Package",
									"collections"
								],
								[
									"colorout\tInstalled Package",
									"colorout"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"combinat\tInstalled Package",
									"combinat"
								],
								[
									"COMELN\tInstalled Package",
									"COMELN"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"config\tInstalled Package",
									"config"
								],
								[
									"confintr\tInstalled Package",
									"confintr"
								],
								[
									"corrplot\tInstalled Package",
									"corrplot"
								],
								[
									"cowplot\tInstalled Package",
									"cowplot"
								],
								[
									"CPAT\tInstalled Package",
									"CPAT"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"credentials\tInstalled Package",
									"credentials"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"cyclocomp\tInstalled Package",
									"cyclocomp"
								],
								[
									"dendextend\tInstalled Package",
									"dendextend"
								],
								[
									"Deriv\tInstalled Package",
									"Deriv"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"deSolve\tInstalled Package",
									"deSolve"
								],
								[
									"devtools\tInstalled Package",
									"devtools"
								],
								[
									"dfdr\tInstalled Package",
									"dfdr"
								],
								[
									"dfoptim\tInstalled Package",
									"dfoptim"
								],
								[
									"DiagrammeR\tInstalled Package",
									"DiagrammeR"
								],
								[
									"DiagrammeRsvg\tInstalled Package",
									"DiagrammeRsvg"
								],
								[
									"differential\tInstalled Package",
									"differential"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dlstats\tInstalled Package",
									"dlstats"
								],
								[
									"doParallel\tInstalled Package",
									"doParallel"
								],
								[
									"downlit\tInstalled Package",
									"downlit"
								],
								[
									"downloader\tInstalled Package",
									"downloader"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"drc\tInstalled Package",
									"drc"
								],
								[
									"dsa2a\tInstalled Package",
									"dsa2a"
								],
								[
									"dtw\tInstalled Package",
									"dtw"
								],
								[
									"dtwclust\tInstalled Package",
									"dtwclust"
								],
								[
									"dynamicTreeCut\tInstalled Package",
									"dynamicTreeCut"
								],
								[
									"ellipse\tInstalled Package",
									"ellipse"
								],
								[
									"emmeans\tInstalled Package",
									"emmeans"
								],
								[
									"entab\tInstalled Package",
									"entab"
								],
								[
									"estimability\tInstalled Package",
									"estimability"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"factoextra\tInstalled Package",
									"factoextra"
								],
								[
									"FactoMineR\tInstalled Package",
									"FactoMineR"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastcluster\tInstalled Package",
									"fastcluster"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"ff\tInstalled Package",
									"ff"
								],
								[
									"filelock\tInstalled Package",
									"filelock"
								],
								[
									"flashClust\tInstalled Package",
									"flashClust"
								],
								[
									"flexclust\tInstalled Package",
									"flexclust"
								],
								[
									"flexdashboard\tInstalled Package",
									"flexdashboard"
								],
								[
									"fontawesome\tInstalled Package",
									"fontawesome"
								],
								[
									"forcats\tInstalled Package",
									"forcats"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"future\tInstalled Package",
									"future"
								],
								[
									"future.apply\tInstalled Package",
									"future.apply"
								],
								[
									"gapminder\tInstalled Package",
									"gapminder"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"gert\tInstalled Package",
									"gert"
								],
								[
									"gg3D\tInstalled Package",
									"gg3D"
								],
								[
									"gganimate\tInstalled Package",
									"gganimate"
								],
								[
									"ggdendro\tInstalled Package",
									"ggdendro"
								],
								[
									"ggfortify\tInstalled Package",
									"ggfortify"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"ggpmisc\tInstalled Package",
									"ggpmisc"
								],
								[
									"ggpp\tInstalled Package",
									"ggpp"
								],
								[
									"ggpubr\tInstalled Package",
									"ggpubr"
								],
								[
									"ggrepel\tInstalled Package",
									"ggrepel"
								],
								[
									"ggsci\tInstalled Package",
									"ggsci"
								],
								[
									"ggsignif\tInstalled Package",
									"ggsignif"
								],
								[
									"gifski\tInstalled Package",
									"gifski"
								],
								[
									"glmnet\tInstalled Package",
									"glmnet"
								],
								[
									"globals\tInstalled Package",
									"globals"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"gt\tInstalled Package",
									"gt"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"gtools\tInstalled Package",
									"gtools"
								],
								[
									"hardhat\tInstalled Package",
									"hardhat"
								],
								[
									"haven\tInstalled Package",
									"haven"
								],
								[
									"HDclassif\tInstalled Package",
									"HDclassif"
								],
								[
									"here\tInstalled Package",
									"here"
								],
								[
									"highcharter\tInstalled Package",
									"highcharter"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"hunspell\tInstalled Package",
									"hunspell"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"imager\tInstalled Package",
									"imager"
								],
								[
									"inline\tInstalled Package",
									"inline"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"jose\tInstalled Package",
									"jose"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"juicyjuice\tInstalled Package",
									"juicyjuice"
								],
								[
									"kableExtra\tInstalled Package",
									"kableExtra"
								],
								[
									"katex\tInstalled Package",
									"katex"
								],
								[
									"keras\tInstalled Package",
									"keras"
								],
								[
									"keyring\tInstalled Package",
									"keyring"
								],
								[
									"klaR\tInstalled Package",
									"klaR"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"labelled\tInstalled Package",
									"labelled"
								],
								[
									"languageserver\tInstalled Package",
									"languageserver"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lbfgs\tInstalled Package",
									"lbfgs"
								],
								[
									"lbfgsb3c\tInstalled Package",
									"lbfgsb3c"
								],
								[
									"leaps\tInstalled Package",
									"leaps"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"lintr\tInstalled Package",
									"lintr"
								],
								[
									"lme4\tInstalled Package",
									"lme4"
								],
								[
									"lmodel2\tInstalled Package",
									"lmodel2"
								],
								[
									"lobstr\tInstalled Package",
									"lobstr"
								],
								[
									"luajr\tInstalled Package",
									"luajr"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"marqLevAlg\tInstalled Package",
									"marqLevAlg"
								],
								[
									"MatrixModels\tInstalled Package",
									"MatrixModels"
								],
								[
									"microbenchmark\tInstalled Package",
									"microbenchmark"
								],
								[
									"miniUI\tInstalled Package",
									"miniUI"
								],
								[
									"minpack.lm\tInstalled Package",
									"minpack.lm"
								],
								[
									"minqa\tInstalled Package",
									"minqa"
								],
								[
									"mlr\tInstalled Package",
									"mlr"
								],
								[
									"modeltools\tInstalled Package",
									"modeltools"
								],
								[
									"MTT\tInstalled Package",
									"MTT"
								],
								[
									"multcomp\tInstalled Package",
									"multcomp"
								],
								[
									"multcompView\tInstalled Package",
									"multcompView"
								],
								[
									"mvtnorm\tInstalled Package",
									"mvtnorm"
								],
								[
									"networkD3\tInstalled Package",
									"networkD3"
								],
								[
									"nleqslv\tInstalled Package",
									"nleqslv"
								],
								[
									"nloptr\tInstalled Package",
									"nloptr"
								],
								[
									"numbers\tInstalled Package",
									"numbers"
								],
								[
									"nvimcom\tInstalled Package",
									"nvimcom"
								],
								[
									"odin\tInstalled Package",
									"odin"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"openxlsx\tInstalled Package",
									"openxlsx"
								],
								[
									"optimx\tInstalled Package",
									"optimx"
								],
								[
									"orca\tInstalled Package",
									"orca"
								],
								[
									"packrat\tInstalled Package",
									"packrat"
								],
								[
									"parallelly\tInstalled Package",
									"parallelly"
								],
								[
									"parallelMap\tInstalled Package",
									"parallelMap"
								],
								[
									"ParamHelpers\tInstalled Package",
									"ParamHelpers"
								],
								[
									"paropt\tInstalled Package",
									"paropt"
								],
								[
									"parsedate\tInstalled Package",
									"parsedate"
								],
								[
									"patchwork\tInstalled Package",
									"patchwork"
								],
								[
									"pattern\tInstalled Package",
									"pattern"
								],
								[
									"pbkrtest\tInstalled Package",
									"pbkrtest"
								],
								[
									"pheatmap\tInstalled Package",
									"pheatmap"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgdown\tInstalled Package",
									"pkgdown"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"PKI\tInstalled Package",
									"PKI"
								],
								[
									"plantuml\tInstalled Package",
									"plantuml"
								],
								[
									"platereader\tInstalled Package",
									"platereader"
								],
								[
									"plotly\tInstalled Package",
									"plotly"
								],
								[
									"plotrix\tInstalled Package",
									"plotrix"
								],
								[
									"polynom\tInstalled Package",
									"polynom"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"profvis\tInstalled Package",
									"profvis"
								],
								[
									"pryr\tInstalled Package",
									"pryr"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"ptw\tInstalled Package",
									"ptw"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"pvclust\tInstalled Package",
									"pvclust"
								],
								[
									"quantreg\tInstalled Package",
									"quantreg"
								],
								[
									"quarto\tInstalled Package",
									"quarto"
								],
								[
									"questionr\tInstalled Package",
									"questionr"
								],
								[
									"R.cache\tInstalled Package",
									"R.cache"
								],
								[
									"R.methodsS3\tInstalled Package",
									"R.methodsS3"
								],
								[
									"R.oo\tInstalled Package",
									"R.oo"
								],
								[
									"R.utils\tInstalled Package",
									"R.utils"
								],
								[
									"ragg\tInstalled Package",
									"ragg"
								],
								[
									"rARPACK\tInstalled Package",
									"rARPACK"
								],
								[
									"rbibutils\tInstalled Package",
									"rbibutils"
								],
								[
									"rcmdcheck\tInstalled Package",
									"rcmdcheck"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppArmadillo\tInstalled Package",
									"RcppArmadillo"
								],
								[
									"RcppClock\tInstalled Package",
									"RcppClock"
								],
								[
									"RcppDE\tInstalled Package",
									"RcppDE"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"RcppEnsmallen\tInstalled Package",
									"RcppEnsmallen"
								],
								[
									"RcppParallel\tInstalled Package",
									"RcppParallel"
								],
								[
									"RcppThread\tInstalled Package",
									"RcppThread"
								],
								[
									"RcppTOML\tInstalled Package",
									"RcppTOML"
								],
								[
									"RcppXPtrUtils\tInstalled Package",
									"RcppXPtrUtils"
								],
								[
									"Rdpack\tInstalled Package",
									"Rdpack"
								],
								[
									"reactable\tInstalled Package",
									"reactable"
								],
								[
									"reactR\tInstalled Package",
									"reactR"
								],
								[
									"readbitmap\tInstalled Package",
									"readbitmap"
								],
								[
									"readr\tInstalled Package",
									"readr"
								],
								[
									"readxl\tInstalled Package",
									"readxl"
								],
								[
									"RefManageR\tInstalled Package",
									"RefManageR"
								],
								[
									"rematch\tInstalled Package",
									"rematch"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"renv\tInstalled Package",
									"renv"
								],
								[
									"reticulate\tInstalled Package",
									"reticulate"
								],
								[
									"rhub\tInstalled Package",
									"rhub"
								],
								[
									"ring\tInstalled Package",
									"ring"
								],
								[
									"RInside\tInstalled Package",
									"RInside"
								],
								[
									"rjson\tInstalled Package",
									"rjson"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rlist\tInstalled Package",
									"rlist"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"rootSolve\tInstalled Package",
									"rootSolve"
								],
								[
									"roxygen2\tInstalled Package",
									"roxygen2"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rsconnect\tInstalled Package",
									"rsconnect"
								],
								[
									"rstatix\tInstalled Package",
									"rstatix"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"rsvg\tInstalled Package",
									"rsvg"
								],
								[
									"rversions\tInstalled Package",
									"rversions"
								],
								[
									"rvest\tInstalled Package",
									"rvest"
								],
								[
									"Ryacas\tInstalled Package",
									"Ryacas"
								],
								[
									"sandwich\tInstalled Package",
									"sandwich"
								],
								[
									"sanitizers\tInstalled Package",
									"sanitizers"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"scatterplot3d\tInstalled Package",
									"scatterplot3d"
								],
								[
									"sensitivity\tInstalled Package",
									"sensitivity"
								],
								[
									"serial\tInstalled Package",
									"serial"
								],
								[
									"sessioninfo\tInstalled Package",
									"sessioninfo"
								],
								[
									"shape\tInstalled Package",
									"shape"
								],
								[
									"shinydashboard\tInstalled Package",
									"shinydashboard"
								],
								[
									"shinyjs\tInstalled Package",
									"shinyjs"
								],
								[
									"shinyWidgets\tInstalled Package",
									"shinyWidgets"
								],
								[
									"spelling\tInstalled Package",
									"spelling"
								],
								[
									"splus2R\tInstalled Package",
									"splus2R"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"styler\tInstalled Package",
									"styler"
								],
								[
									"subplex\tInstalled Package",
									"subplex"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"tensorflow\tInstalled Package",
									"tensorflow"
								],
								[
									"test\tInstalled Package",
									"test"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"tfautograph\tInstalled Package",
									"tfautograph"
								],
								[
									"tfdatasets\tInstalled Package",
									"tfdatasets"
								],
								[
									"tfruns\tInstalled Package",
									"tfruns"
								],
								[
									"TH.data\tInstalled Package",
									"TH.data"
								],
								[
									"thermosimfit\tInstalled Package",
									"thermosimfit"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyCpp\tInstalled Package",
									"tidyCpp"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tiff\tInstalled Package",
									"tiff"
								],
								[
									"timechange\tInstalled Package",
									"timechange"
								],
								[
									"tinytest\tInstalled Package",
									"tinytest"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tsf\tInstalled Package",
									"tsf"
								],
								[
									"tweenr\tInstalled Package",
									"tweenr"
								],
								[
									"tzdb\tInstalled Package",
									"tzdb"
								],
								[
									"ucminf\tInstalled Package",
									"ucminf"
								],
								[
									"unix\tInstalled Package",
									"unix"
								],
								[
									"urlchecker\tInstalled Package",
									"urlchecker"
								],
								[
									"usethis\tInstalled Package",
									"usethis"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"uuid\tInstalled Package",
									"uuid"
								],
								[
									"V8\tInstalled Package",
									"V8"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"visNetwork\tInstalled Package",
									"visNetwork"
								],
								[
									"VPdtw\tInstalled Package",
									"VPdtw"
								],
								[
									"vroom\tInstalled Package",
									"vroom"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"webshot\tInstalled Package",
									"webshot"
								],
								[
									"webshot2\tInstalled Package",
									"webshot2"
								],
								[
									"websocket\tInstalled Package",
									"websocket"
								],
								[
									"whisker\tInstalled Package",
									"whisker"
								],
								[
									"whoami\tInstalled Package",
									"whoami"
								],
								[
									"wiesbaden\tInstalled Package",
									"wiesbaden"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"xlsx\tInstalled Package",
									"xlsx"
								],
								[
									"xlsxjars\tInstalled Package",
									"xlsxjars"
								],
								[
									"xmlparsedata\tInstalled Package",
									"xmlparsedata"
								],
								[
									"xopen\tInstalled Package",
									"xopen"
								],
								[
									"xts\tInstalled Package",
									"xts"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"yardstick\tInstalled Package",
									"yardstick"
								],
								[
									"zeallot\tInstalled Package",
									"zeallot"
								],
								[
									"zip\tInstalled Package",
									"zip"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"fontawesome\tInstalled Package",
									"fontawesome"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"jquerylib\tInstalled Package",
									"jquerylib"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"abind\tInstalled Package",
									"abind"
								],
								[
									"acepack\tInstalled Package",
									"acepack"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"assertthat\tInstalled Package",
									"assertthat"
								],
								[
									"backports\tInstalled Package",
									"backports"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bench\tInstalled Package",
									"bench"
								],
								[
									"BH\tInstalled Package",
									"BH"
								],
								[
									"bit\tInstalled Package",
									"bit"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"bitops\tInstalled Package",
									"bitops"
								],
								[
									"blob\tInstalled Package",
									"blob"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"caret\tInstalled Package",
									"caret"
								],
								[
									"caTools\tInstalled Package",
									"caTools"
								],
								[
									"cba\tInstalled Package",
									"cba"
								],
								[
									"checkmate\tInstalled Package",
									"checkmate"
								],
								[
									"chron\tInstalled Package",
									"chron"
								],
								[
									"classInt\tInstalled Package",
									"classInt"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"cliapp\tInstalled Package",
									"cliapp"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"conquer\tInstalled Package",
									"conquer"
								],
								[
									"covr\tInstalled Package",
									"covr"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"crosstalk\tInstalled Package",
									"crosstalk"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"CVST\tInstalled Package",
									"CVST"
								],
								[
									"data.table\tInstalled Package",
									"data.table"
								],
								[
									"DBI\tInstalled Package",
									"DBI"
								],
								[
									"DBItest\tInstalled Package",
									"DBItest"
								],
								[
									"dbplyr\tInstalled Package",
									"dbplyr"
								],
								[
									"ddalpha\tInstalled Package",
									"ddalpha"
								],
								[
									"decor\tInstalled Package",
									"decor"
								],
								[
									"deldir\tInstalled Package",
									"deldir"
								],
								[
									"DEoptimR\tInstalled Package",
									"DEoptimR"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"diffobj\tInstalled Package",
									"diffobj"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dimRed\tInstalled Package",
									"dimRed"
								],
								[
									"doMC\tInstalled Package",
									"doMC"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"DRR\tInstalled Package",
									"DRR"
								],
								[
									"DT\tInstalled Package",
									"DT"
								],
								[
									"dygraphs\tInstalled Package",
									"dygraphs"
								],
								[
									"e1071\tInstalled Package",
									"e1071"
								],
								[
									"earth\tInstalled Package",
									"earth"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastICA\tInstalled Package",
									"fastICA"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"fastmatch\tInstalled Package",
									"fastmatch"
								],
								[
									"filehash\tInstalled Package",
									"filehash"
								],
								[
									"FNN\tInstalled Package",
									"FNN"
								],
								[
									"fontBitstreamVera\tInstalled Package",
									"fontBitstreamVera"
								],
								[
									"fontLiberation\tInstalled Package",
									"fontLiberation"
								],
								[
									"fontquiver\tInstalled Package",
									"fontquiver"
								],
								[
									"foreach\tInstalled Package",
									"foreach"
								],
								[
									"Formula\tInstalled Package",
									"Formula"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"fts\tInstalled Package",
									"fts"
								],
								[
									"furrr\tInstalled Package",
									"furrr"
								],
								[
									"future\tInstalled Package",
									"future"
								],
								[
									"future.apply\tInstalled Package",
									"future.apply"
								],
								[
									"gdata\tInstalled Package",
									"gdata"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"geometry\tInstalled Package",
									"geometry"
								],
								[
									"geosphere\tInstalled Package",
									"geosphere"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"gh\tInstalled Package",
									"gh"
								],
								[
									"gitcreds\tInstalled Package",
									"gitcreds"
								],
								[
									"globals\tInstalled Package",
									"globals"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"goftest\tInstalled Package",
									"goftest"
								],
								[
									"gower\tInstalled Package",
									"gower"
								],
								[
									"gplots\tInstalled Package",
									"gplots"
								],
								[
									"gridExtra\tInstalled Package",
									"gridExtra"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"gtools\tInstalled Package",
									"gtools"
								],
								[
									"hexbin\tInstalled Package",
									"hexbin"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"Hmisc\tInstalled Package",
									"Hmisc"
								],
								[
									"hms\tInstalled Package",
									"hms"
								],
								[
									"htmlTable\tInstalled Package",
									"htmlTable"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"httr\tInstalled Package",
									"httr"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"ini\tInstalled Package",
									"ini"
								],
								[
									"interp\tInstalled Package",
									"interp"
								],
								[
									"ipred\tInstalled Package",
									"ipred"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"iterators\tInstalled Package",
									"iterators"
								],
								[
									"jpeg\tInstalled Package",
									"jpeg"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"kernlab\tInstalled Package",
									"kernlab"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"ks\tInstalled Package",
									"ks"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"latticeExtra\tInstalled Package",
									"latticeExtra"
								],
								[
									"lava\tInstalled Package",
									"lava"
								],
								[
									"lazyeval\tInstalled Package",
									"lazyeval"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"linprog\tInstalled Package",
									"linprog"
								],
								[
									"listenv\tInstalled Package",
									"listenv"
								],
								[
									"littler\tInstalled Package",
									"littler"
								],
								[
									"lme4\tInstalled Package",
									"lme4"
								],
								[
									"lobstr\tInstalled Package",
									"lobstr"
								],
								[
									"logcondens\tInstalled Package",
									"logcondens"
								],
								[
									"lpSolve\tInstalled Package",
									"lpSolve"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"lwgeom\tInstalled Package",
									"lwgeom"
								],
								[
									"magic\tInstalled Package",
									"magic"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"mapproj\tInstalled Package",
									"mapproj"
								],
								[
									"maps\tInstalled Package",
									"maps"
								],
								[
									"maptools\tInstalled Package",
									"maptools"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"MatrixModels\tInstalled Package",
									"MatrixModels"
								],
								[
									"matrixStats\tInstalled Package",
									"matrixStats"
								],
								[
									"mclust\tInstalled Package",
									"mclust"
								],
								[
									"mda\tInstalled Package",
									"mda"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"mets\tInstalled Package",
									"mets"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"minqa\tInstalled Package",
									"minqa"
								],
								[
									"misc3d\tInstalled Package",
									"misc3d"
								],
								[
									"mlbench\tInstalled Package",
									"mlbench"
								],
								[
									"MLmetrics\tInstalled Package",
									"MLmetrics"
								],
								[
									"mockery\tInstalled Package",
									"mockery"
								],
								[
									"mockr\tInstalled Package",
									"mockr"
								],
								[
									"modeldata\tInstalled Package",
									"modeldata"
								],
								[
									"ModelMetrics\tInstalled Package",
									"ModelMetrics"
								],
								[
									"multcomp\tInstalled Package",
									"multcomp"
								],
								[
									"multicool\tInstalled Package",
									"multicool"
								],
								[
									"munsell\tInstalled Package",
									"munsell"
								],
								[
									"mvtnorm\tInstalled Package",
									"mvtnorm"
								],
								[
									"nloptr\tInstalled Package",
									"nloptr"
								],
								[
									"numDeriv\tInstalled Package",
									"numDeriv"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"palmerpenguins\tInstalled Package",
									"palmerpenguins"
								],
								[
									"parallelly\tInstalled Package",
									"parallelly"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgconfig\tInstalled Package",
									"pkgconfig"
								],
								[
									"pkgKitten\tInstalled Package",
									"pkgKitten"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"plogr\tInstalled Package",
									"plogr"
								],
								[
									"plot3D\tInstalled Package",
									"plot3D"
								],
								[
									"plotmo\tInstalled Package",
									"plotmo"
								],
								[
									"plotrix\tInstalled Package",
									"plotrix"
								],
								[
									"pls\tInstalled Package",
									"pls"
								],
								[
									"plyr\tInstalled Package",
									"plyr"
								],
								[
									"png\tInstalled Package",
									"png"
								],
								[
									"polyclip\tInstalled Package",
									"polyclip"
								],
								[
									"pracma\tInstalled Package",
									"pracma"
								],
								[
									"praise\tInstalled Package",
									"praise"
								],
								[
									"prettycode\tInstalled Package",
									"prettycode"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"pROC\tInstalled Package",
									"pROC"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"prodlim\tInstalled Package",
									"prodlim"
								],
								[
									"profmem\tInstalled Package",
									"profmem"
								],
								[
									"progress\tInstalled Package",
									"progress"
								],
								[
									"progressr\tInstalled Package",
									"progressr"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"proxy\tInstalled Package",
									"proxy"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"quadprog\tInstalled Package",
									"quadprog"
								],
								[
									"quantmod\tInstalled Package",
									"quantmod"
								],
								[
									"quantreg\tInstalled Package",
									"quantreg"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"ragg\tInstalled Package",
									"ragg"
								],
								[
									"RANN\tInstalled Package",
									"RANN"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"raster\tInstalled Package",
									"raster"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppArmadillo\tInstalled Package",
									"RcppArmadillo"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"RcppProgress\tInstalled Package",
									"RcppProgress"
								],
								[
									"RcppRoll\tInstalled Package",
									"RcppRoll"
								],
								[
									"recipes\tInstalled Package",
									"recipes"
								],
								[
									"rematch2\tInstalled Package",
									"rematch2"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"reshape2\tInstalled Package",
									"reshape2"
								],
								[
									"rex\tInstalled Package",
									"rex"
								],
								[
									"rgdal\tInstalled Package",
									"rgdal"
								],
								[
									"rgl\tInstalled Package",
									"rgl"
								],
								[
									"rJava\tInstalled Package",
									"rJava"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"RMySQL\tInstalled Package",
									"RMySQL"
								],
								[
									"robustbase\tInstalled Package",
									"robustbase"
								],
								[
									"ROCR\tInstalled Package",
									"ROCR"
								],
								[
									"RPostgreSQL\tInstalled Package",
									"RPostgreSQL"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rsample\tInstalled Package",
									"rsample"
								],
								[
									"RSpectra\tInstalled Package",
									"RSpectra"
								],
								[
									"RSQLite\tInstalled Package",
									"RSQLite"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"RUnit\tInstalled Package",
									"RUnit"
								],
								[
									"s2\tInstalled Package",
									"s2"
								],
								[
									"sandwich\tInstalled Package",
									"sandwich"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"selectr\tInstalled Package",
									"selectr"
								],
								[
									"setRNG\tInstalled Package",
									"setRNG"
								],
								[
									"sf\tInstalled Package",
									"sf"
								],
								[
									"sfsmisc\tInstalled Package",
									"sfsmisc"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"slider\tInstalled Package",
									"slider"
								],
								[
									"sodium\tInstalled Package",
									"sodium"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"sp\tInstalled Package",
									"sp"
								],
								[
									"SparseM\tInstalled Package",
									"SparseM"
								],
								[
									"spatstat\tInstalled Package",
									"spatstat"
								],
								[
									"spatstat.core\tInstalled Package",
									"spatstat.core"
								],
								[
									"spatstat.data\tInstalled Package",
									"spatstat.data"
								],
								[
									"spatstat.geom\tInstalled Package",
									"spatstat.geom"
								],
								[
									"spatstat.linnet\tInstalled Package",
									"spatstat.linnet"
								],
								[
									"spatstat.sparse\tInstalled Package",
									"spatstat.sparse"
								],
								[
									"spatstat.utils\tInstalled Package",
									"spatstat.utils"
								],
								[
									"SQUAREM\tInstalled Package",
									"SQUAREM"
								],
								[
									"statmod\tInstalled Package",
									"statmod"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"svglite\tInstalled Package",
									"svglite"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"systemfonts\tInstalled Package",
									"systemfonts"
								],
								[
									"TeachingDemos\tInstalled Package",
									"TeachingDemos"
								],
								[
									"tensor\tInstalled Package",
									"tensor"
								],
								[
									"terra\tInstalled Package",
									"terra"
								],
								[
									"testit\tInstalled Package",
									"testit"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"textshaping\tInstalled Package",
									"textshaping"
								],
								[
									"TH.data\tInstalled Package",
									"TH.data"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tikzDevice\tInstalled Package",
									"tikzDevice"
								],
								[
									"timeDate\tInstalled Package",
									"timeDate"
								],
								[
									"timereg\tInstalled Package",
									"timereg"
								],
								[
									"timeSeries\tInstalled Package",
									"timeSeries"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tseries\tInstalled Package",
									"tseries"
								],
								[
									"TTR\tInstalled Package",
									"TTR"
								],
								[
									"units\tInstalled Package",
									"units"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"vdiffr\tInstalled Package",
									"vdiffr"
								],
								[
									"viridis\tInstalled Package",
									"viridis"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"warp\tInstalled Package",
									"warp"
								],
								[
									"webfakes\tInstalled Package",
									"webfakes"
								],
								[
									"webutils\tInstalled Package",
									"webutils"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"wk\tInstalled Package",
									"wk"
								],
								[
									"wkutils\tInstalled Package",
									"wkutils"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"XML\tInstalled Package",
									"XML"
								],
								[
									"xml2\tInstalled Package",
									"xml2"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"xts\tInstalled Package",
									"xts"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								],
								[
									"base\tInstalled Package",
									"base"
								],
								[
									"boot\tInstalled Package",
									"boot"
								],
								[
									"class\tInstalled Package",
									"class"
								],
								[
									"cluster\tInstalled Package",
									"cluster"
								],
								[
									"codetools\tInstalled Package",
									"codetools"
								],
								[
									"compiler\tInstalled Package",
									"compiler"
								],
								[
									"datasets\tInstalled Package",
									"datasets"
								],
								[
									"foreign\tInstalled Package",
									"foreign"
								],
								[
									"graphics\tInstalled Package",
									"graphics"
								],
								[
									"grDevices\tInstalled Package",
									"grDevices"
								],
								[
									"grid\tInstalled Package",
									"grid"
								],
								[
									"KernSmooth\tInstalled Package",
									"KernSmooth"
								],
								[
									"lattice\tInstalled Package",
									"lattice"
								],
								[
									"MASS\tInstalled Package",
									"MASS"
								],
								[
									"Matrix\tInstalled Package",
									"Matrix"
								],
								[
									"methods\tInstalled Package",
									"methods"
								],
								[
									"mgcv\tInstalled Package",
									"mgcv"
								],
								[
									"nlme\tInstalled Package",
									"nlme"
								],
								[
									"nnet\tInstalled Package",
									"nnet"
								],
								[
									"parallel\tInstalled Package",
									"parallel"
								],
								[
									"rpart\tInstalled Package",
									"rpart"
								],
								[
									"spatial\tInstalled Package",
									"spatial"
								],
								[
									"splines\tInstalled Package",
									"splines"
								],
								[
									"stats\tInstalled Package",
									"stats"
								],
								[
									"stats4\tInstalled Package",
									"stats4"
								],
								[
									"survival\tInstalled Package",
									"survival"
								],
								[
									"tcltk\tInstalled Package",
									"tcltk"
								],
								[
									"tools\tInstalled Package",
									"tools"
								],
								[
									"utils\tInstalled Package",
									"utils"
								]
							],
							"R-Box.loaded_packages":
							[
								"grDevices",
								"methods",
								"graphics",
								"base",
								"stats",
								"utils"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/R/R.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/home/konrad/Documents/GitHub/temporary/app/ggplot.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 213,
						"regions":
						{
						},
						"selection":
						[
							[
								213,
								213
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": false,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "tsf/inst/tinytest/test_all.R",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 9341,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"R-Box.completions":
							[
								[
									"sensitivity\t{tsf}",
									"sensitivity"
								],
								[
									"opti\t{tsf}",
									"opti"
								],
								[
									"runApp\t{tsf}",
									"runApp"
								],
								[
									"createPolynom\t{tsf}",
									"createPolynom"
								],
								[
									".radialGradientPattern\t{grDevices}",
									".radialGradientPattern"
								],
								[
									"gray.colors\t{grDevices}",
									"gray.colors"
								],
								[
									"rainbow\t{grDevices}",
									"rainbow"
								],
								[
									"check.options\t{grDevices}",
									"check.options"
								],
								[
									"hcl.pals\t{grDevices}",
									"hcl.pals"
								],
								[
									"glyphFontList\t{grDevices}",
									"glyphFontList"
								],
								[
									"embedFonts\t{grDevices}",
									"embedFonts"
								],
								[
									"cairo_ps\t{grDevices}",
									"cairo_ps"
								],
								[
									"colorspaces\t{grDevices}",
									"colorspaces"
								],
								[
									"cairo_pdf\t{grDevices}",
									"cairo_pdf"
								],
								[
									"getGraphicsEventEnv\t{grDevices}",
									"getGraphicsEventEnv"
								],
								[
									".axisPars\t{grDevices}",
									".axisPars"
								],
								[
									"bmp\t{grDevices}",
									"bmp"
								],
								[
									".devUp\t{grDevices}",
									".devUp"
								],
								[
									".mask\t{grDevices}",
									".mask"
								],
								[
									"graphics.off\t{grDevices}",
									"graphics.off"
								],
								[
									"densCols\t{grDevices}",
									"densCols"
								],
								[
									"savePlot\t{grDevices}",
									"savePlot"
								],
								[
									"X11Font\t{grDevices}",
									"X11Font"
								],
								[
									"grey\t{grDevices}",
									"grey"
								],
								[
									".setMask\t{grDevices}",
									".setMask"
								],
								[
									"deviceIsInteractive\t{grDevices}",
									"deviceIsInteractive"
								],
								[
									".opIndex\t{grDevices}",
									".opIndex"
								],
								[
									"quartz.save\t{grDevices}",
									"quartz.save"
								],
								[
									"quartz\t{grDevices}",
									"quartz"
								],
								[
									"xfig\t{grDevices}",
									"xfig"
								],
								[
									"dev.capabilities\t{grDevices}",
									"dev.capabilities"
								],
								[
									"extendrange\t{grDevices}",
									"extendrange"
								],
								[
									"nclass.Sturges\t{grDevices}",
									"nclass.Sturges"
								],
								[
									".defineGroup\t{grDevices}",
									".defineGroup"
								],
								[
									".useGroup\t{grDevices}",
									".useGroup"
								],
								[
									"colors\t{grDevices}",
									"colors"
								],
								[
									"pictex\t{grDevices}",
									"pictex"
								],
								[
									".ruleIndex\t{grDevices}",
									".ruleIndex"
								],
								[
									"dev.set\t{grDevices}",
									"dev.set"
								],
								[
									"trans3d\t{grDevices}",
									"trans3d"
								],
								[
									"recordPlot\t{grDevices}",
									"recordPlot"
								],
								[
									"glyphWidthLeft\t{grDevices}",
									"glyphWidthLeft"
								],
								[
									"hsv\t{grDevices}",
									"hsv"
								],
								[
									"bitmap\t{grDevices}",
									"bitmap"
								],
								[
									"embedGlyphs\t{grDevices}",
									"embedGlyphs"
								],
								[
									"hcl\t{grDevices}",
									"hcl"
								],
								[
									"postscriptFonts\t{grDevices}",
									"postscriptFonts"
								],
								[
									"tiff\t{grDevices}",
									"tiff"
								],
								[
									"X11\t{grDevices}",
									"X11"
								],
								[
									"Hershey\t{grDevices}",
									"Hershey"
								],
								[
									"palette.colors\t{grDevices}",
									"palette.colors"
								],
								[
									"glyphHeight\t{grDevices}",
									"glyphHeight"
								],
								[
									"is.raster\t{grDevices}",
									"is.raster"
								],
								[
									"colorConverter\t{grDevices}",
									"colorConverter"
								],
								[
									"glyphFont\t{grDevices}",
									"glyphFont"
								],
								[
									"dev2bitmap\t{grDevices}",
									"dev2bitmap"
								],
								[
									"dev.next\t{grDevices}",
									"dev.next"
								],
								[
									"dev.interactive\t{grDevices}",
									"dev.interactive"
								],
								[
									"grey.colors\t{grDevices}",
									"grey.colors"
								],
								[
									"dev.copy2pdf\t{grDevices}",
									"dev.copy2pdf"
								],
								[
									"terrain.colors\t{grDevices}",
									"terrain.colors"
								],
								[
									"grSoftVersion\t{grDevices}",
									"grSoftVersion"
								],
								[
									"quartz.options\t{grDevices}",
									"quartz.options"
								],
								[
									".tilingPattern\t{grDevices}",
									".tilingPattern"
								],
								[
									"hcl.colors\t{grDevices}",
									"hcl.colors"
								],
								[
									"glyphAnchor\t{grDevices}",
									"glyphAnchor"
								],
								[
									"nclass.scott\t{grDevices}",
									"nclass.scott"
								],
								[
									"dev.hold\t{grDevices}",
									"dev.hold"
								],
								[
									"glyphWidth\t{grDevices}",
									"glyphWidth"
								],
								[
									"devAskNewPage\t{grDevices}",
									"devAskNewPage"
								],
								[
									"x11\t{grDevices}",
									"x11"
								],
								[
									"as.raster\t{grDevices}",
									"as.raster"
								],
								[
									".clipPath\t{grDevices}",
									".clipPath"
								],
								[
									"rgb2hsv\t{grDevices}",
									"rgb2hsv"
								],
								[
									"setGraphicsEventEnv\t{grDevices}",
									"setGraphicsEventEnv"
								],
								[
									"heat.colors\t{grDevices}",
									"heat.colors"
								],
								[
									"topo.colors\t{grDevices}",
									"topo.colors"
								],
								[
									"blues9\t{grDevices}",
									"blues9"
								],
								[
									"recordGraphics\t{grDevices}",
									"recordGraphics"
								],
								[
									"boxplot.stats\t{grDevices}",
									"boxplot.stats"
								],
								[
									"svg\t{grDevices}",
									"svg"
								],
								[
									"dev.list\t{grDevices}",
									"dev.list"
								],
								[
									"colours\t{grDevices}",
									"colours"
								],
								[
									"convertColor\t{grDevices}",
									"convertColor"
								],
								[
									"dev.copy\t{grDevices}",
									"dev.copy"
								],
								[
									"chull\t{grDevices}",
									"chull"
								],
								[
									"xy.coords\t{grDevices}",
									"xy.coords"
								],
								[
									"dev.capture\t{grDevices}",
									"dev.capture"
								],
								[
									"dev.cur\t{grDevices}",
									"dev.cur"
								],
								[
									"glyphJust\t{grDevices}",
									"glyphJust"
								],
								[
									"setEPS\t{grDevices}",
									"setEPS"
								],
								[
									"cm\t{grDevices}",
									"cm"
								],
								[
									"dev.flush\t{grDevices}",
									"dev.flush"
								],
								[
									"glyphHeightBottom\t{grDevices}",
									"glyphHeightBottom"
								],
								[
									"dev.size\t{grDevices}",
									"dev.size"
								],
								[
									"setPS\t{grDevices}",
									"setPS"
								],
								[
									"cm.colors\t{grDevices}",
									"cm.colors"
								],
								[
									"dev.off\t{grDevices}",
									"dev.off"
								],
								[
									"pdf\t{grDevices}",
									"pdf"
								],
								[
									"gray\t{grDevices}",
									"gray"
								],
								[
									"nclass.FD\t{grDevices}",
									"nclass.FD"
								],
								[
									"ps.options\t{grDevices}",
									"ps.options"
								],
								[
									"as.graphicsAnnot\t{grDevices}",
									"as.graphicsAnnot"
								],
								[
									".setPattern\t{grDevices}",
									".setPattern"
								],
								[
									"X11.options\t{grDevices}",
									"X11.options"
								],
								[
									"palette\t{grDevices}",
									"palette"
								],
								[
									"replayPlot\t{grDevices}",
									"replayPlot"
								],
								[
									"pdfFonts\t{grDevices}",
									"pdfFonts"
								],
								[
									"cairoSymbolFont\t{grDevices}",
									"cairoSymbolFont"
								],
								[
									"dev.new\t{grDevices}",
									"dev.new"
								],
								[
									"pdf.options\t{grDevices}",
									"pdf.options"
								],
								[
									"X11Fonts\t{grDevices}",
									"X11Fonts"
								],
								[
									"axisTicks\t{grDevices}",
									"axisTicks"
								],
								[
									"make.rgb\t{grDevices}",
									"make.rgb"
								],
								[
									".setClipPath\t{grDevices}",
									".setClipPath"
								],
								[
									"n2mfrow\t{grDevices}",
									"n2mfrow"
								],
								[
									"rgb\t{grDevices}",
									"rgb"
								],
								[
									"quartzFont\t{grDevices}",
									"quartzFont"
								],
								[
									"getGraphicsEvent\t{grDevices}",
									"getGraphicsEvent"
								],
								[
									"xyz.coords\t{grDevices}",
									"xyz.coords"
								],
								[
									"xyTable\t{grDevices}",
									"xyTable"
								],
								[
									"CIDFont\t{grDevices}",
									"CIDFont"
								],
								[
									"adjustcolor\t{grDevices}",
									"adjustcolor"
								],
								[
									"col2rgb\t{grDevices}",
									"col2rgb"
								],
								[
									"dev.prev\t{grDevices}",
									"dev.prev"
								],
								[
									"quartzFonts\t{grDevices}",
									"quartzFonts"
								],
								[
									"png\t{grDevices}",
									"png"
								],
								[
									"colorRampPalette\t{grDevices}",
									"colorRampPalette"
								],
								[
									"palette.pals\t{grDevices}",
									"palette.pals"
								],
								[
									"glyphInfo\t{grDevices}",
									"glyphInfo"
								],
								[
									".linearGradientPattern\t{grDevices}",
									".linearGradientPattern"
								],
								[
									"jpeg\t{grDevices}",
									"jpeg"
								],
								[
									"colorRamp\t{grDevices}",
									"colorRamp"
								],
								[
									"setGraphicsEventHandlers\t{grDevices}",
									"setGraphicsEventHandlers"
								],
								[
									"dev.control\t{grDevices}",
									"dev.control"
								],
								[
									"dev.print\t{grDevices}",
									"dev.print"
								],
								[
									"dev.copy2eps\t{grDevices}",
									"dev.copy2eps"
								],
								[
									"Type1Font\t{grDevices}",
									"Type1Font"
								],
								[
									"contourLines\t{grDevices}",
									"contourLines"
								],
								[
									"postscript\t{grDevices}",
									"postscript"
								],
								[
									"asOneSidedFormula\t{stats}",
									"asOneSidedFormula"
								],
								[
									"r2dtable\t{stats}",
									"r2dtable"
								],
								[
									"drop.terms\t{stats}",
									"drop.terms"
								],
								[
									"confint.lm\t{stats}",
									"confint.lm"
								],
								[
									"is.mts\t{stats}",
									"is.mts"
								],
								[
									"nlminb\t{stats}",
									"nlminb"
								],
								[
									"alias\t{stats}",
									"alias"
								],
								[
									"gaussian\t{stats}",
									"gaussian"
								],
								[
									"profile\t{stats}",
									"profile"
								],
								[
									"ls.diag\t{stats}",
									"ls.diag"
								],
								[
									"mahalanobis\t{stats}",
									"mahalanobis"
								],
								[
									"rmultinom\t{stats}",
									"rmultinom"
								],
								[
									"dpois\t{stats}",
									"dpois"
								],
								[
									"numericDeriv\t{stats}",
									"numericDeriv"
								],
								[
									"makepredictcall\t{stats}",
									"makepredictcall"
								],
								[
									"qlogis\t{stats}",
									"qlogis"
								],
								[
									"loadings\t{stats}",
									"loadings"
								],
								[
									"dlogis\t{stats}",
									"dlogis"
								],
								[
									"nlm\t{stats}",
									"nlm"
								],
								[
									"residuals.glm\t{stats}",
									"residuals.glm"
								],
								[
									"qcauchy\t{stats}",
									"qcauchy"
								],
								[
									"nextn\t{stats}",
									"nextn"
								],
								[
									"nls\t{stats}",
									"nls"
								],
								[
									"plot.stepfun\t{stats}",
									"plot.stepfun"
								],
								[
									"arima0.diag\t{stats}",
									"arima0.diag"
								],
								[
									"dummy.coef\t{stats}",
									"dummy.coef"
								],
								[
									"ftable\t{stats}",
									"ftable"
								],
								[
									"as.formula\t{stats}",
									"as.formula"
								],
								[
									"pairwise.wilcox.test\t{stats}",
									"pairwise.wilcox.test"
								],
								[
									"time\t{stats}",
									"time"
								],
								[
									"embed\t{stats}",
									"embed"
								],
								[
									"mantelhaen.test\t{stats}",
									"mantelhaen.test"
								],
								[
									"dwilcox\t{stats}",
									"dwilcox"
								],
								[
									"ar\t{stats}",
									"ar"
								],
								[
									"oneway.test\t{stats}",
									"oneway.test"
								],
								[
									"fligner.test\t{stats}",
									"fligner.test"
								],
								[
									"bw.bcv\t{stats}",
									"bw.bcv"
								],
								[
									"predict.glm\t{stats}",
									"predict.glm"
								],
								[
									"rWishart\t{stats}",
									"rWishart"
								],
								[
									"logLik\t{stats}",
									"logLik"
								],
								[
									"confint.default\t{stats}",
									"confint.default"
								],
								[
									"AIC\t{stats}",
									"AIC"
								],
								[
									"rlogis\t{stats}",
									"rlogis"
								],
								[
									"bw.ucv\t{stats}",
									"bw.ucv"
								],
								[
									"arima\t{stats}",
									"arima"
								],
								[
									"plot.ts\t{stats}",
									"plot.ts"
								],
								[
									"tsp\t{stats}",
									"tsp"
								],
								[
									"model.extract\t{stats}",
									"model.extract"
								],
								[
									"stat.anova\t{stats}",
									"stat.anova"
								],
								[
									"update.formula\t{stats}",
									"update.formula"
								],
								[
									"qbeta\t{stats}",
									"qbeta"
								],
								[
									"bw.SJ\t{stats}",
									"bw.SJ"
								],
								[
									"factanal\t{stats}",
									"factanal"
								],
								[
									"drop.scope\t{stats}",
									"drop.scope"
								],
								[
									"summary.aov\t{stats}",
									"summary.aov"
								],
								[
									"optimHess\t{stats}",
									"optimHess"
								],
								[
									".lm.fit\t{stats}",
									".lm.fit"
								],
								[
									"cooks.distance\t{stats}",
									"cooks.distance"
								],
								[
									"dnorm\t{stats}",
									"dnorm"
								],
								[
									"psmirnov\t{stats}",
									"psmirnov"
								],
								[
									"extractAIC\t{stats}",
									"extractAIC"
								],
								[
									"qbirthday\t{stats}",
									"qbirthday"
								],
								[
									"C\t{stats}",
									"C"
								],
								[
									"sortedXyData\t{stats}",
									"sortedXyData"
								],
								[
									"D\t{stats}",
									"D"
								],
								[
									"lowess\t{stats}",
									"lowess"
								],
								[
									"varimax\t{stats}",
									"varimax"
								],
								[
									"optimize\t{stats}",
									"optimize"
								],
								[
									"manova\t{stats}",
									"manova"
								],
								[
									"deviance\t{stats}",
									"deviance"
								],
								[
									"optim\t{stats}",
									"optim"
								],
								[
									"lag.plot\t{stats}",
									"lag.plot"
								],
								[
									"constrOptim\t{stats}",
									"constrOptim"
								],
								[
									"splinefunH\t{stats}",
									"splinefunH"
								],
								[
									"reformulate\t{stats}",
									"reformulate"
								],
								[
									"pacf\t{stats}",
									"pacf"
								],
								[
									"mcnemar.test\t{stats}",
									"mcnemar.test"
								],
								[
									"df\t{stats}",
									"df"
								],
								[
									"tsSmooth\t{stats}",
									"tsSmooth"
								],
								[
									"make.link\t{stats}",
									"make.link"
								],
								[
									"glm.control\t{stats}",
									"glm.control"
								],
								[
									"hasTsp\t{stats}",
									"hasTsp"
								],
								[
									"pgamma\t{stats}",
									"pgamma"
								],
								[
									"addmargins\t{stats}",
									"addmargins"
								],
								[
									"dexp\t{stats}",
									"dexp"
								],
								[
									"power.anova.test\t{stats}",
									"power.anova.test"
								],
								[
									"prop.test\t{stats}",
									"prop.test"
								],
								[
									"model.weights\t{stats}",
									"model.weights"
								],
								[
									"ave\t{stats}",
									"ave"
								],
								[
									"is.stepfun\t{stats}",
									"is.stepfun"
								],
								[
									"heatmap\t{stats}",
									"heatmap"
								],
								[
									"stepfun\t{stats}",
									"stepfun"
								],
								[
									"loess.smooth\t{stats}",
									"loess.smooth"
								],
								[
									"line\t{stats}",
									"line"
								],
								[
									"qqline\t{stats}",
									"qqline"
								],
								[
									"ar.mle\t{stats}",
									"ar.mle"
								],
								[
									"residuals\t{stats}",
									"residuals"
								],
								[
									"lsfit\t{stats}",
									"lsfit"
								],
								[
									"get_all_vars\t{stats}",
									"get_all_vars"
								],
								[
									"dt\t{stats}",
									"dt"
								],
								[
									"splinefun\t{stats}",
									"splinefun"
								],
								[
									"ks.test\t{stats}",
									"ks.test"
								],
								[
									"cor\t{stats}",
									"cor"
								],
								[
									"add.scope\t{stats}",
									"add.scope"
								],
								[
									"ecdf\t{stats}",
									"ecdf"
								],
								[
									"pwilcox\t{stats}",
									"pwilcox"
								],
								[
									"cov\t{stats}",
									"cov"
								],
								[
									"dendrapply\t{stats}",
									"dendrapply"
								],
								[
									"rsignrank\t{stats}",
									"rsignrank"
								],
								[
									"bandwidth.kernel\t{stats}",
									"bandwidth.kernel"
								],
								[
									"as.dist\t{stats}",
									"as.dist"
								],
								[
									"SSweibull\t{stats}",
									"SSweibull"
								],
								[
									"bw.nrd\t{stats}",
									"bw.nrd"
								],
								[
									"start\t{stats}",
									"start"
								],
								[
									"plnorm\t{stats}",
									"plnorm"
								],
								[
									"ts.union\t{stats}",
									"ts.union"
								],
								[
									"mvfft\t{stats}",
									"mvfft"
								],
								[
									"dweibull\t{stats}",
									"dweibull"
								],
								[
									"as.ts\t{stats}",
									"as.ts"
								],
								[
									"cor.test\t{stats}",
									"cor.test"
								],
								[
									".checkMFClasses\t{stats}",
									".checkMFClasses"
								],
								[
									"effects\t{stats}",
									"effects"
								],
								[
									"reorder\t{stats}",
									"reorder"
								],
								[
									"KalmanForecast\t{stats}",
									"KalmanForecast"
								],
								[
									"eff.aovlist\t{stats}",
									"eff.aovlist"
								],
								[
									"qgamma\t{stats}",
									"qgamma"
								],
								[
									"glm.fit\t{stats}",
									"glm.fit"
								],
								[
									"plot.spec.coherency\t{stats}",
									"plot.spec.coherency"
								],
								[
									"dgamma\t{stats}",
									"dgamma"
								],
								[
									"cov2cor\t{stats}",
									"cov2cor"
								],
								[
									"ls.print\t{stats}",
									"ls.print"
								],
								[
									"setNames\t{stats}",
									"setNames"
								],
								[
									"acf2AR\t{stats}",
									"acf2AR"
								],
								[
									"add1\t{stats}",
									"add1"
								],
								[
									"rcauchy\t{stats}",
									"rcauchy"
								],
								[
									"shapiro.test\t{stats}",
									"shapiro.test"
								],
								[
									"deriv3\t{stats}",
									"deriv3"
								],
								[
									"window\t{stats}",
									"window"
								],
								[
									"model.tables\t{stats}",
									"model.tables"
								],
								[
									"model.matrix\t{stats}",
									"model.matrix"
								],
								[
									".nknots.smspl\t{stats}",
									".nknots.smspl"
								],
								[
									"KalmanLike\t{stats}",
									"KalmanLike"
								],
								[
									"SSasymp\t{stats}",
									"SSasymp"
								],
								[
									"predict\t{stats}",
									"predict"
								],
								[
									"as.stepfun\t{stats}",
									"as.stepfun"
								],
								[
									"t.test\t{stats}",
									"t.test"
								],
								[
									"power.prop.test\t{stats}",
									"power.prop.test"
								],
								[
									"rstandard\t{stats}",
									"rstandard"
								],
								[
									"binom.test\t{stats}",
									"binom.test"
								],
								[
									"cophenetic\t{stats}",
									"cophenetic"
								],
								[
									"pbeta\t{stats}",
									"pbeta"
								],
								[
									"KalmanRun\t{stats}",
									"KalmanRun"
								],
								[
									"naprint\t{stats}",
									"naprint"
								],
								[
									"qlnorm\t{stats}",
									"qlnorm"
								],
								[
									"plclust\t{stats}",
									"plclust"
								],
								[
									"model.response\t{stats}",
									"model.response"
								],
								[
									"dlnorm\t{stats}",
									"dlnorm"
								],
								[
									"lag\t{stats}",
									"lag"
								],
								[
									"spec.pgram\t{stats}",
									"spec.pgram"
								],
								[
									"interaction.plot\t{stats}",
									"interaction.plot"
								],
								[
									"fitted\t{stats}",
									"fitted"
								],
								[
									"rgeom\t{stats}",
									"rgeom"
								],
								[
									"estVar\t{stats}",
									"estVar"
								],
								[
									"rgamma\t{stats}",
									"rgamma"
								],
								[
									"arima0\t{stats}",
									"arima0"
								],
								[
									"loglin\t{stats}",
									"loglin"
								],
								[
									"ar.yw\t{stats}",
									"ar.yw"
								],
								[
									"promax\t{stats}",
									"promax"
								],
								[
									"phyper\t{stats}",
									"phyper"
								],
								[
									"drop1\t{stats}",
									"drop1"
								],
								[
									"SSfol\t{stats}",
									"SSfol"
								],
								[
									"runif\t{stats}",
									"runif"
								],
								[
									"family\t{stats}",
									"family"
								],
								[
									"quantile\t{stats}",
									"quantile"
								],
								[
									"wilcox.test\t{stats}",
									"wilcox.test"
								],
								[
									"psignrank\t{stats}",
									"psignrank"
								],
								[
									"complete.cases\t{stats}",
									"complete.cases"
								],
								[
									"offset\t{stats}",
									"offset"
								],
								[
									"scatter.smooth\t{stats}",
									"scatter.smooth"
								],
								[
									"dmultinom\t{stats}",
									"dmultinom"
								],
								[
									"rlnorm\t{stats}",
									"rlnorm"
								],
								[
									"approx\t{stats}",
									"approx"
								],
								[
									"naresid\t{stats}",
									"naresid"
								],
								[
									"SSfpl\t{stats}",
									"SSfpl"
								],
								[
									"proj\t{stats}",
									"proj"
								],
								[
									"supsmu\t{stats}",
									"supsmu"
								],
								[
									"qqnorm\t{stats}",
									"qqnorm"
								],
								[
									"end\t{stats}",
									"end"
								],
								[
									"printCoefmat\t{stats}",
									"printCoefmat"
								],
								[
									"princomp\t{stats}",
									"princomp"
								],
								[
									"aggregate.data.frame\t{stats}",
									"aggregate.data.frame"
								],
								[
									"dnbinom\t{stats}",
									"dnbinom"
								],
								[
									"lm.influence\t{stats}",
									"lm.influence"
								],
								[
									"rect.hclust\t{stats}",
									"rect.hclust"
								],
								[
									"convolve\t{stats}",
									"convolve"
								],
								[
									"ansari.test\t{stats}",
									"ansari.test"
								],
								[
									"median.default\t{stats}",
									"median.default"
								],
								[
									"ARMAacf\t{stats}",
									"ARMAacf"
								],
								[
									"poly\t{stats}",
									"poly"
								],
								[
									"NLSstRtAsymptote\t{stats}",
									"NLSstRtAsymptote"
								],
								[
									"power.t.test\t{stats}",
									"power.t.test"
								],
								[
									"write.ftable\t{stats}",
									"write.ftable"
								],
								[
									"qhyper\t{stats}",
									"qhyper"
								],
								[
									"polym\t{stats}",
									"polym"
								],
								[
									"weights\t{stats}",
									"weights"
								],
								[
									"dhyper\t{stats}",
									"dhyper"
								],
								[
									"kernel\t{stats}",
									"kernel"
								],
								[
									"friedman.test\t{stats}",
									"friedman.test"
								],
								[
									"acf\t{stats}",
									"acf"
								],
								[
									"qwilcox\t{stats}",
									"qwilcox"
								],
								[
									"filter\t{stats}",
									"filter"
								],
								[
									"lm.fit\t{stats}",
									"lm.fit"
								],
								[
									"rpois\t{stats}",
									"rpois"
								],
								[
									"cmdscale\t{stats}",
									"cmdscale"
								],
								[
									"factor.scope\t{stats}",
									"factor.scope"
								],
								[
									"Gamma\t{stats}",
									"Gamma"
								],
								[
									"pweibull\t{stats}",
									"pweibull"
								],
								[
									"pchisq\t{stats}",
									"pchisq"
								],
								[
									"ksmooth\t{stats}",
									"ksmooth"
								],
								[
									"symnum\t{stats}",
									"symnum"
								],
								[
									"smooth\t{stats}",
									"smooth"
								],
								[
									"quasipoisson\t{stats}",
									"quasipoisson"
								],
								[
									"ppr\t{stats}",
									"ppr"
								],
								[
									"spec.ar\t{stats}",
									"spec.ar"
								],
								[
									"pnbinom\t{stats}",
									"pnbinom"
								],
								[
									"coefficients\t{stats}",
									"coefficients"
								],
								[
									"model.offset\t{stats}",
									"model.offset"
								],
								[
									"dbeta\t{stats}",
									"dbeta"
								],
								[
									"SSasympOff\t{stats}",
									"SSasympOff"
								],
								[
									"pbirthday\t{stats}",
									"pbirthday"
								],
								[
									"replications\t{stats}",
									"replications"
								],
								[
									"ar.ols\t{stats}",
									"ar.ols"
								],
								[
									"rhyper\t{stats}",
									"rhyper"
								],
								[
									"spectrum\t{stats}",
									"spectrum"
								],
								[
									"lm\t{stats}",
									"lm"
								],
								[
									"expand.model.frame\t{stats}",
									"expand.model.frame"
								],
								[
									"kernapply\t{stats}",
									"kernapply"
								],
								[
									"bw.nrd0\t{stats}",
									"bw.nrd0"
								],
								[
									"stl\t{stats}",
									"stl"
								],
								[
									"loess\t{stats}",
									"loess"
								],
								[
									"IQR\t{stats}",
									"IQR"
								],
								[
									"qgeom\t{stats}",
									"qgeom"
								],
								[
									"contr.helmert\t{stats}",
									"contr.helmert"
								],
								[
									"na.pass\t{stats}",
									"na.pass"
								],
								[
									"toeplitz\t{stats}",
									"toeplitz"
								],
								[
									"pairwise.t.test\t{stats}",
									"pairwise.t.test"
								],
								[
									"dist\t{stats}",
									"dist"
								],
								[
									".getXlevels\t{stats}",
									".getXlevels"
								],
								[
									"NLSstClosestX\t{stats}",
									"NLSstClosestX"
								],
								[
									"getInitial\t{stats}",
									"getInitial"
								],
								[
									"sigma\t{stats}",
									"sigma"
								],
								[
									"qchisq\t{stats}",
									"qchisq"
								],
								[
									"contr.poly\t{stats}",
									"contr.poly"
								],
								[
									"dchisq\t{stats}",
									"dchisq"
								],
								[
									"spline\t{stats}",
									"spline"
								],
								[
									"qunif\t{stats}",
									"qunif"
								],
								[
									"confint\t{stats}",
									"confint"
								],
								[
									"pairwise.table\t{stats}",
									"pairwise.table"
								],
								[
									"SSasympOrig\t{stats}",
									"SSasympOrig"
								],
								[
									"pexp\t{stats}",
									"pexp"
								],
								[
									"plot.spec.phase\t{stats}",
									"plot.spec.phase"
								],
								[
									"density.default\t{stats}",
									"density.default"
								],
								[
									"medpolish\t{stats}",
									"medpolish"
								],
								[
									"ptukey\t{stats}",
									"ptukey"
								],
								[
									"cancor\t{stats}",
									"cancor"
								],
								[
									"Box.test\t{stats}",
									"Box.test"
								],
								[
									"TukeyHSD\t{stats}",
									"TukeyHSD"
								],
								[
									"rnorm\t{stats}",
									"rnorm"
								],
								[
									"var.test\t{stats}",
									"var.test"
								],
								[
									"poisson\t{stats}",
									"poisson"
								],
								[
									"bartlett.test\t{stats}",
									"bartlett.test"
								],
								[
									"summary.stepfun\t{stats}",
									"summary.stepfun"
								],
								[
									"na.fail\t{stats}",
									"na.fail"
								],
								[
									"model.frame\t{stats}",
									"model.frame"
								],
								[
									"covratio\t{stats}",
									"covratio"
								],
								[
									"contrasts\t{stats}",
									"contrasts"
								],
								[
									"ar.burg\t{stats}",
									"ar.burg"
								],
								[
									"residuals.lm\t{stats}",
									"residuals.lm"
								],
								[
									"df.residual\t{stats}",
									"df.residual"
								],
								[
									"ts.intersect\t{stats}",
									"ts.intersect"
								],
								[
									"power\t{stats}",
									"power"
								],
								[
									"SSlogis\t{stats}",
									"SSlogis"
								],
								[
									"glm\t{stats}",
									"glm"
								],
								[
									"rchisq\t{stats}",
									"rchisq"
								],
								[
									"getCall\t{stats}",
									"getCall"
								],
								[
									"model.matrix.lm\t{stats}",
									"model.matrix.lm"
								],
								[
									"chisq.test\t{stats}",
									"chisq.test"
								],
								[
									"coef\t{stats}",
									"coef"
								],
								[
									"step\t{stats}",
									"step"
								],
								[
									"ppoints\t{stats}",
									"ppoints"
								],
								[
									"vcov\t{stats}",
									"vcov"
								],
								[
									".preformat.ts\t{stats}",
									".preformat.ts"
								],
								[
									"qqplot\t{stats}",
									"qqplot"
								],
								[
									"DF2formula\t{stats}",
									"DF2formula"
								],
								[
									"update.default\t{stats}",
									"update.default"
								],
								[
									"qtukey\t{stats}",
									"qtukey"
								],
								[
									"quade.test\t{stats}",
									"quade.test"
								],
								[
									"qpois\t{stats}",
									"qpois"
								],
								[
									"df.kernel\t{stats}",
									"df.kernel"
								],
								[
									"influence\t{stats}",
									"influence"
								],
								[
									"qsmirnov\t{stats}",
									"qsmirnov"
								],
								[
									"cutree\t{stats}",
									"cutree"
								],
								[
									"poisson.test\t{stats}",
									"poisson.test"
								],
								[
									"pf\t{stats}",
									"pf"
								],
								[
									"case.names\t{stats}",
									"case.names"
								],
								[
									"frequency\t{stats}",
									"frequency"
								],
								[
									"tsdiag\t{stats}",
									"tsdiag"
								],
								[
									"qweibull\t{stats}",
									"qweibull"
								],
								[
									"NLSstLfAsymptote\t{stats}",
									"NLSstLfAsymptote"
								],
								[
									"kmeans\t{stats}",
									"kmeans"
								],
								[
									"weighted.residuals\t{stats}",
									"weighted.residuals"
								],
								[
									"mauchly.test\t{stats}",
									"mauchly.test"
								],
								[
									"napredict\t{stats}",
									"napredict"
								],
								[
									"qexp\t{stats}",
									"qexp"
								],
								[
									"deriv\t{stats}",
									"deriv"
								],
								[
									"var\t{stats}",
									"var"
								],
								[
									"aggregate.ts\t{stats}",
									"aggregate.ts"
								],
								[
									"rwilcox\t{stats}",
									"rwilcox"
								],
								[
									"SSbiexp\t{stats}",
									"SSbiexp"
								],
								[
									"pt\t{stats}",
									"pt"
								],
								[
									"rsmirnov\t{stats}",
									"rsmirnov"
								],
								[
									"qf\t{stats}",
									"qf"
								],
								[
									"xtabs\t{stats}",
									"xtabs"
								],
								[
									"kruskal.test\t{stats}",
									"kruskal.test"
								],
								[
									"median\t{stats}",
									"median"
								],
								[
									"as.hclust\t{stats}",
									"as.hclust"
								],
								[
									"termplot\t{stats}",
									"termplot"
								],
								[
									"rweibull\t{stats}",
									"rweibull"
								],
								[
									"resid\t{stats}",
									"resid"
								],
								[
									"pgeom\t{stats}",
									"pgeom"
								],
								[
									"qnbinom\t{stats}",
									"qnbinom"
								],
								[
									"se.contrast\t{stats}",
									"se.contrast"
								],
								[
									"summary.manova\t{stats}",
									"summary.manova"
								],
								[
									"prcomp\t{stats}",
									"prcomp"
								],
								[
									"preplot\t{stats}",
									"preplot"
								],
								[
									"plot.ecdf\t{stats}",
									"plot.ecdf"
								],
								[
									"arima.sim\t{stats}",
									"arima.sim"
								],
								[
									"lm.wfit\t{stats}",
									"lm.wfit"
								],
								[
									"ccf\t{stats}",
									"ccf"
								],
								[
									"is.leaf\t{stats}",
									"is.leaf"
								],
								[
									"na.action\t{stats}",
									"na.action"
								],
								[
									"screeplot\t{stats}",
									"screeplot"
								],
								[
									"approxfun\t{stats}",
									"approxfun"
								],
								[
									"NLSstAsymptotic\t{stats}",
									"NLSstAsymptotic"
								],
								[
									"order.dendrogram\t{stats}",
									"order.dendrogram"
								],
								[
									"cycle\t{stats}",
									"cycle"
								],
								[
									"qt\t{stats}",
									"qt"
								],
								[
									"rf\t{stats}",
									"rf"
								],
								[
									"punif\t{stats}",
									"punif"
								],
								[
									"quasi\t{stats}",
									"quasi"
								],
								[
									"ts.plot\t{stats}",
									"ts.plot"
								],
								[
									"cov.wt\t{stats}",
									"cov.wt"
								],
								[
									"mood.test\t{stats}",
									"mood.test"
								],
								[
									"PP.test\t{stats}",
									"PP.test"
								],
								[
									"is.empty.model\t{stats}",
									"is.empty.model"
								],
								[
									"loess.control\t{stats}",
									"loess.control"
								],
								[
									"decompose\t{stats}",
									"decompose"
								],
								[
									"aggregate\t{stats}",
									"aggregate"
								],
								[
									"BIC\t{stats}",
									"BIC"
								],
								[
									"reshape\t{stats}",
									"reshape"
								],
								[
									"makeARIMA\t{stats}",
									"makeARIMA"
								],
								[
									"ARMAtoMA\t{stats}",
									"ARMAtoMA"
								],
								[
									"weighted.mean\t{stats}",
									"weighted.mean"
								],
								[
									"pbinom\t{stats}",
									"pbinom"
								],
								[
									"selfStart\t{stats}",
									"selfStart"
								],
								[
									"SSgompertz\t{stats}",
									"SSgompertz"
								],
								[
									"qnorm\t{stats}",
									"qnorm"
								],
								[
									"inverse.gaussian\t{stats}",
									"inverse.gaussian"
								],
								[
									"na.omit\t{stats}",
									"na.omit"
								],
								[
									"sd\t{stats}",
									"sd"
								],
								[
									"rt\t{stats}",
									"rt"
								],
								[
									"fft\t{stats}",
									"fft"
								],
								[
									"dcauchy\t{stats}",
									"dcauchy"
								],
								[
									"fivenum\t{stats}",
									"fivenum"
								],
								[
									"toeplitz2\t{stats}",
									"toeplitz2"
								],
								[
									"relevel\t{stats}",
									"relevel"
								],
								[
									"summary.glm\t{stats}",
									"summary.glm"
								],
								[
									"rexp\t{stats}",
									"rexp"
								],
								[
									"monthplot\t{stats}",
									"monthplot"
								],
								[
									"dfbeta\t{stats}",
									"dfbeta"
								],
								[
									"diffinv\t{stats}",
									"diffinv"
								],
								[
									"nobs\t{stats}",
									"nobs"
								],
								[
									"SSmicmen\t{stats}",
									"SSmicmen"
								],
								[
									"is.ts\t{stats}",
									"is.ts"
								],
								[
									"dummy.coef.lm\t{stats}",
									"dummy.coef.lm"
								],
								[
									"hatvalues\t{stats}",
									"hatvalues"
								],
								[
									"variable.names\t{stats}",
									"variable.names"
								],
								[
									"Pair\t{stats}",
									"Pair"
								],
								[
									"model.frame.default\t{stats}",
									"model.frame.default"
								],
								[
									"anova\t{stats}",
									"anova"
								],
								[
									"simulate\t{stats}",
									"simulate"
								],
								[
									"dffits\t{stats}",
									"dffits"
								],
								[
									"model.matrix.default\t{stats}",
									"model.matrix.default"
								],
								[
									"contr.SAS\t{stats}",
									"contr.SAS"
								],
								[
									"contr.treatment\t{stats}",
									"contr.treatment"
								],
								[
									"predict.lm\t{stats}",
									"predict.lm"
								],
								[
									"prop.trend.test\t{stats}",
									"prop.trend.test"
								],
								[
									"as.dendrogram\t{stats}",
									"as.dendrogram"
								],
								[
									"ppois\t{stats}",
									"ppois"
								],
								[
									"pcauchy\t{stats}",
									"pcauchy"
								],
								[
									"smoothEnds\t{stats}",
									"smoothEnds"
								],
								[
									"qbinom\t{stats}",
									"qbinom"
								],
								[
									"hat\t{stats}",
									"hat"
								],
								[
									"p.adjust\t{stats}",
									"p.adjust"
								],
								[
									".MFclass\t{stats}",
									".MFclass"
								],
								[
									"dbinom\t{stats}",
									"dbinom"
								],
								[
									"terms.formula\t{stats}",
									"terms.formula"
								],
								[
									"spec.taper\t{stats}",
									"spec.taper"
								],
								[
									"HoltWinters\t{stats}",
									"HoltWinters"
								],
								[
									"ts\t{stats}",
									"ts"
								],
								[
									"na.exclude\t{stats}",
									"na.exclude"
								],
								[
									"dsignrank\t{stats}",
									"dsignrank"
								],
								[
									"is.tskernel\t{stats}",
									"is.tskernel"
								],
								[
									"fitted.values\t{stats}",
									"fitted.values"
								],
								[
									"qsignrank\t{stats}",
									"qsignrank"
								],
								[
									"integrate\t{stats}",
									"integrate"
								],
								[
									"optimise\t{stats}",
									"optimise"
								],
								[
									"binomial\t{stats}",
									"binomial"
								],
								[
									"KalmanSmooth\t{stats}",
									"KalmanSmooth"
								],
								[
									".vcov.aliased\t{stats}",
									".vcov.aliased"
								],
								[
									"deltat\t{stats}",
									"deltat"
								],
								[
									"p.adjust.methods\t{stats}",
									"p.adjust.methods"
								],
								[
									"SSD\t{stats}",
									"SSD"
								],
								[
									"summary.lm\t{stats}",
									"summary.lm"
								],
								[
									"smooth.spline\t{stats}",
									"smooth.spline"
								],
								[
									"rstudent\t{stats}",
									"rstudent"
								],
								[
									"hclust\t{stats}",
									"hclust"
								],
								[
									"density\t{stats}",
									"density"
								],
								[
									"dgeom\t{stats}",
									"dgeom"
								],
								[
									"terms\t{stats}",
									"terms"
								],
								[
									"fisher.test\t{stats}",
									"fisher.test"
								],
								[
									"rbinom\t{stats}",
									"rbinom"
								],
								[
									"formula\t{stats}",
									"formula"
								],
								[
									"nls.control\t{stats}",
									"nls.control"
								],
								[
									"isoreg\t{stats}",
									"isoreg"
								],
								[
									"contr.sum\t{stats}",
									"contr.sum"
								],
								[
									"uniroot\t{stats}",
									"uniroot"
								],
								[
									"quasibinomial\t{stats}",
									"quasibinomial"
								],
								[
									"dunif\t{stats}",
									"dunif"
								],
								[
									"influence.measures\t{stats}",
									"influence.measures"
								],
								[
									"na.contiguous\t{stats}",
									"na.contiguous"
								],
								[
									"dfbetas\t{stats}",
									"dfbetas"
								],
								[
									"pairwise.prop.test\t{stats}",
									"pairwise.prop.test"
								],
								[
									"rnbinom\t{stats}",
									"rnbinom"
								],
								[
									"pnorm\t{stats}",
									"pnorm"
								],
								[
									"rbeta\t{stats}",
									"rbeta"
								],
								[
									"cpgram\t{stats}",
									"cpgram"
								],
								[
									"knots\t{stats}",
									"knots"
								],
								[
									"biplot\t{stats}",
									"biplot"
								],
								[
									"runmed\t{stats}",
									"runmed"
								],
								[
									"mad\t{stats}",
									"mad"
								],
								[
									"delete.response\t{stats}",
									"delete.response"
								],
								[
									"plogis\t{stats}",
									"plogis"
								],
								[
									"read.ftable\t{stats}",
									"read.ftable"
								],
								[
									"aov\t{stats}",
									"aov"
								],
								[
									"update\t{stats}",
									"update"
								],
								[
									"StructTS\t{stats}",
									"StructTS"
								],
								[
									"polypath\t{graphics}",
									"polypath"
								],
								[
									"sunflowerplot\t{graphics}",
									"sunflowerplot"
								],
								[
									"plot.new\t{graphics}",
									"plot.new"
								],
								[
									"layout.show\t{graphics}",
									"layout.show"
								],
								[
									"matplot\t{graphics}",
									"matplot"
								],
								[
									"boxplot\t{graphics}",
									"boxplot"
								],
								[
									"panel.smooth\t{graphics}",
									"panel.smooth"
								],
								[
									"box\t{graphics}",
									"box"
								],
								[
									"lcm\t{graphics}",
									"lcm"
								],
								[
									"locator\t{graphics}",
									"locator"
								],
								[
									"plot.design\t{graphics}",
									"plot.design"
								],
								[
									"barplot.default\t{graphics}",
									"barplot.default"
								],
								[
									"axis.POSIXct\t{graphics}",
									"axis.POSIXct"
								],
								[
									"curve\t{graphics}",
									"curve"
								],
								[
									"matpoints\t{graphics}",
									"matpoints"
								],
								[
									"plot.default\t{graphics}",
									"plot.default"
								],
								[
									"pairs.default\t{graphics}",
									"pairs.default"
								],
								[
									"coplot\t{graphics}",
									"coplot"
								],
								[
									"par\t{graphics}",
									"par"
								],
								[
									"co.intervals\t{graphics}",
									"co.intervals"
								],
								[
									"hist.default\t{graphics}",
									"hist.default"
								],
								[
									"xyinch\t{graphics}",
									"xyinch"
								],
								[
									"mtext\t{graphics}",
									"mtext"
								],
								[
									"frame\t{graphics}",
									"frame"
								],
								[
									"screen\t{graphics}",
									"screen"
								],
								[
									"image.default\t{graphics}",
									"image.default"
								],
								[
									"boxplot.default\t{graphics}",
									"boxplot.default"
								],
								[
									"stem\t{graphics}",
									"stem"
								],
								[
									"polygon\t{graphics}",
									"polygon"
								],
								[
									"stars\t{graphics}",
									"stars"
								],
								[
									"lines\t{graphics}",
									"lines"
								],
								[
									"symbols\t{graphics}",
									"symbols"
								],
								[
									"pairs\t{graphics}",
									"pairs"
								],
								[
									"points\t{graphics}",
									"points"
								],
								[
									"grconvertX\t{graphics}",
									"grconvertX"
								],
								[
									"assocplot\t{graphics}",
									"assocplot"
								],
								[
									"spineplot\t{graphics}",
									"spineplot"
								],
								[
									"grconvertY\t{graphics}",
									"grconvertY"
								],
								[
									"title\t{graphics}",
									"title"
								],
								[
									"barplot\t{graphics}",
									"barplot"
								],
								[
									"persp\t{graphics}",
									"persp"
								],
								[
									"legend\t{graphics}",
									"legend"
								],
								[
									"identify\t{graphics}",
									"identify"
								],
								[
									"image\t{graphics}",
									"image"
								],
								[
									"filled.contour\t{graphics}",
									"filled.contour"
								],
								[
									"lines.default\t{graphics}",
									"lines.default"
								],
								[
									"hist\t{graphics}",
									"hist"
								],
								[
									"stripchart\t{graphics}",
									"stripchart"
								],
								[
									"contour\t{graphics}",
									"contour"
								],
								[
									"plot.function\t{graphics}",
									"plot.function"
								],
								[
									"mosaicplot\t{graphics}",
									"mosaicplot"
								],
								[
									"fourfoldplot\t{graphics}",
									"fourfoldplot"
								],
								[
									"split.screen\t{graphics}",
									"split.screen"
								],
								[
									"smoothScatter\t{graphics}",
									"smoothScatter"
								],
								[
									"matlines\t{graphics}",
									"matlines"
								],
								[
									"axTicks\t{graphics}",
									"axTicks"
								],
								[
									"arrows\t{graphics}",
									"arrows"
								],
								[
									"text.default\t{graphics}",
									"text.default"
								],
								[
									"points.default\t{graphics}",
									"points.default"
								],
								[
									"xinch\t{graphics}",
									"xinch"
								],
								[
									"dotchart\t{graphics}",
									"dotchart"
								],
								[
									"strheight\t{graphics}",
									"strheight"
								],
								[
									"rect\t{graphics}",
									"rect"
								],
								[
									"grid\t{graphics}",
									"grid"
								],
								[
									".filled.contour\t{graphics}",
									".filled.contour"
								],
								[
									"close.screen\t{graphics}",
									"close.screen"
								],
								[
									"axis\t{graphics}",
									"axis"
								],
								[
									"layout\t{graphics}",
									"layout"
								],
								[
									"contour.default\t{graphics}",
									"contour.default"
								],
								[
									"cdplot\t{graphics}",
									"cdplot"
								],
								[
									"pie\t{graphics}",
									"pie"
								],
								[
									"xspline\t{graphics}",
									"xspline"
								],
								[
									"text\t{graphics}",
									"text"
								],
								[
									"strwidth\t{graphics}",
									"strwidth"
								],
								[
									"axis.Date\t{graphics}",
									"axis.Date"
								],
								[
									"boxplot.matrix\t{graphics}",
									"boxplot.matrix"
								],
								[
									"bxp\t{graphics}",
									"bxp"
								],
								[
									"abline\t{graphics}",
									"abline"
								],
								[
									"plot.xy\t{graphics}",
									"plot.xy"
								],
								[
									"rasterImage\t{graphics}",
									"rasterImage"
								],
								[
									"segments\t{graphics}",
									"segments"
								],
								[
									"yinch\t{graphics}",
									"yinch"
								],
								[
									"plot\t{graphics}",
									"plot"
								],
								[
									"plot.window\t{graphics}",
									"plot.window"
								],
								[
									"clip\t{graphics}",
									"clip"
								],
								[
									"erase.screen\t{graphics}",
									"erase.screen"
								],
								[
									"rug\t{graphics}",
									"rug"
								],
								[
									"Axis\t{graphics}",
									"Axis"
								],
								[
									".__C__signature\t{methods}",
									".__C__signature"
								],
								[
									".ShortPrimitiveSkeletons\t{methods}",
									".ShortPrimitiveSkeletons"
								],
								[
									"showExtends\t{methods}",
									"showExtends"
								],
								[
									".__C__packageInfo\t{methods}",
									".__C__packageInfo"
								],
								[
									".__C__MethodSelectionReport\t{methods}",
									".__C__MethodSelectionReport"
								],
								[
									".__C__uninitializedField\t{methods}",
									".__C__uninitializedField"
								],
								[
									"extends\t{methods}",
									"extends"
								],
								[
									".__C__ordered\t{methods}",
									".__C__ordered"
								],
								[
									".__C__oldClass\t{methods}",
									".__C__oldClass"
								],
								[
									"addNextMethod\t{methods}",
									"addNextMethod"
								],
								[
									".__C__groupGenericFunction\t{methods}",
									".__C__groupGenericFunction"
								],
								[
									"getGenerics\t{methods}",
									"getGenerics"
								],
								[
									".__C__standardGeneric\t{methods}",
									".__C__standardGeneric"
								],
								[
									".__C__nonstandardGroupGenericFunction\t{methods}",
									".__C__nonstandardGroupGenericFunction"
								],
								[
									"makeExtends\t{methods}",
									"makeExtends"
								],
								[
									".__C__S3\t{methods}",
									".__C__S3"
								],
								[
									".__C__array\t{methods}",
									".__C__array"
								],
								[
									".__C__S4\t{methods}",
									".__C__S4"
								],
								[
									".EmptyPrimitiveSkeletons\t{methods}",
									".EmptyPrimitiveSkeletons"
								],
								[
									".__C__SuperClassMethod\t{methods}",
									".__C__SuperClassMethod"
								],
								[
									"showMlist\t{methods}",
									"showMlist"
								],
								[
									"setAs\t{methods}",
									"setAs"
								],
								[
									".__C__aov\t{methods}",
									".__C__aov"
								],
								[
									"resetClass\t{methods}",
									"resetClass"
								],
								[
									"assignMethodsMetaData\t{methods}",
									"assignMethodsMetaData"
								],
								[
									".__C__integrate\t{methods}",
									".__C__integrate"
								],
								[
									"getDataPart\t{methods}",
									"getDataPart"
								],
								[
									".__C__listOfMethods\t{methods}",
									".__C__listOfMethods"
								],
								[
									".__C__ClassUnionRepresentation\t{methods}",
									".__C__ClassUnionRepresentation"
								],
								[
									"findMethodSignatures\t{methods}",
									"findMethodSignatures"
								],
								[
									"getGroupMembers\t{methods}",
									"getGroupMembers"
								],
								[
									"signature\t{methods}",
									"signature"
								],
								[
									"setReplaceMethod\t{methods}",
									"setReplaceMethod"
								],
								[
									"removeClass\t{methods}",
									"removeClass"
								],
								[
									"implicitGeneric\t{methods}",
									"implicitGeneric"
								],
								[
									".OldClassesList\t{methods}",
									".OldClassesList"
								],
								[
									".__C__refObject\t{methods}",
									".__C__refObject"
								],
								[
									"cacheMetaData\t{methods}",
									"cacheMetaData"
								],
								[
									"el\t{methods}",
									"el"
								],
								[
									"callGeneric\t{methods}",
									"callGeneric"
								],
								[
									"showClass\t{methods}",
									"showClass"
								],
								[
									"Complex\t{methods}",
									"Complex"
								],
								[
									".__C__.Other\t{methods}",
									".__C__.Other"
								],
								[
									".__C__classPrototypeDef\t{methods}",
									".__C__classPrototypeDef"
								],
								[
									".__C__ts\t{methods}",
									".__C__ts"
								],
								[
									"evalSource\t{methods}",
									"evalSource"
								],
								[
									"kronecker\t{methods}",
									"kronecker"
								],
								[
									"resetGeneric\t{methods}",
									"resetGeneric"
								],
								[
									"possibleExtends\t{methods}",
									"possibleExtends"
								],
								[
									".__C__table\t{methods}",
									".__C__table"
								],
								[
									"missingArg\t{methods}",
									"missingArg"
								],
								[
									"Quote\t{methods}",
									"Quote"
								],
								[
									"registerImplicitGenerics\t{methods}",
									"registerImplicitGenerics"
								],
								[
									".__C__double\t{methods}",
									".__C__double"
								],
								[
									"isClassDef\t{methods}",
									"isClassDef"
								],
								[
									"initRefFields\t{methods}",
									"initRefFields"
								],
								[
									".__C__environment\t{methods}",
									".__C__environment"
								],
								[
									"insertMethod\t{methods}",
									"insertMethod"
								],
								[
									"findFunction\t{methods}",
									"findFunction"
								],
								[
									"externalRefMethod\t{methods}",
									"externalRefMethod"
								],
								[
									"fixPre1.8\t{methods}",
									"fixPre1.8"
								],
								[
									"checkAtAssignment\t{methods}",
									"checkAtAssignment"
								],
								[
									".__C__Date\t{methods}",
									".__C__Date"
								],
								[
									"finalDefaultMethod\t{methods}",
									"finalDefaultMethod"
								],
								[
									".__C__character\t{methods}",
									".__C__character"
								],
								[
									"isClass\t{methods}",
									"isClass"
								],
								[
									"completeClassDefinition\t{methods}",
									"completeClassDefinition"
								],
								[
									"callNextMethod\t{methods}",
									"callNextMethod"
								],
								[
									"isVirtualClass\t{methods}",
									"isVirtualClass"
								],
								[
									"slotNames\t{methods}",
									"slotNames"
								],
								[
									"getSlots\t{methods}",
									"getSlots"
								],
								[
									".__C__LinearMethodsList\t{methods}",
									".__C__LinearMethodsList"
								],
								[
									"selectSuperClasses\t{methods}",
									"selectSuperClasses"
								],
								[
									"removeMethods\t{methods}",
									"removeMethods"
								],
								[
									".classEnv\t{methods}",
									".classEnv"
								],
								[
									".__C__structure\t{methods}",
									".__C__structure"
								],
								[
									"evalOnLoad\t{methods}",
									"evalOnLoad"
								],
								[
									"cbind2\t{methods}",
									"cbind2"
								],
								[
									".__C__lm\t{methods}",
									".__C__lm"
								],
								[
									".__C__dump.frames\t{methods}",
									".__C__dump.frames"
								],
								[
									"setClassUnion\t{methods}",
									"setClassUnion"
								],
								[
									".__C__density\t{methods}",
									".__C__density"
								],
								[
									".hasSlot\t{methods}",
									".hasSlot"
								],
								[
									"initialize\t{methods}",
									"initialize"
								],
								[
									"Summary\t{methods}",
									"Summary"
								],
								[
									"representation\t{methods}",
									"representation"
								],
								[
									"getClass\t{methods}",
									"getClass"
								],
								[
									"method.skeleton\t{methods}",
									"method.skeleton"
								],
								[
									".__C__vector\t{methods}",
									".__C__vector"
								],
								[
									"setRefClass\t{methods}",
									"setRefClass"
								],
								[
									"Math2\t{methods}",
									"Math2"
								],
								[
									"getMethods\t{methods}",
									"getMethods"
								],
								[
									".__C__repeat\t{methods}",
									".__C__repeat"
								],
								[
									".__C__MethodsList\t{methods}",
									".__C__MethodsList"
								],
								[
									"Logic\t{methods}",
									"Logic"
								],
								[
									"matchSignature\t{methods}",
									"matchSignature"
								],
								[
									".__C__className\t{methods}",
									".__C__className"
								],
								[
									"methodsPackageMetaName\t{methods}",
									"methodsPackageMetaName"
								],
								[
									"defaultDumpName\t{methods}",
									"defaultDumpName"
								],
								[
									".__C__name\t{methods}",
									".__C__name"
								],
								[
									"getGroup\t{methods}",
									"getGroup"
								],
								[
									".__C__ObjectsWithPackage\t{methods}",
									".__C__ObjectsWithPackage"
								],
								[
									".__C__glm.null\t{methods}",
									".__C__glm.null"
								],
								[
									"substituteDirect\t{methods}",
									"substituteDirect"
								],
								[
									"packageSlot\t{methods}",
									"packageSlot"
								],
								[
									".__C__defaultBindingFunction\t{methods}",
									".__C__defaultBindingFunction"
								],
								[
									"removeMethod\t{methods}",
									"removeMethod"
								],
								[
									".__C__special\t{methods}",
									".__C__special"
								],
								[
									".__C__SealedMethodDefinition\t{methods}",
									".__C__SealedMethodDefinition"
								],
								[
									"MethodsListSelect\t{methods}",
									"MethodsListSelect"
								],
								[
									"S3Part\t{methods}",
									"S3Part"
								],
								[
									".__C__list\t{methods}",
									".__C__list"
								],
								[
									".__C__NULL\t{methods}",
									".__C__NULL"
								],
								[
									"is\t{methods}",
									"is"
								],
								[
									"checkSlotAssignment\t{methods}",
									"checkSlotAssignment"
								],
								[
									"classMetaName\t{methods}",
									"classMetaName"
								],
								[
									"slotsFromS3\t{methods}",
									"slotsFromS3"
								],
								[
									"promptMethods\t{methods}",
									"promptMethods"
								],
								[
									"insertClassMethods\t{methods}",
									"insertClassMethods"
								],
								[
									"isXS3Class\t{methods}",
									"isXS3Class"
								],
								[
									"isRematched\t{methods}",
									"isRematched"
								],
								[
									".__C__.environment\t{methods}",
									".__C__.environment"
								],
								[
									".selectSuperClasses\t{methods}",
									".selectSuperClasses"
								],
								[
									".__C__genericFunctionWithTrace\t{methods}",
									".__C__genericFunctionWithTrace"
								],
								[
									".__C__anova\t{methods}",
									".__C__anova"
								],
								[
									".__C__socket\t{methods}",
									".__C__socket"
								],
								[
									"emptyMethodsList\t{methods}",
									"emptyMethodsList"
								],
								[
									"listFromMethods\t{methods}",
									"listFromMethods"
								],
								[
									"isGeneric\t{methods}",
									"isGeneric"
								],
								[
									".__C__refGeneratorSlot\t{methods}",
									".__C__refGeneratorSlot"
								],
								[
									".__C__integer\t{methods}",
									".__C__integer"
								],
								[
									"show\t{methods}",
									"show"
								],
								[
									"metaNameUndo\t{methods}",
									"metaNameUndo"
								],
								[
									".untracedFunction\t{methods}",
									".untracedFunction"
								],
								[
									"getMethodsForDispatch\t{methods}",
									"getMethodsForDispatch"
								],
								[
									".__C__packageIQR\t{methods}",
									".__C__packageIQR"
								],
								[
									".__C__envRefClass\t{methods}",
									".__C__envRefClass"
								],
								[
									"Math\t{methods}",
									"Math"
								],
								[
									"makePrototypeFromClassDef\t{methods}",
									"makePrototypeFromClassDef"
								],
								[
									"slot\t{methods}",
									"slot"
								],
								[
									".__C__complex\t{methods}",
									".__C__complex"
								],
								[
									"reconcilePropertiesAndPrototype\t{methods}",
									"reconcilePropertiesAndPrototype"
								],
								[
									"doPrimitiveMethod\t{methods}",
									"doPrimitiveMethod"
								],
								[
									"getValidity\t{methods}",
									"getValidity"
								],
								[
									".__C__classRepresentation\t{methods}",
									".__C__classRepresentation"
								],
								[
									"SignatureMethod\t{methods}",
									"SignatureMethod"
								],
								[
									".__C__libraryIQR\t{methods}",
									".__C__libraryIQR"
								],
								[
									"isSealedMethod\t{methods}",
									"isSealedMethod"
								],
								[
									"getPackageName\t{methods}",
									"getPackageName"
								],
								[
									".__C__OptionalFunction\t{methods}",
									".__C__OptionalFunction"
								],
								[
									"setIs\t{methods}",
									"setIs"
								],
								[
									"balanceMethodsList\t{methods}",
									"balanceMethodsList"
								],
								[
									".__C__missing\t{methods}",
									".__C__missing"
								],
								[
									"setLoadActions\t{methods}",
									"setLoadActions"
								],
								[
									"setDataPart\t{methods}",
									"setDataPart"
								],
								[
									".__C__refMethodDef\t{methods}",
									".__C__refMethodDef"
								],
								[
									"setGroupGeneric\t{methods}",
									"setGroupGeneric"
								],
								[
									".__C__genericFunction\t{methods}",
									".__C__genericFunction"
								],
								[
									"S3Class\t{methods}",
									"S3Class"
								],
								[
									"findUnique\t{methods}",
									"findUnique"
								],
								[
									".__C__classGeneratorFunction\t{methods}",
									".__C__classGeneratorFunction"
								],
								[
									"dumpMethods\t{methods}",
									"dumpMethods"
								],
								[
									".__C__raw\t{methods}",
									".__C__raw"
								],
								[
									".__C__mlm\t{methods}",
									".__C__mlm"
								],
								[
									"sigToEnv\t{methods}",
									"sigToEnv"
								],
								[
									"setGenericImplicit\t{methods}",
									"setGenericImplicit"
								],
								[
									".__C__POSIXct\t{methods}",
									".__C__POSIXct"
								],
								[
									"sealClass\t{methods}",
									"sealClass"
								],
								[
									".__C__groupGenericFunctionWithTrace\t{methods}",
									".__C__groupGenericFunctionWithTrace"
								],
								[
									"hasArg\t{methods}",
									"hasArg"
								],
								[
									"makeStandardGeneric\t{methods}",
									"makeStandardGeneric"
								],
								[
									"selectMethod\t{methods}",
									"selectMethod"
								],
								[
									"loadMethod\t{methods}",
									"loadMethod"
								],
								[
									"getLoadActions\t{methods}",
									"getLoadActions"
								],
								[
									"prohibitGeneric\t{methods}",
									"prohibitGeneric"
								],
								[
									"substituteFunctionArgs\t{methods}",
									"substituteFunctionArgs"
								],
								[
									"completeExtends\t{methods}",
									"completeExtends"
								],
								[
									"assignClassDef\t{methods}",
									"assignClassDef"
								],
								[
									"methodSignatureMatrix\t{methods}",
									"methodSignatureMatrix"
								],
								[
									"isGrammarSymbol\t{methods}",
									"isGrammarSymbol"
								],
								[
									"prototype\t{methods}",
									"prototype"
								],
								[
									"requireMethods\t{methods}",
									"requireMethods"
								],
								[
									".__C__data.frameRowLabels\t{methods}",
									".__C__data.frameRowLabels"
								],
								[
									".__C__activeBindingFunction\t{methods}",
									".__C__activeBindingFunction"
								],
								[
									".__C__externalptr\t{methods}",
									".__C__externalptr"
								],
								[
									".__C__.name\t{methods}",
									".__C__.name"
								],
								[
									"setOldClass\t{methods}",
									"setOldClass"
								],
								[
									"setPrimitiveMethods\t{methods}",
									"setPrimitiveMethods"
								],
								[
									".__C__recordedplot\t{methods}",
									".__C__recordedplot"
								],
								[
									"isGroup\t{methods}",
									"isGroup"
								],
								[
									"getAllSuperClasses\t{methods}",
									"getAllSuperClasses"
								],
								[
									".__C__localRefClass\t{methods}",
									".__C__localRefClass"
								],
								[
									"findMethods\t{methods}",
									"findMethods"
								],
								[
									"rematchDefinition\t{methods}",
									"rematchDefinition"
								],
								[
									"MethodAddCoerce\t{methods}",
									"MethodAddCoerce"
								],
								[
									".__C__POSIXt\t{methods}",
									".__C__POSIXt"
								],
								[
									".__C__summary.table\t{methods}",
									".__C__summary.table"
								],
								[
									"hasMethod\t{methods}",
									"hasMethod"
								],
								[
									".__C__language\t{methods}",
									".__C__language"
								],
								[
									".__C__refClass\t{methods}",
									".__C__refClass"
								],
								[
									"evalqOnLoad\t{methods}",
									"evalqOnLoad"
								],
								[
									"insertSource\t{methods}",
									"insertSource"
								],
								[
									"hasLoadAction\t{methods}",
									"hasLoadAction"
								],
								[
									".__C__numeric\t{methods}",
									".__C__numeric"
								],
								[
									".__C__derivedDefaultMethodWithTrace\t{methods}",
									".__C__derivedDefaultMethodWithTrace"
								],
								[
									".__C__externalRefMethod\t{methods}",
									".__C__externalRefMethod"
								],
								[
									"validSlotNames\t{methods}",
									"validSlotNames"
								],
								[
									"multipleClasses\t{methods}",
									"multipleClasses"
								],
								[
									"empty.dump\t{methods}",
									"empty.dump"
								],
								[
									"setPackageName\t{methods}",
									"setPackageName"
								],
								[
									".__C__MethodDefinitionWithTrace\t{methods}",
									".__C__MethodDefinitionWithTrace"
								],
								[
									".__C__maov\t{methods}",
									".__C__maov"
								],
								[
									".__C__standardGenericWithTrace\t{methods}",
									".__C__standardGenericWithTrace"
								],
								[
									"getClassDef\t{methods}",
									"getClassDef"
								],
								[
									"newEmptyObject\t{methods}",
									"newEmptyObject"
								],
								[
									"formalArgs\t{methods}",
									"formalArgs"
								],
								[
									"Arith\t{methods}",
									"Arith"
								],
								[
									"mergeMethods\t{methods}",
									"mergeMethods"
								],
								[
									"MethodsList\t{methods}",
									"MethodsList"
								],
								[
									"getRefClass\t{methods}",
									"getRefClass"
								],
								[
									"inheritedSlotNames\t{methods}",
									"inheritedSlotNames"
								],
								[
									".__C__.NULL\t{methods}",
									".__C__.NULL"
								],
								[
									".__C__PossibleMethod\t{methods}",
									".__C__PossibleMethod"
								],
								[
									"classesToAM\t{methods}",
									"classesToAM"
								],
								[
									".__C__functionWithTrace\t{methods}",
									".__C__functionWithTrace"
								],
								[
									"asMethodDefinition\t{methods}",
									"asMethodDefinition"
								],
								[
									".__C__factor\t{methods}",
									".__C__factor"
								],
								[
									".__C__sourceEnvironment\t{methods}",
									".__C__sourceEnvironment"
								],
								[
									"languageEl\t{methods}",
									"languageEl"
								],
								[
									"Ops\t{methods}",
									"Ops"
								],
								[
									"getMethod\t{methods}",
									"getMethod"
								],
								[
									".__C__MethodDefinition\t{methods}",
									".__C__MethodDefinition"
								],
								[
									"listFromMlist\t{methods}",
									"listFromMlist"
								],
								[
									"allNames\t{methods}",
									"allNames"
								],
								[
									".__C__mts\t{methods}",
									".__C__mts"
								],
								[
									".__C__mtable\t{methods}",
									".__C__mtable"
								],
								[
									"completeSubclasses\t{methods}",
									"completeSubclasses"
								],
								[
									"cacheGenericsMetaData\t{methods}",
									"cacheGenericsMetaData"
								],
								[
									".__C__data.frame\t{methods}",
									".__C__data.frame"
								],
								[
									"tryNew\t{methods}",
									"tryNew"
								],
								[
									"findClass\t{methods}",
									"findClass"
								],
								[
									"cacheMethod\t{methods}",
									"cacheMethod"
								],
								[
									"showDefault\t{methods}",
									"showDefault"
								],
								[
									"Compare\t{methods}",
									"Compare"
								],
								[
									"new\t{methods}",
									"new"
								],
								[
									".__C__if\t{methods}",
									".__C__if"
								],
								[
									".__C__EmptyMethodsList\t{methods}",
									".__C__EmptyMethodsList"
								],
								[
									"makeClassRepresentation\t{methods}",
									"makeClassRepresentation"
								],
								[
									"promptClass\t{methods}",
									"promptClass"
								],
								[
									".__C__optionalMethod\t{methods}",
									".__C__optionalMethod"
								],
								[
									"newClassRepresentation\t{methods}",
									"newClassRepresentation"
								],
								[
									".S4methods\t{methods}",
									".S4methods"
								],
								[
									".__C__ANY\t{methods}",
									".__C__ANY"
								],
								[
									"testVirtual\t{methods}",
									"testVirtual"
								],
								[
									".__C__refClassRepresentation\t{methods}",
									".__C__refClassRepresentation"
								],
								[
									".__C__conditionalExtension\t{methods}",
									".__C__conditionalExtension"
								],
								[
									"linearizeMlist\t{methods}",
									"linearizeMlist"
								],
								[
									"removeGeneric\t{methods}",
									"removeGeneric"
								],
								[
									"canCoerce\t{methods}",
									"canCoerce"
								],
								[
									".__C__traceable\t{methods}",
									".__C__traceable"
								],
								[
									".__C__MethodWithNextWithTrace\t{methods}",
									".__C__MethodWithNextWithTrace"
								],
								[
									"rbind2\t{methods}",
									"rbind2"
								],
								[
									".__C__anova.glm.null\t{methods}",
									".__C__anova.glm.null"
								],
								[
									".__C__.externalptr\t{methods}",
									".__C__.externalptr"
								],
								[
									".__C__matrix\t{methods}",
									".__C__matrix"
								],
								[
									"setValidity\t{methods}",
									"setValidity"
								],
								[
									"functionBody\t{methods}",
									"functionBody"
								],
								[
									".__C__hsearch\t{methods}",
									".__C__hsearch"
								],
								[
									".__C__function\t{methods}",
									".__C__function"
								],
								[
									"getGeneric\t{methods}",
									"getGeneric"
								],
								[
									".__C__POSIXlt\t{methods}",
									".__C__POSIXlt"
								],
								[
									"dumpMethod\t{methods}",
									"dumpMethod"
								],
								[
									"elNamed\t{methods}",
									"elNamed"
								],
								[
									".__C__logical\t{methods}",
									".__C__logical"
								],
								[
									".__C__nonstandardGenericWithTrace\t{methods}",
									".__C__nonstandardGenericWithTrace"
								],
								[
									".__C__summaryDefault\t{methods}",
									".__C__summaryDefault"
								],
								[
									".__C__derivedDefaultMethod\t{methods}",
									".__C__derivedDefaultMethod"
								],
								[
									".__C__nonstandardGeneric\t{methods}",
									".__C__nonstandardGeneric"
								],
								[
									".doTracePrint\t{methods}",
									".doTracePrint"
								],
								[
									".__C__glm\t{methods}",
									".__C__glm"
								],
								[
									".__C__nonstandardGenericFunction\t{methods}",
									".__C__nonstandardGenericFunction"
								],
								[
									".__C__refObjectGenerator\t{methods}",
									".__C__refObjectGenerator"
								],
								[
									".__C__builtin\t{methods}",
									".__C__builtin"
								],
								[
									"setClass\t{methods}",
									"setClass"
								],
								[
									".__C__for\t{methods}",
									".__C__for"
								],
								[
									"isSealedClass\t{methods}",
									"isSealedClass"
								],
								[
									"generic.skeleton\t{methods}",
									"generic.skeleton"
								],
								[
									".__C__internalDispatchMethod\t{methods}",
									".__C__internalDispatchMethod"
								],
								[
									".__C__anova.glm\t{methods}",
									".__C__anova.glm"
								],
								[
									"makeGeneric\t{methods}",
									"makeGeneric"
								],
								[
									"setMethod\t{methods}",
									"setMethod"
								],
								[
									"isClassUnion\t{methods}",
									"isClassUnion"
								],
								[
									"coerce\t{methods}",
									"coerce"
								],
								[
									"initFieldArgs\t{methods}",
									"initFieldArgs"
								],
								[
									".valueClassTest\t{methods}",
									".valueClassTest"
								],
								[
									"validObject\t{methods}",
									"validObject"
								],
								[
									"getClasses\t{methods}",
									"getClasses"
								],
								[
									"setGeneric\t{methods}",
									"setGeneric"
								],
								[
									"unRematchDefinition\t{methods}",
									"unRematchDefinition"
								],
								[
									".__C__nonStructure\t{methods}",
									".__C__nonStructure"
								],
								[
									"hasMethods\t{methods}",
									"hasMethods"
								],
								[
									".__C__call\t{methods}",
									".__C__call"
								],
								[
									"existsFunction\t{methods}",
									"existsFunction"
								],
								[
									"classLabel\t{methods}",
									"classLabel"
								],
								[
									"defaultPrototype\t{methods}",
									"defaultPrototype"
								],
								[
									".__C__MethodWithNext\t{methods}",
									".__C__MethodWithNext"
								],
								[
									".__C__rle\t{methods}",
									".__C__rle"
								],
								[
									"showMethods\t{methods}",
									"showMethods"
								],
								[
									".__C__logLik\t{methods}",
									".__C__logLik"
								],
								[
									".__C__namedList\t{methods}",
									".__C__namedList"
								],
								[
									".__C__formula\t{methods}",
									".__C__formula"
								],
								[
									"findMethod\t{methods}",
									"findMethod"
								],
								[
									"testInheritedMethods\t{methods}",
									"testInheritedMethods"
								],
								[
									"as\t{methods}",
									"as"
								],
								[
									"conformMethod\t{methods}",
									"conformMethod"
								],
								[
									"makeMethodsList\t{methods}",
									"makeMethodsList"
								],
								[
									"newBasic\t{methods}",
									"newBasic"
								],
								[
									".__C__while\t{methods}",
									".__C__while"
								],
								[
									".slotNames\t{methods}",
									".slotNames"
								],
								[
									"className\t{methods}",
									"className"
								],
								[
									".__C__expression\t{methods}",
									".__C__expression"
								],
								[
									".__C__refMethodDefWithTrace\t{methods}",
									".__C__refMethodDefWithTrace"
								],
								[
									"setLoadAction\t{methods}",
									"setLoadAction"
								],
								[
									".__C__VIRTUAL\t{methods}",
									".__C__VIRTUAL"
								],
								[
									"superClassDepth\t{methods}",
									"superClassDepth"
								],
								[
									".__C__SClassExtension\t{methods}",
									".__C__SClassExtension"
								],
								[
									"existsMethod\t{methods}",
									"existsMethod"
								],
								[
									"getFunction\t{methods}",
									"getFunction"
								],
								[
									"getMethodsMetaData\t{methods}",
									"getMethodsMetaData"
								],
								[
									"write.socket\t{utils}",
									"write.socket"
								],
								[
									"fixInNamespace\t{utils}",
									"fixInNamespace"
								],
								[
									"changedFiles\t{utils}",
									"changedFiles"
								],
								[
									"history\t{utils}",
									"history"
								],
								[
									"SweaveHooks\t{utils}",
									"SweaveHooks"
								],
								[
									"packageDate\t{utils}",
									"packageDate"
								],
								[
									"installed.packages\t{utils}",
									"installed.packages"
								],
								[
									"citEntry\t{utils}",
									"citEntry"
								],
								[
									"as.roman\t{utils}",
									"as.roman"
								],
								[
									".romans\t{utils}",
									".romans"
								],
								[
									"suppressForeignCheck\t{utils}",
									"suppressForeignCheck"
								],
								[
									"aregexec\t{utils}",
									"aregexec"
								],
								[
									"txtProgressBar\t{utils}",
									"txtProgressBar"
								],
								[
									"strcapture\t{utils}",
									"strcapture"
								],
								[
									"xemacs\t{utils}",
									"xemacs"
								],
								[
									"rtags\t{utils}",
									"rtags"
								],
								[
									"as.person\t{utils}",
									"as.person"
								],
								[
									"maintainer\t{utils}",
									"maintainer"
								],
								[
									"aspell\t{utils}",
									"aspell"
								],
								[
									"bug.report\t{utils}",
									"bug.report"
								],
								[
									"capture.output\t{utils}",
									"capture.output"
								],
								[
									"remhash\t{utils}",
									"remhash"
								],
								[
									"assignInMyNamespace\t{utils}",
									"assignInMyNamespace"
								],
								[
									"aspell_package_vignettes\t{utils}",
									"aspell_package_vignettes"
								],
								[
									"memory.limit\t{utils}",
									"memory.limit"
								],
								[
									"person\t{utils}",
									"person"
								],
								[
									"ls.str\t{utils}",
									"ls.str"
								],
								[
									"read.delim2\t{utils}",
									"read.delim2"
								],
								[
									"RweaveLatexWritedoc\t{utils}",
									"RweaveLatexWritedoc"
								],
								[
									"hasName\t{utils}",
									"hasName"
								],
								[
									"getTxtProgressBar\t{utils}",
									"getTxtProgressBar"
								],
								[
									"news\t{utils}",
									"news"
								],
								[
									"typhash\t{utils}",
									"typhash"
								],
								[
									"read.csv\t{utils}",
									"read.csv"
								],
								[
									"RSiteSearch\t{utils}",
									"RSiteSearch"
								],
								[
									"debugger\t{utils}",
									"debugger"
								],
								[
									"demo\t{utils}",
									"demo"
								],
								[
									"isS3stdGeneric\t{utils}",
									"isS3stdGeneric"
								],
								[
									"Sweave\t{utils}",
									"Sweave"
								],
								[
									"nsl\t{utils}",
									"nsl"
								],
								[
									"modifyList\t{utils}",
									"modifyList"
								],
								[
									"promptData\t{utils}",
									"promptData"
								],
								[
									"help.request\t{utils}",
									"help.request"
								],
								[
									"alarm\t{utils}",
									"alarm"
								],
								[
									".DollarNames\t{utils}",
									".DollarNames"
								],
								[
									"promptImport\t{utils}",
									"promptImport"
								],
								[
									"close.socket\t{utils}",
									"close.socket"
								],
								[
									"read.csv2\t{utils}",
									"read.csv2"
								],
								[
									"zip\t{utils}",
									"zip"
								],
								[
									"hsearch_db_concepts\t{utils}",
									"hsearch_db_concepts"
								],
								[
									"assignInNamespace\t{utils}",
									"assignInNamespace"
								],
								[
									"askYesNo\t{utils}",
									"askYesNo"
								],
								[
									"read.delim\t{utils}",
									"read.delim"
								],
								[
									"limitedLabels\t{utils}",
									"limitedLabels"
								],
								[
									"is.relistable\t{utils}",
									"is.relistable"
								],
								[
									"toLatex\t{utils}",
									"toLatex"
								],
								[
									"citFooter\t{utils}",
									"citFooter"
								],
								[
									"head.matrix\t{utils}",
									"head.matrix"
								],
								[
									"View\t{utils}",
									"View"
								],
								[
									"findMatches\t{utils}",
									"findMatches"
								],
								[
									"create.post\t{utils}",
									"create.post"
								],
								[
									"globalVariables\t{utils}",
									"globalVariables"
								],
								[
									"vi\t{utils}",
									"vi"
								],
								[
									"bibentry\t{utils}",
									"bibentry"
								],
								[
									"checkCRAN\t{utils}",
									"checkCRAN"
								],
								[
									"Stangle\t{utils}",
									"Stangle"
								],
								[
									"methods\t{utils}",
									"methods"
								],
								[
									"sethash\t{utils}",
									"sethash"
								],
								[
									"type.convert\t{utils}",
									"type.convert"
								],
								[
									"findLineNum\t{utils}",
									"findLineNum"
								],
								[
									"menu\t{utils}",
									"menu"
								],
								[
									"aspell_package_C_files\t{utils}",
									"aspell_package_C_files"
								],
								[
									"old.packages\t{utils}",
									"old.packages"
								],
								[
									"hsearch_db_keywords\t{utils}",
									"hsearch_db_keywords"
								],
								[
									"RShowDoc\t{utils}",
									"RShowDoc"
								],
								[
									"browseURL\t{utils}",
									"browseURL"
								],
								[
									"debugcall\t{utils}",
									"debugcall"
								],
								[
									"is.hashtab\t{utils}",
									"is.hashtab"
								],
								[
									"gethash\t{utils}",
									"gethash"
								],
								[
									"setTxtProgressBar\t{utils}",
									"setTxtProgressBar"
								],
								[
									"tail\t{utils}",
									"tail"
								],
								[
									"emacs\t{utils}",
									"emacs"
								],
								[
									"object.size\t{utils}",
									"object.size"
								],
								[
									"RweaveTryStop\t{utils}",
									"RweaveTryStop"
								],
								[
									"undebugcall\t{utils}",
									"undebugcall"
								],
								[
									"download.file\t{utils}",
									"download.file"
								],
								[
									"loadhistory\t{utils}",
									"loadhistory"
								],
								[
									"RweaveChunkPrefix\t{utils}",
									"RweaveChunkPrefix"
								],
								[
									"summaryRprof\t{utils}",
									"summaryRprof"
								],
								[
									"make.socket\t{utils}",
									"make.socket"
								],
								[
									"xedit\t{utils}",
									"xedit"
								],
								[
									"data\t{utils}",
									"data"
								],
								[
									"charClass\t{utils}",
									"charClass"
								],
								[
									"RtangleSetup\t{utils}",
									"RtangleSetup"
								],
								[
									"browseEnv\t{utils}",
									"browseEnv"
								],
								[
									"update.packages\t{utils}",
									"update.packages"
								],
								[
									"untar\t{utils}",
									"untar"
								],
								[
									"tail.matrix\t{utils}",
									"tail.matrix"
								],
								[
									"getS3method\t{utils}",
									"getS3method"
								],
								[
									"write.table\t{utils}",
									"write.table"
								],
								[
									"strOptions\t{utils}",
									"strOptions"
								],
								[
									"rc.status\t{utils}",
									"rc.status"
								],
								[
									"asDateBuilt\t{utils}",
									"asDateBuilt"
								],
								[
									"Rprofmem\t{utils}",
									"Rprofmem"
								],
								[
									"apropos\t{utils}",
									"apropos"
								],
								[
									"getSrcDirectory\t{utils}",
									"getSrcDirectory"
								],
								[
									"as.relistable\t{utils}",
									"as.relistable"
								],
								[
									"SweaveSyntaxNoweb\t{utils}",
									"SweaveSyntaxNoweb"
								],
								[
									"SweaveSyntaxLatex\t{utils}",
									"SweaveSyntaxLatex"
								],
								[
									"citeNatbib\t{utils}",
									"citeNatbib"
								],
								[
									"read.fwf\t{utils}",
									"read.fwf"
								],
								[
									"de.setup\t{utils}",
									"de.setup"
								],
								[
									"removeSource\t{utils}",
									"removeSource"
								],
								[
									"data.entry\t{utils}",
									"data.entry"
								],
								[
									"packageVersion\t{utils}",
									"packageVersion"
								],
								[
									"as.personList\t{utils}",
									"as.personList"
								],
								[
									"citation\t{utils}",
									"citation"
								],
								[
									"citHeader\t{utils}",
									"citHeader"
								],
								[
									"read.fortran\t{utils}",
									"read.fortran"
								],
								[
									"findCRANmirror\t{utils}",
									"findCRANmirror"
								],
								[
									"aspell_package_R_files\t{utils}",
									"aspell_package_R_files"
								],
								[
									"RtangleFinish\t{utils}",
									"RtangleFinish"
								],
								[
									"hashtab\t{utils}",
									"hashtab"
								],
								[
									"rc.getOption\t{utils}",
									"rc.getOption"
								],
								[
									"RtangleWritedoc\t{utils}",
									"RtangleWritedoc"
								],
								[
									"readCitationFile\t{utils}",
									"readCitationFile"
								],
								[
									"stack\t{utils}",
									"stack"
								],
								[
									"package.skeleton\t{utils}",
									"package.skeleton"
								],
								[
									"memory.size\t{utils}",
									"memory.size"
								],
								[
									"de.ncols\t{utils}",
									"de.ncols"
								],
								[
									"file.edit\t{utils}",
									"file.edit"
								],
								[
									"sessionInfo\t{utils}",
									"sessionInfo"
								],
								[
									"SweaveSyntConv\t{utils}",
									"SweaveSyntConv"
								],
								[
									"RweaveLatex\t{utils}",
									"RweaveLatex"
								],
								[
									"help\t{utils}",
									"help"
								],
								[
									"prompt\t{utils}",
									"prompt"
								],
								[
									"getParseText\t{utils}",
									"getParseText"
								],
								[
									"osVersion\t{utils}",
									"osVersion"
								],
								[
									".AtNames\t{utils}",
									".AtNames"
								],
								[
									"url.show\t{utils}",
									"url.show"
								],
								[
									"getCRANmirrors\t{utils}",
									"getCRANmirrors"
								],
								[
									"head\t{utils}",
									"head"
								],
								[
									"localeToCharset\t{utils}",
									"localeToCharset"
								],
								[
									"Rprof\t{utils}",
									"Rprof"
								],
								[
									"getParseData\t{utils}",
									"getParseData"
								],
								[
									"RweaveLatexSetup\t{utils}",
									"RweaveLatexSetup"
								],
								[
									"formatOL\t{utils}",
									"formatOL"
								],
								[
									"dump.frames\t{utils}",
									"dump.frames"
								],
								[
									"read.table\t{utils}",
									"read.table"
								],
								[
									"URLdecode\t{utils}",
									"URLdecode"
								],
								[
									"numhash\t{utils}",
									"numhash"
								],
								[
									"isS3method\t{utils}",
									"isS3method"
								],
								[
									"compareVersion\t{utils}",
									"compareVersion"
								],
								[
									"count.fields\t{utils}",
									"count.fields"
								],
								[
									"tar\t{utils}",
									"tar"
								],
								[
									"setRepositories\t{utils}",
									"setRepositories"
								],
								[
									"edit\t{utils}",
									"edit"
								],
								[
									"mirror2html\t{utils}",
									"mirror2html"
								],
								[
									"relist\t{utils}",
									"relist"
								],
								[
									"chooseBioCmirror\t{utils}",
									"chooseBioCmirror"
								],
								[
									"available.packages\t{utils}",
									"available.packages"
								],
								[
									"aspell_write_personal_dictionary_file\t{utils}",
									"aspell_write_personal_dictionary_file"
								],
								[
									"getAnywhere\t{utils}",
									"getAnywhere"
								],
								[
									"hsearch_db\t{utils}",
									"hsearch_db"
								],
								[
									"personList\t{utils}",
									"personList"
								],
								[
									"fileSnapshot\t{utils}",
									"fileSnapshot"
								],
								[
									"combn\t{utils}",
									"combn"
								],
								[
									"packageStatus\t{utils}",
									"packageStatus"
								],
								[
									"read.socket\t{utils}",
									"read.socket"
								],
								[
									"find\t{utils}",
									"find"
								],
								[
									"RweaveLatexOptions\t{utils}",
									"RweaveLatexOptions"
								],
								[
									"page\t{utils}",
									"page"
								],
								[
									"write.csv\t{utils}",
									"write.csv"
								],
								[
									"dataentry\t{utils}",
									"dataentry"
								],
								[
									"getSrcFilename\t{utils}",
									"getSrcFilename"
								],
								[
									"packageDescription\t{utils}",
									"packageDescription"
								],
								[
									"file_test\t{utils}",
									"file_test"
								],
								[
									"toBibtex\t{utils}",
									"toBibtex"
								],
								[
									"browseVignettes\t{utils}",
									"browseVignettes"
								],
								[
									"setBreakpoint\t{utils}",
									"setBreakpoint"
								],
								[
									"download.packages\t{utils}",
									"download.packages"
								],
								[
									"remove.packages\t{utils}",
									"remove.packages"
								],
								[
									"RweaveLatexFinish\t{utils}",
									"RweaveLatexFinish"
								],
								[
									"chooseCRANmirror\t{utils}",
									"chooseCRANmirror"
								],
								[
									"upgrade\t{utils}",
									"upgrade"
								],
								[
									"de\t{utils}",
									"de"
								],
								[
									".RtangleCodeLabel\t{utils}",
									".RtangleCodeLabel"
								],
								[
									"formatUL\t{utils}",
									"formatUL"
								],
								[
									"de.restore\t{utils}",
									"de.restore"
								],
								[
									"promptPackage\t{utils}",
									"promptPackage"
								],
								[
									"write.csv2\t{utils}",
									"write.csv2"
								],
								[
									"Rtangle\t{utils}",
									"Rtangle"
								],
								[
									"packageName\t{utils}",
									"packageName"
								],
								[
									"glob2rx\t{utils}",
									"glob2rx"
								],
								[
									"unstack\t{utils}",
									"unstack"
								],
								[
									"read.DIF\t{utils}",
									"read.DIF"
								],
								[
									"savehistory\t{utils}",
									"savehistory"
								],
								[
									"vignette\t{utils}",
									"vignette"
								],
								[
									"install.packages\t{utils}",
									"install.packages"
								],
								[
									".S3methods\t{utils}",
									".S3methods"
								],
								[
									"argsAnywhere\t{utils}",
									"argsAnywhere"
								],
								[
									"help.search\t{utils}",
									"help.search"
								],
								[
									"getSrcref\t{utils}",
									"getSrcref"
								],
								[
									"makeRweaveLatexCodeRunner\t{utils}",
									"makeRweaveLatexCodeRunner"
								],
								[
									"RweaveEvalWithOpt\t{utils}",
									"RweaveEvalWithOpt"
								],
								[
									"lsf.str\t{utils}",
									"lsf.str"
								],
								[
									"select.list\t{utils}",
									"select.list"
								],
								[
									"cite\t{utils}",
									"cite"
								],
								[
									"recover\t{utils}",
									"recover"
								],
								[
									"fix\t{utils}",
									"fix"
								],
								[
									"new.packages\t{utils}",
									"new.packages"
								],
								[
									"aspell_package_Rd_files\t{utils}",
									"aspell_package_Rd_files"
								],
								[
									"str\t{utils}",
									"str"
								],
								[
									"RtangleRuncode\t{utils}",
									"RtangleRuncode"
								],
								[
									"process.events\t{utils}",
									"process.events"
								],
								[
									"example\t{utils}",
									"example"
								],
								[
									"warnErrList\t{utils}",
									"warnErrList"
								],
								[
									"getSrcLocation\t{utils}",
									"getSrcLocation"
								],
								[
									"flush.console\t{utils}",
									"flush.console"
								],
								[
									"maphash\t{utils}",
									"maphash"
								],
								[
									"timestamp\t{utils}",
									"timestamp"
								],
								[
									"make.packages.html\t{utils}",
									"make.packages.html"
								],
								[
									"rc.options\t{utils}",
									"rc.options"
								],
								[
									"getFromNamespace\t{utils}",
									"getFromNamespace"
								],
								[
									"clrhash\t{utils}",
									"clrhash"
								],
								[
									"adist\t{utils}",
									"adist"
								],
								[
									"contrib.url\t{utils}",
									"contrib.url"
								],
								[
									"URLencode\t{utils}",
									"URLencode"
								],
								[
									"rc.settings\t{utils}",
									"rc.settings"
								],
								[
									"help.start\t{utils}",
									"help.start"
								],
								[
									"unzip\t{utils}",
									"unzip"
								],
								[
									"pico\t{utils}",
									"pico"
								],
								[
									"expect_equal\t{tinytest}",
									"expect_equal"
								],
								[
									"test_all\t{tinytest}",
									"test_all"
								],
								[
									"expect_identical\t{tinytest}",
									"expect_identical"
								],
								[
									"test_package\t{tinytest}",
									"test_package"
								],
								[
									"expect_stdout\t{tinytest}",
									"expect_stdout"
								],
								[
									"expect_error\t{tinytest}",
									"expect_error"
								],
								[
									"run_test_file\t{tinytest}",
									"run_test_file"
								],
								[
									"expect_silent\t{tinytest}",
									"expect_silent"
								],
								[
									"expect_equivalent_to_reference\t{tinytest}",
									"expect_equivalent_to_reference"
								],
								[
									"expect_length\t{tinytest}",
									"expect_length"
								],
								[
									"expect_warning\t{tinytest}",
									"expect_warning"
								],
								[
									"expect_equal_to_reference\t{tinytest}",
									"expect_equal_to_reference"
								],
								[
									"register_tinytest_extension\t{tinytest}",
									"register_tinytest_extension"
								],
								[
									"expect_true\t{tinytest}",
									"expect_true"
								],
								[
									"exit_if_not\t{tinytest}",
									"exit_if_not"
								],
								[
									"run_test_dir\t{tinytest}",
									"run_test_dir"
								],
								[
									"expect_inherits\t{tinytest}",
									"expect_inherits"
								],
								[
									"at_home\t{tinytest}",
									"at_home"
								],
								[
									"report_side_effects\t{tinytest}",
									"report_side_effects"
								],
								[
									"expect_null\t{tinytest}",
									"expect_null"
								],
								[
									"tinytest\t{tinytest}",
									"tinytest"
								],
								[
									"expect_match\t{tinytest}",
									"expect_match"
								],
								[
									"setup_tinytest\t{tinytest}",
									"setup_tinytest"
								],
								[
									"ignore\t{tinytest}",
									"ignore"
								],
								[
									"puppy\t{tinytest}",
									"puppy"
								],
								[
									"expect_message\t{tinytest}",
									"expect_message"
								],
								[
									"any_pass\t{tinytest}",
									"any_pass"
								],
								[
									"expect_false\t{tinytest}",
									"expect_false"
								],
								[
									"exit_file\t{tinytest}",
									"exit_file"
								],
								[
									"all_pass\t{tinytest}",
									"all_pass"
								],
								[
									"using\t{tinytest}",
									"using"
								],
								[
									"expect_equivalent\t{tinytest}",
									"expect_equivalent"
								],
								[
									"any_fail\t{tinytest}",
									"any_fail"
								],
								[
									"all_fail\t{tinytest}",
									"all_fail"
								],
								[
									"build_install_test\t{tinytest}",
									"build_install_test"
								],
								[
									"get_call_wd\t{tinytest}",
									"get_call_wd"
								],
								[
									"-\t{base}",
									"-"
								],
								[
									"as.matrix.data.frame\t{base}",
									"as.matrix.data.frame"
								],
								[
									"F\t{base}",
									"F"
								],
								[
									"I\t{base}",
									"I"
								],
								[
									"registerS3methods\t{base}",
									"registerS3methods"
								],
								[
									"as.POSIXct.Date\t{base}",
									"as.POSIXct.Date"
								],
								[
									"T\t{base}",
									"T"
								],
								[
									"c\t{base}",
									"c"
								],
								[
									"q\t{base}",
									"q"
								],
								[
									"t\t{base}",
									"t"
								],
								[
									"array2DF\t{base}",
									"array2DF"
								],
								[
									"qr.solve\t{base}",
									"qr.solve"
								],
								[
									"str2expression\t{base}",
									"str2expression"
								],
								[
									"dynGet\t{base}",
									"dynGet"
								],
								[
									"as.single\t{base}",
									"as.single"
								],
								[
									"interaction\t{base}",
									"interaction"
								],
								[
									"as.POSIXlt.default\t{base}",
									"as.POSIXlt.default"
								],
								[
									"gamma\t{base}",
									"gamma"
								],
								[
									"as.package_version\t{base}",
									"as.package_version"
								],
								[
									".GlobalEnv\t{base}",
									".GlobalEnv"
								],
								[
									"getNativeSymbolInfo\t{base}",
									"getNativeSymbolInfo"
								],
								[
									"print.srcfile\t{base}",
									"print.srcfile"
								],
								[
									"packageHasNamespace\t{base}",
									"packageHasNamespace"
								],
								[
									".handleSimpleError\t{base}",
									".handleSimpleError"
								],
								[
									"xtfrm.AsIs\t{base}",
									"xtfrm.AsIs"
								],
								[
									"file.choose\t{base}",
									"file.choose"
								],
								[
									"summary.connection\t{base}",
									"summary.connection"
								],
								[
									".C\t{base}",
									".C"
								],
								[
									"subset.default\t{base}",
									"subset.default"
								],
								[
									"warningCondition\t{base}",
									"warningCondition"
								],
								[
									"utf8ToInt\t{base}",
									"utf8ToInt"
								],
								[
									"baseenv\t{base}",
									"baseenv"
								],
								[
									".set_row_names\t{base}",
									".set_row_names"
								],
								[
									"Ops.POSIXt\t{base}",
									"Ops.POSIXt"
								],
								[
									"quote\t{base}",
									"quote"
								],
								[
									"inverse.rle\t{base}",
									"inverse.rle"
								],
								[
									"memory.profile\t{base}",
									"memory.profile"
								],
								[
									"split.POSIXct\t{base}",
									"split.POSIXct"
								],
								[
									"unique.numeric_version\t{base}",
									"unique.numeric_version"
								],
								[
									"infoRDS\t{base}",
									"infoRDS"
								],
								[
									"length.POSIXlt\t{base}",
									"length.POSIXlt"
								],
								[
									"getOption\t{base}",
									"getOption"
								],
								[
									"Im\t{base}",
									"Im"
								],
								[
									"qr.Q\t{base}",
									"qr.Q"
								],
								[
									"qr.R\t{base}",
									"qr.R"
								],
								[
									"rapply\t{base}",
									"rapply"
								],
								[
									"qr.X\t{base}",
									"qr.X"
								],
								[
									"library.dynam\t{base}",
									"library.dynam"
								],
								[
									"evalq\t{base}",
									"evalq"
								],
								[
									"units.difftime\t{base}",
									"units.difftime"
								],
								[
									"Re\t{base}",
									"Re"
								],
								[
									"package_version\t{base}",
									"package_version"
								],
								[
									"is.name\t{base}",
									"is.name"
								],
								[
									"as.data.frame.matrix\t{base}",
									"as.data.frame.matrix"
								],
								[
									".NotYetImplemented\t{base}",
									".NotYetImplemented"
								],
								[
									"LETTERS\t{base}",
									"LETTERS"
								],
								[
									"unique.array\t{base}",
									"unique.array"
								],
								[
									".LC.categories\t{base}",
									".LC.categories"
								],
								[
									"dimnames.data.frame\t{base}",
									"dimnames.data.frame"
								],
								[
									"require\t{base}",
									"require"
								],
								[
									"parse\t{base}",
									"parse"
								],
								[
									"by\t{base}",
									"by"
								],
								[
									"gc\t{base}",
									"gc"
								],
								[
									"gl\t{base}",
									"gl"
								],
								[
									"if\t{base}",
									"if"
								],
								[
									"ls\t{base}",
									"ls"
								],
								[
									"unique.warnings\t{base}",
									"unique.warnings"
								],
								[
									"pi\t{base}",
									"pi"
								],
								[
									"gzcon\t{base}",
									"gzcon"
								],
								[
									"qr\t{base}",
									"qr"
								],
								[
									"lapply\t{base}",
									"lapply"
								],
								[
									"rm\t{base}",
									"rm"
								],
								[
									"paste\t{base}",
									"paste"
								],
								[
									"match\t{base}",
									"match"
								],
								[
									"order\t{base}",
									"order"
								],
								[
									"xpdrows.data.frame\t{base}",
									"xpdrows.data.frame"
								],
								[
									"rank\t{base}",
									"rank"
								],
								[
									"seq.default\t{base}",
									"seq.default"
								],
								[
									"startsWith\t{base}",
									"startsWith"
								],
								[
									".noGenerics\t{base}",
									".noGenerics"
								],
								[
									"aperm.default\t{base}",
									"aperm.default"
								],
								[
									"kronecker\t{base}",
									"kronecker"
								],
								[
									"traceback\t{base}",
									"traceback"
								],
								[
									"as.character.hexmode\t{base}",
									"as.character.hexmode"
								],
								[
									"simpleError\t{base}",
									"simpleError"
								],
								[
									"warnings\t{base}",
									"warnings"
								],
								[
									"as.Date.POSIXct\t{base}",
									"as.Date.POSIXct"
								],
								[
									"kappa.qr\t{base}",
									"kappa.qr"
								],
								[
									"isNamespace\t{base}",
									"isNamespace"
								],
								[
									"is.finite.POSIXlt\t{base}",
									"is.finite.POSIXlt"
								],
								[
									"colMeans\t{base}",
									"colMeans"
								],
								[
									"as.Date.POSIXlt\t{base}",
									"as.Date.POSIXlt"
								],
								[
									"asNamespace\t{base}",
									"asNamespace"
								],
								[
									"xtfrm.difftime\t{base}",
									"xtfrm.difftime"
								],
								[
									"quit\t{base}",
									"quit"
								],
								[
									"kappa.lm\t{base}",
									"kappa.lm"
								],
								[
									"setSessionTimeLimit\t{base}",
									"setSessionTimeLimit"
								],
								[
									"find.package\t{base}",
									"find.package"
								],
								[
									"weekdays.POSIXt\t{base}",
									"weekdays.POSIXt"
								],
								[
									"eval\t{base}",
									"eval"
								],
								[
									"c.numeric_version\t{base}",
									"c.numeric_version"
								],
								[
									"deparse1\t{base}",
									"deparse1"
								],
								[
									"split.Date\t{base}",
									"split.Date"
								],
								[
									"readChar\t{base}",
									"readChar"
								],
								[
									"autoloader\t{base}",
									"autoloader"
								],
								[
									"untracemem\t{base}",
									"untracemem"
								],
								[
									"Encoding\t{base}",
									"Encoding"
								],
								[
									"debuggingState\t{base}",
									"debuggingState"
								],
								[
									"do.call\t{base}",
									"do.call"
								],
								[
									".cache_class\t{base}",
									".cache_class"
								],
								[
									".getRequiredPackages2\t{base}",
									".getRequiredPackages2"
								],
								[
									"chooseOpsMethod.default\t{base}",
									"chooseOpsMethod.default"
								],
								[
									"levels.default\t{base}",
									"levels.default"
								],
								[
									"computeRestarts\t{base}",
									"computeRestarts"
								],
								[
									"readBin\t{base}",
									"readBin"
								],
								[
									"as.double.difftime\t{base}",
									"as.double.difftime"
								],
								[
									"sys.call\t{base}",
									"sys.call"
								],
								[
									"path.expand\t{base}",
									"path.expand"
								],
								[
									"fifo\t{base}",
									"fifo"
								],
								[
									"substitute\t{base}",
									"substitute"
								],
								[
									"data.matrix\t{base}",
									"data.matrix"
								],
								[
									"all.equal.formula\t{base}",
									"all.equal.formula"
								],
								[
									"as.logical.factor\t{base}",
									"as.logical.factor"
								],
								[
									"file\t{base}",
									"file"
								],
								[
									"srcfilealias\t{base}",
									"srcfilealias"
								],
								[
									"determinant\t{base}",
									"determinant"
								],
								[
									"print.noquote\t{base}",
									"print.noquote"
								],
								[
									"by.default\t{base}",
									"by.default"
								],
								[
									"Ops.ordered\t{base}",
									"Ops.ordered"
								],
								[
									"getNamespace\t{base}",
									"getNamespace"
								],
								[
									"as.POSIXct.default\t{base}",
									"as.POSIXct.default"
								],
								[
									"conditionMessage.condition\t{base}",
									"conditionMessage.condition"
								],
								[
									".OptRequireMethods\t{base}",
									".OptRequireMethods"
								],
								[
									"mean.POSIXct\t{base}",
									"mean.POSIXct"
								],
								[
									"as.POSIXct.POSIXlt\t{base}",
									"as.POSIXct.POSIXlt"
								],
								[
									"mean.POSIXlt\t{base}",
									"mean.POSIXlt"
								],
								[
									"as.character.octmode\t{base}",
									"as.character.octmode"
								],
								[
									".makeMessage\t{base}",
									".makeMessage"
								],
								[
									"browserSetDebug\t{base}",
									"browserSetDebug"
								],
								[
									"parent.env\t{base}",
									"parent.env"
								],
								[
									"print.listof\t{base}",
									"print.listof"
								],
								[
									"close.srcfile\t{base}",
									"close.srcfile"
								],
								[
									"anyNA.numeric_version\t{base}",
									"anyNA.numeric_version"
								],
								[
									"chooseOpsMethod\t{base}",
									"chooseOpsMethod"
								],
								[
									"socketAccept\t{base}",
									"socketAccept"
								],
								[
									"transform.data.frame\t{base}",
									"transform.data.frame"
								],
								[
									"interactive\t{base}",
									"interactive"
								],
								[
									"unname\t{base}",
									"unname"
								],
								[
									"remove\t{base}",
									"remove"
								],
								[
									"sample\t{base}",
									"sample"
								],
								[
									"getNamespaceVersion\t{base}",
									"getNamespaceVersion"
								],
								[
									"removeTaskCallback\t{base}",
									"removeTaskCallback"
								],
								[
									"scale\t{base}",
									"scale"
								],
								[
									"is.data.frame\t{base}",
									"is.data.frame"
								],
								[
									"textConnectionValue\t{base}",
									"textConnectionValue"
								],
								[
									"transform\t{base}",
									"transform"
								],
								[
									"lchoose\t{base}",
									"lchoose"
								],
								[
									"format.POSIXct\t{base}",
									"format.POSIXct"
								],
								[
									"is.call\t{base}",
									"is.call"
								],
								[
									".packages\t{base}",
									".packages"
								],
								[
									"row.names\t{base}",
									"row.names"
								],
								[
									"str2lang\t{base}",
									"str2lang"
								],
								[
									"print.factor\t{base}",
									"print.factor"
								],
								[
									"format.POSIXlt\t{base}",
									"format.POSIXlt"
								],
								[
									"switch\t{base}",
									"switch"
								],
								[
									"getElement\t{base}",
									"getElement"
								],
								[
									".amatch_costs\t{base}",
									".amatch_costs"
								],
								[
									"lengths\t{base}",
									"lengths"
								],
								[
									"save\t{base}",
									"save"
								],
								[
									"function\t{base}",
									"function"
								],
								[
									"is.single\t{base}",
									"is.single"
								],
								[
									"default.stringsAsFactors\t{base}",
									"default.stringsAsFactors"
								],
								[
									"pmatch\t{base}",
									"pmatch"
								],
								[
									"withRestarts\t{base}",
									"withRestarts"
								],
								[
									"scan\t{base}",
									"scan"
								],
								[
									"is.null\t{base}",
									"is.null"
								],
								[
									"sink.number\t{base}",
									"sink.number"
								],
								[
									"pretty\t{base}",
									"pretty"
								],
								[
									"Summary.Date\t{base}",
									"Summary.Date"
								],
								[
									"library.dynam.unload\t{base}",
									"library.dynam.unload"
								],
								[
									"letters\t{base}",
									"letters"
								],
								[
									"diff.difftime\t{base}",
									"diff.difftime"
								],
								[
									"browserCondition\t{base}",
									"browserCondition"
								],
								[
									"dir.exists\t{base}",
									"dir.exists"
								],
								[
									"print.srcref\t{base}",
									"print.srcref"
								],
								[
									"arrayInd\t{base}",
									"arrayInd"
								],
								[
									"casefold\t{base}",
									"casefold"
								],
								[
									"anyNA\t{base}",
									"anyNA"
								],
								[
									"suppressWarnings\t{base}",
									"suppressWarnings"
								],
								[
									"seek\t{base}",
									"seek"
								],
								[
									"is.language\t{base}",
									"is.language"
								],
								[
									"xtfrm.numeric_version\t{base}",
									"xtfrm.numeric_version"
								],
								[
									"get0\t{base}",
									"get0"
								],
								[
									"as.vector\t{base}",
									"as.vector"
								],
								[
									"strftime\t{base}",
									"strftime"
								],
								[
									"readRDS\t{base}",
									"readRDS"
								],
								[
									"is.pairlist\t{base}",
									"is.pairlist"
								],
								[
									"chartr\t{base}",
									"chartr"
								],
								[
									"rep.Date\t{base}",
									"rep.Date"
								],
								[
									"isFALSE\t{base}",
									"isFALSE"
								],
								[
									"as.pairlist\t{base}",
									"as.pairlist"
								],
								[
									"as.octmode\t{base}",
									"as.octmode"
								],
								[
									"is.na.numeric_version\t{base}",
									"is.na.numeric_version"
								],
								[
									"length\t{base}",
									"length"
								],
								[
									"formals\t{base}",
									"formals"
								],
								[
									"rawConnectionValue\t{base}",
									"rawConnectionValue"
								],
								[
									"Math.POSIXt\t{base}",
									"Math.POSIXt"
								],
								[
									"Sys.chmod\t{base}",
									"Sys.chmod"
								],
								[
									"formatC\t{base}",
									"formatC"
								],
								[
									"sign\t{base}",
									"sign"
								],
								[
									"sinh\t{base}",
									"sinh"
								],
								[
									"sink\t{base}",
									"sink"
								],
								[
									"solve\t{base}",
									"solve"
								],
								[
									".External.graphics\t{base}",
									".External.graphics"
								],
								[
									"as.data.frame.default\t{base}",
									"as.data.frame.default"
								],
								[
									"is.numeric.Date\t{base}",
									"is.numeric.Date"
								],
								[
									"all.equal.character\t{base}",
									"all.equal.character"
								],
								[
									"unsplit\t{base}",
									"unsplit"
								],
								[
									"as.hexmode\t{base}",
									"as.hexmode"
								],
								[
									"globalenv\t{base}",
									"globalenv"
								],
								[
									"list.files\t{base}",
									"list.files"
								],
								[
									"loadingNamespaceInfo\t{base}",
									"loadingNamespaceInfo"
								],
								[
									"packageEvent\t{base}",
									"packageEvent"
								],
								[
									"make.unique\t{base}",
									"make.unique"
								],
								[
									".decode_numeric_version\t{base}",
									".decode_numeric_version"
								],
								[
									"logical\t{base}",
									"logical"
								],
								[
									"as.vector.factor\t{base}",
									"as.vector.factor"
								],
								[
									"noquote\t{base}",
									"noquote"
								],
								[
									"as.qr\t{base}",
									"as.qr"
								],
								[
									"suppressPackageStartupMessages\t{base}",
									"suppressPackageStartupMessages"
								],
								[
									"as.null.default\t{base}",
									"as.null.default"
								],
								[
									"c.difftime\t{base}",
									"c.difftime"
								],
								[
									"as.data.frame.data.frame\t{base}",
									"as.data.frame.data.frame"
								],
								[
									"summary.warnings\t{base}",
									"summary.warnings"
								],
								[
									"file.show\t{base}",
									"file.show"
								],
								[
									"bindingIsLocked\t{base}",
									"bindingIsLocked"
								],
								[
									".maskedMsg\t{base}",
									".maskedMsg"
								],
								[
									".colSums\t{base}",
									".colSums"
								],
								[
									"acosh\t{base}",
									"acosh"
								],
								[
									"bzfile\t{base}",
									"bzfile"
								],
								[
									"intersect\t{base}",
									"intersect"
								],
								[
									"by.data.frame\t{base}",
									"by.data.frame"
								],
								[
									"summary.srcref\t{base}",
									"summary.srcref"
								],
								[
									"withAutoprint\t{base}",
									"withAutoprint"
								],
								[
									"as.table.default\t{base}",
									"as.table.default"
								],
								[
									"kappa.default\t{base}",
									"kappa.default"
								],
								[
									"as.list.Date\t{base}",
									"as.list.Date"
								],
								[
									".Primitive\t{base}",
									".Primitive"
								],
								[
									"getDLLRegisteredRoutines.character\t{base}",
									"getDLLRegisteredRoutines.character"
								],
								[
									"gctorture2\t{base}",
									"gctorture2"
								],
								[
									"Conj\t{base}",
									"Conj"
								],
								[
									"normalizePath\t{base}",
									"normalizePath"
								],
								[
									"sort\t{base}",
									"sort"
								],
								[
									"addNA\t{base}",
									"addNA"
								],
								[
									"is.matrix\t{base}",
									"is.matrix"
								],
								[
									"writeLines\t{base}",
									"writeLines"
								],
								[
									"colSums\t{base}",
									"colSums"
								],
								[
									"saveRDS\t{base}",
									"saveRDS"
								],
								[
									"suppressMessages\t{base}",
									"suppressMessages"
								],
								[
									"print.data.frame\t{base}",
									"print.data.frame"
								],
								[
									"undebug\t{base}",
									"undebug"
								],
								[
									"tanh\t{base}",
									"tanh"
								],
								[
									"is.loaded\t{base}",
									"is.loaded"
								],
								[
									"curlGetHeaders\t{base}",
									"curlGetHeaders"
								],
								[
									"sqrt\t{base}",
									"sqrt"
								],
								[
									"sample.int\t{base}",
									"sample.int"
								],
								[
									"grep\t{base}",
									"grep"
								],
								[
									"xtfrm.POSIXct\t{base}",
									"xtfrm.POSIXct"
								],
								[
									"is.logical\t{base}",
									"is.logical"
								],
								[
									"print.proc_time\t{base}",
									"print.proc_time"
								],
								[
									"Sys.readlink\t{base}",
									"Sys.readlink"
								],
								[
									"strsplit\t{base}",
									"strsplit"
								],
								[
									"xtfrm.POSIXlt\t{base}",
									"xtfrm.POSIXlt"
								],
								[
									"Cstack_info\t{base}",
									"Cstack_info"
								],
								[
									"dir.create\t{base}",
									"dir.create"
								],
								[
									"nlevels\t{base}",
									"nlevels"
								],
								[
									"aperm\t{base}",
									"aperm"
								],
								[
									"xtfrm\t{base}",
									"xtfrm"
								],
								[
									"Summary.data.frame\t{base}",
									"Summary.data.frame"
								],
								[
									"gsub\t{base}",
									"gsub"
								],
								[
									"merge.data.frame\t{base}",
									"merge.data.frame"
								],
								[
									"as.vector.POSIXlt\t{base}",
									"as.vector.POSIXlt"
								],
								[
									".S3PrimitiveGenerics\t{base}",
									".S3PrimitiveGenerics"
								],
								[
									"stop\t{base}",
									"stop"
								],
								[
									"sort.list\t{base}",
									"sort.list"
								],
								[
									"unloadNamespace\t{base}",
									"unloadNamespace"
								],
								[
									"grouping\t{base}",
									"grouping"
								],
								[
									"seek.connection\t{base}",
									"seek.connection"
								],
								[
									"as.matrix.default\t{base}",
									"as.matrix.default"
								],
								[
									"as.POSIXlt.numeric\t{base}",
									"as.POSIXlt.numeric"
								],
								[
									"eval.parent\t{base}",
									"eval.parent"
								],
								[
									"diff.POSIXt\t{base}",
									"diff.POSIXt"
								],
								[
									"pushBack\t{base}",
									"pushBack"
								],
								[
									"transform.default\t{base}",
									"transform.default"
								],
								[
									"srcfilecopy\t{base}",
									"srcfilecopy"
								],
								[
									"qr.coef\t{base}",
									"qr.coef"
								],
								[
									"restartFormals\t{base}",
									"restartFormals"
								],
								[
									"print.rle\t{base}",
									"print.rle"
								],
								[
									"format.octmode\t{base}",
									"format.octmode"
								],
								[
									"diff.Date\t{base}",
									"diff.Date"
								],
								[
									"conditionCall.condition\t{base}",
									"conditionCall.condition"
								],
								[
									"as.matrix\t{base}",
									"as.matrix"
								],
								[
									"enc2utf8\t{base}",
									"enc2utf8"
								],
								[
									"sys.function\t{base}",
									"sys.function"
								],
								[
									"print.DLLInfo\t{base}",
									"print.DLLInfo"
								],
								[
									"UseMethod\t{base}",
									"UseMethod"
								],
								[
									"write.dcf\t{base}",
									"write.dcf"
								],
								[
									"split\t{base}",
									"split"
								],
								[
									"match.call\t{base}",
									"match.call"
								],
								[
									"is.numeric.POSIXt\t{base}",
									"is.numeric.POSIXt"
								],
								[
									"sys.calls\t{base}",
									"sys.calls"
								],
								[
									".AutoloadEnv\t{base}",
									".AutoloadEnv"
								],
								[
									"format.numeric_version\t{base}",
									"format.numeric_version"
								],
								[
									"char.expand\t{base}",
									"char.expand"
								],
								[
									"signif\t{base}",
									"signif"
								],
								[
									"file.link\t{base}",
									"file.link"
								],
								[
									".Devices\t{base}",
									".Devices"
								],
								[
									"diff.default\t{base}",
									"diff.default"
								],
								[
									"dyn.load\t{base}",
									"dyn.load"
								],
								[
									".userHooksEnv\t{base}",
									".userHooksEnv"
								],
								[
									"anyNA.POSIXlt\t{base}",
									"anyNA.POSIXlt"
								],
								[
									".subset\t{base}",
									".subset"
								],
								[
									"expm1\t{base}",
									"expm1"
								],
								[
									"is.vector\t{base}",
									"is.vector"
								],
								[
									"apply\t{base}",
									"apply"
								],
								[
									"iconvlist\t{base}",
									"iconvlist"
								],
								[
									"chkDots\t{base}",
									"chkDots"
								],
								[
									".gt\t{base}",
									".gt"
								],
								[
									"is.na.data.frame\t{base}",
									"is.na.data.frame"
								],
								[
									"library\t{base}",
									"library"
								],
								[
									"julian.POSIXt\t{base}",
									"julian.POSIXt"
								],
								[
									"path.package\t{base}",
									"path.package"
								],
								[
									"as.data.frame.vector\t{base}",
									"as.data.frame.vector"
								],
								[
									"proc.time\t{base}",
									"proc.time"
								],
								[
									"table\t{base}",
									"table"
								],
								[
									"enc2native\t{base}",
									"enc2native"
								],
								[
									"as.data.frame.table\t{base}",
									"as.data.frame.table"
								],
								[
									"debug\t{base}",
									"debug"
								],
								[
									"OlsonNames\t{base}",
									"OlsonNames"
								],
								[
									"marginSums\t{base}",
									"marginSums"
								],
								[
									".Library\t{base}",
									".Library"
								],
								[
									"isOpen\t{base}",
									"isOpen"
								],
								[
									"grepRaw\t{base}",
									"grepRaw"
								],
								[
									"nullfile\t{base}",
									"nullfile"
								],
								[
									"rowsum\t{base}",
									"rowsum"
								],
								[
									"as.list.data.frame\t{base}",
									"as.list.data.frame"
								],
								[
									"as.list\t{base}",
									"as.list"
								],
								[
									"topenv\t{base}",
									"topenv"
								],
								[
									"system.file\t{base}",
									"system.file"
								],
								[
									"repeat\t{base}",
									"repeat"
								],
								[
									"as.character.factor\t{base}",
									"as.character.factor"
								],
								[
									"print.table\t{base}",
									"print.table"
								],
								[
									"lockEnvironment\t{base}",
									"lockEnvironment"
								],
								[
									"xtfrm.default\t{base}",
									"xtfrm.default"
								],
								[
									"all.vars\t{base}",
									"all.vars"
								],
								[
									"format.default\t{base}",
									"format.default"
								],
								[
									"choose\t{base}",
									"choose"
								],
								[
									"as.expression.default\t{base}",
									"as.expression.default"
								],
								[
									"bitwAnd\t{base}",
									"bitwAnd"
								],
								[
									"mem.maxVSize\t{base}",
									"mem.maxVSize"
								],
								[
									"tabulate\t{base}",
									"tabulate"
								],
								[
									"cut.POSIXt\t{base}",
									"cut.POSIXt"
								],
								[
									"as.POSIXlt.Date\t{base}",
									"as.POSIXlt.Date"
								],
								[
									"c.noquote\t{base}",
									"c.noquote"
								],
								[
									"file.size\t{base}",
									"file.size"
								],
								[
									"makeActiveBinding\t{base}",
									"makeActiveBinding"
								],
								[
									"c.Date\t{base}",
									"c.Date"
								],
								[
									"findInterval\t{base}",
									"findInterval"
								],
								[
									"all.equal.raw\t{base}",
									"all.equal.raw"
								],
								[
									"parseNamespaceFile\t{base}",
									"parseNamespaceFile"
								],
								[
									"icuSetCollate\t{base}",
									"icuSetCollate"
								],
								[
									"print.numeric_version\t{base}",
									"print.numeric_version"
								],
								[
									"sequence.default\t{base}",
									"sequence.default"
								],
								[
									"Sys.localeconv\t{base}",
									"Sys.localeconv"
								],
								[
									"conditionCall\t{base}",
									"conditionCall"
								],
								[
									"margin.table\t{base}",
									"margin.table"
								],
								[
									"sprintf\t{base}",
									"sprintf"
								],
								[
									"duplicated.matrix\t{base}",
									"duplicated.matrix"
								],
								[
									".ArgsEnv\t{base}",
									".ArgsEnv"
								],
								[
									"cbind.data.frame\t{base}",
									"cbind.data.frame"
								],
								[
									"read.dcf\t{base}",
									"read.dcf"
								],
								[
									"names\t{base}",
									"names"
								],
								[
									"append\t{base}",
									"append"
								],
								[
									"rowsum.data.frame\t{base}",
									"rowsum.data.frame"
								],
								[
									"mat.or.vec\t{base}",
									"mat.or.vec"
								],
								[
									"as.POSIXlt.POSIXct\t{base}",
									"as.POSIXlt.POSIXct"
								],
								[
									"R.version.string\t{base}",
									"R.version.string"
								],
								[
									"tanpi\t{base}",
									"tanpi"
								],
								[
									"namespaceExport\t{base}",
									"namespaceExport"
								],
								[
									"Summary.numeric_version\t{base}",
									"Summary.numeric_version"
								],
								[
									"prmatrix\t{base}",
									"prmatrix"
								],
								[
									"as.single.default\t{base}",
									"as.single.default"
								],
								[
									"expand.grid\t{base}",
									"expand.grid"
								],
								[
									"vapply\t{base}",
									"vapply"
								],
								[
									"dimnames\t{base}",
									"dimnames"
								],
								[
									"nameOfClass\t{base}",
									"nameOfClass"
								],
								[
									".popath\t{base}",
									".popath"
								],
								[
									"kappa\t{base}",
									"kappa"
								],
								[
									"identical\t{base}",
									"identical"
								],
								[
									"chol.default\t{base}",
									"chol.default"
								],
								[
									"sapply\t{base}",
									"sapply"
								],
								[
									".format.zeros\t{base}",
									".format.zeros"
								],
								[
									"gctorture\t{base}",
									"gctorture"
								],
								[
									"missing\t{base}",
									"missing"
								],
								[
									"abbreviate\t{base}",
									"abbreviate"
								],
								[
									"showConnections\t{base}",
									"showConnections"
								],
								[
									"merge\t{base}",
									"merge"
								],
								[
									"nargs\t{base}",
									"nargs"
								],
								[
									"proportions\t{base}",
									"proportions"
								],
								[
									"is.R\t{base}",
									"is.R"
								],
								[
									"Sys.sleep\t{base}",
									"Sys.sleep"
								],
								[
									"reg.finalizer\t{base}",
									"reg.finalizer"
								],
								[
									"isdebugged\t{base}",
									"isdebugged"
								],
								[
									".C_R_getTaskCallbackNames\t{base}",
									".C_R_getTaskCallbackNames"
								],
								[
									"anyDuplicated.default\t{base}",
									"anyDuplicated.default"
								],
								[
									"mapply\t{base}",
									"mapply"
								],
								[
									"asplit\t{base}",
									"asplit"
								],
								[
									"rep.factor\t{base}",
									"rep.factor"
								],
								[
									"zapsmall\t{base}",
									"zapsmall"
								],
								[
									"outer\t{base}",
									"outer"
								],
								[
									"print.function\t{base}",
									"print.function"
								],
								[
									"qr.default\t{base}",
									"qr.default"
								],
								[
									"backsolve\t{base}",
									"backsolve"
								],
								[
									"ISOdate\t{base}",
									"ISOdate"
								],
								[
									"duplicated.array\t{base}",
									"duplicated.array"
								],
								[
									"isS4\t{base}",
									"isS4"
								],
								[
									"isBaseNamespace\t{base}",
									"isBaseNamespace"
								],
								[
									"errorCondition\t{base}",
									"errorCondition"
								],
								[
									".detach\t{base}",
									".detach"
								],
								[
									"Arg\t{base}",
									"Arg"
								],
								[
									"file.mtime\t{base}",
									"file.mtime"
								],
								[
									"setwd\t{base}",
									"setwd"
								],
								[
									".kappa_tri\t{base}",
									".kappa_tri"
								],
								[
									"bitwNot\t{base}",
									"bitwNot"
								],
								[
									".getRequiredPackages\t{base}",
									".getRequiredPackages"
								],
								[
									"getwd\t{base}",
									"getwd"
								],
								[
									"list2env\t{base}",
									"list2env"
								],
								[
									"set.seed\t{base}",
									"set.seed"
								],
								[
									".doWrap\t{base}",
									".doWrap"
								],
								[
									"R_compiled_by\t{base}",
									"R_compiled_by"
								],
								[
									"is.primitive\t{base}",
									"is.primitive"
								],
								[
									"grepl\t{base}",
									"grepl"
								],
								[
									"Ops.data.frame\t{base}",
									"Ops.data.frame"
								],
								[
									"format.difftime\t{base}",
									"format.difftime"
								],
								[
									"trigamma\t{base}",
									"trigamma"
								],
								[
									"as.list.difftime\t{base}",
									"as.list.difftime"
								],
								[
									"character\t{base}",
									"character"
								],
								[
									".col\t{base}",
									".col"
								],
								[
									".POSIXct\t{base}",
									".POSIXct"
								],
								[
									"returnValue\t{base}",
									"returnValue"
								],
								[
									".POSIXlt\t{base}",
									".POSIXlt"
								],
								[
									"xtfrm.data.frame\t{base}",
									"xtfrm.data.frame"
								],
								[
									"Math.difftime\t{base}",
									"Math.difftime"
								],
								[
									"version\t{base}",
									"version"
								],
								[
									".F_dchdc\t{base}",
									".F_dchdc"
								],
								[
									"jitter\t{base}",
									"jitter"
								],
								[
									"isNamespaceLoaded\t{base}",
									"isNamespaceLoaded"
								],
								[
									"print.warnings\t{base}",
									"print.warnings"
								],
								[
									"simpleWarning\t{base}",
									"simpleWarning"
								],
								[
									"double\t{base}",
									"double"
								],
								[
									"as.expression\t{base}",
									"as.expression"
								],
								[
									"summary.srcfile\t{base}",
									"summary.srcfile"
								],
								[
									"summary.data.frame\t{base}",
									"summary.data.frame"
								],
								[
									"c.factor\t{base}",
									"c.factor"
								],
								[
									"debugonce\t{base}",
									"debugonce"
								],
								[
									"print\t{base}",
									"print"
								],
								[
									".isMethodsDispatchOn\t{base}",
									".isMethodsDispatchOn"
								],
								[
									"gregexec\t{base}",
									"gregexec"
								],
								[
									"forceAndCall\t{base}",
									"forceAndCall"
								],
								[
									"close.srcfilealias\t{base}",
									"close.srcfilealias"
								],
								[
									".gtn\t{base}",
									".gtn"
								],
								[
									".mergeExportMethods\t{base}",
									".mergeExportMethods"
								],
								[
									".primTrace\t{base}",
									".primTrace"
								],
								[
									"seq.int\t{base}",
									"seq.int"
								],
								[
									"gregexpr\t{base}",
									"gregexpr"
								],
								[
									"namespaceImportClasses\t{base}",
									"namespaceImportClasses"
								],
								[
									"contributors\t{base}",
									"contributors"
								],
								[
									"unix.time\t{base}",
									"unix.time"
								],
								[
									"ngettext\t{base}",
									"ngettext"
								],
								[
									"print.Dlist\t{base}",
									"print.Dlist"
								],
								[
									"Find\t{base}",
									"Find"
								],
								[
									"all.equal.envRefClass\t{base}",
									"all.equal.envRefClass"
								],
								[
									"as.name\t{base}",
									"as.name"
								],
								[
									"gettext\t{base}",
									"gettext"
								],
								[
									"rawToChar\t{base}",
									"rawToChar"
								],
								[
									"anyDuplicated.array\t{base}",
									"anyDuplicated.array"
								],
								[
									"unique.POSIXlt\t{base}",
									"unique.POSIXlt"
								],
								[
									"as.list.POSIXct\t{base}",
									"as.list.POSIXct"
								],
								[
									"as.data.frame.character\t{base}",
									"as.data.frame.character"
								],
								[
									"importIntoEnv\t{base}",
									"importIntoEnv"
								],
								[
									"as.list.POSIXlt\t{base}",
									"as.list.POSIXlt"
								],
								[
									"isIncomplete\t{base}",
									"isIncomplete"
								],
								[
									"qr.qy\t{base}",
									"qr.qy"
								],
								[
									"bitwXor\t{base}",
									"bitwXor"
								],
								[
									"format.factor\t{base}",
									"format.factor"
								],
								[
									"Map\t{base}",
									"Map"
								],
								[
									"getTaskCallbackNames\t{base}",
									"getTaskCallbackNames"
								],
								[
									"data.frame\t{base}",
									"data.frame"
								],
								[
									"Mod\t{base}",
									"Mod"
								],
								[
									"sQuote\t{base}",
									"sQuote"
								],
								[
									"regexec\t{base}",
									"regexec"
								],
								[
									"-.Date\t{base}",
									"-.Date"
								],
								[
									"regexpr\t{base}",
									"regexpr"
								],
								[
									"packageNotFoundError\t{base}",
									"packageNotFoundError"
								],
								[
									"sys.nframe\t{base}",
									"sys.nframe"
								],
								[
									"as.table\t{base}",
									"as.table"
								],
								[
									"sys.load.image\t{base}",
									"sys.load.image"
								],
								[
									"source\t{base}",
									"source"
								],
								[
									"objects\t{base}",
									"objects"
								],
								[
									"is.table\t{base}",
									"is.table"
								],
								[
									"sys.status\t{base}",
									"sys.status"
								],
								[
									"array\t{base}",
									"array"
								],
								[
									"search\t{base}",
									"search"
								],
								[
									"is.infinite\t{base}",
									"is.infinite"
								],
								[
									"Sys.setLanguage\t{base}",
									"Sys.setLanguage"
								],
								[
									".Machine\t{base}",
									".Machine"
								],
								[
									"weekdays.Date\t{base}",
									"weekdays.Date"
								],
								[
									"rownames\t{base}",
									"rownames"
								],
								[
									"readRenviron\t{base}",
									"readRenviron"
								],
								[
									"textConnection\t{base}",
									"textConnection"
								],
								[
									".rowMeans\t{base}",
									".rowMeans"
								],
								[
									"getSrcLines\t{base}",
									"getSrcLines"
								],
								[
									".Call\t{base}",
									".Call"
								],
								[
									"unclass\t{base}",
									"unclass"
								],
								[
									".expand_R_libs_env_var\t{base}",
									".expand_R_libs_env_var"
								],
								[
									"gc.time\t{base}",
									"gc.time"
								],
								[
									"cummax\t{base}",
									"cummax"
								],
								[
									"gcinfo\t{base}",
									"gcinfo"
								],
								[
									"cummin\t{base}",
									"cummin"
								],
								[
									".mergeImportMethods\t{base}",
									".mergeImportMethods"
								],
								[
									".subset2\t{base}",
									".subset2"
								],
								[
									"addTaskCallback\t{base}",
									"addTaskCallback"
								],
								[
									"file.mode\t{base}",
									"file.mode"
								],
								[
									".knownS3Generics\t{base}",
									".knownS3Generics"
								],
								[
									"unlockBinding\t{base}",
									"unlockBinding"
								],
								[
									"solve.qr\t{base}",
									"solve.qr"
								],
								[
									".deparseOpts\t{base}",
									".deparseOpts"
								],
								[
									"file.info\t{base}",
									"file.info"
								],
								[
									".row\t{base}",
									".row"
								],
								[
									"round.POSIXt\t{base}",
									"round.POSIXt"
								],
								[
									"duplicated.POSIXlt\t{base}",
									"duplicated.POSIXlt"
								],
								[
									"attachNamespace\t{base}",
									"attachNamespace"
								],
								[
									"dQuote\t{base}",
									"dQuote"
								],
								[
									"bquote\t{base}",
									"bquote"
								],
								[
									"builtins\t{base}",
									"builtins"
								],
								[
									".standard_regexps\t{base}",
									".standard_regexps"
								],
								[
									"format.summaryDefault\t{base}",
									"format.summaryDefault"
								],
								[
									"xzfile\t{base}",
									"xzfile"
								],
								[
									"cut.Date\t{base}",
									"cut.Date"
								],
								[
									"nchar\t{base}",
									"nchar"
								],
								[
									"simplify2array\t{base}",
									"simplify2array"
								],
								[
									"writeChar\t{base}",
									"writeChar"
								],
								[
									"La_library\t{base}",
									"La_library"
								],
								[
									"strptime\t{base}",
									"strptime"
								],
								[
									"serverSocket\t{base}",
									"serverSocket"
								],
								[
									"all.equal.numeric\t{base}",
									"all.equal.numeric"
								],
								[
									"readline\t{base}",
									"readline"
								],
								[
									"duplicated.data.frame\t{base}",
									"duplicated.data.frame"
								],
								[
									".__H__.rbind\t{base}",
									".__H__.rbind"
								],
								[
									"registerS3method\t{base}",
									"registerS3method"
								],
								[
									"as.list.default\t{base}",
									"as.list.default"
								],
								[
									"setNamespaceInfo\t{base}",
									"setNamespaceInfo"
								],
								[
									"seq.Date\t{base}",
									"seq.Date"
								],
								[
									"getNamespaceInfo\t{base}",
									"getNamespaceInfo"
								],
								[
									"asinh\t{base}",
									"asinh"
								],
								[
									"sys.on.exit\t{base}",
									"sys.on.exit"
								],
								[
									"anyNA.data.frame\t{base}",
									"anyNA.data.frame"
								],
								[
									"namespaceImportMethods\t{base}",
									"namespaceImportMethods"
								],
								[
									"sort.int\t{base}",
									"sort.int"
								],
								[
									"cumsum\t{base}",
									"cumsum"
								],
								[
									"environmentName\t{base}",
									"environmentName"
								],
								[
									"as.list.environment\t{base}",
									"as.list.environment"
								],
								[
									"restartDescription\t{base}",
									"restartDescription"
								],
								[
									".signalSimpleWarning\t{base}",
									".signalSimpleWarning"
								],
								[
									"autoload\t{base}",
									"autoload"
								],
								[
									"format.pval\t{base}",
									"format.pval"
								],
								[
									"as.data.frame\t{base}",
									"as.data.frame"
								],
								[
									"as.call\t{base}",
									"as.call"
								],
								[
									"with\t{base}",
									"with"
								],
								[
									"round.Date\t{base}",
									"round.Date"
								],
								[
									"emptyenv\t{base}",
									"emptyenv"
								],
								[
									"as.list.function\t{base}",
									"as.list.function"
								],
								[
									"agrepl\t{base}",
									"agrepl"
								],
								[
									"seq_len\t{base}",
									"seq_len"
								],
								[
									"rowsum.default\t{base}",
									"rowsum.default"
								],
								[
									"months.POSIXt\t{base}",
									"months.POSIXt"
								],
								[
									"besselI\t{base}",
									"besselI"
								],
								[
									"besselJ\t{base}",
									"besselJ"
								],
								[
									"besselK\t{base}",
									"besselK"
								],
								[
									"besselY\t{base}",
									"besselY"
								],
								[
									"numeric\t{base}",
									"numeric"
								],
								[
									"withCallingHandlers\t{base}",
									"withCallingHandlers"
								],
								[
									"open.srcfilecopy\t{base}",
									"open.srcfilecopy"
								],
								[
									"weekdays\t{base}",
									"weekdays"
								],
								[
									"formatDL\t{base}",
									"formatDL"
								],
								[
									"qr.fitted\t{base}",
									"qr.fitted"
								],
								[
									"system2\t{base}",
									"system2"
								],
								[
									".External2\t{base}",
									".External2"
								],
								[
									"as.factor\t{base}",
									"as.factor"
								],
								[
									"data.class\t{base}",
									"data.class"
								],
								[
									"is.symbol\t{base}",
									"is.symbol"
								],
								[
									"memCompress\t{base}",
									"memCompress"
								],
								[
									"simpleMessage\t{base}",
									"simpleMessage"
								],
								[
									"La_version\t{base}",
									"La_version"
								],
								[
									"as.difftime\t{base}",
									"as.difftime"
								],
								[
									"make.names\t{base}",
									"make.names"
								],
								[
									"as.null\t{base}",
									"as.null"
								],
								[
									"storage.mode\t{base}",
									"storage.mode"
								],
								[
									"getExportedValue\t{base}",
									"getExportedValue"
								],
								[
									"mean.Date\t{base}",
									"mean.Date"
								],
								[
									"atan2\t{base}",
									"atan2"
								],
								[
									"requireNamespace\t{base}",
									"requireNamespace"
								],
								[
									"atanh\t{base}",
									"atanh"
								],
								[
									"is.nan\t{base}",
									"is.nan"
								],
								[
									"class\t{base}",
									"class"
								],
								[
									"agrep\t{base}",
									"agrep"
								],
								[
									"which.min\t{base}",
									"which.min"
								],
								[
									"as.Date.default\t{base}",
									"as.Date.default"
								],
								[
									"Sys.glob\t{base}",
									"Sys.glob"
								],
								[
									"Sys.getpid\t{base}",
									"Sys.getpid"
								],
								[
									"which.max\t{base}",
									"which.max"
								],
								[
									"pretty.default\t{base}",
									"pretty.default"
								],
								[
									"on.exit\t{base}",
									"on.exit"
								],
								[
									".pretty\t{base}",
									".pretty"
								],
								[
									"tcrossprod\t{base}",
									"tcrossprod"
								],
								[
									".Date\t{base}",
									".Date"
								],
								[
									"crossprod\t{base}",
									"crossprod"
								],
								[
									"anyDuplicated.data.frame\t{base}",
									"anyDuplicated.data.frame"
								],
								[
									"abs\t{base}",
									"abs"
								],
								[
									"months.Date\t{base}",
									"months.Date"
								],
								[
									"-.POSIXt\t{base}",
									"-.POSIXt"
								],
								[
									"stdin\t{base}",
									"stdin"
								],
								[
									"all\t{base}",
									"all"
								],
								[
									"as.numeric\t{base}",
									"as.numeric"
								],
								[
									"any\t{base}",
									"any"
								],
								[
									"isTRUE\t{base}",
									"isTRUE"
								],
								[
									"charToRaw\t{base}",
									"charToRaw"
								],
								[
									"Sys.time\t{base}",
									"Sys.time"
								],
								[
									"as.Date.numeric\t{base}",
									"as.Date.numeric"
								],
								[
									"environment\t{base}",
									"environment"
								],
								[
									"cat\t{base}",
									"cat"
								],
								[
									"is.raw\t{base}",
									"is.raw"
								],
								[
									"mean.difftime\t{base}",
									"mean.difftime"
								],
								[
									"readLines\t{base}",
									"readLines"
								],
								[
									".rowSums\t{base}",
									".rowSums"
								],
								[
									"charmatch\t{base}",
									"charmatch"
								],
								[
									"col\t{base}",
									"col"
								],
								[
									"cos\t{base}",
									"cos"
								],
								[
									"mtfrm\t{base}",
									"mtfrm"
								],
								[
									"Sys.Date\t{base}",
									"Sys.Date"
								],
								[
									"det\t{base}",
									"det"
								],
								[
									"cut\t{base}",
									"cut"
								],
								[
									"dim\t{base}",
									"dim"
								],
								[
									"dir\t{base}",
									"dir"
								],
								[
									"as.data.frame.raw\t{base}",
									"as.data.frame.raw"
								],
								[
									"as.symbol\t{base}",
									"as.symbol"
								],
								[
									"as.data.frame.AsIs\t{base}",
									"as.data.frame.AsIs"
								],
								[
									"summary.factor\t{base}",
									"summary.factor"
								],
								[
									"anyDuplicated.matrix\t{base}",
									"anyDuplicated.matrix"
								],
								[
									"getDLLRegisteredRoutines.DLLInfo\t{base}",
									"getDLLRegisteredRoutines.DLLInfo"
								],
								[
									"exp\t{base}",
									"exp"
								],
								[
									"print.Date\t{base}",
									"print.Date"
								],
								[
									"split.data.frame\t{base}",
									"split.data.frame"
								],
								[
									"for\t{base}",
									"for"
								],
								[
									"rowSums\t{base}",
									"rowSums"
								],
								[
									"rawShift\t{base}",
									"rawShift"
								],
								[
									"get\t{base}",
									"get"
								],
								[
									"open.srcfilealias\t{base}",
									"open.srcfilealias"
								],
								[
									"as.list.numeric_version\t{base}",
									"as.list.numeric_version"
								],
								[
									"identity\t{base}",
									"identity"
								],
								[
									"Summary.factor\t{base}",
									"Summary.factor"
								],
								[
									"print.summaryDefault\t{base}",
									"print.summaryDefault"
								],
								[
									"toString.default\t{base}",
									"toString.default"
								],
								[
									"pushBackLength\t{base}",
									"pushBackLength"
								],
								[
									"extSoftVersion\t{base}",
									"extSoftVersion"
								],
								[
									"serialize\t{base}",
									"serialize"
								],
								[
									"is.complex\t{base}",
									"is.complex"
								],
								[
									"loadNamespace\t{base}",
									"loadNamespace"
								],
								[
									"all.equal.default\t{base}",
									"all.equal.default"
								],
								[
									"print.condition\t{base}",
									"print.condition"
								],
								[
									"RNGkind\t{base}",
									"RNGkind"
								],
								[
									"summary.table\t{base}",
									"summary.table"
								],
								[
									"nameOfClass.default\t{base}",
									"nameOfClass.default"
								],
								[
									"list\t{base}",
									"list"
								],
								[
									"isa\t{base}",
									"isa"
								],
								[
									"print.difftime\t{base}",
									"print.difftime"
								],
								[
									"as.character.error\t{base}",
									"as.character.error"
								],
								[
									"strtrim\t{base}",
									"strtrim"
								],
								[
									"licence\t{base}",
									"licence"
								],
								[
									"summary\t{base}",
									"summary"
								],
								[
									"row.names.data.frame\t{base}",
									"row.names.data.frame"
								],
								[
									"packageStartupMessage\t{base}",
									"packageStartupMessage"
								],
								[
									"print.summary.warnings\t{base}",
									"print.summary.warnings"
								],
								[
									"pmax.int\t{base}",
									"pmax.int"
								],
								[
									"julian.Date\t{base}",
									"julian.Date"
								],
								[
									"license\t{base}",
									"license"
								],
								[
									"sys.save.image\t{base}",
									"sys.save.image"
								],
								[
									"lazyLoadDBexec\t{base}",
									"lazyLoadDBexec"
								],
								[
									"max.col\t{base}",
									"max.col"
								],
								[
									"invisible\t{base}",
									"invisible"
								],
								[
									"open.srcfile\t{base}",
									"open.srcfile"
								],
								[
									"searchpaths\t{base}",
									"searchpaths"
								],
								[
									".formula2varlist\t{base}",
									".formula2varlist"
								],
								[
									"namespaceImportFrom\t{base}",
									"namespaceImportFrom"
								],
								[
									"sys.frames\t{base}",
									"sys.frames"
								],
								[
									"Recall\t{base}",
									"Recall"
								],
								[
									".difftime\t{base}",
									".difftime"
								],
								[
									"log\t{base}",
									"log"
								],
								[
									"numToBits\t{base}",
									"numToBits"
								],
								[
									"rawToBits\t{base}",
									"rawToBits"
								],
								[
									"max\t{base}",
									"max"
								],
								[
									"floor\t{base}",
									"floor"
								],
								[
									"Ops.numeric_version\t{base}",
									"Ops.numeric_version"
								],
								[
									"close\t{base}",
									"close"
								],
								[
									"Math.Date\t{base}",
									"Math.Date"
								],
								[
									"Math.data.frame\t{base}",
									"Math.data.frame"
								],
								[
									"min\t{base}",
									"min"
								],
								[
									"as.array\t{base}",
									"as.array"
								],
								[
									"assign\t{base}",
									"assign"
								],
								[
									"taskCallbackManager\t{base}",
									"taskCallbackManager"
								],
								[
									"gettextf\t{base}",
									"gettextf"
								],
								[
									".NotYetUsed\t{base}",
									".NotYetUsed"
								],
								[
									"setHook\t{base}",
									"setHook"
								],
								[
									"load\t{base}",
									"load"
								],
								[
									"socketTimeout\t{base}",
									"socketTimeout"
								],
								[
									"Negate\t{base}",
									"Negate"
								],
								[
									"unique.matrix\t{base}",
									"unique.matrix"
								],
								[
									"log2\t{base}",
									"log2"
								],
								[
									"as.character.POSIXt\t{base}",
									"as.character.POSIXt"
								],
								[
									"untrace\t{base}",
									"untrace"
								],
								[
									"logb\t{base}",
									"logb"
								],
								[
									"is.array\t{base}",
									"is.array"
								],
								[
									"droplevels.factor\t{base}",
									"droplevels.factor"
								],
								[
									"R.version\t{base}",
									"R.version"
								],
								[
									"R.Version\t{base}",
									"R.Version"
								],
								[
									"within.list\t{base}",
									"within.list"
								],
								[
									"inherits\t{base}",
									"inherits"
								],
								[
									"Sys.setenv\t{base}",
									"Sys.setenv"
								],
								[
									"comment\t{base}",
									"comment"
								],
								[
									"as.vector.data.frame\t{base}",
									"as.vector.data.frame"
								],
								[
									"print.DLLInfoList\t{base}",
									"print.DLLInfoList"
								],
								[
									"vector\t{base}",
									"vector"
								],
								[
									"system\t{base}",
									"system"
								],
								[
									".First.sys\t{base}",
									".First.sys"
								],
								[
									"save.image\t{base}",
									"save.image"
								],
								[
									"as.array.default\t{base}",
									"as.array.default"
								],
								[
									"format.info\t{base}",
									"format.info"
								],
								[
									".F_dqrqy\t{base}",
									".F_dqrqy"
								],
								[
									"Sys.setFileTime\t{base}",
									"Sys.setFileTime"
								],
								[
									".F_dqrxb\t{base}",
									".F_dqrxb"
								],
								[
									"setequal\t{base}",
									"setequal"
								],
								[
									"raw\t{base}",
									"raw"
								],
								[
									"typeof\t{base}",
									"typeof"
								],
								[
									"rep\t{base}",
									"rep"
								],
								[
									"rev\t{base}",
									"rev"
								],
								[
									"paste0\t{base}",
									"paste0"
								],
								[
									"rle\t{base}",
									"rle"
								],
								[
									"conditionMessage\t{base}",
									"conditionMessage"
								],
								[
									".F_dqrcf\t{base}",
									".F_dqrcf"
								],
								[
									"row\t{base}",
									"row"
								],
								[
									"stderr\t{base}",
									"stderr"
								],
								[
									".Last.value\t{base}",
									".Last.value"
								],
								[
									"seq\t{base}",
									"seq"
								],
								[
									"flush\t{base}",
									"flush"
								],
								[
									"sin\t{base}",
									"sin"
								],
								[
									"intToUtf8\t{base}",
									"intToUtf8"
								],
								[
									"acos\t{base}",
									"acos"
								],
								[
									"globalCallingHandlers\t{base}",
									"globalCallingHandlers"
								],
								[
									"within\t{base}",
									"within"
								],
								[
									"tan\t{base}",
									"tan"
								],
								[
									"as.matrix.noquote\t{base}",
									"as.matrix.noquote"
								],
								[
									"libcurlVersion\t{base}",
									"libcurlVersion"
								],
								[
									"sub\t{base}",
									"sub"
								],
								[
									"sum\t{base}",
									"sum"
								],
								[
									"svd\t{base}",
									"svd"
								],
								[
									"upper.tri\t{base}",
									"upper.tri"
								],
								[
									"isSymmetric.matrix\t{base}",
									"isSymmetric.matrix"
								],
								[
									"is.factor\t{base}",
									"is.factor"
								],
								[
									"mean\t{base}",
									"mean"
								],
								[
									"try\t{base}",
									"try"
								],
								[
									"rev.default\t{base}",
									"rev.default"
								],
								[
									"is.character\t{base}",
									"is.character"
								],
								[
									"Sys.getenv\t{base}",
									"Sys.getenv"
								],
								[
									"unz\t{base}",
									"unz"
								],
								[
									"as.data.frame.factor\t{base}",
									"as.data.frame.factor"
								],
								[
									"url\t{base}",
									"url"
								],
								[
									"Ops.Date\t{base}",
									"Ops.Date"
								],
								[
									"as.environment\t{base}",
									"as.environment"
								],
								[
									"mget\t{base}",
									"mget"
								],
								[
									"print.eigen\t{base}",
									"print.eigen"
								],
								[
									"invokeRestartInteractively\t{base}",
									"invokeRestartInteractively"
								],
								[
									"getNamespaceExports\t{base}",
									"getNamespaceExports"
								],
								[
									"subset.matrix\t{base}",
									"subset.matrix"
								],
								[
									"forwardsolve\t{base}",
									"forwardsolve"
								],
								[
									"solve.default\t{base}",
									"solve.default"
								],
								[
									"icuGetCollate\t{base}",
									"icuGetCollate"
								],
								[
									"dirname\t{base}",
									"dirname"
								],
								[
									"as.data.frame.model.matrix\t{base}",
									"as.data.frame.model.matrix"
								],
								[
									"Sys.info\t{base}",
									"Sys.info"
								],
								[
									"as.Date.character\t{base}",
									"as.Date.character"
								],
								[
									".encode_numeric_version\t{base}",
									".encode_numeric_version"
								],
								[
									"xor\t{base}",
									"xor"
								],
								[
									"quarters.POSIXt\t{base}",
									"quarters.POSIXt"
								],
								[
									"allowInterrupts\t{base}",
									"allowInterrupts"
								],
								[
									"julian\t{base}",
									"julian"
								],
								[
									"intToBits\t{base}",
									"intToBits"
								],
								[
									"validUTF8\t{base}",
									"validUTF8"
								],
								[
									"capabilities\t{base}",
									"capabilities"
								],
								[
									"print.simple.list\t{base}",
									"print.simple.list"
								],
								[
									"namespaceImport\t{base}",
									"namespaceImport"
								],
								[
									"geterrmessage\t{base}",
									"geterrmessage"
								],
								[
									"delayedAssign\t{base}",
									"delayedAssign"
								],
								[
									"print.DLLRegisteredRoutines\t{base}",
									"print.DLLRegisteredRoutines"
								],
								[
									"Sys.setlocale\t{base}",
									"Sys.setlocale"
								],
								[
									"difftime\t{base}",
									"difftime"
								],
								[
									"..getNamespace\t{base}",
									"..getNamespace"
								],
								[
									"range\t{base}",
									"range"
								],
								[
									"unique.data.frame\t{base}",
									"unique.data.frame"
								],
								[
									"deparse\t{base}",
									"deparse"
								],
								[
									"pairlist\t{base}",
									"pairlist"
								],
								[
									"sinpi\t{base}",
									"sinpi"
								],
								[
									"summary.POSIXct\t{base}",
									"summary.POSIXct"
								],
								[
									"print.NativeRoutineList\t{base}",
									"print.NativeRoutineList"
								],
								[
									"psigamma\t{base}",
									"psigamma"
								],
								[
									"file.access\t{base}",
									"file.access"
								],
								[
									"is.environment\t{base}",
									"is.environment"
								],
								[
									"Math.factor\t{base}",
									"Math.factor"
								],
								[
									"getRversion\t{base}",
									"getRversion"
								],
								[
									"droplevels\t{base}",
									"droplevels"
								],
								[
									"determinant.matrix\t{base}",
									"determinant.matrix"
								],
								[
									"stdout\t{base}",
									"stdout"
								],
								[
									"summary.POSIXlt\t{base}",
									"summary.POSIXlt"
								],
								[
									"suspendInterrupts\t{base}",
									"suspendInterrupts"
								],
								[
									"tapply\t{base}",
									"tapply"
								],
								[
									".F_dqrqty\t{base}",
									".F_dqrqty"
								],
								[
									"trace\t{base}",
									"trace"
								],
								[
									"callCC\t{base}",
									"callCC"
								],
								[
									".getNamespace\t{base}",
									".getNamespace"
								],
								[
									"as.matrix.POSIXlt\t{base}",
									"as.matrix.POSIXlt"
								],
								[
									"rowMeans\t{base}",
									"rowMeans"
								],
								[
									".isOpen\t{base}",
									".isOpen"
								],
								[
									"format.packageInfo\t{base}",
									"format.packageInfo"
								],
								[
									".F_dqrrsd\t{base}",
									".F_dqrrsd"
								],
								[
									"print.default\t{base}",
									"print.default"
								],
								[
									"shQuote\t{base}",
									"shQuote"
								],
								[
									"cut.default\t{base}",
									"cut.default"
								],
								[
									"range.default\t{base}",
									"range.default"
								],
								[
									"structure\t{base}",
									"structure"
								],
								[
									"mode\t{base}",
									"mode"
								],
								[
									"Ops.difftime\t{base}",
									"Ops.difftime"
								],
								[
									"attributes\t{base}",
									"attributes"
								],
								[
									"as.POSIXct\t{base}",
									"as.POSIXct"
								],
								[
									"all.names\t{base}",
									"all.names"
								],
								[
									"as.character\t{base}",
									"as.character"
								],
								[
									"as.POSIXlt\t{base}",
									"as.POSIXlt"
								],
								[
									"sort.default\t{base}",
									"sort.default"
								],
								[
									"simpleCondition\t{base}",
									"simpleCondition"
								],
								[
									"within.data.frame\t{base}",
									"within.data.frame"
								],
								[
									"endsWith\t{base}",
									"endsWith"
								],
								[
									"print.connection\t{base}",
									"print.connection"
								],
								[
									"split.default\t{base}",
									"split.default"
								],
								[
									"asS3\t{base}",
									"asS3"
								],
								[
									"asS4\t{base}",
									"asS4"
								],
								[
									"with.default\t{base}",
									"with.default"
								],
								[
									"balancePOSIXlt\t{base}",
									"balancePOSIXlt"
								],
								[
									"args\t{base}",
									"args"
								],
								[
									"break\t{base}",
									"break"
								],
								[
									"R_system_version\t{base}",
									"R_system_version"
								],
								[
									"matrix\t{base}",
									"matrix"
								],
								[
									"is.na.POSIXlt\t{base}",
									"is.na.POSIXlt"
								],
								[
									"basename\t{base}",
									"basename"
								],
								[
									"lbeta\t{base}",
									"lbeta"
								],
								[
									"asin\t{base}",
									"asin"
								],
								[
									"summary.default\t{base}",
									"summary.default"
								],
								[
									"file.append\t{base}",
									"file.append"
								],
								[
									"srcfile\t{base}",
									"srcfile"
								],
								[
									"Sys.which\t{base}",
									"Sys.which"
								],
								[
									"ncol\t{base}",
									"ncol"
								],
								[
									"return\t{base}",
									"return"
								],
								[
									"atan\t{base}",
									"atan"
								],
								[
									"eapply\t{base}",
									"eapply"
								],
								[
									"rep.POSIXct\t{base}",
									"rep.POSIXct"
								],
								[
									"rep.POSIXlt\t{base}",
									"rep.POSIXlt"
								],
								[
									"socketConnection\t{base}",
									"socketConnection"
								],
								[
									"format.Date\t{base}",
									"format.Date"
								],
								[
									"getConnection\t{base}",
									"getConnection"
								],
								[
									"tryCatch\t{base}",
									"tryCatch"
								],
								[
									"attr\t{base}",
									"attr"
								],
								[
									"tracemem\t{base}",
									"tracemem"
								],
								[
									"as.data.frame.ordered\t{base}",
									"as.data.frame.ordered"
								],
								[
									"format.hexmode\t{base}",
									"format.hexmode"
								],
								[
									"beta\t{base}",
									"beta"
								],
								[
									"seq.POSIXt\t{base}",
									"seq.POSIXt"
								],
								[
									"summary.Date\t{base}",
									"summary.Date"
								],
								[
									"next\t{base}",
									"next"
								],
								[
									"Sys.getlocale\t{base}",
									"Sys.getlocale"
								],
								[
									"lower.tri\t{base}",
									"lower.tri"
								],
								[
									"rbind\t{base}",
									"rbind"
								],
								[
									"union\t{base}",
									"union"
								],
								[
									"write\t{base}",
									"write"
								],
								[
									"units\t{base}",
									"units"
								],
								[
									"cbind\t{base}",
									"cbind"
								],
								[
									"dim.data.frame\t{base}",
									"dim.data.frame"
								],
								[
									"t.data.frame\t{base}",
									"t.data.frame"
								],
								[
									"month.abb\t{base}",
									"month.abb"
								],
								[
									"Sys.unsetenv\t{base}",
									"Sys.unsetenv"
								],
								[
									"dyn.unload\t{base}",
									"dyn.unload"
								],
								[
									"scale.default\t{base}",
									"scale.default"
								],
								[
									"invokeRestart\t{base}",
									"invokeRestart"
								],
								[
									"as.data.frame.integer\t{base}",
									"as.data.frame.integer"
								],
								[
									"all.equal.language\t{base}",
									"all.equal.language"
								],
								[
									"bitwOr\t{base}",
									"bitwOr"
								],
								[
									".Library.site\t{base}",
									".Library.site"
								],
								[
									".packageStartupMessage\t{base}",
									".packageStartupMessage"
								],
								[
									"close.connection\t{base}",
									"close.connection"
								],
								[
									"trimws\t{base}",
									"trimws"
								],
								[
									".Call.graphics\t{base}",
									".Call.graphics"
								],
								[
									".C_R_addTaskCallback\t{base}",
									".C_R_addTaskCallback"
								],
								[
									"unserialize\t{base}",
									"unserialize"
								],
								[
									".amatch_bounds\t{base}",
									".amatch_bounds"
								],
								[
									".S3_methods_table\t{base}",
									".S3_methods_table"
								],
								[
									".row_names_info\t{base}",
									".row_names_info"
								],
								[
									"standardGeneric\t{base}",
									"standardGeneric"
								],
								[
									".F_dqrdc2\t{base}",
									".F_dqrdc2"
								],
								[
									"is.nan.POSIXlt\t{base}",
									"is.nan.POSIXlt"
								],
								[
									"as.data.frame.Date\t{base}",
									"as.data.frame.Date"
								],
								[
									"R.home\t{base}",
									"R.home"
								],
								[
									"unique.default\t{base}",
									"unique.default"
								],
								[
									"sys.frame\t{base}",
									"sys.frame"
								],
								[
									"sys.source\t{base}",
									"sys.source"
								],
								[
									"as.double.POSIXlt\t{base}",
									"as.double.POSIXlt"
								],
								[
									"clearPushBack\t{base}",
									"clearPushBack"
								],
								[
									".leap.seconds\t{base}",
									".leap.seconds"
								],
								[
									".mapply\t{base}",
									".mapply"
								],
								[
									"bindtextdomain\t{base}",
									"bindtextdomain"
								],
								[
									"lgamma\t{base}",
									"lgamma"
								],
								[
									"aperm.table\t{base}",
									"aperm.table"
								],
								[
									"getLoadedDLLs\t{base}",
									"getLoadedDLLs"
								],
								[
									"subset.data.frame\t{base}",
									"subset.data.frame"
								],
								[
									"as.Date.factor\t{base}",
									"as.Date.factor"
								],
								[
									"format.libraryIQR\t{base}",
									"format.libraryIQR"
								],
								[
									"unique\t{base}",
									"unique"
								],
								[
									"as.data.frame.difftime\t{base}",
									"as.data.frame.difftime"
								],
								[
									"merge.default\t{base}",
									"merge.default"
								],
								[
									"ifelse\t{base}",
									"ifelse"
								],
								[
									"is.atomic\t{base}",
									"is.atomic"
								],
								[
									"sys.parents\t{base}",
									"sys.parents"
								],
								[
									"body\t{base}",
									"body"
								],
								[
									"as.character.default\t{base}",
									"as.character.default"
								],
								[
									"rep.int\t{base}",
									"rep.int"
								],
								[
									"as.data.frame.array\t{base}",
									"as.data.frame.array"
								],
								[
									"xtfrm.Date\t{base}",
									"xtfrm.Date"
								],
								[
									"norm\t{base}",
									"norm"
								],
								[
									"as.list.factor\t{base}",
									"as.list.factor"
								],
								[
									"retracemem\t{base}",
									"retracemem"
								],
								[
									"local\t{base}",
									"local"
								],
								[
									"expression\t{base}",
									"expression"
								],
								[
									"Reduce\t{base}",
									"Reduce"
								],
								[
									"signalCondition\t{base}",
									"signalCondition"
								],
								[
									"validEnc\t{base}",
									"validEnc"
								],
								[
									"log10\t{base}",
									"log10"
								],
								[
									"isSymmetric\t{base}",
									"isSymmetric"
								],
								[
									"log1p\t{base}",
									"log1p"
								],
								[
									"is.expression\t{base}",
									"is.expression"
								],
								[
									"tryInvokeRestart\t{base}",
									"tryInvokeRestart"
								],
								[
									"is.unsorted\t{base}",
									"is.unsorted"
								],
								[
									"droplevels.data.frame\t{base}",
									"droplevels.data.frame"
								],
								[
									"sys.parent\t{base}",
									"sys.parent"
								],
								[
									"call\t{base}",
									"call"
								],
								[
									"is.object\t{base}",
									"is.object"
								],
								[
									"pos.to.env\t{base}",
									"pos.to.env"
								],
								[
									"as.POSIXlt.character\t{base}",
									"as.POSIXlt.character"
								],
								[
									"sweep\t{base}",
									"sweep"
								],
								[
									".C_R_removeTaskCallback\t{base}",
									".C_R_removeTaskCallback"
								],
								[
									".libPaths\t{base}",
									".libPaths"
								],
								[
									".getNamespaceInfo\t{base}",
									".getNamespaceInfo"
								],
								[
									"trunc.POSIXt\t{base}",
									"trunc.POSIXt"
								],
								[
									"encodeString\t{base}",
									"encodeString"
								],
								[
									"trunc\t{base}",
									"trunc"
								],
								[
									"system.time\t{base}",
									"system.time"
								],
								[
									"all.equal.POSIXt\t{base}",
									"all.equal.POSIXt"
								],
								[
									"bitwShiftR\t{base}",
									"bitwShiftR"
								],
								[
									"nrow\t{base}",
									"nrow"
								],
								[
									"bitwShiftL\t{base}",
									"bitwShiftL"
								],
								[
									"print.restart\t{base}",
									"print.restart"
								],
								[
									"RNGversion\t{base}",
									"RNGversion"
								],
								[
									"sort.POSIXlt\t{base}",
									"sort.POSIXlt"
								],
								[
									"print.POSIXct\t{base}",
									"print.POSIXct"
								],
								[
									".S3method\t{base}",
									".S3method"
								],
								[
									"print.POSIXlt\t{base}",
									"print.POSIXlt"
								],
								[
									"withVisible\t{base}",
									"withVisible"
								],
								[
									"file.create\t{base}",
									"file.create"
								],
								[
									"getHook\t{base}",
									"getHook"
								],
								[
									"as.data.frame.list\t{base}",
									"as.data.frame.list"
								],
								[
									"row.names.default\t{base}",
									"row.names.default"
								],
								[
									"print.AsIs\t{base}",
									"print.AsIs"
								],
								[
									"Filter\t{base}",
									"Filter"
								],
								[
									"options\t{base}",
									"options"
								],
								[
									"single\t{base}",
									"single"
								],
								[
									"attr.all.equal\t{base}",
									"attr.all.equal"
								],
								[
									".primUntrace\t{base}",
									".primUntrace"
								],
								[
									"factorial\t{base}",
									"factorial"
								],
								[
									"lfactorial\t{base}",
									"lfactorial"
								],
								[
									"colnames\t{base}",
									"colnames"
								],
								[
									"dontCheck\t{base}",
									"dontCheck"
								],
								[
									".Options\t{base}",
									".Options"
								],
								[
									"all.equal.list\t{base}",
									"all.equal.list"
								],
								[
									"levels\t{base}",
									"levels"
								],
								[
									".colMeans\t{base}",
									".colMeans"
								],
								[
									"labels\t{base}",
									"labels"
								],
								[
									".dynLibs\t{base}",
									".dynLibs"
								],
								[
									"isatty\t{base}",
									"isatty"
								],
								[
									"file.remove\t{base}",
									"file.remove"
								],
								[
									"ordered\t{base}",
									"ordered"
								],
								[
									"...length\t{base}",
									"...length"
								],
								[
									"exists\t{base}",
									"exists"
								],
								[
									"prettyNum\t{base}",
									"prettyNum"
								],
								[
									"isRestart\t{base}",
									"isRestart"
								],
								[
									"setTimeLimit\t{base}",
									"setTimeLimit"
								],
								[
									"names.POSIXlt\t{base}",
									"names.POSIXlt"
								],
								[
									".__H__.cbind\t{base}",
									".__H__.cbind"
								],
								[
									"list.dirs\t{base}",
									"list.dirs"
								],
								[
									"truncate\t{base}",
									"truncate"
								],
								[
									"quarters\t{base}",
									"quarters"
								],
								[
									".External\t{base}",
									".External"
								],
								[
									"xtfrm.factor\t{base}",
									"xtfrm.factor"
								],
								[
									"oldClass\t{base}",
									"oldClass"
								],
								[
									"as.function.default\t{base}",
									"as.function.default"
								],
								[
									"chol\t{base}",
									"chol"
								],
								[
									"file.rename\t{base}",
									"file.rename"
								],
								[
									"loadedNamespaces\t{base}",
									"loadedNamespaces"
								],
								[
									"all.equal.factor\t{base}",
									"all.equal.factor"
								],
								[
									".BaseNamespaceEnv\t{base}",
									".BaseNamespaceEnv"
								],
								[
									"truncate.connection\t{base}",
									"truncate.connection"
								],
								[
									"is.finite\t{base}",
									"is.finite"
								],
								[
									"as.data.frame.numeric\t{base}",
									"as.data.frame.numeric"
								],
								[
									"labels.default\t{base}",
									"labels.default"
								],
								[
									"strwrap\t{base}",
									"strwrap"
								],
								[
									".Internal\t{base}",
									".Internal"
								],
								[
									"tolower\t{base}",
									"tolower"
								],
								[
									"gzfile\t{base}",
									"gzfile"
								],
								[
									".Fortran\t{base}",
									".Fortran"
								],
								[
									"as.character.numeric_version\t{base}",
									"as.character.numeric_version"
								],
								[
									"env.profile\t{base}",
									"env.profile"
								],
								[
									"is.na\t{base}",
									"is.na"
								],
								[
									"Summary.POSIXct\t{base}",
									"Summary.POSIXct"
								],
								[
									"open.connection\t{base}",
									"open.connection"
								],
								[
									"is.qr\t{base}",
									"is.qr"
								],
								[
									"list2DF\t{base}",
									"list2DF"
								],
								[
									"duplicated\t{base}",
									"duplicated"
								],
								[
									"writeBin\t{base}",
									"writeBin"
								],
								[
									"flush.connection\t{base}",
									"flush.connection"
								],
								[
									"rcond\t{base}",
									"rcond"
								],
								[
									"is.ordered\t{base}",
									"is.ordered"
								],
								[
									"isSeekable\t{base}",
									"isSeekable"
								],
								[
									"as.ordered\t{base}",
									"as.ordered"
								],
								[
									"iconv\t{base}",
									"iconv"
								],
								[
									"tempdir\t{base}",
									"tempdir"
								],
								[
									"Summary.POSIXlt\t{base}",
									"Summary.POSIXlt"
								],
								[
									"is.numeric.difftime\t{base}",
									"is.numeric.difftime"
								],
								[
									"print.octmode\t{base}",
									"print.octmode"
								],
								[
									"summary.proc_time\t{base}",
									"summary.proc_time"
								],
								[
									"chol2inv\t{base}",
									"chol2inv"
								],
								[
									"as.character.Date\t{base}",
									"as.character.Date"
								],
								[
									".sys.timezone\t{base}",
									".sys.timezone"
								],
								[
									"Sys.timezone\t{base}",
									"Sys.timezone"
								],
								[
									"quarters.Date\t{base}",
									"quarters.Date"
								],
								[
									"stopifnot\t{base}",
									"stopifnot"
								],
								[
									"as.data.frame.complex\t{base}",
									"as.data.frame.complex"
								],
								[
									"all.equal.function\t{base}",
									"all.equal.function"
								],
								[
									"packBits\t{base}",
									"packBits"
								],
								[
									"c.POSIXct\t{base}",
									"c.POSIXct"
								],
								[
									"rep.difftime\t{base}",
									"rep.difftime"
								],
								[
									"strrep\t{base}",
									"strrep"
								],
								[
									"force\t{base}",
									"force"
								],
								[
									"c.POSIXlt\t{base}",
									"c.POSIXlt"
								],
								[
									"mem.maxNSize\t{base}",
									"mem.maxNSize"
								],
								[
									"format\t{base}",
									"format"
								],
								[
									"NextMethod\t{base}",
									"NextMethod"
								],
								[
									"..deparseOpts\t{base}",
									"..deparseOpts"
								],
								[
									".TAOCP1997init\t{base}",
									".TAOCP1997init"
								],
								[
									"Vectorize\t{base}",
									"Vectorize"
								],
								[
									"getNamespaceUsers\t{base}",
									"getNamespaceUsers"
								],
								[
									"cosh\t{base}",
									"cosh"
								],
								[
									"open\t{base}",
									"open"
								],
								[
									"qr.qty\t{base}",
									"qr.qty"
								],
								[
									"subset\t{base}",
									"subset"
								],
								[
									"print.summary.table\t{base}",
									"print.summary.table"
								],
								[
									"is.infinite.POSIXlt\t{base}",
									"is.infinite.POSIXlt"
								],
								[
									"substr\t{base}",
									"substr"
								],
								[
									"cospi\t{base}",
									"cospi"
								],
								[
									"c.warnings\t{base}",
									"c.warnings"
								],
								[
									"print.packageInfo\t{base}",
									"print.packageInfo"
								],
								[
									"NCOL\t{base}",
									"NCOL"
								],
								[
									"is.numeric\t{base}",
									"is.numeric"
								],
								[
									"strtoi\t{base}",
									"strtoi"
								],
								[
									".GenericArgsEnv\t{base}",
									".GenericArgsEnv"
								],
								[
									"rep_len\t{base}",
									"rep_len"
								],
								[
									".make_numeric_version\t{base}",
									".make_numeric_version"
								],
								[
									"date\t{base}",
									"date"
								],
								[
									"closeAllConnections\t{base}",
									"closeAllConnections"
								],
								[
									"as.logical\t{base}",
									"as.logical"
								],
								[
									"getDLLRegisteredRoutines\t{base}",
									"getDLLRegisteredRoutines"
								],
								[
									"round\t{base}",
									"round"
								],
								[
									"file.exists\t{base}",
									"file.exists"
								],
								[
									".F_dtrco\t{base}",
									".F_dtrco"
								],
								[
									"polyroot\t{base}",
									"polyroot"
								],
								[
									".kronecker\t{base}",
									".kronecker"
								],
								[
									".traceback\t{base}",
									".traceback"
								],
								[
									"browser\t{base}",
									"browser"
								],
								[
									"conflictRules\t{base}",
									"conflictRules"
								],
								[
									"is.double\t{base}",
									"is.double"
								],
								[
									"months\t{base}",
									"months"
								],
								[
									"toupper\t{base}",
									"toupper"
								],
								[
									"duplicated.default\t{base}",
									"duplicated.default"
								],
								[
									".bincode\t{base}",
									".bincode"
								],
								[
									"qr.resid\t{base}",
									"qr.resid"
								],
								[
									"toString\t{base}",
									"toString"
								],
								[
									"socketSelect\t{base}",
									"socketSelect"
								],
								[
									".class2\t{base}",
									".class2"
								],
								[
									"print.libraryIQR\t{base}",
									"print.libraryIQR"
								],
								[
									"prop.table\t{base}",
									"prop.table"
								],
								[
									"new.env\t{base}",
									"new.env"
								],
								[
									"which\t{base}",
									"which"
								],
								[
									"duplicated.numeric_version\t{base}",
									"duplicated.numeric_version"
								],
								[
									"while\t{base}",
									"while"
								],
								[
									"is.element\t{base}",
									"is.element"
								],
								[
									"as.raw\t{base}",
									"as.raw"
								],
								[
									"nzchar\t{base}",
									"nzchar"
								],
								[
									"replace\t{base}",
									"replace"
								],
								[
									"complex\t{base}",
									"complex"
								],
								[
									"dget\t{base}",
									"dget"
								],
								[
									"environmentIsLocked\t{base}",
									"environmentIsLocked"
								],
								[
									".Deprecated\t{base}",
									".Deprecated"
								],
								[
									"alist\t{base}",
									"alist"
								],
								[
									"is.list\t{base}",
									"is.list"
								],
								[
									"Ops.factor\t{base}",
									"Ops.factor"
								],
								[
									"setdiff\t{base}",
									"setdiff"
								],
								[
									"pmin.int\t{base}",
									"pmin.int"
								],
								[
									"slice.index\t{base}",
									"slice.index"
								],
								[
									"getAllConnections\t{base}",
									"getAllConnections"
								],
								[
									"duplicated.warnings\t{base}",
									"duplicated.warnings"
								],
								[
									"numeric_version\t{base}",
									"numeric_version"
								],
								[
									"ceiling\t{base}",
									"ceiling"
								],
								[
									"diag\t{base}",
									"diag"
								],
								[
									"as.complex\t{base}",
									"as.complex"
								],
								[
									"sequence\t{base}",
									"sequence"
								],
								[
									".check_tzones\t{base}",
									".check_tzones"
								],
								[
									"diff\t{base}",
									"diff"
								],
								[
									".doSortWrap\t{base}",
									".doSortWrap"
								],
								[
									"anyDuplicated\t{base}",
									"anyDuplicated"
								],
								[
									"all.equal.environment\t{base}",
									"all.equal.environment"
								],
								[
									"pipe\t{base}",
									"pipe"
								],
								[
									"ISOdatetime\t{base}",
									"ISOdatetime"
								],
								[
									"replicate\t{base}",
									"replicate"
								],
								[
									"rbind.data.frame\t{base}",
									"rbind.data.frame"
								],
								[
									"lazyLoadDBfetch\t{base}",
									"lazyLoadDBfetch"
								],
								[
									"conflicts\t{base}",
									"conflicts"
								],
								[
									".rmpkg\t{base}",
									".rmpkg"
								],
								[
									"as.Date\t{base}",
									"as.Date"
								],
								[
									"as.data.frame.numeric_version\t{base}",
									"as.data.frame.numeric_version"
								],
								[
									"mean.default\t{base}",
									"mean.default"
								],
								[
									"cumprod\t{base}",
									"cumprod"
								],
								[
									"as.double\t{base}",
									"as.double"
								],
								[
									"as.data.frame.logical\t{base}",
									"as.data.frame.logical"
								],
								[
									"as.data.frame.POSIXct\t{base}",
									"as.data.frame.POSIXct"
								],
								[
									"findRestart\t{base}",
									"findRestart"
								],
								[
									"as.data.frame.POSIXlt\t{base}",
									"as.data.frame.POSIXlt"
								],
								[
									"as.data.frame.ts\t{base}",
									"as.data.frame.ts"
								],
								[
									"findPackageEnv\t{base}",
									"findPackageEnv"
								],
								[
									"plot\t{base}",
									"plot"
								],
								[
									"pmax\t{base}",
									"pmax"
								],
								[
									"getNamespaceImports\t{base}",
									"getNamespaceImports"
								],
								[
									"as.numeric_version\t{base}",
									"as.numeric_version"
								],
								[
									"pmin\t{base}",
									"pmin"
								],
								[
									"as.character.srcref\t{base}",
									"as.character.srcref"
								],
								[
									"trunc.Date\t{base}",
									"trunc.Date"
								],
								[
									"print.hexmode\t{base}",
									"print.hexmode"
								],
								[
									"provideDimnames\t{base}",
									"provideDimnames"
								],
								[
									"match.arg\t{base}",
									"match.arg"
								],
								[
									"enquote\t{base}",
									"enquote"
								],
								[
									"file.path\t{base}",
									"file.path"
								],
								[
									"as.character.condition\t{base}",
									"as.character.condition"
								],
								[
									".Platform\t{base}",
									".Platform"
								],
								[
									"memDecompress\t{base}",
									"memDecompress"
								],
								[
									"activeBindingFunction\t{base}",
									"activeBindingFunction"
								],
								[
									"format.data.frame\t{base}",
									"format.data.frame"
								],
								[
									"unCfillPOSIXlt\t{base}",
									"unCfillPOSIXlt"
								],
								[
									"lazyLoad\t{base}",
									"lazyLoad"
								],
								[
									"srcref\t{base}",
									"srcref"
								],
								[
									"as.POSIXlt.factor\t{base}",
									"as.POSIXlt.factor"
								],
								[
									"t.default\t{base}",
									"t.default"
								],
								[
									"warning\t{base}",
									"warning"
								],
								[
									".__S3MethodsTable__.\t{base}",
									".__S3MethodsTable__."
								],
								[
									"substring\t{base}",
									"substring"
								],
								[
									"commandArgs\t{base}",
									"commandArgs"
								],
								[
									"file.symlink\t{base}",
									"file.symlink"
								],
								[
									"getCallingDLLe\t{base}",
									"getCallingDLLe"
								],
								[
									"Summary.difftime\t{base}",
									"Summary.difftime"
								],
								[
									"NROW\t{base}",
									"NROW"
								],
								[
									"match.fun\t{base}",
									"match.fun"
								],
								[
									"dput\t{base}",
									"dput"
								],
								[
									"tempfile\t{base}",
									"tempfile"
								],
								[
									"...elt\t{base}",
									"...elt"
								],
								[
									"print.by\t{base}",
									"print.by"
								],
								[
									"summary.matrix\t{base}",
									"summary.matrix"
								],
								[
									"...names\t{base}",
									"...names"
								],
								[
									"Summary.ordered\t{base}",
									"Summary.ordered"
								],
								[
									".Script\t{base}",
									".Script"
								],
								[
									"La.svd\t{base}",
									"La.svd"
								],
								[
									"rawConnection\t{base}",
									"rawConnection"
								],
								[
									"format.AsIs\t{base}",
									"format.AsIs"
								],
								[
									"is.integer\t{base}",
									"is.integer"
								],
								[
									"prod\t{base}",
									"prod"
								],
								[
									"as.integer\t{base}",
									"as.integer"
								],
								[
									"drop\t{base}",
									"drop"
								],
								[
									"Sys.umask\t{base}",
									"Sys.umask"
								],
								[
									".doTrace\t{base}",
									".doTrace"
								],
								[
									"browserText\t{base}",
									"browserText"
								],
								[
									"is.package_version\t{base}",
									"is.package_version"
								],
								[
									"bindingIsActive\t{base}",
									"bindingIsActive"
								],
								[
									"file.copy\t{base}",
									"file.copy"
								],
								[
									"eigen\t{base}",
									"eigen"
								],
								[
									"is.function\t{base}",
									"is.function"
								],
								[
									"month.name\t{base}",
									"month.name"
								],
								[
									"digamma\t{base}",
									"digamma"
								],
								[
									"l10n_info\t{base}",
									"l10n_info"
								],
								[
									"detach\t{base}",
									"detach"
								],
								[
									"as.data.frame.noquote\t{base}",
									"as.data.frame.noquote"
								],
								[
									"integer\t{base}",
									"integer"
								],
								[
									"getCallingDLL\t{base}",
									"getCallingDLL"
								],
								[
									"tracingState\t{base}",
									"tracingState"
								],
								[
									"as.function\t{base}",
									"as.function"
								],
								[
									"attach\t{base}",
									"attach"
								],
								[
									"dump\t{base}",
									"dump"
								],
								[
									"as.POSIXct.numeric\t{base}",
									"as.POSIXct.numeric"
								],
								[
									"is.recursive\t{base}",
									"is.recursive"
								],
								[
									"unlink\t{base}",
									"unlink"
								],
								[
									"seq_along\t{base}",
									"seq_along"
								],
								[
									"pcre_config\t{base}",
									"pcre_config"
								],
								[
									"unlist\t{base}",
									"unlist"
								],
								[
									"all.equal\t{base}",
									"all.equal"
								],
								[
									"regmatches\t{base}",
									"regmatches"
								],
								[
									"is.numeric_version\t{base}",
									"is.numeric_version"
								],
								[
									".Device\t{base}",
									".Device"
								],
								[
									".tryResumeInterrupt\t{base}",
									".tryResumeInterrupt"
								],
								[
									"getNamespaceName\t{base}",
									"getNamespaceName"
								],
								[
									"parent.frame\t{base}",
									"parent.frame"
								],
								[
									"factor\t{base}",
									"factor"
								],
								[
									"mtfrm.default\t{base}",
									"mtfrm.default"
								],
								[
									"message\t{base}",
									"message"
								],
								[
									"lockBinding\t{base}",
									"lockBinding"
								],
								[
									"numToInts\t{base}",
									"numToInts"
								],
								[
									".valid.factor\t{base}",
									".valid.factor"
								],
								[
									"Position\t{base}",
									"Position"
								],
								[
									"rep.numeric_version\t{base}",
									"rep.numeric_version"
								],
								[
									".Defunct\t{base}",
									".Defunct"
								],
								[
									"agricolae\tInstalled Package",
									"agricolae"
								],
								[
									"AlgDesign\tInstalled Package",
									"AlgDesign"
								],
								[
									"algEq\tInstalled Package",
									"algEq"
								],
								[
									"anytime\tInstalled Package",
									"anytime"
								],
								[
									"AsioHeaders\tInstalled Package",
									"AsioHeaders"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"ast2ast\tInstalled Package",
									"ast2ast"
								],
								[
									"BB\tInstalled Package",
									"BB"
								],
								[
									"BBmisc\tInstalled Package",
									"BBmisc"
								],
								[
									"bibtex\tInstalled Package",
									"bibtex"
								],
								[
									"bigD\tInstalled Package",
									"bigD"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"bmp\tInstalled Package",
									"bmp"
								],
								[
									"brew\tInstalled Package",
									"brew"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broman\tInstalled Package",
									"broman"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"ca\tInstalled Package",
									"ca"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"Cairo\tInstalled Package",
									"Cairo"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"car\tInstalled Package",
									"car"
								],
								[
									"carData\tInstalled Package",
									"carData"
								],
								[
									"cellranger\tInstalled Package",
									"cellranger"
								],
								[
									"chromatogram\tInstalled Package",
									"chromatogram"
								],
								[
									"chromatographR\tInstalled Package",
									"chromatographR"
								],
								[
									"chromConverter\tInstalled Package",
									"chromConverter"
								],
								[
									"chromote\tInstalled Package",
									"chromote"
								],
								[
									"cinterpolate\tInstalled Package",
									"cinterpolate"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"clipr\tInstalled Package",
									"clipr"
								],
								[
									"clue\tInstalled Package",
									"clue"
								],
								[
									"collections\tInstalled Package",
									"collections"
								],
								[
									"colorout\tInstalled Package",
									"colorout"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"combinat\tInstalled Package",
									"combinat"
								],
								[
									"COMELN\tInstalled Package",
									"COMELN"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"config\tInstalled Package",
									"config"
								],
								[
									"confintr\tInstalled Package",
									"confintr"
								],
								[
									"corrplot\tInstalled Package",
									"corrplot"
								],
								[
									"cowplot\tInstalled Package",
									"cowplot"
								],
								[
									"CPAT\tInstalled Package",
									"CPAT"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"credentials\tInstalled Package",
									"credentials"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"cyclocomp\tInstalled Package",
									"cyclocomp"
								],
								[
									"dendextend\tInstalled Package",
									"dendextend"
								],
								[
									"Deriv\tInstalled Package",
									"Deriv"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"deSolve\tInstalled Package",
									"deSolve"
								],
								[
									"devtools\tInstalled Package",
									"devtools"
								],
								[
									"dfdr\tInstalled Package",
									"dfdr"
								],
								[
									"dfoptim\tInstalled Package",
									"dfoptim"
								],
								[
									"DiagrammeR\tInstalled Package",
									"DiagrammeR"
								],
								[
									"DiagrammeRsvg\tInstalled Package",
									"DiagrammeRsvg"
								],
								[
									"differential\tInstalled Package",
									"differential"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dlstats\tInstalled Package",
									"dlstats"
								],
								[
									"doParallel\tInstalled Package",
									"doParallel"
								],
								[
									"downlit\tInstalled Package",
									"downlit"
								],
								[
									"downloader\tInstalled Package",
									"downloader"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"drc\tInstalled Package",
									"drc"
								],
								[
									"dsa2a\tInstalled Package",
									"dsa2a"
								],
								[
									"dtw\tInstalled Package",
									"dtw"
								],
								[
									"dtwclust\tInstalled Package",
									"dtwclust"
								],
								[
									"dynamicTreeCut\tInstalled Package",
									"dynamicTreeCut"
								],
								[
									"ellipse\tInstalled Package",
									"ellipse"
								],
								[
									"emmeans\tInstalled Package",
									"emmeans"
								],
								[
									"entab\tInstalled Package",
									"entab"
								],
								[
									"estimability\tInstalled Package",
									"estimability"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"factoextra\tInstalled Package",
									"factoextra"
								],
								[
									"FactoMineR\tInstalled Package",
									"FactoMineR"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastcluster\tInstalled Package",
									"fastcluster"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"ff\tInstalled Package",
									"ff"
								],
								[
									"filelock\tInstalled Package",
									"filelock"
								],
								[
									"flashClust\tInstalled Package",
									"flashClust"
								],
								[
									"flexclust\tInstalled Package",
									"flexclust"
								],
								[
									"flexdashboard\tInstalled Package",
									"flexdashboard"
								],
								[
									"fontawesome\tInstalled Package",
									"fontawesome"
								],
								[
									"forcats\tInstalled Package",
									"forcats"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"future\tInstalled Package",
									"future"
								],
								[
									"future.apply\tInstalled Package",
									"future.apply"
								],
								[
									"gapminder\tInstalled Package",
									"gapminder"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"gert\tInstalled Package",
									"gert"
								],
								[
									"gg3D\tInstalled Package",
									"gg3D"
								],
								[
									"gganimate\tInstalled Package",
									"gganimate"
								],
								[
									"ggdendro\tInstalled Package",
									"ggdendro"
								],
								[
									"ggfortify\tInstalled Package",
									"ggfortify"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"ggpmisc\tInstalled Package",
									"ggpmisc"
								],
								[
									"ggpp\tInstalled Package",
									"ggpp"
								],
								[
									"ggpubr\tInstalled Package",
									"ggpubr"
								],
								[
									"ggrepel\tInstalled Package",
									"ggrepel"
								],
								[
									"ggsci\tInstalled Package",
									"ggsci"
								],
								[
									"ggsignif\tInstalled Package",
									"ggsignif"
								],
								[
									"gifski\tInstalled Package",
									"gifski"
								],
								[
									"glmnet\tInstalled Package",
									"glmnet"
								],
								[
									"globals\tInstalled Package",
									"globals"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"gt\tInstalled Package",
									"gt"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"gtools\tInstalled Package",
									"gtools"
								],
								[
									"hardhat\tInstalled Package",
									"hardhat"
								],
								[
									"haven\tInstalled Package",
									"haven"
								],
								[
									"HDclassif\tInstalled Package",
									"HDclassif"
								],
								[
									"here\tInstalled Package",
									"here"
								],
								[
									"highcharter\tInstalled Package",
									"highcharter"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"hunspell\tInstalled Package",
									"hunspell"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"imager\tInstalled Package",
									"imager"
								],
								[
									"inline\tInstalled Package",
									"inline"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"jose\tInstalled Package",
									"jose"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"juicyjuice\tInstalled Package",
									"juicyjuice"
								],
								[
									"kableExtra\tInstalled Package",
									"kableExtra"
								],
								[
									"katex\tInstalled Package",
									"katex"
								],
								[
									"keras\tInstalled Package",
									"keras"
								],
								[
									"keyring\tInstalled Package",
									"keyring"
								],
								[
									"klaR\tInstalled Package",
									"klaR"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"labelled\tInstalled Package",
									"labelled"
								],
								[
									"languageserver\tInstalled Package",
									"languageserver"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lbfgs\tInstalled Package",
									"lbfgs"
								],
								[
									"lbfgsb3c\tInstalled Package",
									"lbfgsb3c"
								],
								[
									"leaps\tInstalled Package",
									"leaps"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"lintr\tInstalled Package",
									"lintr"
								],
								[
									"lme4\tInstalled Package",
									"lme4"
								],
								[
									"lmodel2\tInstalled Package",
									"lmodel2"
								],
								[
									"lobstr\tInstalled Package",
									"lobstr"
								],
								[
									"luajr\tInstalled Package",
									"luajr"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"marqLevAlg\tInstalled Package",
									"marqLevAlg"
								],
								[
									"MatrixModels\tInstalled Package",
									"MatrixModels"
								],
								[
									"microbenchmark\tInstalled Package",
									"microbenchmark"
								],
								[
									"miniUI\tInstalled Package",
									"miniUI"
								],
								[
									"minpack.lm\tInstalled Package",
									"minpack.lm"
								],
								[
									"minqa\tInstalled Package",
									"minqa"
								],
								[
									"mlr\tInstalled Package",
									"mlr"
								],
								[
									"modeltools\tInstalled Package",
									"modeltools"
								],
								[
									"MTT\tInstalled Package",
									"MTT"
								],
								[
									"multcomp\tInstalled Package",
									"multcomp"
								],
								[
									"multcompView\tInstalled Package",
									"multcompView"
								],
								[
									"mvtnorm\tInstalled Package",
									"mvtnorm"
								],
								[
									"networkD3\tInstalled Package",
									"networkD3"
								],
								[
									"nleqslv\tInstalled Package",
									"nleqslv"
								],
								[
									"nloptr\tInstalled Package",
									"nloptr"
								],
								[
									"numbers\tInstalled Package",
									"numbers"
								],
								[
									"nvimcom\tInstalled Package",
									"nvimcom"
								],
								[
									"odin\tInstalled Package",
									"odin"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"openxlsx\tInstalled Package",
									"openxlsx"
								],
								[
									"optimx\tInstalled Package",
									"optimx"
								],
								[
									"orca\tInstalled Package",
									"orca"
								],
								[
									"packrat\tInstalled Package",
									"packrat"
								],
								[
									"parallelly\tInstalled Package",
									"parallelly"
								],
								[
									"parallelMap\tInstalled Package",
									"parallelMap"
								],
								[
									"ParamHelpers\tInstalled Package",
									"ParamHelpers"
								],
								[
									"paropt\tInstalled Package",
									"paropt"
								],
								[
									"parsedate\tInstalled Package",
									"parsedate"
								],
								[
									"patchwork\tInstalled Package",
									"patchwork"
								],
								[
									"pattern\tInstalled Package",
									"pattern"
								],
								[
									"pbkrtest\tInstalled Package",
									"pbkrtest"
								],
								[
									"pheatmap\tInstalled Package",
									"pheatmap"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgdown\tInstalled Package",
									"pkgdown"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"PKI\tInstalled Package",
									"PKI"
								],
								[
									"plantuml\tInstalled Package",
									"plantuml"
								],
								[
									"platereader\tInstalled Package",
									"platereader"
								],
								[
									"plotly\tInstalled Package",
									"plotly"
								],
								[
									"plotrix\tInstalled Package",
									"plotrix"
								],
								[
									"polynom\tInstalled Package",
									"polynom"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"profvis\tInstalled Package",
									"profvis"
								],
								[
									"pryr\tInstalled Package",
									"pryr"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"ptw\tInstalled Package",
									"ptw"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"pvclust\tInstalled Package",
									"pvclust"
								],
								[
									"quantreg\tInstalled Package",
									"quantreg"
								],
								[
									"quarto\tInstalled Package",
									"quarto"
								],
								[
									"questionr\tInstalled Package",
									"questionr"
								],
								[
									"R.cache\tInstalled Package",
									"R.cache"
								],
								[
									"R.methodsS3\tInstalled Package",
									"R.methodsS3"
								],
								[
									"R.oo\tInstalled Package",
									"R.oo"
								],
								[
									"R.utils\tInstalled Package",
									"R.utils"
								],
								[
									"ragg\tInstalled Package",
									"ragg"
								],
								[
									"rARPACK\tInstalled Package",
									"rARPACK"
								],
								[
									"rbibutils\tInstalled Package",
									"rbibutils"
								],
								[
									"rcmdcheck\tInstalled Package",
									"rcmdcheck"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppArmadillo\tInstalled Package",
									"RcppArmadillo"
								],
								[
									"RcppClock\tInstalled Package",
									"RcppClock"
								],
								[
									"RcppDE\tInstalled Package",
									"RcppDE"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"RcppEnsmallen\tInstalled Package",
									"RcppEnsmallen"
								],
								[
									"RcppParallel\tInstalled Package",
									"RcppParallel"
								],
								[
									"RcppThread\tInstalled Package",
									"RcppThread"
								],
								[
									"RcppTOML\tInstalled Package",
									"RcppTOML"
								],
								[
									"RcppXPtrUtils\tInstalled Package",
									"RcppXPtrUtils"
								],
								[
									"Rdpack\tInstalled Package",
									"Rdpack"
								],
								[
									"reactable\tInstalled Package",
									"reactable"
								],
								[
									"reactR\tInstalled Package",
									"reactR"
								],
								[
									"readbitmap\tInstalled Package",
									"readbitmap"
								],
								[
									"readr\tInstalled Package",
									"readr"
								],
								[
									"readxl\tInstalled Package",
									"readxl"
								],
								[
									"RefManageR\tInstalled Package",
									"RefManageR"
								],
								[
									"rematch\tInstalled Package",
									"rematch"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"renv\tInstalled Package",
									"renv"
								],
								[
									"reticulate\tInstalled Package",
									"reticulate"
								],
								[
									"rhub\tInstalled Package",
									"rhub"
								],
								[
									"ring\tInstalled Package",
									"ring"
								],
								[
									"RInside\tInstalled Package",
									"RInside"
								],
								[
									"rjson\tInstalled Package",
									"rjson"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rlist\tInstalled Package",
									"rlist"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"rootSolve\tInstalled Package",
									"rootSolve"
								],
								[
									"roxygen2\tInstalled Package",
									"roxygen2"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rsconnect\tInstalled Package",
									"rsconnect"
								],
								[
									"rstatix\tInstalled Package",
									"rstatix"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"rsvg\tInstalled Package",
									"rsvg"
								],
								[
									"rversions\tInstalled Package",
									"rversions"
								],
								[
									"rvest\tInstalled Package",
									"rvest"
								],
								[
									"Ryacas\tInstalled Package",
									"Ryacas"
								],
								[
									"sandwich\tInstalled Package",
									"sandwich"
								],
								[
									"sanitizers\tInstalled Package",
									"sanitizers"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"scatterplot3d\tInstalled Package",
									"scatterplot3d"
								],
								[
									"sensitivity\tInstalled Package",
									"sensitivity"
								],
								[
									"serial\tInstalled Package",
									"serial"
								],
								[
									"sessioninfo\tInstalled Package",
									"sessioninfo"
								],
								[
									"shape\tInstalled Package",
									"shape"
								],
								[
									"shinydashboard\tInstalled Package",
									"shinydashboard"
								],
								[
									"shinyjs\tInstalled Package",
									"shinyjs"
								],
								[
									"shinyWidgets\tInstalled Package",
									"shinyWidgets"
								],
								[
									"spelling\tInstalled Package",
									"spelling"
								],
								[
									"splus2R\tInstalled Package",
									"splus2R"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"styler\tInstalled Package",
									"styler"
								],
								[
									"subplex\tInstalled Package",
									"subplex"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"tensorflow\tInstalled Package",
									"tensorflow"
								],
								[
									"test\tInstalled Package",
									"test"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"tfautograph\tInstalled Package",
									"tfautograph"
								],
								[
									"tfdatasets\tInstalled Package",
									"tfdatasets"
								],
								[
									"tfruns\tInstalled Package",
									"tfruns"
								],
								[
									"TH.data\tInstalled Package",
									"TH.data"
								],
								[
									"thermosimfit\tInstalled Package",
									"thermosimfit"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyCpp\tInstalled Package",
									"tidyCpp"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tiff\tInstalled Package",
									"tiff"
								],
								[
									"timechange\tInstalled Package",
									"timechange"
								],
								[
									"tinytest\tInstalled Package",
									"tinytest"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tsf\tInstalled Package",
									"tsf"
								],
								[
									"tweenr\tInstalled Package",
									"tweenr"
								],
								[
									"tzdb\tInstalled Package",
									"tzdb"
								],
								[
									"ucminf\tInstalled Package",
									"ucminf"
								],
								[
									"unix\tInstalled Package",
									"unix"
								],
								[
									"urlchecker\tInstalled Package",
									"urlchecker"
								],
								[
									"usethis\tInstalled Package",
									"usethis"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"uuid\tInstalled Package",
									"uuid"
								],
								[
									"V8\tInstalled Package",
									"V8"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"visNetwork\tInstalled Package",
									"visNetwork"
								],
								[
									"VPdtw\tInstalled Package",
									"VPdtw"
								],
								[
									"vroom\tInstalled Package",
									"vroom"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"webshot\tInstalled Package",
									"webshot"
								],
								[
									"webshot2\tInstalled Package",
									"webshot2"
								],
								[
									"websocket\tInstalled Package",
									"websocket"
								],
								[
									"whisker\tInstalled Package",
									"whisker"
								],
								[
									"whoami\tInstalled Package",
									"whoami"
								],
								[
									"wiesbaden\tInstalled Package",
									"wiesbaden"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"xlsx\tInstalled Package",
									"xlsx"
								],
								[
									"xlsxjars\tInstalled Package",
									"xlsxjars"
								],
								[
									"xmlparsedata\tInstalled Package",
									"xmlparsedata"
								],
								[
									"xopen\tInstalled Package",
									"xopen"
								],
								[
									"xts\tInstalled Package",
									"xts"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"yardstick\tInstalled Package",
									"yardstick"
								],
								[
									"zeallot\tInstalled Package",
									"zeallot"
								],
								[
									"zip\tInstalled Package",
									"zip"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bslib\tInstalled Package",
									"bslib"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"fontawesome\tInstalled Package",
									"fontawesome"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"jquerylib\tInstalled Package",
									"jquerylib"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"abind\tInstalled Package",
									"abind"
								],
								[
									"acepack\tInstalled Package",
									"acepack"
								],
								[
									"askpass\tInstalled Package",
									"askpass"
								],
								[
									"assertthat\tInstalled Package",
									"assertthat"
								],
								[
									"backports\tInstalled Package",
									"backports"
								],
								[
									"base64enc\tInstalled Package",
									"base64enc"
								],
								[
									"bench\tInstalled Package",
									"bench"
								],
								[
									"BH\tInstalled Package",
									"BH"
								],
								[
									"bit\tInstalled Package",
									"bit"
								],
								[
									"bit64\tInstalled Package",
									"bit64"
								],
								[
									"bitops\tInstalled Package",
									"bitops"
								],
								[
									"blob\tInstalled Package",
									"blob"
								],
								[
									"brio\tInstalled Package",
									"brio"
								],
								[
									"broom\tInstalled Package",
									"broom"
								],
								[
									"cachem\tInstalled Package",
									"cachem"
								],
								[
									"callr\tInstalled Package",
									"callr"
								],
								[
									"caret\tInstalled Package",
									"caret"
								],
								[
									"caTools\tInstalled Package",
									"caTools"
								],
								[
									"cba\tInstalled Package",
									"cba"
								],
								[
									"checkmate\tInstalled Package",
									"checkmate"
								],
								[
									"chron\tInstalled Package",
									"chron"
								],
								[
									"classInt\tInstalled Package",
									"classInt"
								],
								[
									"cli\tInstalled Package",
									"cli"
								],
								[
									"cliapp\tInstalled Package",
									"cliapp"
								],
								[
									"colorspace\tInstalled Package",
									"colorspace"
								],
								[
									"commonmark\tInstalled Package",
									"commonmark"
								],
								[
									"conquer\tInstalled Package",
									"conquer"
								],
								[
									"covr\tInstalled Package",
									"covr"
								],
								[
									"cpp11\tInstalled Package",
									"cpp11"
								],
								[
									"crayon\tInstalled Package",
									"crayon"
								],
								[
									"crosstalk\tInstalled Package",
									"crosstalk"
								],
								[
									"curl\tInstalled Package",
									"curl"
								],
								[
									"CVST\tInstalled Package",
									"CVST"
								],
								[
									"data.table\tInstalled Package",
									"data.table"
								],
								[
									"DBI\tInstalled Package",
									"DBI"
								],
								[
									"DBItest\tInstalled Package",
									"DBItest"
								],
								[
									"dbplyr\tInstalled Package",
									"dbplyr"
								],
								[
									"ddalpha\tInstalled Package",
									"ddalpha"
								],
								[
									"decor\tInstalled Package",
									"decor"
								],
								[
									"deldir\tInstalled Package",
									"deldir"
								],
								[
									"DEoptimR\tInstalled Package",
									"DEoptimR"
								],
								[
									"desc\tInstalled Package",
									"desc"
								],
								[
									"diffobj\tInstalled Package",
									"diffobj"
								],
								[
									"digest\tInstalled Package",
									"digest"
								],
								[
									"dimRed\tInstalled Package",
									"dimRed"
								],
								[
									"doMC\tInstalled Package",
									"doMC"
								],
								[
									"dplyr\tInstalled Package",
									"dplyr"
								],
								[
									"DRR\tInstalled Package",
									"DRR"
								],
								[
									"DT\tInstalled Package",
									"DT"
								],
								[
									"dygraphs\tInstalled Package",
									"dygraphs"
								],
								[
									"e1071\tInstalled Package",
									"e1071"
								],
								[
									"earth\tInstalled Package",
									"earth"
								],
								[
									"ellipsis\tInstalled Package",
									"ellipsis"
								],
								[
									"evaluate\tInstalled Package",
									"evaluate"
								],
								[
									"fansi\tInstalled Package",
									"fansi"
								],
								[
									"farver\tInstalled Package",
									"farver"
								],
								[
									"fastICA\tInstalled Package",
									"fastICA"
								],
								[
									"fastmap\tInstalled Package",
									"fastmap"
								],
								[
									"fastmatch\tInstalled Package",
									"fastmatch"
								],
								[
									"filehash\tInstalled Package",
									"filehash"
								],
								[
									"FNN\tInstalled Package",
									"FNN"
								],
								[
									"fontBitstreamVera\tInstalled Package",
									"fontBitstreamVera"
								],
								[
									"fontLiberation\tInstalled Package",
									"fontLiberation"
								],
								[
									"fontquiver\tInstalled Package",
									"fontquiver"
								],
								[
									"foreach\tInstalled Package",
									"foreach"
								],
								[
									"Formula\tInstalled Package",
									"Formula"
								],
								[
									"fs\tInstalled Package",
									"fs"
								],
								[
									"fts\tInstalled Package",
									"fts"
								],
								[
									"furrr\tInstalled Package",
									"furrr"
								],
								[
									"future\tInstalled Package",
									"future"
								],
								[
									"future.apply\tInstalled Package",
									"future.apply"
								],
								[
									"gdata\tInstalled Package",
									"gdata"
								],
								[
									"generics\tInstalled Package",
									"generics"
								],
								[
									"geometry\tInstalled Package",
									"geometry"
								],
								[
									"geosphere\tInstalled Package",
									"geosphere"
								],
								[
									"ggplot2\tInstalled Package",
									"ggplot2"
								],
								[
									"gh\tInstalled Package",
									"gh"
								],
								[
									"gitcreds\tInstalled Package",
									"gitcreds"
								],
								[
									"globals\tInstalled Package",
									"globals"
								],
								[
									"glue\tInstalled Package",
									"glue"
								],
								[
									"goftest\tInstalled Package",
									"goftest"
								],
								[
									"gower\tInstalled Package",
									"gower"
								],
								[
									"gplots\tInstalled Package",
									"gplots"
								],
								[
									"gridExtra\tInstalled Package",
									"gridExtra"
								],
								[
									"gtable\tInstalled Package",
									"gtable"
								],
								[
									"gtools\tInstalled Package",
									"gtools"
								],
								[
									"hexbin\tInstalled Package",
									"hexbin"
								],
								[
									"highr\tInstalled Package",
									"highr"
								],
								[
									"Hmisc\tInstalled Package",
									"Hmisc"
								],
								[
									"hms\tInstalled Package",
									"hms"
								],
								[
									"htmlTable\tInstalled Package",
									"htmlTable"
								],
								[
									"htmltools\tInstalled Package",
									"htmltools"
								],
								[
									"htmlwidgets\tInstalled Package",
									"htmlwidgets"
								],
								[
									"httpuv\tInstalled Package",
									"httpuv"
								],
								[
									"httr\tInstalled Package",
									"httr"
								],
								[
									"igraph\tInstalled Package",
									"igraph"
								],
								[
									"ini\tInstalled Package",
									"ini"
								],
								[
									"interp\tInstalled Package",
									"interp"
								],
								[
									"ipred\tInstalled Package",
									"ipred"
								],
								[
									"isoband\tInstalled Package",
									"isoband"
								],
								[
									"iterators\tInstalled Package",
									"iterators"
								],
								[
									"jpeg\tInstalled Package",
									"jpeg"
								],
								[
									"jsonlite\tInstalled Package",
									"jsonlite"
								],
								[
									"kernlab\tInstalled Package",
									"kernlab"
								],
								[
									"knitr\tInstalled Package",
									"knitr"
								],
								[
									"ks\tInstalled Package",
									"ks"
								],
								[
									"labeling\tInstalled Package",
									"labeling"
								],
								[
									"later\tInstalled Package",
									"later"
								],
								[
									"latticeExtra\tInstalled Package",
									"latticeExtra"
								],
								[
									"lava\tInstalled Package",
									"lava"
								],
								[
									"lazyeval\tInstalled Package",
									"lazyeval"
								],
								[
									"lifecycle\tInstalled Package",
									"lifecycle"
								],
								[
									"linprog\tInstalled Package",
									"linprog"
								],
								[
									"listenv\tInstalled Package",
									"listenv"
								],
								[
									"littler\tInstalled Package",
									"littler"
								],
								[
									"lme4\tInstalled Package",
									"lme4"
								],
								[
									"lobstr\tInstalled Package",
									"lobstr"
								],
								[
									"logcondens\tInstalled Package",
									"logcondens"
								],
								[
									"lpSolve\tInstalled Package",
									"lpSolve"
								],
								[
									"lubridate\tInstalled Package",
									"lubridate"
								],
								[
									"lwgeom\tInstalled Package",
									"lwgeom"
								],
								[
									"magic\tInstalled Package",
									"magic"
								],
								[
									"magrittr\tInstalled Package",
									"magrittr"
								],
								[
									"mapproj\tInstalled Package",
									"mapproj"
								],
								[
									"maps\tInstalled Package",
									"maps"
								],
								[
									"maptools\tInstalled Package",
									"maptools"
								],
								[
									"markdown\tInstalled Package",
									"markdown"
								],
								[
									"MatrixModels\tInstalled Package",
									"MatrixModels"
								],
								[
									"matrixStats\tInstalled Package",
									"matrixStats"
								],
								[
									"mclust\tInstalled Package",
									"mclust"
								],
								[
									"mda\tInstalled Package",
									"mda"
								],
								[
									"memoise\tInstalled Package",
									"memoise"
								],
								[
									"mets\tInstalled Package",
									"mets"
								],
								[
									"mime\tInstalled Package",
									"mime"
								],
								[
									"minqa\tInstalled Package",
									"minqa"
								],
								[
									"misc3d\tInstalled Package",
									"misc3d"
								],
								[
									"mlbench\tInstalled Package",
									"mlbench"
								],
								[
									"MLmetrics\tInstalled Package",
									"MLmetrics"
								],
								[
									"mockery\tInstalled Package",
									"mockery"
								],
								[
									"mockr\tInstalled Package",
									"mockr"
								],
								[
									"modeldata\tInstalled Package",
									"modeldata"
								],
								[
									"ModelMetrics\tInstalled Package",
									"ModelMetrics"
								],
								[
									"multcomp\tInstalled Package",
									"multcomp"
								],
								[
									"multicool\tInstalled Package",
									"multicool"
								],
								[
									"munsell\tInstalled Package",
									"munsell"
								],
								[
									"mvtnorm\tInstalled Package",
									"mvtnorm"
								],
								[
									"nloptr\tInstalled Package",
									"nloptr"
								],
								[
									"numDeriv\tInstalled Package",
									"numDeriv"
								],
								[
									"openssl\tInstalled Package",
									"openssl"
								],
								[
									"palmerpenguins\tInstalled Package",
									"palmerpenguins"
								],
								[
									"parallelly\tInstalled Package",
									"parallelly"
								],
								[
									"pillar\tInstalled Package",
									"pillar"
								],
								[
									"pkgbuild\tInstalled Package",
									"pkgbuild"
								],
								[
									"pkgconfig\tInstalled Package",
									"pkgconfig"
								],
								[
									"pkgKitten\tInstalled Package",
									"pkgKitten"
								],
								[
									"pkgload\tInstalled Package",
									"pkgload"
								],
								[
									"plogr\tInstalled Package",
									"plogr"
								],
								[
									"plot3D\tInstalled Package",
									"plot3D"
								],
								[
									"plotmo\tInstalled Package",
									"plotmo"
								],
								[
									"plotrix\tInstalled Package",
									"plotrix"
								],
								[
									"pls\tInstalled Package",
									"pls"
								],
								[
									"plyr\tInstalled Package",
									"plyr"
								],
								[
									"png\tInstalled Package",
									"png"
								],
								[
									"polyclip\tInstalled Package",
									"polyclip"
								],
								[
									"pracma\tInstalled Package",
									"pracma"
								],
								[
									"praise\tInstalled Package",
									"praise"
								],
								[
									"prettycode\tInstalled Package",
									"prettycode"
								],
								[
									"prettyunits\tInstalled Package",
									"prettyunits"
								],
								[
									"pROC\tInstalled Package",
									"pROC"
								],
								[
									"processx\tInstalled Package",
									"processx"
								],
								[
									"prodlim\tInstalled Package",
									"prodlim"
								],
								[
									"profmem\tInstalled Package",
									"profmem"
								],
								[
									"progress\tInstalled Package",
									"progress"
								],
								[
									"progressr\tInstalled Package",
									"progressr"
								],
								[
									"promises\tInstalled Package",
									"promises"
								],
								[
									"proxy\tInstalled Package",
									"proxy"
								],
								[
									"ps\tInstalled Package",
									"ps"
								],
								[
									"purrr\tInstalled Package",
									"purrr"
								],
								[
									"quadprog\tInstalled Package",
									"quadprog"
								],
								[
									"quantmod\tInstalled Package",
									"quantmod"
								],
								[
									"quantreg\tInstalled Package",
									"quantreg"
								],
								[
									"R6\tInstalled Package",
									"R6"
								],
								[
									"ragg\tInstalled Package",
									"ragg"
								],
								[
									"RANN\tInstalled Package",
									"RANN"
								],
								[
									"rappdirs\tInstalled Package",
									"rappdirs"
								],
								[
									"raster\tInstalled Package",
									"raster"
								],
								[
									"RColorBrewer\tInstalled Package",
									"RColorBrewer"
								],
								[
									"Rcpp\tInstalled Package",
									"Rcpp"
								],
								[
									"RcppArmadillo\tInstalled Package",
									"RcppArmadillo"
								],
								[
									"RcppEigen\tInstalled Package",
									"RcppEigen"
								],
								[
									"RcppProgress\tInstalled Package",
									"RcppProgress"
								],
								[
									"RcppRoll\tInstalled Package",
									"RcppRoll"
								],
								[
									"recipes\tInstalled Package",
									"recipes"
								],
								[
									"rematch2\tInstalled Package",
									"rematch2"
								],
								[
									"remotes\tInstalled Package",
									"remotes"
								],
								[
									"reshape2\tInstalled Package",
									"reshape2"
								],
								[
									"rex\tInstalled Package",
									"rex"
								],
								[
									"rgdal\tInstalled Package",
									"rgdal"
								],
								[
									"rgl\tInstalled Package",
									"rgl"
								],
								[
									"rJava\tInstalled Package",
									"rJava"
								],
								[
									"rlang\tInstalled Package",
									"rlang"
								],
								[
									"rmarkdown\tInstalled Package",
									"rmarkdown"
								],
								[
									"RMySQL\tInstalled Package",
									"RMySQL"
								],
								[
									"robustbase\tInstalled Package",
									"robustbase"
								],
								[
									"ROCR\tInstalled Package",
									"ROCR"
								],
								[
									"RPostgreSQL\tInstalled Package",
									"RPostgreSQL"
								],
								[
									"rprojroot\tInstalled Package",
									"rprojroot"
								],
								[
									"rsample\tInstalled Package",
									"rsample"
								],
								[
									"RSpectra\tInstalled Package",
									"RSpectra"
								],
								[
									"RSQLite\tInstalled Package",
									"RSQLite"
								],
								[
									"rstudioapi\tInstalled Package",
									"rstudioapi"
								],
								[
									"RUnit\tInstalled Package",
									"RUnit"
								],
								[
									"s2\tInstalled Package",
									"s2"
								],
								[
									"sandwich\tInstalled Package",
									"sandwich"
								],
								[
									"sass\tInstalled Package",
									"sass"
								],
								[
									"scales\tInstalled Package",
									"scales"
								],
								[
									"selectr\tInstalled Package",
									"selectr"
								],
								[
									"setRNG\tInstalled Package",
									"setRNG"
								],
								[
									"sf\tInstalled Package",
									"sf"
								],
								[
									"sfsmisc\tInstalled Package",
									"sfsmisc"
								],
								[
									"shiny\tInstalled Package",
									"shiny"
								],
								[
									"slider\tInstalled Package",
									"slider"
								],
								[
									"sodium\tInstalled Package",
									"sodium"
								],
								[
									"sourcetools\tInstalled Package",
									"sourcetools"
								],
								[
									"sp\tInstalled Package",
									"sp"
								],
								[
									"SparseM\tInstalled Package",
									"SparseM"
								],
								[
									"spatstat\tInstalled Package",
									"spatstat"
								],
								[
									"spatstat.core\tInstalled Package",
									"spatstat.core"
								],
								[
									"spatstat.data\tInstalled Package",
									"spatstat.data"
								],
								[
									"spatstat.geom\tInstalled Package",
									"spatstat.geom"
								],
								[
									"spatstat.linnet\tInstalled Package",
									"spatstat.linnet"
								],
								[
									"spatstat.sparse\tInstalled Package",
									"spatstat.sparse"
								],
								[
									"spatstat.utils\tInstalled Package",
									"spatstat.utils"
								],
								[
									"SQUAREM\tInstalled Package",
									"SQUAREM"
								],
								[
									"statmod\tInstalled Package",
									"statmod"
								],
								[
									"stringi\tInstalled Package",
									"stringi"
								],
								[
									"stringr\tInstalled Package",
									"stringr"
								],
								[
									"svglite\tInstalled Package",
									"svglite"
								],
								[
									"sys\tInstalled Package",
									"sys"
								],
								[
									"systemfonts\tInstalled Package",
									"systemfonts"
								],
								[
									"TeachingDemos\tInstalled Package",
									"TeachingDemos"
								],
								[
									"tensor\tInstalled Package",
									"tensor"
								],
								[
									"terra\tInstalled Package",
									"terra"
								],
								[
									"testit\tInstalled Package",
									"testit"
								],
								[
									"testthat\tInstalled Package",
									"testthat"
								],
								[
									"textshaping\tInstalled Package",
									"textshaping"
								],
								[
									"TH.data\tInstalled Package",
									"TH.data"
								],
								[
									"tibble\tInstalled Package",
									"tibble"
								],
								[
									"tidyr\tInstalled Package",
									"tidyr"
								],
								[
									"tidyselect\tInstalled Package",
									"tidyselect"
								],
								[
									"tikzDevice\tInstalled Package",
									"tikzDevice"
								],
								[
									"timeDate\tInstalled Package",
									"timeDate"
								],
								[
									"timereg\tInstalled Package",
									"timereg"
								],
								[
									"timeSeries\tInstalled Package",
									"timeSeries"
								],
								[
									"tinytex\tInstalled Package",
									"tinytex"
								],
								[
									"tseries\tInstalled Package",
									"tseries"
								],
								[
									"TTR\tInstalled Package",
									"TTR"
								],
								[
									"units\tInstalled Package",
									"units"
								],
								[
									"utf8\tInstalled Package",
									"utf8"
								],
								[
									"vctrs\tInstalled Package",
									"vctrs"
								],
								[
									"vdiffr\tInstalled Package",
									"vdiffr"
								],
								[
									"viridis\tInstalled Package",
									"viridis"
								],
								[
									"viridisLite\tInstalled Package",
									"viridisLite"
								],
								[
									"waldo\tInstalled Package",
									"waldo"
								],
								[
									"warp\tInstalled Package",
									"warp"
								],
								[
									"webfakes\tInstalled Package",
									"webfakes"
								],
								[
									"webutils\tInstalled Package",
									"webutils"
								],
								[
									"withr\tInstalled Package",
									"withr"
								],
								[
									"wk\tInstalled Package",
									"wk"
								],
								[
									"wkutils\tInstalled Package",
									"wkutils"
								],
								[
									"xfun\tInstalled Package",
									"xfun"
								],
								[
									"XML\tInstalled Package",
									"XML"
								],
								[
									"xml2\tInstalled Package",
									"xml2"
								],
								[
									"xtable\tInstalled Package",
									"xtable"
								],
								[
									"xts\tInstalled Package",
									"xts"
								],
								[
									"yaml\tInstalled Package",
									"yaml"
								],
								[
									"zoo\tInstalled Package",
									"zoo"
								],
								[
									"base\tInstalled Package",
									"base"
								],
								[
									"boot\tInstalled Package",
									"boot"
								],
								[
									"class\tInstalled Package",
									"class"
								],
								[
									"cluster\tInstalled Package",
									"cluster"
								],
								[
									"codetools\tInstalled Package",
									"codetools"
								],
								[
									"compiler\tInstalled Package",
									"compiler"
								],
								[
									"datasets\tInstalled Package",
									"datasets"
								],
								[
									"foreign\tInstalled Package",
									"foreign"
								],
								[
									"graphics\tInstalled Package",
									"graphics"
								],
								[
									"grDevices\tInstalled Package",
									"grDevices"
								],
								[
									"grid\tInstalled Package",
									"grid"
								],
								[
									"KernSmooth\tInstalled Package",
									"KernSmooth"
								],
								[
									"lattice\tInstalled Package",
									"lattice"
								],
								[
									"MASS\tInstalled Package",
									"MASS"
								],
								[
									"Matrix\tInstalled Package",
									"Matrix"
								],
								[
									"methods\tInstalled Package",
									"methods"
								],
								[
									"mgcv\tInstalled Package",
									"mgcv"
								],
								[
									"nlme\tInstalled Package",
									"nlme"
								],
								[
									"nnet\tInstalled Package",
									"nnet"
								],
								[
									"parallel\tInstalled Package",
									"parallel"
								],
								[
									"rpart\tInstalled Package",
									"rpart"
								],
								[
									"spatial\tInstalled Package",
									"spatial"
								],
								[
									"splines\tInstalled Package",
									"splines"
								],
								[
									"stats\tInstalled Package",
									"stats"
								],
								[
									"stats4\tInstalled Package",
									"stats4"
								],
								[
									"survival\tInstalled Package",
									"survival"
								],
								[
									"tcltk\tInstalled Package",
									"tcltk"
								],
								[
									"tools\tInstalled Package",
									"tools"
								],
								[
									"utils\tInstalled Package",
									"utils"
								]
							],
							"R-Box.loaded_packages":
							[
								"tsf",
								"grDevices",
								"stats",
								"graphics",
								"methods",
								"utils",
								"tinytest",
								"base"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/R/R.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3105.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.Terminus":
	{
		"height": 361.0
	},
	"output.Terminus 2":
	{
		"height": 312.0
	},
	"output.exec":
	{
		"height": 98.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "Thermosimfit.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"d.mac"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 328.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
